	.intel_syntax noprefix

.section .text
.balign 16

.globl DBG_FILENAME
DBG_FILENAME:
.type DBG_FILENAME, @function
push ebp
mov ebp, esp
sub esp, 24
.Lt_01E0:
push -1
lea eax, [CTXDBG+8]
push eax
push -1
push dword ptr [ebp+8]
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_01E3
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
sub esp, 12
push 0
push 2
push offset Lt_0006
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
lea eax, [ebp-12]
push eax
push 0
push 132
push dword ptr [ebp+8]
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push -1
push dword ptr [ebp+8]
push -1
lea eax, [CTXDBG+8]
push eax
call fb_StrAssign
add esp, 32
.Lt_01E3:
.Lt_01E2:
.Lt_01E1:
mov esp, ebp
pop ebp
ret
.size DBG_FILENAME, .-DBG_FILENAME
.balign 16

.globl EDBGEMITHEADER_ASM64
EDBGEMITHEADER_ASM64:
.type EDBGEMITHEADER_ASM64, @function
push ebp
mov ebp, esp
sub esp, 168
.Lt_0264:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [CTXDBG], 1
mov dword ptr [CTXDBG+36], -1
mov dword ptr [CTXDBG+40], 1000
sub esp, 4
push dword ptr [CTXDBG+40]
push 0
push 1
push offset _ZN7TDBGSTRD1Ev
push offset _ZN7TDBGSTRC1Ev
push 16
push offset DBGSTR
call fb_ArrayRedimObj
add esp, 32
test eax, eax
je .Lt_0267
push 0
push 0
push offset Lt_022A
push 866
call fb_ErrorThrowAt
add esp, 16
jmp eax
.Lt_0267:
mov dword ptr [CTXDBG+44], -1
mov dword ptr [CTXDBG+48], 1000
sub esp, 4
push dword ptr [CTXDBG+48]
push 0
push 1
push offset _ZN8TDBGSTABD1Ev
push offset _ZN8TDBGSTABC1Ev
push 16
push offset DBGSTAB
call fb_ArrayRedimObj
add esp, 32
test eax, eax
je .Lt_0269
push 0
push 0
push offset Lt_022A
push 869
call fb_ErrorThrowAt
add esp, 16
jmp eax
.Lt_0269:
mov dword ptr [CTXDBG+52], 1
mov dword ptr [CTXDBG+4], -1
sub esp, 8
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_026B
push -1
sub esp, 4
push 0
sub esp, 12
push dword ptr [ebp+8]
call HESCAPE
add esp, 16
push eax
push 8
push offset Lt_026C
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-48]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
sub esp, 12
push 0
push 2
push offset Lt_0006
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
lea eax, [ebp-72]
push eax
push 0
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 6
push offset Lt_0270
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-60]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
sub esp, 12
push 0
push 2
push offset Lt_0006
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 32
lea eax, [ebp-96]
push eax
push 0
push 255
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 17
push offset Lt_000F
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push dword ptr [ebp+8]
call PATHISABSOLUTE
add esp, 16
test eax, eax
jne .Lt_0276
lea eax, [ebp-12]
push eax
push 0
push 100
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0019
push -1
sub esp, 8
call HCURDIR
add esp, 8
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-156]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-156]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-156]
push eax
call fb_StrDelete
add esp, 16
.Lt_0276:
.Lt_0275:
lea eax, [ebp-12]
push eax
push 0
push 100
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 0
push dword ptr [ebp+8]
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-132]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-132]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-132]
push eax
call fb_StrDelete
add esp, 16
mov dword ptr [ebp-136], 0
.Lt_027F:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-136]
push dword ptr [STABSTB+eax*4]
push -1
lea eax, [ebp-148]
push eax
call fb_StrInit
add esp, 32
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
sub esp, 12
push 0
push 2
push offset Lt_0006
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 32
lea eax, [ebp-160]
push eax
push 0
push 128
lea eax, [ebp-148]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
inc dword ptr [CTXDBG]
sub esp, 12
lea eax, [ebp-148]
push eax
call fb_StrDelete
add esp, 16
.Lt_027D:
inc dword ptr [ebp-136]
.Lt_027C:
cmp dword ptr [ebp-136], 16
jle .Lt_027F
.Lt_027E:
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_0265:
mov esp, ebp
pop ebp
ret
.size EDBGEMITHEADER_ASM64, .-EDBGEMITHEADER_ASM64
.balign 16

.globl EDBGEMITGLOBALVAR_ASM64
EDBGEMITGLOBALVAR_ASM64:
.type EDBGEMITGLOBALVAR_ASM64, @function
push ebp
mov ebp, esp
sub esp, 36
push ebx
.Lt_0281:
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 128
test ebx, ebx
je .Lt_0284
sub esp, 12
lea ebx, [ebp-20]
push ebx
call fb_StrDelete
add esp, 16
jmp .Lt_0282
.Lt_0284:
.Lt_0283:
cmp dword ptr [ebp+12], 0
jne .Lt_0286
.Lt_0287:
mov dword ptr [ebp-4], 36
jmp .Lt_0285
.Lt_0286:
cmp dword ptr [ebp+12], 2
jne .Lt_0288
.Lt_0289:
mov dword ptr [ebp-4], 40
jmp .Lt_0285
.Lt_0288:
mov dword ptr [ebp-4], 38
.Lt_028A:
.Lt_0285:
sub esp, 12
push 0
push 0
sub esp, 8
push dword ptr [ebp+8]
call SYMBGETDBGNAME
add esp, 12
push eax
push -1
lea eax, [ebp-20]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 32
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
and ecx, 8
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_028C
sub esp, 12
push 0
push 3
push offset Lt_028D
push -1
lea ecx, [ebp-20]
push ecx
call fb_StrConcatAssign
add esp, 32
jmp .Lt_028B
.Lt_028C:
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ecx+4]
and ebx, 2
test ebx, ebx
je .Lt_028E
sub esp, 12
push 0
push 3
push offset Lt_028F
push -1
lea ebx, [ebp-20]
push ebx
call fb_StrConcatAssign
add esp, 32
jmp .Lt_028B
.Lt_028E:
sub esp, 12
push 0
push 2
push offset Lt_00EE
push -1
lea ebx, [ebp-20]
push ebx
call fb_StrConcatAssign
add esp, 32
.Lt_028B:
sub esp, 12
push 0
push -1
sub esp, 4
push 0
push dword ptr [ebp+8]
call HGETDATATYPE_ASM64
add esp, 12
push eax
push -1
lea eax, [ebp-20]
push eax
call fb_StrConcatAssign
add esp, 32
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
sub esp, 12
push 0
push 0
sub esp, 8
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 12
push eax
push -1
lea eax, [ebp-32]
push eax
call fb_StrAssign
add esp, 32
lea eax, [ebp-32]
push eax
push 0
mov al, byte ptr [ebp-4]
push eax
lea eax, [ebp-20]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-32]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-20]
push eax
call fb_StrDelete
add esp, 16
.Lt_0282:
pop ebx
mov esp, ebp
pop ebp
ret
.size EDBGEMITGLOBALVAR_ASM64, .-EDBGEMITGLOBALVAR_ASM64
.balign 16

.globl EDBGEMITLOCALVAR_ASM64
EDBGEMITLOCALVAR_ASM64:
.type EDBGEMITLOCALVAR_ASM64, @function
push ebp
mov ebp, esp
sub esp, 36
push ebx
.Lt_0293:
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+16]
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 32
cmp dword ptr [ebp+12], 0
je .Lt_0296
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+12]
and ebx, 2
test ebx, ebx
jne .Lt_0298
sub esp, 12
lea ebx, [ebp-28]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-16]
push ebx
call fb_StrDelete
add esp, 16
jmp .Lt_0294
.Lt_0298:
.Lt_0297:
mov ebx, dword ptr [ebp+8]
cmp dword ptr [ebx+56], 0
je .Lt_029A
mov dword ptr [ebp-4], 38
jmp .Lt_0299
.Lt_029A:
mov dword ptr [ebp-4], 40
.Lt_0299:
sub esp, 12
push 0
push 3
push offset Lt_029B
push -1
lea ebx, [ebp-16]
push ebx
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 0
sub esp, 8
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 12
push eax
push -1
lea eax, [ebp-28]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0295
.Lt_0296:
mov dword ptr [ebp-4], 128
sub esp, 12
push 0
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
mov eax, dword ptr [ebp+8]
push dword ptr [eax+52]
push dword ptr [eax+48]
call fb_LongintToStr
add esp, 12
push eax
push -1
lea eax, [ebp-28]
push eax
call fb_StrAssign
add esp, 32
.Lt_0295:
sub esp, 12
push 0
push -1
sub esp, 4
push 0
push dword ptr [ebp+8]
call HGETDATATYPE_ASM64
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
lea eax, [ebp-28]
push eax
push 0
mov al, byte ptr [ebp-4]
push eax
lea eax, [ebp-16]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-28]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-16]
push eax
call fb_StrDelete
add esp, 16
.Lt_0294:
pop ebx
mov esp, ebp
pop ebp
ret
.size EDBGEMITLOCALVAR_ASM64, .-EDBGEMITLOCALVAR_ASM64
.balign 16

.globl EDBGEMITPROCHEADER_ASM64
EDBGEMITPROCHEADER_ASM64:
.type EDBGEMITPROCHEADER_ASM64, @function
push ebp
mov ebp, esp
sub esp, 52
push ebx
.Lt_029C:
sub esp, 12
push 0
push 261
lea eax, [ENV+280]
push eax
push -1
push offset Lt_02A8
call fb_StrAssign
add esp, 32
sub esp, 12
push offset Lt_02A8
call DBG_FILENAME
add esp, 16
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+12]
and ebx, 4096
test ebx, ebx
je .Lt_029F
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
sub esp, 12
push 0
push 0
sub esp, 8
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 12
push eax
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 32
lea eax, [ebp-48]
push eax
push 1
push 42
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push -1
sub esp, 12
call FBGETENTRYPOINT
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-36]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+112]
mov dword ptr [ebx+16], 1
mov ebx, dword ptr [LEX+839936]
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+112]
mov eax, dword ptr [ebx+16564]
mov dword ptr [ecx+20], eax
sub esp, 12
push 0
push -1
sub esp, 12
call FBGETENTRYPOINT
add esp, 12
push eax
push -1
push offset Lt_02A9
call fb_StrAssign
add esp, 32
jmp .Lt_029E
.Lt_029F:
sub esp, 12
push 0
push 0
sub esp, 8
push dword ptr [ebp+8]
call SYMBGETDBGNAME
add esp, 12
push eax
push -1
push offset Lt_02A9
call fb_StrAssign
add esp, 32
.Lt_029E:
sub esp, 12
push 0
push 0
sub esp, 8
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 12
push eax
push -1
push offset Lt_02AA
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+8]
mov dword ptr [CTXDBG+32], eax
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
and ecx, 32
test ecx, ecx
je .Lt_02A3
sub esp, 12
push 0
push 3
push offset Lt_02A4
push -1
push offset Lt_02A9
call fb_StrConcatAssign
add esp, 32
jmp .Lt_02A2
.Lt_02A3:
sub esp, 12
push 0
push 3
push offset Lt_02A5
push -1
push offset Lt_02A9
call fb_StrConcatAssign
add esp, 32
.Lt_02A2:
sub esp, 12
push 0
push -1
sub esp, 4
push 0
push dword ptr [ebp+8]
call HGETDATATYPE_ASM64
add esp, 12
push eax
push -1
push offset Lt_02A9
call fb_StrConcatAssign
add esp, 32
push offset Lt_02AA
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+112]
mov ax, word ptr [ecx+16]
push eax
push 36
push offset Lt_02A9
call DBG_ADDSTAB
add esp, 16
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
sub esp, 12
push 0
push 2
push offset Lt_0006
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
lea eax, [ebp-24]
push eax
push 1
push 68
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-12]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_029D:
pop ebx
mov esp, ebp
pop ebp
ret
.size EDBGEMITPROCHEADER_ASM64, .-EDBGEMITPROCHEADER_ASM64

.section .bss
.balign 4
	.lcomm	Lt_02A9,12
.balign 4
	.lcomm	Lt_02AA,12
.balign 4
	.lcomm	Lt_02A8,12

.section .text
.balign 16

.globl EDBGEMITPROCARG_ASM64
EDBGEMITPROCARG_ASM64:
.type EDBGEMITPROCARG_ASM64, @function
push ebp
mov ebp, esp
sub esp, 36
push ebx
.Lt_02AB:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+16]
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 32768
test ebx, ebx
je .Lt_02AF
sub esp, 12
push 0
push 2
push offset Lt_02B0
push -1
lea ebx, [ebp-12]
push ebx
call fb_StrConcatAssign
add esp, 32
jmp .Lt_02AE
.Lt_02AF:
sub esp, 12
push 0
push 2
push offset Lt_02B1
push -1
lea ebx, [ebp-12]
push ebx
call fb_StrConcatAssign
add esp, 32
.Lt_02AE:
sub esp, 12
push 0
push -1
sub esp, 4
push 0
push dword ptr [ebp+8]
call HGETDATATYPE_ASM64
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrConcatAssign
add esp, 32
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
sub esp, 12
push 0
push -1
sub esp, 4
mov eax, dword ptr [ebp+8]
push dword ptr [eax+52]
push dword ptr [eax+48]
call fb_LongintToStr
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
lea eax, [ebp-36]
push eax
push 0
push 160
lea eax, [ebp-12]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_02AC:
pop ebx
mov esp, ebp
pop ebp
ret
.size EDBGEMITPROCARG_ASM64, .-EDBGEMITPROCARG_ASM64
.balign 16

.globl REG_FINDREAL
REG_FINDREAL:
.type REG_FINDREAL, @function
push ebp
mov ebp, esp
sub esp, 132
push ebx
mov dword ptr [ebp-4], 0
.Lt_03C5:
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-76], 0
.Lt_03CA:
mov eax, dword ptr [ebp-76]
mov ebx, dword ptr [ebp+8]
cmp dword ptr [REGHANDLE+eax*4], ebx
jne .Lt_03CC
mov ebx, dword ptr [ebp-76]
mov dword ptr [ebp-4], ebx
jmp .Lt_03C6
.Lt_03CC:
.Lt_03CB:
.Lt_03C8:
inc dword ptr [ebp-76]
.Lt_03C7:
cmp dword ptr [ebp-76], 15
jle .Lt_03CA
.Lt_03C9:
mov dword ptr [ebp-12], 0
cmp dword ptr [CTX+196], 0
jle .Lt_03CE
sub esp, 12
lea ebx, [CTX+140]
push ebx
call FLISTGETHEAD
add esp, 16
mov dword ptr [ebp-12], eax
.Lt_03CF:
cmp dword ptr [ebp-12], 0
je .Lt_03D0
mov eax, dword ptr [ebp-12]
mov ebx, dword ptr [ebp+8]
cmp dword ptr [eax+4], ebx
jne .Lt_03D2
jmp .Lt_03D0
.Lt_03D2:
.Lt_03D1:
sub esp, 12
push dword ptr [ebp-12]
call FLISTGETNEXT
add esp, 16
mov dword ptr [ebp-12], eax
jmp .Lt_03CF
.Lt_03D0:
.Lt_03CE:
.Lt_03CD:
cmp dword ptr [ebp-12], 0
jne .Lt_03D4
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
push 0
push -1
sub esp, 8
push 48
push offset Lt_03D8
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [ebp+8]
call fb_IntToStr
add esp, 16
push eax
push 35
push offset Lt_03D7
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-120]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-132]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-132]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-132]
push eax
call fb_StrDelete
add esp, 16
mov dword ptr [ebp-4], 17
jmp .Lt_03C6
.Lt_03D4:
.Lt_03D3:
sub esp, 8
push -1
push dword ptr [ebp+8]
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-8], eax
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-12]
push dword ptr [eax+8]
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 13
push offset Lt_03BC
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-8]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp-12]
mov dword ptr [eax+4], -2
mov eax, dword ptr [ebp-8]
mov dword ptr [ebp-4], eax
.Lt_03C6:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_FINDREAL, .-REG_FINDREAL
.balign 16

.globl REG_TEMPO
REG_TEMPO:
.type REG_TEMPO, @function
push ebp
mov ebp, esp
sub esp, 20
push ebx
mov dword ptr [ebp-4], 0
.Lt_03E2:
mov dword ptr [ebp-8], 0
inc dword ptr [Lt_03E4]
sub esp, 8
push -1
push dword ptr [Lt_03E4]
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-8], eax
mov eax, dword ptr [ebp-8]
mov ebx, dword ptr [REGSTRQ+eax*4]
mov dword ptr [ebp-4], ebx
.Lt_03E3:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_TEMPO, .-REG_TEMPO

.section .data
.balign 4
Lt_03E4:
.long 9999999

.section .text
.balign 16

.globl SAVE_CALL
SAVE_CALL:
.type SAVE_CALL, @function
push ebp
mov ebp, esp
sub esp, 52
push ebx
.Lt_13C9:
cmp dword ptr [ebp+12], 0
je .Lt_13CC
mov eax, dword ptr [ebp+16]
mov dword ptr [REGHANDLE+eax*4], -2
.Lt_13CC:
call REG_SAVE
cmp dword ptr [CTX+212], 2
jne .Lt_13CD
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-4], eax
jmp .Lt_13DA
.Lt_13CD:
mov dword ptr [ebp-4], 0
.Lt_13DA:
cmp dword ptr [ebp-4], 0
je .Lt_13D0
sub esp, 8
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_13D2
push -1
sub esp, 4
push -1
push dword ptr [ebp+8]
push 6
push offset Lt_13D1
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-40]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-40]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-40]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_13CF
.Lt_13D0:
sub esp, 8
push 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+8]
push 6
push offset Lt_13D1
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-28]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-28]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-28]
push eax
call fb_StrDelete
add esp, 16
.Lt_13CF:
cmp dword ptr [ebp+12], 0
je .Lt_13D9
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+16]
mov ecx, dword ptr [eax+12]
mov dword ptr [REGHANDLE+ebx*4], ecx
.Lt_13D9:
.Lt_13CA:
pop ebx
mov esp, ebp
pop ebp
ret
.size SAVE_CALL, .-SAVE_CALL
.balign 16
fb_ctor__irzgas64:
.type fb_ctor__irzgas64, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_0002:
.Lt_0003:
mov esp, ebp
pop ebp
ret
.size fb_ctor__irzgas64, .-fb_ctor__irzgas64
.balign 16
_ZN11TSTRSETITEMaSERKS_:
.type _ZN11TSTRSETITEMaSERKS_, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_0012:
sub esp, 12
push 0
push -1
mov eax, dword ptr [ebp+12]
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
lea eax, [ebx]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+12]
add eax, 12
mov ebx, dword ptr [ebp+8]
add ebx, 12
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
.Lt_0013:
pop ebx
mov esp, ebp
pop ebp
ret
.size _ZN11TSTRSETITEMaSERKS_, .-_ZN11TSTRSETITEMaSERKS_
.balign 16
_ZN13ASM64_CONTEXTC1Ev:
.type _ZN13ASM64_CONTEXTC1Ev, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
mov eax, dword ptr [ebp+8]
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 4
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 8
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 20
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 32
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 44
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 56
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 68
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 80
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 84
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 88
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 92
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 96
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 100
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 104
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 108
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 112
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 116
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 120
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 124
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 128
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 132
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 136
mov byte ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 137
mov byte ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 140
lea ebx, [eax]
push edi
mov edi, ebx
xor eax, eax
mov ecx, 14
rep stosd
pop edi
mov ebx, dword ptr [ebp+8]
add ebx, 196
mov dword ptr [ebx], 0
mov ebx, dword ptr [ebp+8]
add ebx, 200
mov dword ptr [ebx], 0
mov ebx, dword ptr [ebp+8]
add ebx, 204
mov dword ptr [ebx], 0
mov ebx, dword ptr [ebp+8]
add ebx, 208
mov byte ptr [ebx], 0
mov ebx, dword ptr [ebp+8]
add ebx, 212
mov dword ptr [ebx], 0
mov ebx, dword ptr [ebp+8]
add ebx, 216
mov dword ptr [ebx], 0
mov ebx, dword ptr [ebp+8]
add ebx, 220
mov dword ptr [ebx], 0
.Lt_0068:
.Lt_0069:
pop ebx
mov esp, ebp
pop ebp
ret
.size _ZN13ASM64_CONTEXTC1Ev, .-_ZN13ASM64_CONTEXTC1Ev
.balign 16
_ZN13ASM64_CONTEXTaSERKS_:
.type _ZN13ASM64_CONTEXTaSERKS_, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_006A:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 4
mov ebx, dword ptr [ebp+8]
add ebx, 4
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
sub esp, 12
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 8
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 8
lea eax, [ebx]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 20
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 20
lea eax, [ebx]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 32
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 32
lea eax, [ebx]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 44
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 44
lea eax, [ebx]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 56
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 56
lea eax, [ebx]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 68
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 68
lea eax, [ebx]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+12]
add eax, 80
mov ebx, dword ptr [ebp+8]
add ebx, 80
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 84
mov ebx, dword ptr [ebp+8]
add ebx, 84
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 88
mov ebx, dword ptr [ebp+8]
add ebx, 88
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 92
mov ebx, dword ptr [ebp+8]
add ebx, 92
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 96
mov ebx, dword ptr [ebp+8]
add ebx, 96
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 100
mov ebx, dword ptr [ebp+8]
add ebx, 100
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 104
mov ebx, dword ptr [ebp+8]
add ebx, 104
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 108
mov ebx, dword ptr [ebp+8]
add ebx, 108
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 112
mov ebx, dword ptr [ebp+8]
add ebx, 112
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 116
mov ebx, dword ptr [ebp+8]
add ebx, 116
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 120
mov ebx, dword ptr [ebp+8]
add ebx, 120
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 124
mov ebx, dword ptr [ebp+8]
add ebx, 124
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 128
mov ebx, dword ptr [ebp+8]
add ebx, 128
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 132
mov ebx, dword ptr [ebp+8]
add ebx, 132
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 136
mov ebx, dword ptr [ebp+8]
add ebx, 136
mov cl, byte ptr [eax]
mov byte ptr [ebx], cl
mov ecx, dword ptr [ebp+12]
add ecx, 137
mov ebx, dword ptr [ebp+8]
add ebx, 137
mov al, byte ptr [ecx]
mov byte ptr [ebx], al
mov eax, dword ptr [ebp+8]
add eax, 140
lea ebx, [eax]
mov eax, dword ptr [ebp+12]
add eax, 140
lea ecx, [eax]
push ecx
push edi
push esi
mov edi, ebx
mov esi, ecx
mov ecx, 14
rep movsd
pop esi
pop edi
pop ecx
mov ecx, dword ptr [ebp+12]
add ecx, 196
mov ebx, dword ptr [ebp+8]
add ebx, 196
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 200
mov ebx, dword ptr [ebp+8]
add ebx, 200
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 204
mov ebx, dword ptr [ebp+8]
add ebx, 204
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 208
mov ebx, dword ptr [ebp+8]
add ebx, 208
mov cl, byte ptr [eax]
mov byte ptr [ebx], cl
mov ecx, dword ptr [ebp+12]
add ecx, 212
mov ebx, dword ptr [ebp+8]
add ebx, 212
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 216
mov ebx, dword ptr [ebp+8]
add ebx, 216
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 220
mov ebx, dword ptr [ebp+8]
add ebx, 220
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
.Lt_006B:
pop ebx
mov esp, ebp
pop ebp
ret
.size _ZN13ASM64_CONTEXTaSERKS_, .-_ZN13ASM64_CONTEXTaSERKS_
.balign 16
_ZN13ASM64_CONTEXTD1Ev:
.type _ZN13ASM64_CONTEXTD1Ev, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_006E:
.Lt_006F:
sub esp, 12
mov eax, dword ptr [ebp+8]
add eax, 68
lea ebx, [eax]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
mov ebx, dword ptr [ebp+8]
add ebx, 56
lea eax, [ebx]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
mov eax, dword ptr [ebp+8]
add eax, 44
lea ebx, [eax]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
mov ebx, dword ptr [ebp+8]
add ebx, 32
lea eax, [ebx]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
mov eax, dword ptr [ebp+8]
add eax, 20
lea ebx, [eax]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
mov ebx, dword ptr [ebp+8]
add ebx, 8
lea eax, [ebx]
push eax
call fb_StrDelete
add esp, 16
pop ebx
mov esp, ebp
pop ebp
ret
.size _ZN13ASM64_CONTEXTD1Ev, .-_ZN13ASM64_CONTEXTD1Ev
.balign 16
_ZN6DBGCTXC1Ev:
.type _ZN6DBGCTXC1Ev, @function
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword ptr [ebp+8]
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 4
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 8
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 20
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 32
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 36
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 40
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 44
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 48
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 52
mov dword ptr [eax], 0
.Lt_0070:
.Lt_0071:
mov esp, ebp
pop ebp
ret
.size _ZN6DBGCTXC1Ev, .-_ZN6DBGCTXC1Ev
.balign 16
_ZN6DBGCTXaSERKS_:
.type _ZN6DBGCTXaSERKS_, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_0072:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 4
mov ebx, dword ptr [ebp+8]
add ebx, 4
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
sub esp, 12
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 8
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 8
lea eax, [ebx]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 20
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 20
lea eax, [ebx]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+12]
add eax, 32
mov ebx, dword ptr [ebp+8]
add ebx, 32
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 36
mov ebx, dword ptr [ebp+8]
add ebx, 36
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 40
mov ebx, dword ptr [ebp+8]
add ebx, 40
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 44
mov ebx, dword ptr [ebp+8]
add ebx, 44
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 48
mov ebx, dword ptr [ebp+8]
add ebx, 48
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 52
mov ebx, dword ptr [ebp+8]
add ebx, 52
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
.Lt_0073:
pop ebx
mov esp, ebp
pop ebp
ret
.size _ZN6DBGCTXaSERKS_, .-_ZN6DBGCTXaSERKS_
.balign 16
_ZN6DBGCTXD1Ev:
.type _ZN6DBGCTXD1Ev, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_0076:
.Lt_0077:
sub esp, 12
mov eax, dword ptr [ebp+8]
add eax, 20
lea ebx, [eax]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
mov ebx, dword ptr [ebp+8]
add ebx, 8
lea eax, [ebx]
push eax
call fb_StrDelete
add esp, 16
pop ebx
mov esp, ebp
pop ebp
ret
.size _ZN6DBGCTXD1Ev, .-_ZN6DBGCTXD1Ev
.balign 16
_ZN7TDBGSTRC1Ev:
.type _ZN7TDBGSTRC1Ev, @function
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword ptr [ebp+8]
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 4
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
.Lt_0079:
.Lt_007A:
mov esp, ebp
pop ebp
ret
.size _ZN7TDBGSTRC1Ev, .-_ZN7TDBGSTRC1Ev
.balign 16
_ZN7TDBGSTRaSERKS_:
.type _ZN7TDBGSTRaSERKS_, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_007B:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
sub esp, 12
push 0
push -1
mov ecx, dword ptr [ebp+12]
add ecx, 4
lea ebx, [ecx]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 4
lea ecx, [ebx]
push ecx
call fb_StrAssign
add esp, 32
.Lt_007C:
pop ebx
mov esp, ebp
pop ebp
ret
.size _ZN7TDBGSTRaSERKS_, .-_ZN7TDBGSTRaSERKS_
.balign 16
_ZN7TDBGSTRD1Ev:
.type _ZN7TDBGSTRD1Ev, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_007F:
.Lt_0080:
sub esp, 12
mov eax, dword ptr [ebp+8]
add eax, 4
lea ebx, [eax]
push ebx
call fb_StrDelete
add esp, 16
pop ebx
mov esp, ebp
pop ebp
ret
.size _ZN7TDBGSTRD1Ev, .-_ZN7TDBGSTRD1Ev
.balign 16
_ZN8TDBGSTABC1Ev:
.type _ZN8TDBGSTABC1Ev, @function
push ebp
mov ebp, esp
sub esp, 8
mov eax, dword ptr [ebp+8]
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 4
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
.Lt_0081:
.Lt_0082:
mov esp, ebp
pop ebp
ret
.size _ZN8TDBGSTABC1Ev, .-_ZN8TDBGSTABC1Ev
.balign 16
_ZN8TDBGSTABaSERKS_:
.type _ZN8TDBGSTABaSERKS_, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_0083:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
sub esp, 12
push 0
push -1
mov ecx, dword ptr [ebp+12]
add ecx, 4
lea ebx, [ecx]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 4
lea ecx, [ebx]
push ecx
call fb_StrAssign
add esp, 32
.Lt_0084:
pop ebx
mov esp, ebp
pop ebp
ret
.size _ZN8TDBGSTABaSERKS_, .-_ZN8TDBGSTABaSERKS_
.balign 16
_ZN8TDBGSTABD1Ev:
.type _ZN8TDBGSTABD1Ev, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_0087:
.Lt_0088:
sub esp, 12
mov eax, dword ptr [ebp+8]
add eax, 4
lea ebx, [eax]
push ebx
call fb_StrDelete
add esp, 16
pop ebx
mov esp, ebp
pop ebp
ret
.size _ZN8TDBGSTABD1Ev, .-_ZN8TDBGSTABD1Ev
.balign 16
CHECK_OPTIM:
.type CHECK_OPTIM, @function
push ebp
mov ebp, esp
sub esp, 224
push ebx
push esi
.Lt_00E8:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-60], 0
sub esp, 8
push -1
push dword ptr [ebp+8]
call fb_StrLen
add esp, 16
test eax, eax
jne .Lt_00EB
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1AC9
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACA
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACB
call fb_StrAssign
add esp, 32
mov dword ptr [Lt_1ACC], 0
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_00E9
.Lt_00EB:
.Lt_00EA:
cmp dword ptr [Lt_1ACC], 2
jne .Lt_00ED
sub esp, 4
sub esp, 8
push 2
push offset Lt_00EE
push -1
push offset Lt_1AC9
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_00F1
sub esp, 8
push 3
push offset Lt_00F2
call fb_StrAllocTempDescZEx
add esp, 16
push eax
push -1
push dword ptr [Lt_1ACD]
lea eax, [CTX+56]
push eax
call fb_StrAssignMid
add esp, 16
.Lt_00F1:
.Lt_00F0:
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1AC9
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACA
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACB
call fb_StrAssign
add esp, 32
mov dword ptr [Lt_1ACC], 0
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_00E9
.Lt_00ED:
.Lt_00EC:
push 4
push offset Lt_00F3
push -1
sub esp, 12
push 3
push dword ptr [ebp+8]
call fb_LEFT
add esp, 20
push eax
call fb_StrCompare
add esp, 16
test eax, eax
setne al
shr eax, 1
sbb eax, eax
push 4
push offset Lt_00F4
push -1
sub esp, 12
push 3
push dword ptr [ebp+8]
mov ebx, eax
call fb_LEFT
add esp, 20
push eax
call fb_StrCompare
add esp, 16
test eax, eax
setne al
shr eax, 1
sbb eax, eax
and ebx, eax
push 4
push offset Lt_00F5
push -1
sub esp, 12
push 3
push dword ptr [ebp+8]
call fb_LEFT
add esp, 20
push eax
call fb_StrCompare
add esp, 16
test eax, eax
setne al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_00F7
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1AC9
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACA
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACB
call fb_StrAssign
add esp, 32
mov dword ptr [Lt_1ACC], 0
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_00E9
.Lt_00F7:
.Lt_00F6:
push 7
push offset Lt_00F8
push -1
sub esp, 12
push 6
push dword ptr [ebp+8]
call fb_LEFT
add esp, 20
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_00FA
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1AC9
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACA
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACB
call fb_StrAssign
add esp, 32
mov dword ptr [Lt_1ACC], 0
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_00E9
.Lt_00FA:
push 6
push offset Lt_00FB
push -1
sub esp, 12
push 5
push dword ptr [ebp+8]
call fb_LEFT
add esp, 20
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_00FD
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1AC9
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACA
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACB
call fb_StrAssign
add esp, 32
mov dword ptr [Lt_1ACC], 0
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_00E9
.Lt_00FD:
push 6
push offset Lt_00FE
push -1
sub esp, 12
push 5
push dword ptr [ebp+8]
call fb_LEFT
add esp, 20
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0100
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1AC9
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACA
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACB
call fb_StrAssign
add esp, 32
mov dword ptr [Lt_1ACC], 0
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_00E9
.Lt_0100:
sub esp, 8
push -1
lea eax, [CTX+56]
push eax
call fb_StrLen
add esp, 16
inc eax
mov dword ptr [ebp-60], eax
sub esp, 4
sub esp, 4
push 1
push offset Lt_0101
call fb_StrAllocTempDescZEx
add esp, 12
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
mov dword ptr [ebp-52], eax
sub esp, 12
push 0
push -1
sub esp, 4
mov eax, dword ptr [ebp-52]
dec eax
push eax
push dword ptr [ebp+8]
call fb_LEFT
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
sub esp, 4
sub esp, 4
push 1
push offset Lt_0102
call fb_StrAllocTempDescZEx
add esp, 12
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
mov dword ptr [ebp-56], eax
sub esp, 12
push 0
push -1
mov eax, dword ptr [ebp-56]
sub eax, dword ptr [ebp-52]
dec eax
push eax
mov eax, dword ptr [ebp-52]
inc eax
push eax
push dword ptr [ebp+8]
call fb_StrMid
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 4
sub esp, 4
push 1
push offset Lt_0103
call fb_StrAllocTempDescZEx
add esp, 12
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
mov dword ptr [ebp-52], eax
cmp dword ptr [ebp-52], 0
jne .Lt_0105
sub esp, 8
push -1
push dword ptr [ebp+8]
call fb_StrLen
add esp, 16
inc eax
mov dword ptr [ebp-52], eax
jmp .Lt_0104
.Lt_0105:
dec dword ptr [ebp-52]
.Lt_0104:
sub esp, 12
push 0
push -1
sub esp, 8
sub esp, 8
mov eax, dword ptr [ebp-52]
sub eax, dword ptr [ebp-56]
add eax, -2
push eax
mov eax, dword ptr [ebp-56]
add eax, 2
push eax
push dword ptr [ebp+8]
call fb_StrMid
add esp, 20
push eax
call fb_RTRIM
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
push 4
push offset Lt_00F3
push -1
lea eax, [ebp-36]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0107
push -1
lea eax, [ebp-24]
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0109
sub esp, 4
lea eax, [ebp-12]
push eax
push 53
push offset Lt_010A
call fb_StrAllocTempDescZEx
add esp, 8
push eax
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_010C
sub esp, 12
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+8]
push 4
push offset Lt_010D
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+8]
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1AC9
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACA
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACB
call fb_StrAssign
add esp, 32
mov dword ptr [Lt_1ACC], 0
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_00E9
.Lt_010C:
.Lt_010B:
.Lt_0109:
.Lt_0108:
.Lt_0107:
.Lt_0106:
push 4
push offset Lt_00F4
push -1
lea eax, [ebp-36]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0110
sub esp, 4
sub esp, 4
push 7
push offset Lt_0111
call fb_StrAllocTempDescZEx
add esp, 12
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_0113
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1AC9
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACA
call fb_StrAssign
add esp, 32
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_00E9
.Lt_0113:
mov dword ptr [Lt_1ACC], 1
sub esp, 12
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
push offset Lt_1AC9
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-24]
push eax
push -1
push offset Lt_1ACA
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-60]
mov dword ptr [Lt_1ACD], eax
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_00E9
.Lt_0110:
.Lt_010F:
push 4
push offset Lt_00F5
push -1
lea eax, [ebp-36]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0115
sub esp, 12
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
push offset Lt_1AC9
call fb_StrAssign
add esp, 32
mov dword ptr [Lt_1ACC], 2
mov eax, dword ptr [ebp-60]
mov dword ptr [Lt_1ACD], eax
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_00E9
.Lt_0115:
.Lt_0114:
cmp dword ptr [Lt_1ACC], 1
jne .Lt_0117
sub esp, 4
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
push offset Lt_1AC9
push 2
push offset Lt_0118
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
lea eax, [ebp-12]
push eax
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_011D
mov eax, dword ptr [ebp-24]
movzx ebx, byte ptr [eax]
cmp ebx, 114
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-24]
movzx ecx, byte ptr [ebx]
cmp ecx, 101
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
sub esp, 8
push 1
sub esp, 12
push 1
lea ebx, [ebp-24]
push ebx
mov ebx, eax
call fb_RIGHT
add esp, 20
push eax
call fb_ASC
add esp, 16
cmp eax, 48
setae cl
shr ecx, 1
sbb ecx, ecx
sub esp, 8
push 1
sub esp, 12
push 1
lea eax, [ebp-24]
push eax
mov esi, ecx
call fb_RIGHT
add esp, 20
push eax
call fb_ASC
add esp, 16
cmp eax, 57
setbe cl
shr ecx, 1
sbb ecx, ecx
and esi, ecx
or ebx, esi
je .Lt_0121
sub esp, 8
push 3
push offset Lt_0122
call fb_StrAllocTempDescZEx
add esp, 16
push eax
push -1
push dword ptr [Lt_1ACD]
lea eax, [CTX+56]
push eax
call fb_StrAssignMid
add esp, 16
sub esp, 12
push 0
push -1
lea eax, [ebp-36]
push eax
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_0101
push -1
lea eax, [ebp-48]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 1
push offset Lt_0118
call fb_StrAllocTempDescZEx
add esp, 12
push eax
lea eax, [ebp-12]
push eax
push 1
call fb_StrInstr
add esp, 12
dec eax
push eax
push 1
lea eax, [ebp-12]
push eax
call fb_StrMid
add esp, 12
push eax
push -1
lea eax, [ebp-48]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
push offset Lt_1ACA
push -1
lea eax, [ebp-48]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 3
push offset Lt_0123
push -1
lea eax, [ebp-48]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-24]
push eax
push -1
lea eax, [ebp-48]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 8
push -1
lea eax, [CTX+56]
push eax
call fb_StrLen
add esp, 16
sub esp, 8
push -1
push dword ptr [ebp+8]
mov ebx, eax
call fb_StrLen
add esp, 16
add ebx, eax
add ebx, 9
mov dword ptr [ebp-60], ebx
sub esp, 12
push 0
push -1
sub esp, 8
push 10
push offset Lt_0125
push -1
sub esp, 4
push -1
lea ebx, [ebp-48]
push ebx
push -1
sub esp, 4
push -1
sub esp, 8
push 32
mov ebx, dword ptr [CTX]
imul ebx, 3
push ebx
call fb_StrFill1
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0124
push -1
sub esp, 4
push -1
push dword ptr [ebp+8]
push 4
push offset Lt_0122
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+8]
call fb_StrAssign
add esp, 32
.Lt_0121:
.Lt_0120:
jmp .Lt_011C
.Lt_011D:
push -1
push offset Lt_1AC9
push -1
lea eax, [ebp-24]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-12]
movzx esi, byte ptr [ebx]
cmp esi, 114
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_012C
sub esp, 8
push 3
push offset Lt_012D
call fb_StrAllocTempDescZEx
add esp, 16
push eax
push -1
push dword ptr [Lt_1ACD]
lea eax, [CTX+56]
push eax
call fb_StrAssignMid
add esp, 16
sub esp, 12
push 0
push 5
push offset Lt_012E
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [ebp-48]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 3
push offset Lt_0123
push -1
lea eax, [ebp-48]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
push offset Lt_1ACA
push -1
lea eax, [ebp-48]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 8
push -1
lea eax, [CTX+56]
push eax
call fb_StrLen
add esp, 16
sub esp, 8
push -1
push dword ptr [ebp+8]
mov ebx, eax
call fb_StrLen
add esp, 16
add ebx, eax
add ebx, 9
mov dword ptr [ebp-60], ebx
sub esp, 12
push 0
push -1
sub esp, 8
push 10
push offset Lt_012F
push -1
sub esp, 4
push -1
lea ebx, [ebp-48]
push ebx
push -1
sub esp, 4
push -1
sub esp, 8
push 32
mov ebx, dword ptr [CTX]
imul ebx, 3
push ebx
call fb_StrFill1
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0124
push -1
sub esp, 4
push -1
push dword ptr [ebp+8]
push 4
push offset Lt_012D
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+8]
call fb_StrAssign
add esp, 32
jmp .Lt_012B
.Lt_012C:
mov eax, dword ptr [ebp-12]
movzx ebx, byte ptr [eax]
cmp ebx, 114
jne .Lt_0137
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
push offset Lt_1AC9
push 2
push offset Lt_0118
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea ebx, [ebp-96]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-112], eax
jmp .Lt_1AC8
.Lt_0137:
mov dword ptr [ebp-112], 0
.Lt_1AC8:
cmp dword ptr [ebp-112], 0
je .Lt_013A
sub esp, 8
push 3
push offset Lt_013B
call fb_StrAllocTempDescZEx
add esp, 16
push eax
push -1
push dword ptr [Lt_1ACD]
lea eax, [CTX+56]
push eax
call fb_StrAssignMid
add esp, 16
sub esp, 12
push 0
push -1
lea eax, [ebp-36]
push eax
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_0101
push -1
lea eax, [ebp-48]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [ebp-48]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 3
push offset Lt_0123
push -1
lea eax, [ebp-48]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
push offset Lt_1ACA
push -1
lea eax, [ebp-48]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 8
push -1
lea eax, [CTX+56]
push eax
call fb_StrLen
add esp, 16
sub esp, 8
push -1
push dword ptr [ebp+8]
mov ebx, eax
call fb_StrLen
add esp, 16
add ebx, eax
add ebx, 9
mov dword ptr [ebp-60], ebx
sub esp, 12
push 0
push -1
sub esp, 8
push 10
push offset Lt_013C
push -1
sub esp, 4
push -1
lea ebx, [ebp-48]
push ebx
push -1
sub esp, 4
push -1
sub esp, 8
push 32
mov ebx, dword ptr [CTX]
imul ebx, 3
push ebx
call fb_StrFill1
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0124
push -1
sub esp, 4
push -1
push dword ptr [ebp+8]
push 4
push offset Lt_013B
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+8]
call fb_StrAssign
add esp, 32
jmp .Lt_0139
.Lt_013A:
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1AC9
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACA
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1ACB
call fb_StrAssign
add esp, 32
.Lt_0139:
.Lt_012B:
.Lt_011C:
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
mov dword ptr [Lt_1ACC], 0
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_00E9
.Lt_0117:
.Lt_0116:
push -1
push offset Lt_1AC9
push -1
lea eax, [ebp-24]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0143
push -1
push offset Lt_1ACA
push -1
lea eax, [ebp-12]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0145
sub esp, 12
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+8]
push 5
push offset Lt_0146
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+8]
call fb_StrAssign
add esp, 32
jmp .Lt_0144
.Lt_0145:
push 1
push offset Lt_0000
push -1
push offset Lt_1ACA
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0149
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 41
push offset Lt_014D
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_00E9
.Lt_0149:
.Lt_0148:
mov eax, dword ptr [Lt_1ACA]
movzx ebx, byte ptr [eax]
cmp ebx, 114
jne .Lt_0151
sub esp, 4
sub esp, 4
push 1
push offset Lt_0118
call fb_StrAllocTempDescZEx
add esp, 12
push eax
push offset Lt_1AC9
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_0153
mov eax, dword ptr [ebp-12]
movzx ebx, byte ptr [eax]
cmp ebx, 120
jne .Lt_0156
push 6
push offset Lt_0157
push -1
lea ebx, [ebp-36]
push ebx
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0159
sub esp, 12
push 0
push 5
push offset Lt_015A
push -1
push offset Lt_1ACB
call fb_StrAssign
add esp, 32
jmp .Lt_0158
.Lt_0159:
sub esp, 12
push 0
push 5
push offset Lt_015B
push -1
push offset Lt_1ACB
call fb_StrAssign
add esp, 32
.Lt_0158:
.Lt_0156:
.Lt_0155:
jmp .Lt_0152
.Lt_0153:
sub esp, 8
push 3
push offset Lt_015C
call fb_StrAllocTempDescZEx
add esp, 16
push eax
push -1
push dword ptr [Lt_1ACD]
lea eax, [CTX+56]
push eax
call fb_StrAssignMid
add esp, 16
push 5
push offset Lt_015B
push -1
lea eax, [ebp-36]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
push 5
push offset Lt_015A
push -1
lea ebx, [ebp-36]
push ebx
mov ebx, eax
call fb_StrCompare
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
je .Lt_015E
sub esp, 12
push 0
push -1
lea eax, [ebp-36]
push eax
push -1
push offset Lt_1ACB
call fb_StrAssign
add esp, 32
jmp .Lt_015D
.Lt_015E:
push 6
push offset Lt_00FB
push -1
lea eax, [ebp-36]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_015F
sub esp, 12
push 0
push -1
lea eax, [ebp-36]
push eax
push -1
push offset Lt_1ACB
call fb_StrAssign
add esp, 32
.Lt_015F:
.Lt_015D:
.Lt_0152:
sub esp, 8
push -1
lea eax, [CTX+56]
push eax
call fb_StrLen
add esp, 16
sub esp, 8
push -1
push dword ptr [ebp+8]
mov ebx, eax
call fb_StrLen
add esp, 16
add ebx, eax
add ebx, 9
mov dword ptr [ebp-60], ebx
sub esp, 12
push 0
push -1
sub esp, 8
push 10
push offset Lt_0160
push -1
sub esp, 4
push -1
push offset Lt_1ACA
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea ebx, [ebp-12]
push ebx
push -1
sub esp, 4
push 2
push offset Lt_0101
push -1
sub esp, 4
push -1
push offset Lt_1ACB
push -1
sub esp, 4
push -1
sub esp, 8
push 32
mov ebx, dword ptr [CTX]
imul ebx, 3
push ebx
call fb_StrFill1
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0124
push -1
sub esp, 4
push -1
push dword ptr [ebp+8]
push 4
push offset Lt_015C
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+8]
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
push offset Lt_1ACA
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0150
.Lt_0151:
mov eax, dword ptr [Lt_1ACA]
movzx ebx, byte ptr [eax]
cmp ebx, 120
jne .Lt_016A
sub esp, 4
sub esp, 4
push 1
push offset Lt_0118
call fb_StrAllocTempDescZEx
add esp, 12
push eax
push offset Lt_1AC9
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_016C
push 6
push offset Lt_0157
push -1
push offset Lt_1ACB
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_016E
sub esp, 12
push 0
push 5
push offset Lt_015A
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_016D
.Lt_016E:
sub esp, 12
push 0
push 5
push offset Lt_015B
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
.Lt_016D:
jmp .Lt_016B
.Lt_016C:
sub esp, 8
push 3
push offset Lt_016F
call fb_StrAllocTempDescZEx
add esp, 16
push eax
push -1
push dword ptr [Lt_1ACD]
lea eax, [CTX+56]
push eax
call fb_StrAssignMid
add esp, 16
push 5
push offset Lt_015B
push -1
push offset Lt_1ACB
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0171
sub esp, 4
sub esp, 4
push 1
push offset Lt_0118
call fb_StrAllocTempDescZEx
add esp, 12
push eax
lea eax, [ebp-24]
push eax
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_0173
sub esp, 12
push 0
push 6
push offset Lt_0174
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0172
.Lt_0173:
sub esp, 12
push 0
push 5
push offset Lt_015B
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
.Lt_0172:
jmp .Lt_0170
.Lt_0171:
push 5
push offset Lt_015A
push -1
push offset Lt_1ACB
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0175
mov eax, dword ptr [ebp-12]
movzx ebx, byte ptr [eax]
cmp ebx, 114
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-12]
movzx esi, byte ptr [ebx]
cmp esi, 101
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0177
sub esp, 12
push 0
push 5
push offset Lt_015A
push -1
lea ebx, [ebp-36]
push ebx
call fb_StrAssign
add esp, 32
jmp .Lt_0176
.Lt_0177:
sub esp, 12
push 0
push 6
push offset Lt_0157
push -1
lea ebx, [ebp-36]
push ebx
call fb_StrAssign
add esp, 32
.Lt_0176:
jmp .Lt_0170
.Lt_0175:
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push 1
push offset Lt_0000
push -1
lea ebx, [ebp-180]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-180]
push ebx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ebx, [ebp-180]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
sub esp, 8
push -1
lea ebx, [ebp-36]
push ebx
push 49
push offset Lt_017A
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea ebx, [ebp-192]
push ebx
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
.Lt_0170:
.Lt_016B:
sub esp, 8
push -1
lea eax, [CTX+56]
push eax
call fb_StrLen
add esp, 16
sub esp, 8
push -1
push dword ptr [ebp+8]
mov ebx, eax
call fb_StrLen
add esp, 16
add ebx, eax
add ebx, 9
mov dword ptr [ebp-60], ebx
sub esp, 12
push 0
push -1
sub esp, 8
push 10
push offset Lt_017E
push -1
sub esp, 4
push -1
push offset Lt_1ACA
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea ebx, [ebp-12]
push ebx
push -1
sub esp, 4
push 2
push offset Lt_0101
push -1
sub esp, 4
push -1
lea ebx, [ebp-36]
push ebx
push -1
sub esp, 4
push -1
sub esp, 8
push 32
mov ebx, dword ptr [CTX]
imul ebx, 3
push ebx
call fb_StrFill1
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0124
push -1
sub esp, 4
push -1
push dword ptr [ebp+8]
push 4
push offset Lt_016F
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+8]
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
push offset Lt_1ACA
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0150
.Lt_016A:
mov eax, dword ptr [ebp-12]
movzx ebx, byte ptr [eax]
cmp ebx, 114
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-12]
movzx esi, byte ptr [ebx]
cmp esi, 101
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
push -1
lea ebx, [ebp-24]
push ebx
push -1
push offset Lt_1AC9
mov ebx, eax
call fb_StrCompare
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
sub esp, 4
sub esp, 4
push 1
push offset Lt_0118
call fb_StrAllocTempDescZEx
add esp, 12
push eax
push offset Lt_1AC9
push 1
call fb_StrInstr
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_0188
sub esp, 8
push 3
push offset Lt_0189
call fb_StrAllocTempDescZEx
add esp, 16
push eax
push -1
push dword ptr [Lt_1ACD]
lea eax, [CTX+56]
push eax
call fb_StrAssignMid
add esp, 16
sub esp, 8
push -1
lea eax, [CTX+56]
push eax
call fb_StrLen
add esp, 16
sub esp, 8
push -1
push dword ptr [ebp+8]
mov ebx, eax
call fb_StrLen
add esp, 16
add ebx, eax
add ebx, 9
mov dword ptr [ebp-60], ebx
sub esp, 12
push 0
push -1
sub esp, 8
push 10
push offset Lt_018A
push -1
sub esp, 4
push -1
push offset Lt_1ACA
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea ebx, [ebp-12]
push ebx
push -1
sub esp, 4
push 2
push offset Lt_0101
push -1
sub esp, 4
push -1
push offset Lt_1ACB
push -1
sub esp, 4
push -1
sub esp, 8
push 32
mov ebx, dword ptr [CTX]
imul ebx, 3
push ebx
call fb_StrFill1
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0124
push -1
sub esp, 4
push -1
push dword ptr [ebp+8]
push 4
push offset Lt_0189
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+8]
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
push offset Lt_1ACA
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_0188:
.Lt_0150:
.Lt_0144:
.Lt_0143:
.Lt_0142:
sub esp, 12
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
push offset Lt_1AC9
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-24]
push eax
push -1
push offset Lt_1ACA
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-36]
push eax
push -1
push offset Lt_1ACB
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-60]
mov dword ptr [Lt_1ACD], eax
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_00E9:
pop esi
pop ebx
mov esp, ebp
pop ebp
ret
.size CHECK_OPTIM, .-CHECK_OPTIM

.section .bss
.balign 4
	.lcomm	Lt_1AC9,12
.balign 4
	.lcomm	Lt_1ACA,12
.balign 4
	.lcomm	Lt_1ACB,12
.balign 4
	.lcomm	Lt_1ACD,4
.balign 4
	.lcomm	Lt_1ACC,4

.section .text
.balign 16
REG_FREEABLE:
.type REG_FREEABLE, @function
push ebp
mov ebp, esp
sub esp, 116
push ebx
.Lt_0194:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
sub esp, 12
push 0
push -1
sub esp, 4
push 3
push dword ptr [ebp+8]
call fb_TRIM
add esp, 4
push eax
call fb_LEFT
add esp, 12
push eax
push -1
lea eax, [ebp-20]
push eax
call fb_StrAssign
add esp, 32
push 4
push offset Lt_0196
push -1
lea eax, [ebp-20]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_0198
push 4
push offset Lt_0197
push -1
lea eax, [ebp-20]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-24], eax
jmp .Lt_1AE0
.Lt_0198:
mov dword ptr [ebp-24], -1
.Lt_1AE0:
cmp dword ptr [ebp-24], 0
jne .Lt_019B
push 4
push offset Lt_019A
push -1
lea eax, [ebp-20]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-28], eax
jmp .Lt_1AE1
.Lt_019B:
mov dword ptr [ebp-28], -1
.Lt_1AE1:
cmp dword ptr [ebp-28], 0
jne .Lt_019E
push 4
push offset Lt_019D
push -1
lea eax, [ebp-20]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-32], eax
jmp .Lt_1AE2
.Lt_019E:
mov dword ptr [ebp-32], -1
.Lt_1AE2:
cmp dword ptr [ebp-32], 0
je .Lt_01A1
sub esp, 4
sub esp, 4
push 1
push offset Lt_0118
call fb_StrAllocTempDescZEx
add esp, 12
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
test eax, eax
jne .Lt_01A3
sub esp, 12
lea eax, [ebp-20]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0195
.Lt_01A3:
.Lt_01A2:
jmp .Lt_01A0
.Lt_01A1:
sub esp, 4
lea eax, [ebp-20]
push eax
push 79
push offset Lt_01A4
call fb_StrAllocTempDescZEx
add esp, 8
push eax
push 1
call fb_StrInstr
add esp, 16
test eax, eax
jne .Lt_01A6
sub esp, 12
lea eax, [ebp-20]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0195
.Lt_01A6:
.Lt_01A0:
mov dword ptr [ebp-36], 1
.Lt_01AA:
mov eax, dword ptr [ebp-36]
cmp dword ptr [REGHANDLE+eax*4], -3
jne .Lt_01AC
jmp .Lt_01A8
.Lt_01AC:
mov dword ptr [ebp-4], -1
mov dword ptr [ebp-8], -1
sub esp, 4
sub esp, 8
push 2
push offset Lt_0102
push 0
mov eax, dword ptr [ebp-36]
push dword ptr [REGSTRQ+eax*4]
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call fb_StrConcat
add esp, 28
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_01AF
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-4], eax
jmp .Lt_01AE
.Lt_01AF:
sub esp, 4
sub esp, 8
push 2
push offset Lt_0102
push 0
mov eax, dword ptr [ebp-36]
push dword ptr [REGSTRD+eax*4]
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 28
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_01B0
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-4], eax
jmp .Lt_01AE
.Lt_01B0:
sub esp, 4
sub esp, 8
push 2
push offset Lt_0102
push 0
mov eax, dword ptr [ebp-36]
push dword ptr [REGSTRW+eax*4]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_01B2
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-4], eax
jmp .Lt_01AE
.Lt_01B2:
sub esp, 4
sub esp, 8
push 2
push offset Lt_0102
push 0
mov eax, dword ptr [ebp-36]
push dword ptr [REGSTRB+eax*4]
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_01B4
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-4], eax
.Lt_01B4:
.Lt_01AE:
cmp dword ptr [ebp-4], -1
je .Lt_01B7
push 4
push offset Lt_01B8
push -1
lea eax, [ebp-20]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_01BA
push 4
push offset Lt_01B9
push -1
lea eax, [ebp-20]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-88], eax
jmp .Lt_1AE3
.Lt_01BA:
mov dword ptr [ebp-88], -1
.Lt_1AE3:
cmp dword ptr [ebp-88], 0
jne .Lt_01BD
push 4
push offset Lt_01BC
push -1
lea eax, [ebp-20]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-92], eax
jmp .Lt_1AE4
.Lt_01BD:
mov dword ptr [ebp-92], -1
.Lt_1AE4:
cmp dword ptr [ebp-92], 0
je .Lt_01C0
jmp .Lt_01A8
jmp .Lt_01BF
.Lt_01C0:
push 4
push offset Lt_01C2
push -1
lea eax, [ebp-20]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_01C1
mov eax, dword ptr [ebp-4]
mov dword ptr [CTX+116], eax
mov eax, dword ptr [ebp-4]
mov ebx, dword ptr [REGHANDLE+eax*4]
mov dword ptr [CTX+120], ebx
mov dword ptr [CTX+124], 2
mov ebx, dword ptr [ebp-4]
mov dword ptr [REGHANDLE+ebx*4], -2
jmp .Lt_01A8
jmp .Lt_01BF
.Lt_01C1:
sub esp, 4
sub esp, 8
push 0
mov ebx, dword ptr [ebp-36]
push dword ptr [REGSTRQ+ebx*4]
push -1
sub esp, 4
push 3
push offset Lt_0123
push 0
mov ebx, dword ptr [ebp-36]
push dword ptr [REGSTRQ+ebx*4]
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea ebx, [ebp-104]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 28
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_01C6
mov eax, dword ptr [ebp-4]
mov dword ptr [REGHANDLE+eax*4], -2
sub esp, 12
lea eax, [ebp-20]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0195
.Lt_01C6:
.Lt_01C5:
.Lt_01BF:
.Lt_01B7:
.Lt_01B6:
cmp dword ptr [ebp-4], -1
jne .Lt_01C8
sub esp, 4
sub esp, 8
mov eax, dword ptr [ebp-36]
push dword ptr [REGSTRQ+eax*4]
call fb_StrAllocTempDescZ
add esp, 12
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_01CA
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-8], eax
jmp .Lt_01C9
.Lt_01CA:
sub esp, 4
sub esp, 8
mov eax, dword ptr [ebp-36]
push dword ptr [REGSTRD+eax*4]
call fb_StrAllocTempDescZ
add esp, 12
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_01CB
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-8], eax
jmp .Lt_01C9
.Lt_01CB:
sub esp, 4
sub esp, 8
mov eax, dword ptr [ebp-36]
push dword ptr [REGSTRW+eax*4]
call fb_StrAllocTempDescZ
add esp, 12
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_01CC
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-8], eax
jmp .Lt_01C9
.Lt_01CC:
sub esp, 4
sub esp, 8
mov eax, dword ptr [ebp-36]
push dword ptr [REGSTRB+eax*4]
call fb_StrAllocTempDescZ
add esp, 12
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_01CD
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-8], eax
.Lt_01CD:
.Lt_01C9:
.Lt_01C8:
.Lt_01C7:
cmp dword ptr [ebp-8], -1
je .Lt_01CF
mov eax, dword ptr [ebp-8]
mov dword ptr [REGHANDLE+eax*4], -2
.Lt_01CF:
.Lt_01CE:
.Lt_01A8:
inc dword ptr [ebp-36]
.Lt_01A7:
cmp dword ptr [ebp-36], 15
jle .Lt_01AA
.Lt_01A9:
sub esp, 12
lea eax, [ebp-20]
push eax
call fb_StrDelete
add esp, 16
.Lt_0195:
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_FREEABLE, .-REG_FREEABLE
.balign 16
PW2:
.type PW2, @function
push ebp
mov ebp, esp
sub esp, 24
mov dword ptr [ebp-4], 0
.Lt_01D0:
fild dword ptr [ebp+8]
fldln2
fxch
fyl2x
fdiv qword ptr [Lt_1AEA]
fstp qword ptr [ebp-12]
fld qword ptr [ebp-12]
sub esp, 4
fnstcw [esp]
mov eax, [esp]
or eax, 0b0000110000000000
push eax
fldcw [esp]
add esp, 4
fld st(0)
frndint
fsubp
fldcw [esp]
add esp, 4
fcomp qword ptr [Lt_1AEB]
fnstsw ax
test ah, 0b01000000
jz .Lt_01D3
push dword ptr [ebp-8]
push dword ptr [ebp-12]
push dword ptr [Lt_1AEC+4]
push dword ptr [Lt_1AEC]
call pow
add esp, 16
fistp dword ptr [ebp-4]
jmp .Lt_01D1
jmp .Lt_01D2
.Lt_01D3:
fld qword ptr [ebp-12]
sub esp, 4
fnstcw [esp]
mov eax, [esp]
and eax, 0b1111001111111111
or eax, 0b0000010000000000
push eax
fldcw [esp]
add esp, 4
frndint
fldcw [esp]
add esp, 4
fadd qword ptr [Lt_1AED]
sub esp,8
fstp qword ptr [esp]
push dword ptr [Lt_1AEC+4]
push dword ptr [Lt_1AEC]
call pow
add esp, 16
fistp dword ptr [ebp-4]
.Lt_01D2:
.Lt_01D1:
mov eax, dword ptr [ebp-4]
mov esp, ebp
pop ebp
ret
.size PW2, .-PW2
.balign 16
ASM_SECTION:
.type ASM_SECTION, @function
push ebp
mov ebp, esp
sub esp, 24
.Lt_01D4:
push -1
push dword ptr [ebp+8]
push -1
push offset Lt_1AEE
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_01D7
sub esp, 8
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+8]
push 10
push offset Lt_01D8
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-24]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push -1
push dword ptr [ebp+8]
push -1
push offset Lt_1AEE
call fb_StrAssign
add esp, 32
.Lt_01D7:
.Lt_01D6:
.Lt_01D5:
mov esp, ebp
pop ebp
ret
.size ASM_SECTION, .-ASM_SECTION

.section .bss
.balign 4
	.lcomm	Lt_1AEE,12

.section .text
.balign 16
EMITOP3_OP4:
.type EMITOP3_OP4, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_01DB:
push 4
push offset Lt_01DD
push -1
sub esp, 12
push 3
push dword ptr [ebp+8]
call fb_RIGHT
add esp, 20
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_01DF
sub esp, 8
push 3
push dword ptr [ebp+8]
call HWRITEASM64
add esp, 16
jmp .Lt_01DE
.Lt_01DF:
sub esp, 8
push 0
push dword ptr [ebp+8]
call HWRITEASM64
add esp, 16
.Lt_01DE:
.Lt_01DC:
mov esp, ebp
pop ebp
ret
.size EMITOP3_OP4, .-EMITOP3_OP4
.balign 16
HWRITEASM64:
.type HWRITEASM64, @function
push ebp
mov ebp, esp
sub esp, 116
push ebx
.Lt_01E5:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
sub esp, 12
push 0
push -1
push dword ptr [ebp+8]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
cmp dword ptr [CTX+216], 0
je .Lt_01E8
cmp dword ptr [CTX+220], 1
jne .Lt_01EA
mov dword ptr [CTX+220], 2
jmp .Lt_01E9
.Lt_01EA:
mov dword ptr [CTX+216], 0
.Lt_01E9:
.Lt_01E8:
.Lt_01E7:
cmp dword ptr [CTX+124], 0
je .Lt_01EC
dec dword ptr [CTX+124]
cmp dword ptr [CTX+124], 0
jne .Lt_01EE
mov dword ptr [CTX+120], -2
.Lt_01EE:
.Lt_01ED:
.Lt_01EC:
.Lt_01EB:
cmp dword ptr [ENV+148], -1
jne .Lt_01F0
cmp dword ptr [CTXDBG+4], -1
je .Lt_01F2
sub esp, 12
lea eax, [CTXDBG+20]
push eax
call DBG_FILENAME
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
sub esp, 12
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [CTXDBG+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_01F4
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 32
lea eax, [ebp-84]
push eax
mov ax, word ptr [CTXDBG+4]
push eax
push 68
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-48]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
mov dword ptr [CTXDBG+4], -1
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
.Lt_01F2:
.Lt_01F1:
.Lt_01F0:
.Lt_01EF:
mov eax, dword ptr [ebp+12]
cmp eax, 2
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
cmp ebx, 1
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_01FB
sub esp, 12
lea ebx, [ebp-12]
push ebx
call REG_FREEABLE
add esp, 16
.Lt_01FB:
mov ebx, dword ptr [ebp+12]
cmp ebx, 3
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
cmp eax, 1
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
je .Lt_01FD
sub esp, 12
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-48]
push eax
call CHECK_OPTIM
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_01FC
.Lt_01FD:
sub esp, 12
lea eax, [ebp-12]
push eax
call CHECK_OPTIM
add esp, 16
.Lt_01FC:
sub esp, 12
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 8
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_0124
push -1
lea eax, [ebp-12]
push eax
call fb_StrConcatAssign
add esp, 32
mov eax, dword ptr [CTX+4]
mov dword ptr [ebp-40], eax
jmp .Lt_0201
.Lt_0203:
sub esp, 12
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [CTX+56]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_0200
.Lt_0204:
sub esp, 12
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [CTX+44]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_0200
.Lt_0205:
sub esp, 12
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [CTX+68]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_0200
.Lt_0206:
sub esp, 12
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [CTX+8]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_0200
.Lt_0207:
sub esp, 12
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [CTX+32]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_0200
.Lt_0208:
sub esp, 12
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [CTX+8]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_0200
.Lt_0201:
cmp dword ptr [ebp-40], 5
ja .Lt_0208
mov eax, dword ptr [ebp-40]
jmp dword ptr [.LT_0209+eax*4]
.LT_0209:
.int .Lt_0206
.int .Lt_0208
.int .Lt_0207
.int .Lt_0204
.int .Lt_0203
.int .Lt_0205
.Lt_0200:
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_01E6:
pop ebx
mov esp, ebp
pop ebp
ret
.size HWRITEASM64, .-HWRITEASM64
.balign 16
HFLOATTOHEX_ASM64:
.type HFLOATTOHEX_ASM64, @function
push ebp
mov ebp, esp
sub esp, 56
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
.Lt_020A:
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
fld qword ptr [ebp+8]
fstp dword ptr [ebp-28]
mov eax, dword ptr [ebp+16]
and eax, 480
je .Lt_020C
mov dword ptr [ebp-32], 24
jmp .Lt_1AF3
.Lt_020C:
mov eax, dword ptr [ebp+16]
and eax, 31
mov dword ptr [ebp-32], eax
.Lt_1AF3:
cmp dword ptr [ebp-32], 16
jne .Lt_020F
sub esp, 12
push 0
push 3
push offset Lt_0210
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
push 16
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call fb_HEXEx_l
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 8
push offset Lt_0211
push -1
lea eax, [ebp-24]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call fb_DoubleToStr
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrConcatAssign
add esp, 32
movsx eax, byte ptr [ebp+20]
test eax, eax
je .Lt_0213
sub esp, 12
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 7
push offset Lt_0214
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrInit
add esp, 32
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_020B
jmp .Lt_0212
.Lt_0213:
sub esp, 12
push 0
push -1
lea eax, [ebp-24]
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrInit
add esp, 32
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_020B
.Lt_0212:
jmp .Lt_020E
.Lt_020F:
sub esp, 12
push 0
push 3
push offset Lt_0210
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 8
push dword ptr [ebp-28]
call fb_HEXEx_i
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 8
push offset Lt_0216
push -1
lea eax, [ebp-24]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call fb_DoubleToStr
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrConcatAssign
add esp, 32
movsx eax, byte ptr [ebp+20]
test eax, eax
je .Lt_0218
sub esp, 12
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 7
push offset Lt_0219
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrInit
add esp, 32
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_020B
jmp .Lt_0217
.Lt_0218:
sub esp, 12
push 0
push -1
lea eax, [ebp-24]
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrInit
add esp, 32
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_020B
.Lt_0217:
.Lt_020E:
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
.Lt_020B:
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrAllocTempResult
add esp, 16
mov esp, ebp
pop ebp
ret
.size HFLOATTOHEX_ASM64, .-HFLOATTOHEX_ASM64
.balign 16
DBG_ADDSTR:
.type DBG_ADDSTR, @function
push ebp
mov ebp, esp
sub esp, 20
push ebx
mov dword ptr [ebp-4], 0
.Lt_021B:
cmp dword ptr [ebp+12], 0
jne .Lt_021E
mov dword ptr [ebp-8], 0
mov eax, dword ptr [CTXDBG+36]
mov dword ptr [ebp-12], eax
jmp .Lt_0220
.Lt_0223:
push -1
mov eax, dword ptr [ebp-8]
sal eax, 4
add eax, dword ptr [DBGSTR]
lea ebx, [eax+4]
push ebx
push -1
push dword ptr [ebp+8]
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0225
mov eax, dword ptr [ebp-8]
sal eax, 4
add eax, dword ptr [DBGSTR]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-4], ebx
jmp .Lt_021C
.Lt_0225:
.Lt_0224:
.Lt_0221:
inc dword ptr [ebp-8]
.Lt_0220:
mov ebx, dword ptr [ebp-12]
cmp dword ptr [ebp-8], ebx
jle .Lt_0223
.Lt_0222:
.Lt_021E:
.Lt_021D:
inc dword ptr [CTXDBG+36]
mov ebx, dword ptr [CTXDBG+40]
cmp dword ptr [CTXDBG+36], ebx
jle .Lt_0227
fild dword ptr [CTXDBG+40]
fmul qword ptr [Lt_1AF4]
fistp dword ptr [CTXDBG+40]
sub esp, 4
push dword ptr [CTXDBG+40]
push 0
push 1
push offset _ZN7TDBGSTRD1Ev
push offset _ZN7TDBGSTRC1Ev
push 16
push offset DBGSTR
call fb_ArrayRedimPresvObj
add esp, 32
test eax, eax
je .Lt_0229
push 0
push 0
push offset Lt_022A
push 808
call fb_ErrorThrowAt
add esp, 16
jmp eax
.Lt_0229:
.Lt_0227:
.Lt_0226:
sub esp, 12
push 0
push -1
push dword ptr [ebp+8]
push -1
mov eax, dword ptr [CTXDBG+36]
sal eax, 4
add eax, dword ptr [DBGSTR]
lea ebx, [eax+4]
push ebx
call fb_StrAssign
add esp, 32
mov ebx, dword ptr [CTXDBG+36]
sal ebx, 4
add ebx, dword ptr [DBGSTR]
mov eax, dword ptr [CTXDBG+52]
mov dword ptr [ebx], eax
mov eax, dword ptr [CTXDBG+52]
mov dword ptr [ebp-4], eax
sub esp, 8
push -1
push dword ptr [ebp+8]
call fb_StrLen
add esp, 16
add eax, dword ptr [CTXDBG+52]
inc eax
mov dword ptr [CTXDBG+52], eax
.Lt_021C:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret
.size DBG_ADDSTR, .-DBG_ADDSTR
.balign 16
DBG_ADDSTAB:
.type DBG_ADDSTAB, @function
push ebp
mov ebp, esp
sub esp, 20
push ebx
.Lt_022B:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
push 1
push offset Lt_0000
push -1
push dword ptr [ebp+8]
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_022E
movzx eax, byte ptr [ebp+12]
cmp eax, 100
sete al
shr eax, 1
sbb eax, eax
movzx ebx, byte ptr [ebp+12]
cmp ebx, 132
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0230
sub esp, 8
push 0
push dword ptr [ebp+8]
call DBG_ADDSTR
add esp, 16
mov dword ptr [ebp-4], eax
jmp .Lt_022F
.Lt_0230:
sub esp, 8
push 1
push dword ptr [ebp+8]
call DBG_ADDSTR
add esp, 16
mov dword ptr [ebp-4], eax
.Lt_022F:
.Lt_022E:
.Lt_022D:
inc dword ptr [CTXDBG+44]
mov eax, dword ptr [CTXDBG+48]
cmp dword ptr [CTXDBG+44], eax
jle .Lt_0232
fild dword ptr [CTXDBG+48]
fmul qword ptr [Lt_1AF5]
fistp dword ptr [CTXDBG+48]
sub esp, 4
push dword ptr [CTXDBG+48]
push 0
push 1
push offset _ZN8TDBGSTABD1Ev
push offset _ZN8TDBGSTABC1Ev
push 16
push offset DBGSTAB
call fb_ArrayRedimPresvObj
add esp, 32
test eax, eax
je .Lt_0234
push 0
push 0
push offset Lt_022A
push 828
call fb_ErrorThrowAt
add esp, 16
jmp eax
.Lt_0234:
.Lt_0232:
.Lt_0231:
mov eax, dword ptr [ebp-4]
mov dword ptr [ebp-12], eax
movzx ax, byte ptr [ebp+12]
mov word ptr [ebp-8], ax
mov ax, word ptr [ebp+16]
mov word ptr [ebp-6], ax
mov eax, dword ptr [ebp-12]
mov ebx, dword ptr [CTXDBG+44]
sal ebx, 4
add ebx, dword ptr [DBGSTAB]
mov dword ptr [ebx], eax
sub esp, 12
push 0
push -1
push dword ptr [ebp+20]
push -1
mov eax, dword ptr [CTXDBG+44]
sal eax, 4
add eax, dword ptr [DBGSTAB]
lea ebx, [eax+4]
push ebx
call fb_StrAssign
add esp, 32
.Lt_022C:
pop ebx
mov esp, ebp
pop ebp
ret
.size DBG_ADDSTAB, .-DBG_ADDSTAB
.balign 16
DBG_EMITSTR:
.type DBG_EMITSTR, @function
push ebp
mov ebp, esp
sub esp, 56
.Lt_0235:
cmp dword ptr [CTX+212], 2
jne .Lt_0238
sub esp, 12
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push 12
push offset Lt_0239
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-24]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0237
.Lt_0238:
sub esp, 12
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push 13
push offset Lt_023B
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-24]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
.Lt_0237:
sub esp, 8
push 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 8
push offset Lt_023D
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-12]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
mov dword ptr [ebp-16], 0
mov eax, dword ptr [CTXDBG+36]
mov dword ptr [ebp-20], eax
jmp .Lt_0240
.Lt_0243:
sub esp, 8
push 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0247
push -1
sub esp, 4
push -1
sub esp, 4
push offset Lt_0246
push offset Lt_0245
mov eax, dword ptr [ebp-16]
sal eax, 4
add eax, dword ptr [DBGSTR]
push dword ptr [eax+4]
call HREPLACE
add esp, 16
push eax
push 9
push offset Lt_0244
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-56]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-56]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-56]
push eax
call fb_StrDelete
add esp, 16
.Lt_0241:
inc dword ptr [ebp-16]
.Lt_0240:
mov eax, dword ptr [ebp-20]
cmp dword ptr [ebp-16], eax
jle .Lt_0243
.Lt_0242:
.Lt_0236:
mov esp, ebp
pop ebp
ret
.size DBG_EMITSTR, .-DBG_EMITSTR
.balign 16
DBG_EMITSTAB:
.type DBG_EMITSTAB, @function
push ebp
mov ebp, esp
sub esp, 148
push ebx
.Lt_024B:
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
cmp dword ptr [CTX+212], 2
jne .Lt_024E
sub esp, 12
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
push 0
push 12
push offset Lt_024F
push -1
lea eax, [ebp-20]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-20]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-20]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_024D
.Lt_024E:
sub esp, 12
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
push 0
push 13
push offset Lt_0251
push -1
lea eax, [ebp-20]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-20]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-20]
push eax
call fb_StrDelete
add esp, 16
.Lt_024D:
mov dword ptr [ebp-12], 0
mov eax, dword ptr [CTXDBG+44]
mov dword ptr [ebp-16], eax
jmp .Lt_0254
.Lt_0257:
mov eax, dword ptr [ebp-12]
sal eax, 4
add eax, dword ptr [DBGSTAB]
mov ecx, dword ptr [eax]
mov ebx, ecx
sar ebx, 31
mov dword ptr [ebp-8], ecx
mov dword ptr [ebp-4], ebx
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [ebp-8]
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0101
push -1
sub esp, 4
push -1
sub esp, 12
movsx eax, word ptr [ebp-2]
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0101
push -1
sub esp, 4
push -1
sub esp, 12
movsx eax, word ptr [ebp-4]
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 4
push offset Lt_0259
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-12]
sal eax, 4
add eax, dword ptr [DBGSTAB]
push dword ptr [eax]
call fb_HEX_i
add esp, 16
push eax
push 9
push offset Lt_0258
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
sub esp, 8
push -1
mov eax, dword ptr [ebp-12]
sal eax, 4
add eax, dword ptr [DBGSTAB]
lea ecx, [eax+4]
push ecx
push 7
push offset Lt_0214
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea ecx, [ebp-124]
push ecx
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-136]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-136]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-136]
push eax
call fb_StrDelete
add esp, 16
.Lt_0255:
inc dword ptr [ebp-12]
.Lt_0254:
mov eax, dword ptr [ebp-16]
cmp dword ptr [ebp-12], eax
jle .Lt_0257
.Lt_0256:
.Lt_024C:
pop ebx
mov esp, ebp
pop ebp
ret
.size DBG_EMITSTAB, .-DBG_EMITSTAB
.balign 16
HDECLPOINTER_ASM64:
.type HDECLPOINTER_ASM64, @function
push ebp
mov ebp, esp
sub esp, 20
push ebx
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
.Lt_02B3:
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
push offset Lt_1AF8
call fb_StrAssign
add esp, 32
.Lt_02B5:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
and ebx, 480
test ebx, ebx
je .Lt_02B6
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx]
and eax, 31
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx]
and ecx, 480
add ecx, -32
or eax, ecx
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ecx]
and ebx, 261632
sar ebx, 1
and ebx, 261632
or eax, ebx
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx]
and ecx, 32505856
or eax, ecx
mov ecx, dword ptr [ebp+8]
mov dword ptr [ecx], eax
sub esp, 12
push 0
push -1
sub esp, 8
push dword ptr [CTXDBG]
call fb_UIntToStr
add esp, 12
push eax
push -1
push offset Lt_1AF8
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 3
push offset Lt_02B7
push -1
push offset Lt_1AF8
call fb_StrConcatAssign
add esp, 32
inc dword ptr [CTXDBG]
jmp .Lt_02B5
.Lt_02B6:
sub esp, 12
push 0
push -1
push offset Lt_1AF8
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_02B4:
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrAllocTempResult
add esp, 16
pop ebx
mov esp, ebp
pop ebp
ret
.size HDECLPOINTER_ASM64, .-HDECLPOINTER_ASM64

.section .bss
.balign 4
	.lcomm	Lt_1AF8,12

.section .text
.balign 16
HDECLUDT_ASM64:
.type HDECLUDT_ASM64, @function
push ebp
mov ebp, esp
sub esp, 180
push ebx
.Lt_02B8:
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [CTXDBG]
mov dword ptr [eax+132], ebx
inc dword ptr [CTXDBG]
sub esp, 12
push 0
push 0
sub esp, 8
push dword ptr [ebp+8]
call SYMBGETDBGNAME
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push -1
sub esp, 8
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_02BB
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp+8]
push dword ptr [eax+132]
call fb_IntToStr
add esp, 16
push eax
push 4
push offset Lt_02BA
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 32
push eax
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push dword ptr [ebp+8]
call SYMBUDTGETFIRSTFIELD
add esp, 16
mov dword ptr [ebp-4], eax
.Lt_02C0:
cmp dword ptr [ebp-4], 0
je .Lt_02C1
mov eax, dword ptr [ebp-4]
mov ebx, dword ptr [eax+4]
and ebx, 4
test ebx, ebx
jne .Lt_02C3
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push -1
sub esp, 8
push dword ptr [ebp+12]
push dword ptr [ebp-4]
call HGETDATATYPE_ASM64
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_00EE
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [eax+16]
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 32
push eax
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push -1
sub esp, 8
mov eax, dword ptr [ebp-4]
mov ecx, dword ptr [eax+48]
mov ebx, dword ptr [eax+52]
shld ebx, ecx, 3
shl ecx, 3
mov dword ptr [ebp-180], ecx
mov dword ptr [ebp-176], ebx
mov ecx, dword ptr [ebp-4]
cmp dword ptr [ecx+112], 0
jle .Lt_02C7
mov ecx, dword ptr [ebp-4]
mov ebx, dword ptr [ecx+108]
mov dword ptr [ebp-116], ebx
jmp .Lt_1AF9
.Lt_02C7:
mov dword ptr [ebp-116], 0
.Lt_1AF9:
mov ecx, dword ptr [ebp-116]
mov ebx, ecx
sar ebx, 31
add ecx, dword ptr [ebp-180]
adc ebx, dword ptr [ebp-176]
push ebx
push ecx
call fb_LongintToStr
add esp, 16
push eax
push 2
push offset Lt_0102
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 32
push eax
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push -1
sub esp, 8
mov eax, dword ptr [ebp-4]
cmp dword ptr [eax+112], 0
jle .Lt_02CB
mov eax, dword ptr [ebp-4]
mov ebx, dword ptr [eax+112]
mov ecx, ebx
sar ecx, 31
mov dword ptr [ebp-148], ebx
mov dword ptr [ebp-144], ecx
jmp .Lt_1AFA
.Lt_02CB:
sub esp, 4
push dword ptr [ebp-4]
call SYMBGETREALSIZE
add esp, 8
shld edx, eax, 3
shl eax, 3
mov dword ptr [ebp-148], eax
mov dword ptr [ebp-144], edx
.Lt_1AFA:
push dword ptr [ebp-144]
push dword ptr [ebp-148]
call fb_LongintToStr
add esp, 16
push eax
push 2
push offset Lt_0102
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call fb_StrConcat
add esp, 32
push eax
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_02CF
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_02C3:
.Lt_02C2:
sub esp, 12
push dword ptr [ebp-4]
call SYMBUDTGETNEXTFIELD
add esp, 16
mov dword ptr [ebp-4], eax
jmp .Lt_02C0
.Lt_02C1:
sub esp, 12
push 0
push 2
push offset Lt_02CF
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
sub esp, 12
push 0
push 2
push offset Lt_0006
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 32
lea eax, [ebp-76]
push eax
push 0
push 128
lea eax, [ebp-16]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-16]
push eax
call fb_StrDelete
add esp, 16
.Lt_02B9:
pop ebx
mov esp, ebp
pop ebp
ret
.size HDECLUDT_ASM64, .-HDECLUDT_ASM64
.balign 16
HDECLENUM_ASM64:
.type HDECLENUM_ASM64, @function
push ebp
mov ebp, esp
sub esp, 116
push ebx
.Lt_02D1:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [CTXDBG]
mov dword ptr [eax+100], ebx
inc dword ptr [CTXDBG]
sub esp, 12
push 0
push 0
sub esp, 8
push dword ptr [ebp+8]
call SYMBGETDBGNAME
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push 3
push offset Lt_02D4
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp+8]
push dword ptr [eax+100]
call fb_IntToStr
add esp, 16
push eax
push 3
push offset Lt_02D3
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 32
push eax
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push dword ptr [ebp+8]
call SYMBGETENUMFIRSTELM
add esp, 16
mov dword ptr [ebp-4], eax
.Lt_02D8:
cmp dword ptr [ebp-4], 0
je .Lt_02D9
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push 2
push offset Lt_0102
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp-4]
push dword ptr [eax+60]
push dword ptr [eax+56]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_00EE
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [eax+16]
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 32
push eax
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push dword ptr [ebp-4]
call SYMBGETENUMNEXTELM
add esp, 16
mov dword ptr [ebp-4], eax
jmp .Lt_02D8
.Lt_02D9:
sub esp, 12
push 0
push 2
push offset Lt_02CF
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
sub esp, 12
push 0
push 2
push offset Lt_0006
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 32
lea eax, [ebp-64]
push eax
push 0
push 128
lea eax, [ebp-16]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-16]
push eax
call fb_StrDelete
add esp, 16
.Lt_02D2:
pop ebx
mov esp, ebp
pop ebp
ret
.size HDECLENUM_ASM64, .-HDECLENUM_ASM64
.balign 16
HGETDATATYPE_ASM64:
.type HGETDATATYPE_ASM64, @function
push ebp
mov ebp, esp
sub esp, 100
push ebx
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
.Lt_02DF:
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
cmp dword ptr [ebp+8], 0
jne .Lt_02E2
sub esp, 12
push 0
push -1
sub esp, 8
push dword ptr [REMAPTB]
call fb_IntToStr
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrInit
add esp, 32
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_02E0
.Lt_02E2:
.Lt_02E1:
mov dword ptr [ebp-20], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 16384
test ebx, ebx
je .Lt_02E4
mov dword ptr [ebp-16], 20
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+88]
mov dword ptr [ebp-24], eax
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+60]
mov dword ptr [ebp-20], ebx
jmp .Lt_02E3
.Lt_02E4:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+28]
and eax, 511
mov dword ptr [ebp-16], eax
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov dword ptr [ebp-24], ebx
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx]
cmp eax, 1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx]
cmp ecx, 12
sete cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
je .Lt_02E6
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ecx+4]
and eax, 262144
test eax, eax
je .Lt_02E8
mov eax, dword ptr [ebp-16]
and eax, 31
mov ecx, dword ptr [ebp-16]
and ecx, 480
add ecx, 32
or eax, ecx
mov ecx, dword ptr [ebp-16]
and ecx, 261632
sal ecx, 1
or eax, ecx
mov ecx, dword ptr [ebp-16]
and ecx, 32505856
or eax, ecx
mov dword ptr [ebp-16], eax
.Lt_02E8:
.Lt_02E7:
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+60], 0
jle .Lt_02EA
sub esp, 12
push 0
push -1
sub esp, 8
push dword ptr [CTXDBG]
call fb_UIntToStr
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_02EB
push -1
lea eax, [ebp-36]
push eax
call fb_StrConcatAssign
add esp, 32
inc dword ptr [CTXDBG]
cmp dword ptr [ebp+12], 0
jle .Lt_02ED
sub esp, 12
push 0
push 5
push offset Lt_02EE
push -1
lea eax, [ebp-36]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 3
push offset Lt_02EF
push -1
lea eax, [ebp-36]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
dec eax
push eax
call fb_IntToStr
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_02CF
push -1
lea eax, [ebp-36]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_02EC
.Lt_02ED:
mov dword ptr [ebp-40], 0
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+60]
dec ecx
mov dword ptr [ebp-44], ecx
jmp .Lt_02F1
.Lt_02F4:
sub esp, 12
push 0
push 5
push offset Lt_02EE
push -1
lea ecx, [ebp-36]
push ecx
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push 2
push offset Lt_02CF
push -1
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ebp-40]
sal eax, 4
mov ebx, dword ptr [ecx+64]
add ebx, eax
push dword ptr [ebx+4]
push dword ptr [ebx]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 32
push eax
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push 2
push offset Lt_02CF
push -1
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp-40]
sal ebx, 4
mov ecx, dword ptr [eax+64]
add ecx, ebx
push dword ptr [ecx+12]
push dword ptr [ecx+8]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 32
push eax
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
.Lt_02F2:
inc dword ptr [ebp-40]
.Lt_02F1:
mov eax, dword ptr [ebp-44]
cmp dword ptr [ebp-40], eax
jle .Lt_02F4
.Lt_02F3:
.Lt_02EC:
.Lt_02EA:
.Lt_02E9:
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
and ecx, 8192
test ecx, ecx
je .Lt_02FA
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ecx+92]
mov ecx, dword ptr [eax+60]
mov dword ptr [ebp-20], ecx
.Lt_02FA:
.Lt_02F9:
.Lt_02E6:
.Lt_02E5:
.Lt_02E3:
cmp dword ptr [ebp-20], 0
jge .Lt_02FC
mov dword ptr [ebp-20], 1
.Lt_02FC:
.Lt_02FB:
mov ecx, dword ptr [ebp-16]
and ecx, 480
test ecx, ecx
je .Lt_02FE
sub esp, 12
push 0
push -1
sub esp, 8
lea ecx, [ebp-16]
push ecx
call HDECLPOINTER_ASM64
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_02FE:
.Lt_02FD:
and dword ptr [ebp-16], -513
mov eax, dword ptr [ebp-16]
mov dword ptr [ebp-40], eax
jmp .Lt_0300
.Lt_0302:
cmp dword ptr [ebp-24], 0
je .Lt_0304
mov eax, dword ptr [ebp-24]
cmp dword ptr [eax+132], -1
jne .Lt_0306
sub esp, 8
push dword ptr [ebp-20]
push dword ptr [ebp-24]
call HDECLUDT_ASM64
add esp, 16
.Lt_0306:
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp-24]
push dword ptr [eax+132]
call fb_IntToStr
add esp, 16
push eax
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0303
.Lt_0304:
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+132], -1
jne .Lt_0309
sub esp, 8
push dword ptr [ebp-20]
push dword ptr [ebp+8]
call HDECLUDT_ASM64
add esp, 16
.Lt_0309:
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+8]
push dword ptr [eax+132]
call fb_IntToStr
add esp, 16
push eax
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
.Lt_0303:
jmp .Lt_02FF
.Lt_030B:
mov eax, dword ptr [ebp-24]
cmp dword ptr [eax+100], -1
jne .Lt_030D
sub esp, 12
push dword ptr [ebp-24]
call HDECLENUM_ASM64
add esp, 16
.Lt_030D:
.Lt_030C:
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp-24]
push dword ptr [eax+100]
call fb_IntToStr
add esp, 16
push eax
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_02FF
.Lt_030F:
sub esp, 12
push 0
push -1
sub esp, 8
push dword ptr [CTXDBG]
call fb_UIntToStr
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 3
push offset Lt_0310
push -1
lea eax, [ebp-36]
push eax
call fb_StrConcatAssign
add esp, 32
inc dword ptr [CTXDBG]
sub esp, 12
push 0
push -1
sub esp, 4
push 0
push dword ptr [ebp-24]
call HGETDATATYPE_ASM64
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_02FF
.Lt_0311:
sub esp, 12
push 0
push -1
sub esp, 8
push dword ptr [REMAPTB]
call fb_IntToStr
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_02FF
.Lt_0312:
sub esp, 12
push 0
push -1
sub esp, 8
mov eax, dword ptr [ebp-16]
push dword ptr [REMAPTB+eax*4]
call fb_IntToStr
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_02FF
.Lt_0300:
mov eax, dword ptr [ebp-40]
add eax, 4294967286
cmp eax, 13
ja .Lt_0312
mov eax, dword ptr [ebp-40]
jmp dword ptr [.LT_0313+eax*4-40]
.LT_0313:
.int .Lt_030B
.int .Lt_0312
.int .Lt_0312
.int .Lt_0312
.int .Lt_0312
.int .Lt_0312
.int .Lt_0312
.int .Lt_0312
.int .Lt_0312
.int .Lt_0312
.int .Lt_0302
.int .Lt_0312
.int .Lt_030F
.int .Lt_0311
.Lt_02FF:
sub esp, 12
push 0
push -1
lea eax, [ebp-36]
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
.Lt_02E0:
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrAllocTempResult
add esp, 16
pop ebx
mov esp, ebp
pop ebp
ret
.size HGETDATATYPE_ASM64, .-HGETDATATYPE_ASM64
.balign 16
_EMITDBG:
.type _EMITDBG, @function
push ebp
mov ebp, esp
sub esp, 72
.Lt_0314:
cmp dword ptr [ebp+8], 113
jne .Lt_0317
sub esp, 12
push 0
push 0
push dword ptr [ebp+20]
push -1
lea eax, [CTXDBG+20]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+16]
mov dword ptr [CTXDBG+4], eax
jmp .Lt_0316
.Lt_0317:
cmp dword ptr [ebp+8], 114
jne .Lt_0319
jmp .Lt_0318
.Lt_0319:
cmp dword ptr [ebp+8], 115
jne .Lt_031A
jmp .Lt_0318
.Lt_031A:
cmp dword ptr [ebp+8], 116
jne .Lt_031B
jmp .Lt_0318
.Lt_031B:
sub esp, 8
push 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-12]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0320
push -1
sub esp, 4
push 28
push offset Lt_031F
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [ebp+8]
call fb_IntToStr
add esp, 16
push eax
push 44
push offset Lt_031E
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-60]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
.Lt_0318:
.Lt_0316:
.Lt_0315:
mov esp, ebp
pop ebp
ret
.size _EMITDBG, .-_EMITDBG
.balign 16
REG_MARK:
.type REG_MARK, @function
push ebp
mov ebp, esp
sub esp, 20
push ebx
.Lt_0326:
mov byte ptr [ebp-4], 0
mov dword ptr [ebp-8], 1
.Lt_032B:
mov eax, dword ptr [ebp-8]
mov ebx, dword ptr [REGHANDLE+eax*4]
cmp ebx, -2
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp-8]
mov ecx, dword ptr [REGHANDLE+eax*4]
cmp ecx, -3
setne cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
je .Lt_032D
mov ecx, dword ptr [ebp-8]
mov dword ptr [REGROOM+ecx*8], -2
mov byte ptr [ebp-4], 1
.Lt_032D:
.Lt_032C:
.Lt_0329:
inc dword ptr [ebp-8]
.Lt_0328:
cmp dword ptr [ebp-8], 15
jle .Lt_032B
.Lt_032A:
cmp byte ptr [ebp-4], 0
je .Lt_032F
mov ecx, dword ptr [ebp+8]
mov dword ptr [CTX+200], ecx
.Lt_032F:
.Lt_0327:
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_MARK, .-REG_MARK
.balign 16
ASM64_SPILLREG:
.type ASM64_SPILLREG, @function
push ebp
mov ebp, esp
sub esp, 52
push ebx
mov dword ptr [ebp-4], 0
.Lt_0330:
cmp dword ptr [CTX+196], 0
jle .Lt_0333
sub esp, 12
lea eax, [CTX+140]
push eax
call FLISTGETHEAD
add esp, 16
mov dword ptr [ebp-8], eax
.Lt_0334:
cmp dword ptr [ebp-8], 0
je .Lt_0335
mov eax, dword ptr [ebp-8]
cmp dword ptr [eax+4], -2
jne .Lt_0337
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp-8]
mov ecx, dword ptr [REGHANDLE+eax*4]
mov dword ptr [ebx+4], ecx
mov ecx, dword ptr [ebp-8]
mov dword ptr [ebp-4], ecx
jmp .Lt_0331
.Lt_0337:
.Lt_0336:
sub esp, 12
push dword ptr [ebp-8]
call FLISTGETNEXT
add esp, 16
mov dword ptr [ebp-8], eax
jmp .Lt_0334
.Lt_0335:
.Lt_0333:
.Lt_0332:
add dword ptr [CTX+96], 8
cmp dword ptr [CTX+104], 0
je .Lt_0339
mov eax, dword ptr [CTX+104]
cmp dword ptr [CTX+96], eax
jne .Lt_033B
sub esp, 8
push 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-20]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-20]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-20]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
push 0
push 53
push offset Lt_033E
push -1
lea eax, [ebp-32]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-32]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-32]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-44]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-44]
push eax
call fb_StrDelete
add esp, 16
.Lt_033B:
.Lt_033A:
.Lt_0339:
.Lt_0338:
sub esp, 12
lea eax, [CTX+140]
push eax
call FLISTNEWITEM
add esp, 16
mov dword ptr [ebp-8], eax
inc dword ptr [CTX+196]
mov eax, dword ptr [ebp-8]
mov ecx, dword ptr [CTX+196]
mov dword ptr [eax], ecx
mov ecx, dword ptr [CTX+96]
neg ecx
mov eax, dword ptr [ebp-8]
mov dword ptr [eax+8], ecx
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ebp-8]
mov ebx, dword ptr [REGHANDLE+ecx*4]
mov dword ptr [eax+4], ebx
mov ebx, dword ptr [ebp-8]
mov dword ptr [ebp-4], ebx
.Lt_0331:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret
.size ASM64_SPILLREG, .-ASM64_SPILLREG
.balign 16
REG_SPILLING:
.type REG_SPILLING, @function
push ebp
mov ebp, esp
sub esp, 68
push ebx
.Lt_0341:
sub esp, 12
push dword ptr [ebp+8]
call ASM64_SPILLREG
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-4]
push dword ptr [eax+8]
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp+8]
mov dword ptr [REGHANDLE+eax*4], -2
mov eax, dword ptr [ebp+8]
cmp dword ptr [REGROOM+eax*8], -2
jne .Lt_034A
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp-4]
mov dword ptr [REGROOM+eax*8+4], ebx
mov ebx, dword ptr [ebp+8]
mov dword ptr [REGROOM+ebx*8], -3
.Lt_034A:
.Lt_0349:
cmp dword ptr [CTX+200], 0
je .Lt_034B
mov dword ptr [ebp-56], -1
jmp .Lt_1B00
.Lt_034B:
mov dword ptr [ebp-56], 0
.Lt_1B00:
mov ebx, dword ptr [ebp-4]
mov eax, dword ptr [ebp-56]
mov dword ptr [ebx+12], eax
.Lt_0342:
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_SPILLING, .-REG_SPILLING
.balign 16
REG_SAVE:
.type REG_SAVE, @function
push ebp
mov ebp, esp
sub esp, 20
push ebx
.Lt_034D:
mov dword ptr [ebp-4], 1
sub esp, 8
push 1
push offset LISTREG
call fb_ArrayUBound
add esp, 16
mov dword ptr [ebp-8], eax
jmp .Lt_0350
.Lt_0353:
mov eax, dword ptr [ebp-4]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
cmp dword ptr [REGHANDLE+ebx*4], -2
je .Lt_0355
sub esp, 12
mov ebx, dword ptr [ebp-4]
sal ebx, 2
add ebx, dword ptr [LISTREG]
push dword ptr [ebx]
call REG_SPILLING
add esp, 16
.Lt_0355:
.Lt_0354:
.Lt_0351:
inc dword ptr [ebp-4]
.Lt_0350:
mov ebx, dword ptr [ebp-8]
cmp dword ptr [ebp-4], ebx
jle .Lt_0353
.Lt_0352:
.Lt_034E:
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_SAVE, .-REG_SAVE
.balign 16
REG_ALLOWED:
.type REG_ALLOWED, @function
push ebp
mov ebp, esp
sub esp, 20
push ebx
.Lt_0356:
movzx eax, byte ptr [ebp+8]
neg eax
test eax, eax
jne .Lt_0359
mov dword ptr [ebp-4], 1
sub esp, 8
push 1
push offset LISTREG
call fb_ArrayUBound
add esp, 16
add eax, -2
mov dword ptr [ebp-8], eax
jmp .Lt_035B
.Lt_035E:
mov eax, dword ptr [ebp-4]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
cmp dword ptr [REGHANDLE+ebx*4], -2
jne .Lt_0360
mov ebx, dword ptr [ebp-4]
sal ebx, 2
add ebx, dword ptr [LISTREG]
mov eax, dword ptr [ebx]
mov dword ptr [REGHANDLE+eax*4], -4
.Lt_0360:
.Lt_035F:
.Lt_035C:
inc dword ptr [ebp-4]
.Lt_035B:
mov eax, dword ptr [ebp-8]
cmp dword ptr [ebp-4], eax
jle .Lt_035E
.Lt_035D:
jmp .Lt_0358
.Lt_0359:
mov dword ptr [ebp-4], 1
sub esp, 8
push 1
push offset LISTREG
call fb_ArrayUBound
add esp, 16
add eax, -2
mov dword ptr [ebp-8], eax
jmp .Lt_0362
.Lt_0365:
mov eax, dword ptr [ebp-4]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
cmp dword ptr [REGHANDLE+ebx*4], -4
jne .Lt_0367
mov ebx, dword ptr [ebp-4]
sal ebx, 2
add ebx, dword ptr [LISTREG]
mov eax, dword ptr [ebx]
mov dword ptr [REGHANDLE+eax*4], -2
.Lt_0367:
.Lt_0366:
.Lt_0363:
inc dword ptr [ebp-4]
.Lt_0362:
mov eax, dword ptr [ebp-8]
cmp dword ptr [ebp-4], eax
jle .Lt_0365
.Lt_0364:
.Lt_0358:
.Lt_0357:
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_ALLOWED, .-REG_ALLOWED
.balign 16
REG_FINDFREE:
.type REG_FINDFREE, @function
push ebp
mov ebp, esp
sub esp, 20
push ebx
mov dword ptr [ebp-4], 0
.Lt_0368:
mov dword ptr [ebp-8], -1
mov dword ptr [ebp-12], 0
cmp byte ptr [CTX+137], 0
je .Lt_036B
sub esp, 12
push 0
call REG_ALLOWED
add esp, 16
.Lt_036B:
mov dword ptr [ebp-16], 0
.Lt_036F:
mov eax, dword ptr [ebp-16]
movsx ebx, byte ptr [REG_PRIO+eax]
cmp dword ptr [REGHANDLE+ebx*4], -2
jne .Lt_0371
mov ebx, dword ptr [ebp-16]
movsx eax, byte ptr [REG_PRIO+ebx]
mov dword ptr [ebp-8], eax
jmp .Lt_036E
.Lt_0371:
.Lt_036D:
inc dword ptr [ebp-16]
.Lt_036C:
cmp dword ptr [ebp-16], 12
jle .Lt_036F
.Lt_036E:
cmp dword ptr [ebp-8], -1
jne .Lt_0373
cmp dword ptr [ebp+12], -1
jne .Lt_0375
inc dword ptr [Lt_1B01]
cmp dword ptr [Lt_1B01], 6
jne .Lt_0377
mov dword ptr [Lt_1B01], 0
.Lt_0377:
.Lt_0378:
mov eax, dword ptr [Lt_1B01]
cmp dword ptr [REGHANDLE+eax*4], -4
jne .Lt_0379
inc dword ptr [Lt_1B01]
cmp dword ptr [Lt_1B01], 6
jne .Lt_037B
mov dword ptr [Lt_1B01], 0
.Lt_037B:
jmp .Lt_0378
.Lt_0379:
mov eax, dword ptr [Lt_1B01]
movsx ebx, byte ptr [REG_PRIO+eax]
mov dword ptr [ebp-8], ebx
jmp .Lt_0374
.Lt_0375:
mov ebx, dword ptr [ebp+12]
mov dword ptr [ebp-8], ebx
.Lt_0374:
sub esp, 12
push dword ptr [ebp-8]
call REG_SPILLING
add esp, 16
.Lt_0373:
.Lt_0372:
mov ebx, dword ptr [ebp-8]
cmp dword ptr [ebp+12], ebx
je .Lt_037D
mov ebx, dword ptr [ebp-8]
mov eax, dword ptr [ebp+8]
mov dword ptr [REGHANDLE+ebx*4], eax
mov eax, 1
mov cl, byte ptr [ebp-8]
sal eax, cl
or dword ptr [CTX+112], eax
.Lt_037D:
.Lt_037C:
cmp byte ptr [CTX+137], 0
je .Lt_037F
sub esp, 12
push 1
call REG_ALLOWED
add esp, 16
.Lt_037F:
mov eax, dword ptr [ebp-8]
mov dword ptr [ebp-4], eax
.Lt_0369:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_FINDFREE, .-REG_FINDFREE

.section .data
.balign 4
Lt_1B01:
.long -1

.section .text
.balign 16
REG_CALLPTR:
.type REG_CALLPTR, @function
push ebp
mov ebp, esp
sub esp, 100
push ebx
.Lt_0380:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-12], 1
sub esp, 8
push 1
push offset LISTREG
call fb_ArrayUBound
add esp, 16
add eax, -2
mov dword ptr [ebp-16], eax
jmp .Lt_0383
.Lt_0386:
sub esp, 4
sub esp, 8
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
call fb_StrAllocTempDescZ
add esp, 12
push eax
push dword ptr [ebp+8]
push 1
call fb_StrInstr
add esp, 16
mov dword ptr [ebp-8], eax
cmp dword ptr [ebp-8], 0
jne .Lt_0388
jmp .Lt_0384
.Lt_0388:
sub esp, 8
push -1
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGHANDLE+ebx*4]
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 8
push 3
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov ebx, dword ptr [ebp-4]
push dword ptr [REGSTRQ+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea ebx, [ebp-28]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
mov dword ptr [REGHANDLE+ebx*4], -4
sub esp, 8
push 0
mov ebx, dword ptr [ebp-4]
push dword ptr [REGSTRQ+ebx*4]
call fb_StrLen
add esp, 16
sub esp, 8
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [LISTREG]
mov ecx, dword ptr [ebx]
push dword ptr [REGSTRQ+ecx*4]
mov ebx, eax
call fb_StrLen
add esp, 16
cmp ebx, eax
jne .Lt_038F
sub esp, 12
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
call fb_StrAllocTempDescZ
add esp, 16
push eax
push -1
push dword ptr [ebp-8]
push dword ptr [ebp+8]
call fb_StrAssignMid
add esp, 16
jmp .Lt_038E
.Lt_038F:
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 4
push -1
mov eax, dword ptr [ebp-8]
add eax, 2
push eax
push dword ptr [ebp+8]
call fb_StrMid
add esp, 16
push eax
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
push -1
mov eax, dword ptr [ebp-8]
dec eax
push eax
push dword ptr [ebp+8]
call fb_LEFT
add esp, 8
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+8]
call fb_StrAssign
add esp, 32
.Lt_038E:
.Lt_0384:
inc dword ptr [ebp-12]
.Lt_0383:
mov eax, dword ptr [ebp-16]
cmp dword ptr [ebp-12], eax
jle .Lt_0386
.Lt_0385:
push 1
push offset Lt_0000
push -1
push dword ptr [ebp+12]
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_0393
mov dword ptr [ebp-12], 1
sub esp, 8
push 1
push offset LISTREG
call fb_ArrayUBound
add esp, 16
add eax, -2
mov dword ptr [ebp-16], eax
jmp .Lt_0395
.Lt_0398:
sub esp, 4
sub esp, 8
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
call fb_StrAllocTempDescZ
add esp, 12
push eax
push dword ptr [ebp+12]
push 1
call fb_StrInstr
add esp, 16
mov dword ptr [ebp-8], eax
cmp dword ptr [ebp-8], 0
jne .Lt_039A
jmp .Lt_0396
.Lt_039A:
sub esp, 8
push -1
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGHANDLE+ebx*4]
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 8
push 3
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov ebx, dword ptr [ebp-4]
push dword ptr [REGSTRQ+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea ebx, [ebp-28]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
mov dword ptr [REGHANDLE+ebx*4], -4
sub esp, 8
push 0
mov ebx, dword ptr [ebp-4]
push dword ptr [REGSTRQ+ebx*4]
call fb_StrLen
add esp, 16
sub esp, 8
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [LISTREG]
mov ecx, dword ptr [ebx]
push dword ptr [REGSTRQ+ecx*4]
mov ebx, eax
call fb_StrLen
add esp, 16
cmp ebx, eax
jne .Lt_03A0
sub esp, 12
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
call fb_StrAllocTempDescZ
add esp, 16
push eax
push -1
push dword ptr [ebp-8]
push dword ptr [ebp+12]
call fb_StrAssignMid
add esp, 16
jmp .Lt_039F
.Lt_03A0:
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 4
push -1
mov eax, dword ptr [ebp-8]
add eax, 2
push eax
push dword ptr [ebp+12]
call fb_StrMid
add esp, 16
push eax
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
push -1
mov eax, dword ptr [ebp-8]
dec eax
push eax
push dword ptr [ebp+12]
call fb_LEFT
add esp, 8
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+12]
call fb_StrAssign
add esp, 32
.Lt_039F:
.Lt_0396:
inc dword ptr [ebp-12]
.Lt_0395:
mov eax, dword ptr [ebp-16]
cmp dword ptr [ebp-12], eax
jle .Lt_0398
.Lt_0397:
.Lt_0393:
.Lt_0392:
.Lt_0381:
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_CALLPTR, .-REG_CALLPTR
.balign 16
REG_BRANCH:
.type REG_BRANCH, @function
push ebp
mov ebp, esp
sub esp, 100
push ebx
.Lt_03A3:
mov dword ptr [ebp-4], 0
mov eax, dword ptr [CTX+200]
cmp dword ptr [ebp+8], eax
jne .Lt_03A6
sub esp, 8
push 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push 0
sub esp, 4
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-28]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-28]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-28]
push eax
call fb_StrDelete
add esp, 16
mov dword ptr [ebp-32], 1
.Lt_03AC:
mov eax, dword ptr [ebp-32]
cmp dword ptr [REGROOM+eax*8], -3
jne .Lt_03AE
sub esp, 8
push 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [ebp-32]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [REGROOM+eax*8+4]
push dword ptr [ebx+8]
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-80]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-80]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-80]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp-32]
mov dword ptr [REGHANDLE+eax*4], -2
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [REGROOM+eax*8+4]
mov dword ptr [ebx+12], 0
.Lt_03AE:
.Lt_03AD:
mov ebx, dword ptr [ebp-32]
mov dword ptr [REGROOM+ebx*8], -1
mov ebx, dword ptr [ebp-32]
mov dword ptr [REGROOM+ebx*8+4], 0
.Lt_03AA:
inc dword ptr [ebp-32]
.Lt_03A9:
cmp dword ptr [ebp-32], 15
jle .Lt_03AC
.Lt_03AB:
cmp dword ptr [CTX+204], 0
jne .Lt_03B4
mov dword ptr [CTX+200], 0
.Lt_03B4:
.Lt_03B3:
jmp .Lt_03A5
.Lt_03A6:
mov ebx, dword ptr [CTX+204]
cmp dword ptr [ebp+8], ebx
jne .Lt_03B5
cmp dword ptr [CTX+196], 0
jle .Lt_03B7
sub esp, 12
lea ebx, [CTX+140]
push ebx
call FLISTGETHEAD
add esp, 16
mov dword ptr [ebp-32], eax
.Lt_03B8:
cmp dword ptr [ebp-32], 0
je .Lt_03B9
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+12], 0
je .Lt_03BB
sub esp, 8
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+4]
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-4], eax
mov eax, dword ptr [ebp-32]
mov dword ptr [eax+4], -2
sub esp, 8
push 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-32]
push dword ptr [eax+8]
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 13
push offset Lt_03BC
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-92]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-92]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-92]
push eax
call fb_StrDelete
add esp, 16
.Lt_03BB:
.Lt_03BA:
sub esp, 12
push dword ptr [ebp-32]
call FLISTGETNEXT
add esp, 16
mov dword ptr [ebp-32], eax
jmp .Lt_03B8
.Lt_03B9:
.Lt_03B7:
.Lt_03B6:
mov dword ptr [CTX+204], 0
mov dword ptr [CTX+200], 0
sub esp, 8
push 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push 0
sub esp, 4
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-28]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-28]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-28]
push eax
call fb_StrDelete
add esp, 16
.Lt_03B5:
.Lt_03A5:
.Lt_03A4:
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_BRANCH, .-REG_BRANCH
.balign 16
REG_TRANSFER:
.type REG_TRANSFER, @function
push ebp
mov ebp, esp
sub esp, 52
push ebx
.Lt_03E5:
mov dword ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [REGHANDLE+eax*4]
cmp ebx, -2
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [REGHANDLE+eax*4]
cmp ecx, -4
sete cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_03E8
jmp .Lt_03E6
.Lt_03E8:
mov ecx, dword ptr [ebp+12]
cmp dword ptr [ebp+8], ecx
jne .Lt_03EA
mov ecx, dword ptr [ebp+8]
mov dword ptr [REGHANDLE+ecx*4], -2
jmp .Lt_03E6
.Lt_03EA:
.Lt_03E9:
sub esp, 8
push dword ptr [ebp+8]
mov ecx, dword ptr [ebp+8]
push dword ptr [REGHANDLE+ecx*4]
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-4], eax
mov eax, dword ptr [ebp+8]
cmp dword ptr [ebp-4], eax
je .Lt_03EC
sub esp, 8
push 3
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
.Lt_03EC:
.Lt_03EB:
.Lt_03E6:
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_TRANSFER, .-REG_TRANSFER
.balign 16
MEMCLEAR:
.type MEMCLEAR, @function
push ebp
mov ebp, esp
sub esp, 196
push ebx
.Lt_03F1:
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-4], eax
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-40], 0
sub esp, 4
push dword ptr [ebp+12]
push 49
push offset Lt_03F3
call fb_StrAllocTempDescZEx
add esp, 8
push eax
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_03F5
sub esp, 12
push 0
push -1
push dword ptr [ebp+12]
push -1
lea eax, [ebp-32]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_03F4
.Lt_03F5:
sub esp, 8
push -1
push 999997
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-40], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-32]
push eax
call fb_StrAssign
add esp, 32
cmp dword ptr [ebp+16], 1
jne .Lt_03F7
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 5
push offset Lt_012E
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_03F6
.Lt_03F7:
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
.Lt_03F6:
mov eax, dword ptr [ebp-40]
mov dword ptr [REGHANDLE+eax*4], -2
.Lt_03F4:
cmp dword ptr [ebp-4], 1
setne al
shr eax, 1
sbb eax, eax
cmp dword ptr [ebp-4], 2
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
cmp dword ptr [ebp-4], 4
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
cmp dword ptr [ebp-4], 8
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_0401
mov dword ptr [ebp-8], 3
jmp .Lt_0400
.Lt_0401:
mov dword ptr [ebp-8], 0
.Lt_0400:
cmp dword ptr [ebp-4], 7
jbe .Lt_0403
mov ebx, dword ptr [ebp-4]
shr ebx, 3
mov eax, ebx
mov dword ptr [ebp-36], eax
cmp dword ptr [ebp-36], 7
jle .Lt_0405
sub esp, 8
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [ebp-36]
call fb_IntToStr
add esp, 16
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-20]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-20]
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_040C
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 16
push offset Lt_040B
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-124]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-124]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-124]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0411
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 5
push offset Lt_0410
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
push 0
push 8
push offset Lt_0415
push -1
lea eax, [ebp-172]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-172]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-172]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-20]
push eax
push 5
push offset Lt_0417
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-196]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-196]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-196]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp-36]
sal eax, 3
mov ebx, eax
sub dword ptr [ebp-4], ebx
jmp .Lt_0404
.Lt_0405:
mov dword ptr [ebp-44], 0
mov ebx, dword ptr [ebp-36]
dec ebx
mov dword ptr [ebp-48], ebx
jmp .Lt_041B
.Lt_041E:
sub esp, 8
push dword ptr [ebp-8]
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_040C
push -1
sub esp, 4
push -1
lea ebx, [ebp-32]
push ebx
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp-44]
sal ebx, 3
push ebx
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
.Lt_041C:
inc dword ptr [ebp-44]
.Lt_041B:
mov eax, dword ptr [ebp-48]
cmp dword ptr [ebp-44], eax
jle .Lt_041E
.Lt_041D:
mov eax, dword ptr [ebp-36]
sal eax, 3
mov ebx, eax
sub dword ptr [ebp-4], ebx
cmp dword ptr [ebp-4], 0
je .Lt_0425
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov ebx, dword ptr [ebp-36]
sal ebx, 3
push ebx
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 5
push offset Lt_0410
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
.Lt_0425:
.Lt_0424:
.Lt_0404:
.Lt_0403:
.Lt_0402:
cmp dword ptr [ebp-4], 3
jbe .Lt_042B
sub esp, 8
push dword ptr [ebp-8]
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_040C
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 16
push offset Lt_042C
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
add dword ptr [ebp-4], 4294967292
cmp dword ptr [ebp-4], 1
jbe .Lt_0431
sub esp, 8
push dword ptr [ebp-8]
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_040C
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 16
push offset Lt_0432
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
add dword ptr [ebp-4], 4294967294
cmp dword ptr [ebp-4], 0
jbe .Lt_0437
sub esp, 8
push dword ptr [ebp-8]
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_040C
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 16
push offset Lt_0438
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-148]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-148]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-148]
push eax
call fb_StrDelete
add esp, 16
.Lt_0437:
.Lt_0436:
jmp .Lt_0430
.Lt_0431:
cmp dword ptr [ebp-4], 0
jbe .Lt_043C
sub esp, 8
push dword ptr [ebp-8]
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_040C
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 16
push offset Lt_043D
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_043C:
.Lt_0430:
jmp .Lt_042A
.Lt_042B:
cmp dword ptr [ebp-4], 1
jbe .Lt_0441
sub esp, 8
push dword ptr [ebp-8]
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_040C
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 15
push offset Lt_0442
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
add dword ptr [ebp-4], 4294967294
cmp dword ptr [ebp-4], 0
jbe .Lt_0447
sub esp, 8
push dword ptr [ebp-8]
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_040C
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 16
push offset Lt_0448
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_0447:
.Lt_0446:
jmp .Lt_042A
.Lt_0441:
cmp dword ptr [ebp-4], 0
jbe .Lt_044C
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_040C
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 15
push offset Lt_044D
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
.Lt_044C:
.Lt_042A:
sub esp, 12
lea eax, [ebp-32]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-20]
push eax
call fb_StrDelete
add esp, 16
.Lt_03F2:
pop ebx
mov esp, ebp
pop ebp
ret
.size MEMCLEAR, .-MEMCLEAR
.balign 16
MEMCOPY:
.type MEMCOPY, @function
push ebp
mov ebp, esp
sub esp, 340
push ebx
.Lt_0451:
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-4], eax
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-68], 0
cmp dword ptr [ebp+8], 0
jne .Lt_0454
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-40]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-28]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-16]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0452
.Lt_0454:
.Lt_0453:
sub esp, 4
push dword ptr [ebp+12]
push 49
push offset Lt_03F3
call fb_StrAllocTempDescZEx
add esp, 8
push eax
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_0456
sub esp, 12
push 0
push -1
push dword ptr [ebp+12]
push -1
lea eax, [ebp-28]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0455
.Lt_0456:
sub esp, 8
push -1
push 999998
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-60], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-60]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-28]
push eax
call fb_StrAssign
add esp, 32
cmp dword ptr [ebp+20], 1
jne .Lt_0458
sub esp, 8
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-28]
push eax
push 5
push offset Lt_012E
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-116]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-116]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-116]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0457
.Lt_0458:
sub esp, 8
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-28]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-116]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-116]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-116]
push eax
call fb_StrDelete
add esp, 16
.Lt_0457:
.Lt_0455:
sub esp, 4
push dword ptr [ebp+16]
push 49
push offset Lt_03F3
call fb_StrAllocTempDescZEx
add esp, 8
push eax
push 1
call fb_StrInstr
add esp, 16
test eax, eax
je .Lt_0462
sub esp, 12
push 0
push -1
push dword ptr [ebp+16]
push -1
lea eax, [ebp-40]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0461
.Lt_0462:
sub esp, 8
push -1
push 999997
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-64], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-64]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-40]
push eax
call fb_StrAssign
add esp, 32
cmp dword ptr [ebp+24], 1
jne .Lt_0464
sub esp, 8
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+16]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-40]
push eax
push 5
push offset Lt_012E
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-116]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-116]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-116]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0463
.Lt_0464:
sub esp, 8
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+16]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-40]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-116]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-116]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-116]
push eax
call fb_StrDelete
add esp, 16
.Lt_0463:
.Lt_0461:
mov eax, dword ptr [ebp-4]
shr eax, 3
mov ebx, eax
mov dword ptr [ebp-56], ebx
cmp dword ptr [ebp-56], 7
jle .Lt_046E
sub esp, 8
push -1
push 999996
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-68], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-68]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-68]
mov dword ptr [REGHANDLE+eax*4], -2
sub esp, 8
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [ebp-56]
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-52]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-116]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-116]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-116]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-140]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-140]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-140]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-28]
push eax
push 11
push offset Lt_0475
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-176]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-176]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-176]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_047A
push -1
sub esp, 4
push -1
lea eax, [ebp-40]
push eax
push 6
push offset Lt_0479
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0411
push -1
sub esp, 4
push -1
lea eax, [ebp-28]
push eax
push 5
push offset Lt_0410
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-248]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-248]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-248]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0411
push -1
sub esp, 4
push -1
lea eax, [ebp-40]
push eax
push 5
push offset Lt_0410
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-284]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-284]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-284]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-52]
push eax
push 5
push offset Lt_0484
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-308]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-308]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-308]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-16]
push eax
push 5
push offset Lt_0417
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-332]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-332]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-332]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp-56]
sal eax, 3
mov ebx, eax
sub dword ptr [ebp-4], ebx
jmp .Lt_046D
.Lt_046E:
cmp dword ptr [ebp-56], 0
jle .Lt_0489
mov dword ptr [ebp-72], 0
mov ebx, dword ptr [ebp-56]
dec ebx
mov dword ptr [ebp-76], ebx
jmp .Lt_048B
.Lt_048E:
sub esp, 8
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea ebx, [ebp-28]
push ebx
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp-72]
sal ebx, 3
push ebx
call fb_IntToStr
add esp, 16
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-136]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-136]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-136]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_047A
push -1
sub esp, 4
push -1
lea eax, [ebp-40]
push eax
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-72]
sal eax, 3
push eax
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-196]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-196]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-196]
push eax
call fb_StrDelete
add esp, 16
.Lt_048C:
inc dword ptr [ebp-72]
.Lt_048B:
mov eax, dword ptr [ebp-76]
cmp dword ptr [ebp-72], eax
jle .Lt_048E
.Lt_048D:
mov eax, dword ptr [ebp-56]
sal eax, 3
mov ebx, eax
sub dword ptr [ebp-4], ebx
cmp dword ptr [ebp-4], 0
je .Lt_049A
sub esp, 8
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov ebx, dword ptr [ebp-56]
sal ebx, 3
push ebx
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-28]
push eax
push 5
push offset Lt_0410
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-116]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-116]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-116]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp-56]
sal eax, 3
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-40]
push eax
push 5
push offset Lt_0410
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-164]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-164]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-164]
push eax
call fb_StrDelete
add esp, 16
.Lt_049A:
.Lt_0499:
.Lt_0489:
.Lt_046D:
cmp dword ptr [ebp-4], 3
jbe .Lt_04A4
sub esp, 8
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-28]
push eax
push 21
push offset Lt_04A5
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-104]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-104]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-104]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_04A9
push -1
sub esp, 4
push -1
lea eax, [ebp-40]
push eax
push 16
push offset Lt_042C
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-140]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-140]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-140]
push eax
call fb_StrDelete
add esp, 16
add dword ptr [ebp-4], 4294967292
cmp dword ptr [ebp-4], 1
jbe .Lt_04AE
sub esp, 8
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-28]
push eax
push 20
push offset Lt_04AF
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-176]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-176]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-176]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_04B3
push -1
sub esp, 4
push -1
lea eax, [ebp-40]
push eax
push 16
push offset Lt_0432
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
add dword ptr [ebp-4], 4294967294
cmp dword ptr [ebp-4], 0
jbe .Lt_04B8
sub esp, 8
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-28]
push eax
push 20
push offset Lt_04B9
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-248]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-248]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-248]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_04BD
push -1
sub esp, 4
push -1
lea eax, [ebp-40]
push eax
push 16
push offset Lt_0438
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-284]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-284]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-284]
push eax
call fb_StrDelete
add esp, 16
.Lt_04B8:
.Lt_04B7:
jmp .Lt_04AD
.Lt_04AE:
cmp dword ptr [ebp-4], 0
jbe .Lt_04C1
sub esp, 8
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-28]
push eax
push 20
push offset Lt_04C2
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-176]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-176]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-176]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_04BD
push -1
sub esp, 4
push -1
lea eax, [ebp-40]
push eax
push 16
push offset Lt_043D
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
.Lt_04C1:
.Lt_04AD:
jmp .Lt_04A3
.Lt_04A4:
cmp dword ptr [ebp-4], 1
jbe .Lt_04C9
sub esp, 8
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-28]
push eax
push 19
push offset Lt_04CA
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-104]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-104]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-104]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_04B3
push -1
sub esp, 4
push -1
lea eax, [ebp-40]
push eax
push 15
push offset Lt_0442
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-140]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-140]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-140]
push eax
call fb_StrDelete
add esp, 16
add dword ptr [ebp-4], 4294967294
cmp dword ptr [ebp-4], 0
jbe .Lt_04D2
sub esp, 8
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-28]
push eax
push 20
push offset Lt_04D3
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-176]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-176]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-176]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_04BD
push -1
sub esp, 4
push -1
lea eax, [ebp-40]
push eax
push 16
push offset Lt_0448
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
.Lt_04D2:
.Lt_04D1:
jmp .Lt_04A3
.Lt_04C9:
cmp dword ptr [ebp-4], 0
jbe .Lt_04DA
sub esp, 8
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-28]
push eax
push 19
push offset Lt_04DB
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-104]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-104]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-104]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_04BD
push -1
sub esp, 4
push -1
lea eax, [ebp-40]
push eax
push 15
push offset Lt_044D
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-140]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-140]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-140]
push eax
call fb_StrDelete
add esp, 16
.Lt_04DA:
.Lt_04A3:
push -1
push dword ptr [ebp+12]
push -1
lea eax, [ebp-28]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_04E3
mov eax, dword ptr [ebp-60]
mov dword ptr [REGHANDLE+eax*4], -2
.Lt_04E3:
push -1
push dword ptr [ebp+16]
push -1
lea eax, [ebp-40]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_04E5
mov eax, dword ptr [ebp-64]
mov dword ptr [REGHANDLE+eax*4], -2
.Lt_04E5:
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-40]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-28]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-16]
push eax
call fb_StrDelete
add esp, 16
.Lt_0452:
pop ebx
mov esp, ebp
pop ebp
ret
.size MEMCOPY, .-MEMCOPY
.balign 16
_INIT:
.type _INIT, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_04E6:
sub esp, 4
push 16
push 256
lea eax, [CTX+140]
push eax
call FLISTINIT
add esp, 16
call IRHLINIT
or dword ptr [IR+276], 131840
.Lt_04E7:
mov esp, ebp
pop ebp
ret
.size _INIT, .-_INIT
.balign 16
_END:
.type _END, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_04E8:
call IRHLEND
sub esp, 12
lea eax, [CTX+140]
push eax
call FLISTEND
add esp, 16
.Lt_04E9:
mov esp, ebp
pop ebp
ret
.size _END, .-_END
.balign 16
HEMITVARIABLE:
.type HEMITVARIABLE, @function
push ebp
mov ebp, esp
sub esp, 172
push ebx
push esi
push edi
.Lt_04EA:
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-48], 0
sub esp, 12
push dword ptr [ebp+8]
call SYMBISARRAY
add esp, 16
test eax, eax
je .Lt_04ED
.Lt_04ED:
.Lt_04EC:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 1024
test ebx, ebx
je .Lt_04EF
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+12]
and eax, 2
test eax, eax
jne .Lt_04F1
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_04EB
.Lt_04F1:
.Lt_04F0:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
mov dword ptr [ebp-52], ebx
cmp dword ptr [ebp-52], 4
je .Lt_04F5
.Lt_04F6:
cmp dword ptr [ebp-52], 7
jne .Lt_04F4
.Lt_04F5:
sub esp, 12
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 6
push offset Lt_04F7
push -1
lea ebx, [ebp-64]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-64]
push ebx
call ASM_SECTION
add esp, 16
sub esp, 12
lea ebx, [ebp-64]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 9
push offset Lt_04F9
push -1
lea ebx, [ebp-76]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-76]
push ebx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ebx, [ebp-76]
push ebx
call fb_StrDelete
add esp, 16
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+4]
and eax, 32
test eax, eax
je .Lt_04FC
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 8
push offset Lt_04FD
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-124]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-124]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-124]
push eax
call fb_StrDelete
add esp, 16
.Lt_04FC:
.Lt_04FB:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push 0
sub esp, 4
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
cmp ebx, 7
jne .Lt_0503
sub esp, 12
push 0
push 0
sub esp, 8
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+56]
call HESCAPEW
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0505
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [SYMB_DTYPETB+200]
sal eax, 1
push eax
sub esp, 12
push 8
push offset Lt_0504
call fb_StrAllocTempDescZEx
add esp, 20
push eax
call fb_LEFT
add esp, 16
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-24]
push eax
push 9
push offset Lt_0244
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-148]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-148]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-148]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0502
.Lt_0503:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+8]
push dword ptr [eax+56]
call HESCAPE
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0247
push -1
sub esp, 4
push -1
lea eax, [ebp-24]
push eax
push 9
push offset Lt_0244
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-136]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-136]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-136]
push eax
call fb_StrDelete
add esp, 16
.Lt_0502:
.Lt_04F4:
.Lt_04F2:
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_04EB
.Lt_04EF:
.Lt_04EE:
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+56], 0
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
and ecx, 128
test ecx, ecx
sete cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp+8]
mov esi, dword ptr [eax+4]
and esi, 2
test esi, esi
setne dl
mov esi, edx
shr esi, 1
sbb esi, esi
or ecx, esi
and ebx, ecx
je .Lt_050E
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ecx+12]
and ebx, 2
test ebx, ebx
jne .Lt_0510
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+4]
and ecx, 32
test ecx, ecx
jne .Lt_0512
sub esp, 12
lea ecx, [ebp-36]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-24]
push ecx
call fb_StrDelete
add esp, 16
jmp .Lt_04EB
.Lt_0512:
.Lt_0511:
.Lt_0510:
.Lt_050F:
sub esp, 12
push dword ptr [ebp+8]
call IRHLFLUSHSTATICINITIALIZER
add esp, 16
sub esp, 12
lea ecx, [ebp-36]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-24]
push ecx
call fb_StrDelete
add esp, 16
jmp .Lt_04EB
.Lt_050E:
.Lt_050D:
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ecx+4]
and ebx, 16388
test ebx, ebx
je .Lt_0514
sub esp, 12
lea ebx, [ebp-36]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-24]
push ebx
call fb_StrDelete
add esp, 16
jmp .Lt_04EB
.Lt_0514:
.Lt_0513:
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+4]
and ecx, 59
mov dword ptr [ebp-4], ecx
cmp dword ptr [ebp-4], 0
je .Lt_0516
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ecx+4]
and ebx, 16
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
mov ecx, dword ptr [ebp+8]
mov esi, dword ptr [ecx+4]
and esi, 4
test esi, esi
setne dl
mov esi, edx
shr esi, 1
sbb esi, esi
or ebx, esi
je .Lt_0518
mov esi, dword ptr [ebp+8]
mov ebx, dword ptr [esi+4]
and ebx, 16
test ebx, ebx
je .Lt_051A
sub esp, 12
lea ebx, [ebp-36]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-24]
push ebx
call fb_StrDelete
add esp, 16
jmp .Lt_04EB
.Lt_051A:
.Lt_0519:
jmp .Lt_0517
.Lt_0518:
cmp dword ptr [ENV+148], -1
jne .Lt_051C
sub esp, 8
push 2
push dword ptr [ebp+8]
call EDBGEMITGLOBALVAR_ASM64
add esp, 16
.Lt_051C:
.Lt_0517:
jmp .Lt_0515
.Lt_0516:
mov ebx, dword ptr [ebp+8]
mov esi, dword ptr [ebx+4]
and esi, 262144
je .Lt_051E
mov esi, dword ptr [SYMB_DTYPETB+368]
mov dword ptr [ebp-12], esi
jmp .Lt_051D
.Lt_051E:
mov esi, dword ptr [ebp+8]
mov ebx, dword ptr [esi+40]
mov dword ptr [ebp-12], ebx
.Lt_051D:
mov ebx, dword ptr [ebp+8]
mov esi, dword ptr [ebx]
mov dword ptr [ebp-52], esi
cmp dword ptr [ebp-52], 1
je .Lt_0522
.Lt_0523:
cmp dword ptr [ebp-52], 12
jne .Lt_0521
.Lt_0522:
mov dword ptr [ebp-56], 1
mov esi, dword ptr [ebp+8]
mov ebx, dword ptr [esi+60]
dec ebx
mov dword ptr [ebp-60], ebx
jmp .Lt_0524
.Lt_0527:
mov esi, dword ptr [ebp-56]
mov ebx, esi
sar ebx, 31
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ebp-60]
sal eax, 4
mov edi, dword ptr [ecx+64]
add edi, eax
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [ebp-60]
sal ecx, 4
mov edx, dword ptr [eax+64]
add edx, ecx
mov eax, dword ptr [edi+8]
mov ecx, dword ptr [edi+12]
sub eax, dword ptr [edx]
sbb ecx, dword ptr [edx+4]
add eax, 1
adc ecx, 0
push ecx
push eax
push ebx
push esi
push eax
mov eax, [esp+4]
mul dword ptr [esp+12]
xchg eax, [esp+4]
imul eax, [esp+16]
add eax, edx
mov edx, [esp+8]
imul edx, [esp+12]
add edx, eax
mov [esp+8], edx
pop eax
pop esi
pop ebx
add esp, 8
mov eax, esi
mov dword ptr [ebp-56], eax
.Lt_0525:
dec dword ptr [ebp-60]
.Lt_0524:
cmp dword ptr [ebp-60], 0
jge .Lt_0527
.Lt_0526:
mov eax, dword ptr [ebp-56]
imul eax, dword ptr [ebp-12]
mov dword ptr [ebp-8], eax
mov eax, dword ptr [ebp+8]
mov esi, dword ptr [eax+28]
and esi, 511
cmp esi, 20
jne .Lt_0529
mov esi, dword ptr [CTX+96]
add esi, dword ptr [ebp-8]
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
add esi, dword ptr [ebx+104]
dec esi
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+104]
dec ebx
not ebx
and esi, ebx
mov dword ptr [CTX+96], esi
jmp .Lt_0528
.Lt_0529:
mov esi, dword ptr [CTX+96]
add esi, dword ptr [ebp-8]
add esi, dword ptr [ebp-12]
dec esi
mov ebx, dword ptr [ebp-12]
dec ebx
not ebx
and esi, ebx
mov dword ptr [CTX+96], esi
.Lt_0528:
mov esi, dword ptr [CTX+96]
neg esi
mov eax, esi
mov ebx, eax
sar ebx, 31
mov esi, dword ptr [ebp+8]
mov dword ptr [esi+48], eax
mov dword ptr [esi+52], ebx
.Lt_0521:
.Lt_051F:
cmp dword ptr [ENV+148], -1
jne .Lt_052B
sub esp, 8
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 2
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
push ebx
push dword ptr [ebp+8]
call EDBGEMITLOCALVAR_ASM64
add esp, 16
.Lt_052B:
.Lt_0515:
cmp dword ptr [ebp-4], 0
je .Lt_052D
mov dword ptr [CTX+4], 2
sub esp, 12
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 5
push offset Lt_052E
push -1
lea ebx, [ebp-60]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-60]
push ebx
call ASM_SECTION
add esp, 16
sub esp, 12
lea ebx, [ebp-60]
push ebx
call fb_StrDelete
add esp, 16
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-72], 1
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+60]
dec eax
mov dword ptr [ebp-76], eax
jmp .Lt_0530
.Lt_0533:
mov ebx, dword ptr [ebp-72]
mov eax, ebx
sar eax, 31
mov esi, dword ptr [ebp+8]
mov ecx, dword ptr [ebp-76]
sal ecx, 4
mov edx, dword ptr [esi+64]
add edx, ecx
mov ecx, dword ptr [ebp+8]
mov esi, dword ptr [ebp-76]
sal esi, 4
mov edi, dword ptr [ecx+64]
add edi, esi
mov ecx, dword ptr [edx+8]
mov esi, dword ptr [edx+12]
sub ecx, dword ptr [edi]
sbb esi, dword ptr [edi+4]
add ecx, 1
adc esi, 0
push esi
push ecx
push eax
push ebx
mov eax, [esp+0]
mul dword ptr [esp+8]
xchg eax, [esp+0]
imul eax, [esp+12]
add eax, edx
mov edx, [esp+4]
imul edx, [esp+8]
add edx, eax
mov [esp+4], edx
pop ebx
pop eax
add esp, 8
mov ecx, ebx
mov dword ptr [ebp-72], ecx
.Lt_0531:
dec dword ptr [ebp-76]
.Lt_0530:
cmp dword ptr [ebp-76], 0
jge .Lt_0533
.Lt_0532:
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ebp-72]
mov ebx, eax
sar ebx, 31
push dword ptr [ecx+44]
push dword ptr [ecx+40]
push ebx
push eax
mov eax, [esp+0]
mul dword ptr [esp+8]
xchg eax, [esp+0]
imul eax, [esp+12]
add eax, edx
mov edx, [esp+4]
imul edx, [esp+8]
add edx, eax
mov [esp+4], edx
pop eax
pop ebx
add esp, 8
mov ecx, eax
mov dword ptr [ebp-8], ecx
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ecx+28]
and eax, 511
cmp eax, 20
jne .Lt_0535
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+104]
mov dword ptr [ebp-68], eax
jmp .Lt_0534
.Lt_0535:
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+40]
mov dword ptr [ebp-68], ecx
.Lt_0534:
sub esp, 12
push dword ptr [ebp-68]
call PW2
add esp, 16
mov dword ptr [ebp-68], eax
cmp dword ptr [ebp-68], 8
jle .Lt_0537
mov dword ptr [ebp-68], 8
.Lt_0537:
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
and ecx, 8
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 32
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or ecx, ebx
je .Lt_0539
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [ebp-68]
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0102
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [ebp-8]
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0102
push -1
sub esp, 4
push 0
sub esp, 12
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 7
push offset Lt_053A
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0538
.Lt_0539:
cmp dword ptr [CTX+212], 2
jne .Lt_0542
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 8
push offset Lt_0543
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [ebp-68]
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0102
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [ebp-8]
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0102
push -1
sub esp, 4
push 0
sub esp, 12
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 7
push offset Lt_053A
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-168]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-168]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-168]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0541
.Lt_0542:
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [ebp-68]
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0102
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [ebp-8]
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0102
push -1
sub esp, 4
push 0
sub esp, 12
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 8
push offset Lt_054C
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
.Lt_0541:
.Lt_0538:
.Lt_052D:
.Lt_052C:
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
.Lt_04EB:
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret
.size HEMITVARIABLE, .-HEMITVARIABLE
.balign 16
HMAYBEEMITGLOBALVAR:
.type HMAYBEEMITGLOBALVAR, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_0553:
inc dword ptr [CTX]
sub esp, 12
push dword ptr [ebp+8]
call SYMBISDATADESC
add esp, 16
test eax, eax
jne .Lt_0556
sub esp, 12
push dword ptr [ebp+8]
call HEMITVARIABLE
add esp, 16
.Lt_0556:
.Lt_0555:
dec dword ptr [CTX]
.Lt_0554:
mov esp, ebp
pop ebp
ret
.size HMAYBEEMITGLOBALVAR, .-HMAYBEEMITGLOBALVAR
.balign 16
NO_ROUNDSD:
.type NO_ROUNDSD, @function
push ebp
mov ebp, esp
sub esp, 120
.Lt_0557:
sub esp, 8
push 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 20
push offset Lt_0559
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-12]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push 17
push offset Lt_055B
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-24]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push 38
push offset Lt_055D
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-36]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push 20
push offset Lt_055F
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-48]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
sub esp, 8
push 14
push offset Lt_0562
push -1
sub esp, 4
push 0
push dword ptr [ebp+8]
push 5
push offset Lt_0561
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 16
push offset Lt_0566
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 20
push offset Lt_055F
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
.Lt_0558:
mov esp, ebp
pop ebp
ret
.size NO_ROUNDSD, .-NO_ROUNDSD
.balign 16
_EMITBEGIN:
.type _EMITBEGIN, @function
push ebp
mov ebp, esp
sub esp, 40
mov dword ptr [ebp-4], 0
.Lt_0569:
sub esp, 12
lea eax, [ENV+560]
push eax
call HFILEEXISTS
add esp, 16
test eax, eax
je .Lt_056C
sub esp, 12
lea eax, [ENV+560]
push eax
call fb_StrAllocTempDescZ
add esp, 4
push eax
call fb_FileKill
add esp, 16
.Lt_056C:
.Lt_056B:
call fb_FileFree
mov dword ptr [ENV+556], eax
sub esp, 8
push 0
push dword ptr [ENV+556]
push 0
push 3
push 0
lea eax, [ENV+560]
push eax
call fb_StrAllocTempDescZ
add esp, 4
push eax
call fb_FileOpen
add esp, 32
test eax, eax
je .Lt_056E
mov dword ptr [ebp-4], 0
jmp .Lt_056A
.Lt_056E:
.Lt_056D:
mov dword ptr [CTX], 0
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [CTX+8]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [CTX+20]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [CTX+32]
push eax
call fb_StrAssign
add esp, 32
mov dword ptr [CTX+4], 0
mov dword ptr [CTX+128], 0
mov dword ptr [CTX+132], 0
mov byte ptr [CTX+136], 0
sub esp, 12
push 3
call FBGETOPTION
add esp, 16
mov dword ptr [CTX+212], eax
mov dword ptr [CTX+216], 0
mov dword ptr [ebp-32], 0
.Lt_0572:
mov eax, dword ptr [ebp-32]
mov dword ptr [REGHANDLE+eax*4], -2
mov eax, dword ptr [ebp-32]
mov dword ptr [REGROOM+eax*8], -1
mov eax, dword ptr [ebp-32]
mov dword ptr [REGROOM+eax*8+4], 0
.Lt_0570:
inc dword ptr [ebp-32]
.Lt_056F:
cmp dword ptr [ebp-32], 15
jle .Lt_0572
.Lt_0571:
mov dword ptr [REGHANDLE+24], -3
mov dword ptr [REGHANDLE+28], -3
cmp dword ptr [CTX+212], 2
jne .Lt_0574
sub esp, 4
push 8
push 1
push 1
push 0
push -1
push 4
push offset LISTREG
call fb_ArrayRedimEx
add esp, 32
test eax, eax
je .Lt_0575
push 0
push 0
push offset Lt_022A
push 2110
call fb_ErrorThrowAt
add esp, 16
jmp eax
.Lt_0575:
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+4], 5
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+8], 4
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+12], 3
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+16], 2
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+20], 8
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+24], 9
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+28], 10
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+32], 11
jmp .Lt_0573
.Lt_0574:
sub esp, 4
push 6
push 1
push 1
push 0
push -1
push 4
push offset LISTREG
call fb_ArrayRedimEx
add esp, 32
test eax, eax
je .Lt_0576
push 0
push 0
push offset Lt_022A
push 2113
call fb_ErrorThrowAt
add esp, 16
jmp eax
.Lt_0576:
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+4], 2
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+8], 3
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+12], 8
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+16], 9
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+20], 10
mov eax, dword ptr [LISTREG]
mov dword ptr [eax+24], 11
.Lt_0573:
inc dword ptr [CTX]
cmp dword ptr [ENV+148], -1
jne .Lt_0578
sub esp, 12
lea eax, [ENV+280]
push eax
call EDBGEMITHEADER_ASM64
add esp, 16
.Lt_0578:
sub esp, 8
push 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
push 0
push 23
push offset Lt_0579
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-16]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-16]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
push 0
push 6
push offset Lt_057B
push -1
lea eax, [ebp-28]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-28]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-28]
push eax
call fb_StrDelete
add esp, 16
mov dword ptr [ebp-4], -1
.Lt_056A:
mov eax, dword ptr [ebp-4]
mov esp, ebp
pop ebp
ret
.size _EMITBEGIN, .-_EMITBEGIN
.balign 16
HADDGLOBALCTORDTOR:
.type HADDGLOBALCTORDTOR, @function
push ebp
mov ebp, esp
sub esp, 68
push ebx
.Lt_057D:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+12]
and ebx, 16384
test ebx, ebx
je .Lt_0580
jmp .Lt_057E
.Lt_0580:
.Lt_057F:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+12]
and eax, 65536
test eax, eax
je .Lt_0582
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+12]
and ebx, 16777216
test ebx, ebx
je .Lt_0584
inc dword ptr [CTX+128]
cmp dword ptr [CTX+212], 2
jne .Lt_0585
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-4], eax
jmp .Lt_1B10
.Lt_0585:
mov dword ptr [ebp-4], 0
.Lt_1B10:
cmp dword ptr [ebp-4], 0
je .Lt_0588
sub esp, 12
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 12
push offset Lt_0589
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0587
.Lt_0588:
sub esp, 12
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 7
push offset Lt_058B
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
.Lt_0587:
sub esp, 8
push 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
push 0
push 9
push offset Lt_04F9
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-16]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-16]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 7
push offset Lt_0214
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-40]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-40]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-40]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 6
push offset Lt_057B
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
.Lt_0584:
.Lt_0583:
jmp .Lt_0581
.Lt_0582:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+12]
and ebx, 131072
test ebx, ebx
je .Lt_0591
inc dword ptr [CTX+132]
cmp dword ptr [CTX+212], 2
jne .Lt_0592
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-4], eax
jmp .Lt_1B11
.Lt_0592:
mov dword ptr [ebp-4], 0
.Lt_1B11:
cmp dword ptr [ebp-4], 0
je .Lt_0595
sub esp, 12
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 12
push offset Lt_0596
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0594
.Lt_0595:
sub esp, 12
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 7
push offset Lt_0598
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
.Lt_0594:
sub esp, 8
push 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
push 0
push 9
push offset Lt_04F9
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-16]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-16]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 7
push offset Lt_0214
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-40]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-40]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-40]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 6
push offset Lt_057B
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
.Lt_0591:
.Lt_0581:
.Lt_057E:
pop ebx
mov esp, ebp
pop ebp
ret
.size HADDGLOBALCTORDTOR, .-HADDGLOBALCTORDTOR
.balign 16
_EMITEND:
.type _EMITEND, @function
push ebp
mov ebp, esp
sub esp, 248
.Lt_059E:
inc dword ptr [CTX]
mov dword ptr [CTX+4], 2
dec dword ptr [CTX]
sub esp, 8
push offset HMAYBEEMITGLOBALVAR
push 1
call SYMBFOREACHGLOBAL
add esp, 16
inc dword ptr [CTX]
sub esp, 12
push offset HEMITVARIABLE
call IRFOREACHDATASTMT
add esp, 16
sub esp, 8
push offset HADDGLOBALCTORDTOR
push 3
call SYMBFOREACHGLOBAL
add esp, 16
movzx eax, byte ptr [CTX+136]
neg eax
cmp eax, -1
jne .Lt_05A1
sub esp, 12
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 5
push offset Lt_052E
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-12]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [CTX+212], 2
jne .Lt_05A4
sub esp, 8
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 14
push offset Lt_05A5
push -1
lea eax, [ebp-208]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-208]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-208]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push 17
push offset Lt_05A7
push -1
lea eax, [ebp-220]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-220]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-220]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push 14
push offset Lt_05A9
push -1
lea eax, [ebp-232]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-232]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-232]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
push 0
push 17
push offset Lt_05AB
push -1
lea eax, [ebp-244]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-244]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-244]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_05A3
.Lt_05A4:
sub esp, 8
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 18
push offset Lt_05AD
push -1
lea eax, [ebp-208]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-208]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-208]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push 18
push offset Lt_05AF
push -1
lea eax, [ebp-220]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-220]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-220]
push eax
call fb_StrDelete
add esp, 16
.Lt_05A3:
cmp dword ptr [CTX+212], 2
jne .Lt_05B1
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-16], eax
jmp .Lt_1B14
.Lt_05B1:
mov dword ptr [ebp-16], 0
.Lt_1B14:
cmp dword ptr [ebp-16], 0
je .Lt_05B4
sub esp, 12
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 12
push offset Lt_0589
push -1
lea eax, [ebp-208]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-208]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-208]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_05B3
.Lt_05B4:
sub esp, 12
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 7
push offset Lt_058B
push -1
lea eax, [ebp-208]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-208]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-208]
push eax
call fb_StrDelete
add esp, 16
.Lt_05B3:
sub esp, 8
push 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
push 0
push 9
push offset Lt_04F9
push -1
lea eax, [ebp-28]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-28]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-28]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push 18
push offset Lt_05B8
push -1
lea eax, [ebp-40]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-40]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-40]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 6
push offset Lt_057B
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 13
push offset Lt_05BB
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 9
push offset Lt_05BD
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 9
push offset Lt_05BF
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 9
push offset Lt_05C1
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 12
push offset Lt_05C3
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push 6
push offset Lt_05C5
push -1
lea eax, [ebp-124]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-124]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-124]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push 32
push offset Lt_05C7
push -1
lea eax, [ebp-136]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-136]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-136]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push 21
push offset Lt_05C9
push -1
lea eax, [ebp-148]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-148]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-148]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push 8
push offset Lt_05CB
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
push 0
push 8
push offset Lt_05CD
push -1
lea eax, [ebp-172]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-172]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-172]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 8
push offset Lt_05CF
push -1
lea eax, [ebp-184]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-184]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-184]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push 4
push offset Lt_05D1
push -1
lea eax, [ebp-196]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-196]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-196]
push eax
call fb_StrDelete
add esp, 16
.Lt_05A1:
.Lt_05A0:
cmp dword ptr [ENV+148], -1
jne .Lt_05D4
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrInit
add esp, 32
lea eax, [ebp-12]
push eax
push 0
push 100
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-24]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push 6
push offset Lt_057B
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-36]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-60]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
call DBG_EMITSTAB
call DBG_EMITSTR
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_05D4:
.Lt_05D3:
push -1
lea eax, [CTX+8]
push eax
push 0
push dword ptr [ENV+556]
call fb_FilePutStr
add esp, 16
test eax, eax
je .Lt_05DA
.Lt_05DA:
.Lt_05D9:
push -1
lea eax, [CTX+20]
push eax
push 0
push dword ptr [ENV+556]
call fb_FilePutStr
add esp, 16
test eax, eax
je .Lt_05DC
.Lt_05DC:
.Lt_05DB:
push -1
lea eax, [CTX+32]
push eax
push 0
push dword ptr [ENV+556]
call fb_FilePutStr
add esp, 16
test eax, eax
je .Lt_05DE
.Lt_05DE:
.Lt_05DD:
sub esp, 12
push dword ptr [ENV+556]
call fb_FileClose
add esp, 16
test eax, eax
je .Lt_05E0
.Lt_05E0:
.Lt_05DF:
mov dword ptr [ENV+556], 0
.Lt_059F:
mov esp, ebp
pop ebp
ret
.size _EMITEND, .-_EMITEND
.balign 16
_GETOPTIONVALUE:
.type _GETOPTIONVALUE, @function
push ebp
mov ebp, esp
sub esp, 8
mov dword ptr [ebp-4], 0
.Lt_05E1:
cmp dword ptr [ebp+8], 1
jne .Lt_05E4
.Lt_05E5:
mov dword ptr [ebp-4], 0
jmp .Lt_05E2
jmp .Lt_05E3
.Lt_05E4:
sub esp, 12
push 0
push 1
push 0
push offset Lt_05E7
push 21
call ERRREPORTEX
add esp, 32
.Lt_05E6:
.Lt_05E3:
.Lt_05E2:
mov eax, dword ptr [ebp-4]
mov esp, ebp
pop ebp
ret
.size _GETOPTIONVALUE, .-_GETOPTIONVALUE
.balign 16
_SUPPORTSOP:
.type _SUPPORTSOP, @function
push ebp
mov ebp, esp
sub esp, 8
mov dword ptr [ebp-4], 0
.Lt_05E8:
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-8], eax
jmp .Lt_05EB
.Lt_05ED:
mov dword ptr [ebp-4], 0
jmp .Lt_05E9
jmp .Lt_05EA
.Lt_05EE:
mov dword ptr [ebp-4], -1
jmp .Lt_05E9
jmp .Lt_05EA
.Lt_05EF:
mov dword ptr [ebp-4], -1
jmp .Lt_05EA
.Lt_05EB:
mov eax, dword ptr [ebp-8]
add eax, 4294967244
cmp eax, 15
ja .Lt_05EF
mov eax, dword ptr [ebp-8]
jmp dword ptr [.LT_05F0+eax*4-208]
.LT_05F0:
.int .Lt_05EE
.int .Lt_05EF
.int .Lt_05EE
.int .Lt_05EF
.int .Lt_05EE
.int .Lt_05ED
.int .Lt_05EF
.int .Lt_05EF
.int .Lt_05EF
.int .Lt_05EF
.int .Lt_05EF
.int .Lt_05EF
.int .Lt_05EF
.int .Lt_05EE
.int .Lt_05ED
.int .Lt_05ED
.Lt_05EA:
.Lt_05E9:
mov eax, dword ptr [ebp-4]
mov esp, ebp
pop ebp
ret
.size _SUPPORTSOP, .-_SUPPORTSOP
.balign 16
_PROCBEGIN:
.type _PROCBEGIN, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_05F1:
mov eax, dword ptr [LEX+839936]
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+112]
mov ebx, dword ptr [eax+16564]
mov dword ptr [ecx+16], ebx
.Lt_05F2:
pop ebx
mov esp, ebp
pop ebp
ret
.size _PROCBEGIN, .-_PROCBEGIN
.balign 16
_PROCEND:
.type _PROCEND, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_05F3:
mov eax, dword ptr [LEX+839936]
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+112]
mov ebx, dword ptr [eax+16564]
mov dword ptr [ecx+20], ebx
.Lt_05F4:
pop ebx
mov esp, ebp
pop ebp
ret
.size _PROCEND, .-_PROCEND
.balign 16
PARAM_ANALYZE:
.type PARAM_ANALYZE, @function
push ebp
mov ebp, esp
sub esp, 36
push ebx
mov dword ptr [ebp-4], 0
.Lt_05F5:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-20], 0
cmp dword ptr [CTX+212], 2
jne .Lt_05F8
cmp dword ptr [ebp+8], 20
je .Lt_05FA
mov eax, dword ptr [ebp+8]
and eax, 480
je .Lt_05FB
mov dword ptr [ebp-24], 24
jmp .Lt_1B16
.Lt_05FB:
mov eax, dword ptr [ebp+8]
and eax, 31
mov dword ptr [ebp-24], eax
.Lt_1B16:
mov eax, dword ptr [ebp-24]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax], 1
jne .Lt_05FE
mov eax, dword ptr [ebp+24]
cmp dword ptr [eax], 8
jge .Lt_0600
mov eax, dword ptr [ebp+24]
inc dword ptr [eax]
mov dword ptr [ebp-4], 1
jmp .Lt_05F6
jmp .Lt_05FF
.Lt_0600:
mov eax, dword ptr [ebp+16]
inc dword ptr [eax]
mov dword ptr [ebp-4], 10
jmp .Lt_05F6
.Lt_05FF:
jmp .Lt_05FD
.Lt_05FE:
mov eax, dword ptr [ebp+20]
cmp dword ptr [eax], 6
jge .Lt_0602
mov eax, dword ptr [ebp+20]
inc dword ptr [eax]
mov dword ptr [ebp-4], 0
jmp .Lt_05F6
jmp .Lt_0601
.Lt_0602:
mov eax, dword ptr [ebp+16]
inc dword ptr [eax]
mov dword ptr [ebp-4], 10
jmp .Lt_05F6
.Lt_0601:
.Lt_05FD:
jmp .Lt_05F9
.Lt_05FA:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+40]
mov dword ptr [ebp-12], ebx
mov ebx, dword ptr [SYMB_DTYPETB+368]
sal ebx, 1
cmp dword ptr [ebp-12], ebx
jg .Lt_0604
sub esp, 12
push dword ptr [ebp+12]
call HGETMAGICSTRUCTNUMBER
add esp, 16
mov dword ptr [ebp-24], eax
jmp .Lt_0606
.Lt_0608:
mov eax, dword ptr [ebp+20]
cmp dword ptr [eax], 6
jge .Lt_060A
mov eax, dword ptr [ebp+20]
inc dword ptr [eax]
mov dword ptr [ebp-4], 0
jmp .Lt_05F6
.Lt_060A:
.Lt_0609:
jmp .Lt_0605
.Lt_060B:
mov eax, dword ptr [ebp+24]
cmp dword ptr [eax], 8
jge .Lt_060D
mov eax, dword ptr [ebp+24]
inc dword ptr [eax]
mov dword ptr [ebp-4], 1
jmp .Lt_05F6
.Lt_060D:
.Lt_060C:
jmp .Lt_0605
.Lt_060E:
mov eax, dword ptr [ebp+20]
cmp dword ptr [eax], 5
jge .Lt_0610
mov eax, dword ptr [ebp+20]
add dword ptr [eax], 2
mov dword ptr [ebp-4], 2
jmp .Lt_05F6
.Lt_0610:
.Lt_060F:
jmp .Lt_0605
.Lt_0611:
mov eax, dword ptr [ebp+20]
mov ebx, dword ptr [eax]
cmp ebx, 6
setl bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+24]
mov ecx, dword ptr [eax]
cmp ecx, 8
setl cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
je .Lt_0613
mov ecx, dword ptr [ebp+20]
inc dword ptr [ecx]
mov ecx, dword ptr [ebp+24]
inc dword ptr [ecx]
mov dword ptr [ebp-4], 3
jmp .Lt_05F6
.Lt_0613:
.Lt_0612:
jmp .Lt_0605
.Lt_0614:
mov ecx, dword ptr [ebp+20]
mov ebx, dword ptr [ecx]
cmp ebx, 6
setl bl
shr ebx, 1
sbb ebx, ebx
mov ecx, dword ptr [ebp+24]
mov eax, dword ptr [ecx]
cmp eax, 8
setl al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_0616
mov eax, dword ptr [ebp+24]
inc dword ptr [eax]
mov eax, dword ptr [ebp+20]
inc dword ptr [eax]
mov dword ptr [ebp-4], 4
jmp .Lt_05F6
.Lt_0616:
.Lt_0615:
jmp .Lt_0605
.Lt_0617:
mov eax, dword ptr [ebp+24]
cmp dword ptr [eax], 7
jge .Lt_0619
mov eax, dword ptr [ebp+24]
add dword ptr [eax], 2
mov dword ptr [ebp-4], 5
jmp .Lt_05F6
.Lt_0619:
.Lt_0618:
jmp .Lt_0605
.Lt_0606:
mov eax, dword ptr [ebp-24]
add eax, 4294967295
cmp eax, 9
ja .Lt_0605
mov eax, dword ptr [ebp-24]
jmp dword ptr [.LT_061A+eax*4-4]
.LT_061A:
.int .Lt_0608
.int .Lt_060B
.int .Lt_0605
.int .Lt_0605
.int .Lt_060E
.int .Lt_0614
.int .Lt_0605
.int .Lt_0605
.int .Lt_0611
.int .Lt_0617
.Lt_0605:
.Lt_0604:
.Lt_0603:
mov dword ptr [ebp-4], 10
jmp .Lt_05F6
.Lt_05F9:
jmp .Lt_05F7
.Lt_05F8:
mov eax, dword ptr [ebp+16]
inc dword ptr [eax]
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [ebp+20]
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+16]
mov ebx, dword ptr [ebp+24]
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
cmp dword ptr [ebp+8], 20
je .Lt_061C
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 4
jle .Lt_061E
mov dword ptr [ebp-4], 10
jmp .Lt_05F6
.Lt_061E:
mov eax, dword ptr [ebp+8]
and eax, 480
je .Lt_061F
mov dword ptr [ebp-24], 24
jmp .Lt_1B17
.Lt_061F:
mov eax, dword ptr [ebp+8]
and eax, 31
mov dword ptr [ebp-24], eax
.Lt_1B17:
mov eax, dword ptr [ebp-24]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax], 1
jne .Lt_0622
mov dword ptr [ebp-4], 1
jmp .Lt_05F6
jmp .Lt_0621
.Lt_0622:
mov dword ptr [ebp-4], 0
jmp .Lt_05F6
.Lt_0621:
jmp .Lt_061B
.Lt_061C:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+40]
mov dword ptr [ebp-12], ebx
mov ebx, dword ptr [ebp-12]
cmp ebx, dword ptr [SYMB_DTYPETB+368]
setg bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp-12]
cmp eax, 3
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
mov eax, dword ptr [ebp-12]
cmp eax, 5
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
mov eax, dword ptr [ebp-12]
cmp eax, 6
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
mov eax, dword ptr [ebp-12]
cmp eax, 7
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
je .Lt_0624
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 4
jle .Lt_0626
mov dword ptr [ebp-4], 13
jmp .Lt_05F6
jmp .Lt_0625
.Lt_0626:
mov dword ptr [ebp-4], 12
jmp .Lt_05F6
.Lt_0625:
.Lt_0624:
.Lt_0623:
sub esp, 12
push dword ptr [ebp+12]
call SYMBUDTGETFIRSTFIELD
add esp, 16
mov dword ptr [ebp-8], eax
.Lt_0627:
cmp dword ptr [ebp-8], 0
je .Lt_0628
mov eax, dword ptr [ebp-8]
mov ebx, dword ptr [eax+28]
and ebx, 480
je .Lt_0629
mov dword ptr [ebp-24], 24
jmp .Lt_1B18
.Lt_0629:
mov ebx, dword ptr [ebp-8]
mov eax, dword ptr [ebx+28]
and eax, 31
mov dword ptr [ebp-24], eax
.Lt_1B18:
mov eax, dword ptr [ebp-24]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax], 1
jne .Lt_062C
inc dword ptr [ebp-20]
jmp .Lt_062B
.Lt_062C:
inc dword ptr [ebp-16]
.Lt_062B:
sub esp, 12
push dword ptr [ebp-8]
call SYMBUDTGETNEXTFIELD
add esp, 16
mov dword ptr [ebp-8], eax
jmp .Lt_0627
.Lt_0628:
mov eax, dword ptr [ebp-20]
cmp eax, 1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-16]
test ebx, ebx
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_062E
mov ebx, dword ptr [ebp+16]
cmp dword ptr [ebx], 4
jle .Lt_0630
mov dword ptr [ebp-4], 11
jmp .Lt_05F6
jmp .Lt_062F
.Lt_0630:
mov dword ptr [ebp-4], 1
jmp .Lt_05F6
.Lt_062F:
jmp .Lt_062D
.Lt_062E:
mov ebx, dword ptr [ebp+16]
cmp dword ptr [ebx], 4
jle .Lt_0632
mov dword ptr [ebp-4], 11
jmp .Lt_05F6
jmp .Lt_0631
.Lt_0632:
mov dword ptr [ebp-4], 0
.Lt_0631:
.Lt_062D:
.Lt_061B:
.Lt_05F7:
.Lt_05F6:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret
.size PARAM_ANALYZE, .-PARAM_ANALYZE
.balign 16
REG_FILLM:
.type REG_FILLM, @function
push ebp
mov ebp, esp
sub esp, 228
push ebx
.Lt_0633:
mov eax, dword ptr [ebp+16]
sub eax, dword ptr [ebp+24]
mov ebx, eax
mov dword ptr [ebp-4], ebx
jmp .Lt_0636
.Lt_0638:
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
sub esp, 8
push 0
mov ebx, dword ptr [CTX+84]
sub ebx, dword ptr [ebp+20]
sal ebx, 2
mov eax, dword ptr [ebp+12]
add ebx, dword ptr [eax]
mov eax, dword ptr [ebx]
push dword ptr [REGSTRB+eax*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp+24]
add eax, dword ptr [ebp+8]
push eax
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0635
.Lt_063D:
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRW+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0635
.Lt_0642:
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRW+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_0648
push -1
sub esp, 4
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push 5
push offset Lt_0647
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea ebx, [ebp-64]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRB+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
add ebx, 2
push ebx
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-136]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-136]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-136]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0635
.Lt_0650:
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0635
.Lt_0655:
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_065A
push -1
sub esp, 4
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push 5
push offset Lt_0647
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea ebx, [ebp-64]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRB+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
add ebx, 4
push ebx
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-136]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-136]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-136]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0635
.Lt_0662:
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_065A
push -1
sub esp, 4
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push 5
push offset Lt_0647
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea ebx, [ebp-64]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRW+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
add ebx, 4
push ebx
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-136]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-136]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-136]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0635
.Lt_066E:
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_065A
push -1
sub esp, 4
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push 5
push offset Lt_0647
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea ebx, [ebp-64]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRW+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
add ebx, 4
push ebx
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-136]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-136]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-136]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_0648
push -1
sub esp, 4
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push 5
push offset Lt_0647
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea ebx, [ebp-148]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-172]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-172]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-172]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRB+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
add ebx, 6
push ebx
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
lea eax, [ebp-208]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-220]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-220]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-220]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0635
.Lt_0681:
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0635
.Lt_0636:
mov eax, dword ptr [ebp-4]
add eax, 4294967295
cmp eax, 7
ja .Lt_0635
mov eax, dword ptr [ebp-4]
jmp dword ptr [.LT_0686+eax*4-4]
.LT_0686:
.int .Lt_0638
.int .Lt_063D
.int .Lt_0642
.int .Lt_0650
.int .Lt_0655
.int .Lt_0662
.int .Lt_066E
.int .Lt_0681
.Lt_0635:
.Lt_0634:
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_FILLM, .-REG_FILLM
.balign 16
REG_FILLR:
.type REG_FILLR, @function
push ebp
mov ebp, esp
sub esp, 308
push ebx
.Lt_0687:
mov dword ptr [ebp-4], 0
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp+16]
sal eax, 2
mov ebx, dword ptr [ebp+20]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push -1
lea ebx, [ebp-16]
push ebx
call fb_StrInit
add esp, 32
cmp dword ptr [ebp+8], 8
jle .Lt_068A
add dword ptr [ebp+8], -8
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx]
movzx ebx, byte ptr [eax]
cmp ebx, 45
jne .Lt_068C
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
sub esp, 12
sub esp, 12
sub esp, 4
push 5
push offset Lt_03BD
call fb_StrAllocTempDescZEx
add esp, 12
push eax
push dword ptr [ebp+12]
push 1
call fb_StrInstr
add esp, 24
dec eax
push eax
push dword ptr [ebp+12]
call fb_LEFT
add esp, 20
push eax
call fb_VALINT
add esp, 4
add eax, 8
push eax
call fb_IntToStr
add esp, 8
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+12]
call fb_StrAssign
add esp, 32
jmp .Lt_068B
.Lt_068C:
sub esp, 8
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push 10
push offset Lt_068E
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-40]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-40]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-40]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 11
push offset Lt_0691
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 6
push offset Lt_0693
push -1
push dword ptr [ebp+12]
call fb_StrAssign
add esp, 32
.Lt_068B:
.Lt_068A:
.Lt_0689:
mov eax, dword ptr [ebp+8]
cmp eax, 1
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
cmp ebx, 2
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
mov ebx, dword ptr [ebp+8]
cmp ebx, 4
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
mov ebx, dword ptr [ebp+8]
cmp ebx, 8
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_0695
call REG_TEMPO
mov dword ptr [ebp-4], eax
.Lt_0695:
.Lt_0694:
sub esp, 8
push dword ptr [ebp+24]
mov eax, dword ptr [ebp+16]
sal eax, 2
mov ebx, dword ptr [ebp+20]
add eax, dword ptr [ebx]
push dword ptr [eax]
call REG_TRANSFER
add esp, 16
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-20], eax
jmp .Lt_0697
.Lt_0699:
sub esp, 8
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 12
push offset Lt_069B
push -1
sub esp, 4
push -1
lea eax, [ebp-16]
push eax
push 7
push offset Lt_069A
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-68]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-68]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0696
.Lt_06A0:
sub esp, 8
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 12
push offset Lt_06A1
push -1
sub esp, 4
push -1
lea eax, [ebp-16]
push eax
push 7
push offset Lt_069A
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-68]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-68]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0696
.Lt_06A6:
sub esp, 8
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push 5
push offset Lt_012E
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-68]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-68]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push -1
sub esp, 4
push 13
push offset Lt_06AB
push -1
sub esp, 4
push -1
lea eax, [ebp-16]
push eax
push 7
push offset Lt_069A
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-128]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-128]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-128]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push 23
push offset Lt_06B1
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-164]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-164]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-164]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push 12
push offset Lt_06B5
push -1
lea eax, [ebp-176]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-176]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-176]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-16]
push eax
push 4
push offset Lt_06B7
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0696
.Lt_06BC:
sub esp, 8
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 13
push offset Lt_06BD
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp+16]
sal eax, 2
mov ebx, dword ptr [ebp+20]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea ebx, [ebp-32]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-68]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-68]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0696
.Lt_06C2:
sub esp, 8
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push 5
push offset Lt_012E
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-68]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-68]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push -1
sub esp, 4
push 14
push offset Lt_06C7
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp+16]
sal eax, 2
mov ebx, dword ptr [ebp+20]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea ebx, [ebp-80]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-128]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-128]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-128]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push 23
push offset Lt_06CD
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-164]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-164]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-164]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push 12
push offset Lt_06D1
push -1
lea eax, [ebp-176]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-176]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-176]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-16]
push eax
push 4
push offset Lt_06B7
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0696
.Lt_06D6:
sub esp, 8
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push 5
push offset Lt_012E
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-68]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-68]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push -1
sub esp, 4
push 14
push offset Lt_06C7
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp+16]
sal eax, 2
mov ebx, dword ptr [ebp+20]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea ebx, [ebp-80]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-128]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-128]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-128]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push 23
push offset Lt_06E0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-164]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-164]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-164]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push 12
push offset Lt_06D1
push -1
lea eax, [ebp-176]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-176]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-176]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-16]
push eax
push 4
push offset Lt_06B7
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0696
.Lt_06E8:
sub esp, 8
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push 5
push offset Lt_012E
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-68]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-68]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push -1
sub esp, 4
push 14
push offset Lt_06C7
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp+16]
sal eax, 2
mov ebx, dword ptr [ebp+20]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea ebx, [ebp-80]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-128]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-128]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-128]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push 23
push offset Lt_06E0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-164]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-164]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-164]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push 12
push offset Lt_06D1
push -1
lea eax, [ebp-176]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-176]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-176]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-16]
push eax
push 4
push offset Lt_06B7
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push 23
push offset Lt_06F9
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-248]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-248]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-248]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push 12
push offset Lt_06FD
push -1
lea eax, [ebp-260]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-260]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-260]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-16]
push eax
push 4
push offset Lt_06B7
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
lea eax, [ebp-284]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-296]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-296]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-296]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0696
.Lt_0702:
sub esp, 8
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 13
push offset Lt_03BC
push -1
sub esp, 4
push -1
lea eax, [ebp-16]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-68]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-68]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0696
.Lt_0697:
mov eax, dword ptr [ebp-20]
add eax, 4294967295
cmp eax, 7
ja .Lt_0696
mov eax, dword ptr [ebp-20]
jmp dword ptr [.LT_0707+eax*4-4]
.LT_0707:
.int .Lt_0699
.int .Lt_06A0
.int .Lt_06A6
.int .Lt_06BC
.int .Lt_06C2
.int .Lt_06D6
.int .Lt_06E8
.int .Lt_0702
.Lt_0696:
sub esp, 12
lea eax, [ebp-16]
push eax
call fb_StrDelete
add esp, 16
.Lt_0688:
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_FILLR, .-REG_FILLR
.balign 16
REG_FILLX:
.type REG_FILLX, @function
push ebp
mov ebp, esp
sub esp, 52
push ebx
.Lt_0708:
cmp dword ptr [ebp+8], 8
jle .Lt_070B
add dword ptr [ebp+8], -8
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
movzx eax, byte ptr [ebx]
cmp eax, 45
jne .Lt_070D
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
sub esp, 12
sub esp, 12
sub esp, 4
push 5
push offset Lt_03BD
call fb_StrAllocTempDescZEx
add esp, 12
push eax
push dword ptr [ebp+12]
push 1
call fb_StrInstr
add esp, 24
dec eax
push eax
push dword ptr [ebp+12]
call fb_LEFT
add esp, 20
push eax
call fb_VALINT
add esp, 4
add eax, 8
push eax
call fb_IntToStr
add esp, 8
push eax
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+12]
call fb_StrAssign
add esp, 32
jmp .Lt_070C
.Lt_070D:
sub esp, 8
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push 10
push offset Lt_068E
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-24]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push 11
push offset Lt_0691
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-36]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 6
push offset Lt_0693
push -1
push dword ptr [ebp+12]
call fb_StrAssign
add esp, 32
.Lt_070C:
.Lt_070B:
.Lt_070A:
cmp dword ptr [ebp+8], 4
jne .Lt_0713
sub esp, 8
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp+16]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push 9
push offset Lt_0714
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-48]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0712
.Lt_0713:
sub esp, 8
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp+16]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push 9
push offset Lt_0719
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-48]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
.Lt_0712:
.Lt_0709:
pop ebx
mov esp, ebp
pop ebp
ret
.size REG_FILLX, .-REG_FILLX
.balign 16
_PROCALLOCARG:
.type _PROCALLOCARG, @function
push ebp
mov ebp, esp
sub esp, 156
push ebx
push esi
push edi
.Lt_071E:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
sub esp, 4
lea eax, [ebp-20]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+12]
call SYMBGETREALTYPE
add esp, 16
cmp dword ptr [CTX+212], 2
jne .Lt_0721
mov eax, dword ptr [ebp-12]
and eax, 480
test eax, eax
sete al
shr eax, 1
sbb eax, eax
sub esp, 8
push dword ptr [ebp-20]
push dword ptr [ebp-12]
mov ebx, eax
call SYMBGETVALISTTYPE
add esp, 16
cmp eax, 3
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_0723
mov eax, dword ptr [ebp+12]
xor dword ptr [eax+4], 32768
mov eax, dword ptr [ebp+12]
or dword ptr [eax+4], 65536
.Lt_0723:
.Lt_0722:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 32768
test ebx, ebx
je .Lt_0725
mov ebx, dword ptr [ebp-12]
and ebx, 511
cmp ebx, 20
jne .Lt_0727
sub esp, 12
lea ebx, [CTX+88]
push ebx
lea ebx, [CTX+84]
push ebx
mov dword ptr [ebp-48], 0
lea ebx, [ebp-48]
push ebx
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+32]
push 20
call PARAM_ANALYZE
add esp, 32
mov dword ptr [ebp-16], eax
cmp dword ptr [ebp-16], 10
jne .Lt_072A
mov ebx, dword ptr [CTX+92]
mov eax, ebx
sar eax, 31
mov ecx, dword ptr [ebp+12]
mov dword ptr [ecx+48], ebx
mov dword ptr [ecx+52], eax
mov eax, dword ptr [CTX+92]
mov ebx, eax
sar ebx, 31
mov ecx, dword ptr [ebp+12]
add eax, dword ptr [ecx+40]
adc ebx, dword ptr [ecx+44]
mov ecx, eax
mov dword ptr [CTX+92], ecx
jmp .Lt_0729
.Lt_072A:
mov ecx, dword ptr [ebp+12]
mov eax, dword ptr [ecx+40]
mov dword ptr [ebp-4], eax
mov eax, dword ptr [CTX+96]
add eax, dword ptr [ebp-4]
add eax, dword ptr [ebp-4]
dec eax
mov ecx, dword ptr [ebp-4]
dec ecx
not ecx
and eax, ecx
mov dword ptr [CTX+96], eax
mov eax, dword ptr [CTX+96]
neg eax
mov ebx, eax
mov ecx, ebx
sar ecx, 31
mov eax, dword ptr [ebp+12]
mov dword ptr [eax+48], ebx
mov dword ptr [eax+52], ecx
mov ebx, dword ptr [ebp-16]
mov dword ptr [ebp-52], ebx
jmp .Lt_072C
.Lt_072E:
sub esp, 12
push 0
push 0
push dword ptr [ebp-4]
push offset LISTREG
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+48]
push ecx
call REG_FILLM
add esp, 32
jmp .Lt_072B
.Lt_072F:
sub esp, 12
push 0
push 1
push 8
push offset LISTREG
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+48]
push ebx
call REG_FILLM
add esp, 32
sub esp, 12
push 8
push 0
push dword ptr [ebp-4]
push offset LISTREG
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+48]
push ecx
call REG_FILLM
add esp, 32
jmp .Lt_072B
.Lt_0730:
sub esp, 12
push 0
push 0
push 8
push offset LISTREG
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+48]
push ebx
call REG_FILLM
add esp, 32
cmp dword ptr [ebp-4], 13
jge .Lt_0732
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov ebx, dword ptr [CTX+88]
dec ebx
push ebx
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+48]
mov ebx, dword ptr [eax+52]
add ecx, 8
adc ebx, 0
push ebx
push ecx
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0733
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0731
.Lt_0732:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [CTX+88]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+48]
mov ecx, dword ptr [eax+52]
add ebx, 8
adc ecx, 0
push ecx
push ebx
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
.Lt_0731:
jmp .Lt_072B
.Lt_073E:
cmp dword ptr [ebp-4], 4
jne .Lt_0740
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [CTX+88]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0733
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_073F
.Lt_0740:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [CTX+88]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
.Lt_073F:
sub esp, 12
push 8
push 0
push dword ptr [ebp-4]
push offset LISTREG
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+48]
push ebx
call REG_FILLM
add esp, 32
jmp .Lt_072B
.Lt_0749:
cmp dword ptr [ebp-4], 4
jne .Lt_074B
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov ebx, dword ptr [CTX+88]
dec ebx
push ebx
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0733
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_074A
.Lt_074B:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [CTX+88]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
.Lt_074A:
jmp .Lt_072B
.Lt_0754:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [CTX+88]
add eax, -2
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp-4], 13
jge .Lt_075A
sub esp, 8
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [CTX+88]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+48]
mov ebx, dword ptr [eax+52]
add ecx, 8
adc ebx, 0
push ebx
push ecx
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0733
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-148]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-148]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-148]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0759
.Lt_075A:
sub esp, 8
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [CTX+88]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+48]
mov ecx, dword ptr [eax+52]
add ebx, 8
adc ecx, 0
push ecx
push ebx
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-148]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-148]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-148]
push eax
call fb_StrDelete
add esp, 16
.Lt_0759:
jmp .Lt_072B
.Lt_072C:
cmp dword ptr [ebp-52], 5
ja .Lt_072B
mov eax, dword ptr [ebp-52]
jmp dword ptr [.LT_0763+eax*4]
.LT_0763:
.int .Lt_072E
.int .Lt_0749
.int .Lt_072F
.int .Lt_0730
.int .Lt_073E
.int .Lt_0754
.Lt_072B:
.Lt_0729:
jmp .Lt_0726
.Lt_0727:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+40]
mov dword ptr [ebp-4], ebx
mov ebx, dword ptr [ebp-12]
and ebx, 480
je .Lt_0764
mov dword ptr [ebp-48], 24
jmp .Lt_1B28
.Lt_0764:
mov ebx, dword ptr [ebp-12]
and ebx, 31
mov dword ptr [ebp-48], ebx
.Lt_1B28:
mov ebx, dword ptr [ebp-48]
imul ebx, 28
cmp dword ptr [SYMB_DTYPETB+ebx], 1
jne .Lt_0767
inc dword ptr [CTX+88]
cmp dword ptr [CTX+88], 8
jg .Lt_0769
mov ebx, dword ptr [CTX+96]
add ebx, dword ptr [ebp-4]
add ebx, dword ptr [ebp-4]
dec ebx
mov eax, dword ptr [ebp-4]
dec eax
not eax
and ebx, eax
mov dword ptr [CTX+96], ebx
mov ebx, dword ptr [CTX+96]
neg ebx
mov ecx, ebx
mov eax, ecx
sar eax, 31
mov ebx, dword ptr [ebp+12]
mov dword ptr [ebx+48], ecx
mov dword ptr [ebx+52], eax
cmp dword ptr [ebp-4], 4
jne .Lt_076B
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov ecx, dword ptr [CTX+88]
dec ecx
push ecx
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0733
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_076A
.Lt_076B:
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [CTX+88]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
.Lt_076A:
jmp .Lt_0768
.Lt_0769:
mov ecx, dword ptr [CTX+92]
mov eax, ecx
sar eax, 31
mov ebx, dword ptr [ebp+12]
mov dword ptr [ebx+48], ecx
mov dword ptr [ebx+52], eax
add dword ptr [CTX+92], 8
.Lt_0768:
jmp .Lt_0766
.Lt_0767:
inc dword ptr [CTX+84]
cmp dword ptr [CTX+84], 6
jg .Lt_0775
mov ecx, dword ptr [CTX+96]
add ecx, dword ptr [ebp-4]
add ecx, dword ptr [ebp-4]
dec ecx
mov eax, dword ptr [ebp-4]
dec eax
not eax
and ecx, eax
mov dword ptr [CTX+96], ecx
mov ecx, dword ptr [CTX+96]
neg ecx
mov ebx, ecx
mov eax, ebx
sar eax, 31
mov ecx, dword ptr [ebp+12]
mov dword ptr [ecx+48], ebx
mov dword ptr [ecx+52], eax
mov ebx, dword ptr [ebp-4]
mov dword ptr [ebp-52], ebx
jmp .Lt_0777
.Lt_0779:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push 0
mov ebx, dword ptr [CTX+84]
sal ebx, 2
add ebx, dword ptr [LISTREG]
mov eax, dword ptr [ebx]
push dword ptr [REGSTRB+eax*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call fb_LongintToStr
add esp, 16
push eax
push 14
push offset Lt_077A
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0776
.Lt_077F:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRW+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+52]
push dword ptr [ebx+48]
call fb_LongintToStr
add esp, 16
push eax
push 14
push offset Lt_0780
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0776
.Lt_0785:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+52]
push dword ptr [ebx+48]
call fb_LongintToStr
add esp, 16
push eax
push 15
push offset Lt_0786
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0776
.Lt_078B:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+52]
push dword ptr [ebx+48]
call fb_LongintToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0776
.Lt_0777:
mov eax, dword ptr [ebp-52]
add eax, 4294967295
cmp eax, 7
ja .Lt_0776
mov eax, dword ptr [ebp-52]
jmp dword ptr [.LT_0790+eax*4-4]
.LT_0790:
.int .Lt_0779
.int .Lt_077F
.int .Lt_0776
.int .Lt_0785
.int .Lt_0776
.int .Lt_0776
.int .Lt_0776
.int .Lt_078B
.Lt_0776:
jmp .Lt_0774
.Lt_0775:
mov ebx, dword ptr [CTX+92]
mov eax, ebx
sar eax, 31
mov ecx, dword ptr [ebp+12]
mov dword ptr [ecx+48], ebx
mov dword ptr [ecx+52], eax
add dword ptr [CTX+92], 8
.Lt_0774:
.Lt_0766:
.Lt_0726:
jmp .Lt_0724
.Lt_0725:
inc dword ptr [CTX+84]
mov dword ptr [ebp-4], 8
cmp dword ptr [CTX+84], 6
jg .Lt_0792
mov ebx, dword ptr [CTX+96]
add ebx, dword ptr [ebp-4]
add ebx, dword ptr [ebp-4]
dec ebx
mov eax, dword ptr [ebp-4]
dec eax
not eax
and ebx, eax
mov dword ptr [CTX+96], ebx
mov ebx, dword ptr [CTX+96]
neg ebx
mov ecx, ebx
mov eax, ecx
sar eax, 31
mov ebx, dword ptr [ebp+12]
mov dword ptr [ebx+48], ecx
mov dword ptr [ebx+52], eax
sub esp, 8
push 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
push 0
push -1
sub esp, 8
push 0
mov ecx, dword ptr [CTX+84]
sal ecx, 2
add ecx, dword ptr [LISTREG]
mov eax, dword ptr [ecx]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call fb_LongintToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-92]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-92]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-92]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0791
.Lt_0792:
mov ecx, dword ptr [CTX+92]
mov eax, ecx
sar eax, 31
mov ebx, dword ptr [ebp+12]
mov dword ptr [ebx+48], ecx
mov dword ptr [ebx+52], eax
add dword ptr [CTX+92], 8
.Lt_0791:
.Lt_0724:
jmp .Lt_0720
.Lt_0721:
add dword ptr [CTX+92], 8
mov ecx, dword ptr [ebp+12]
mov eax, dword ptr [ecx+4]
and eax, 32768
test eax, eax
je .Lt_0798
mov eax, dword ptr [ebp-12]
and eax, 511
cmp eax, 20
jne .Lt_079A
sub esp, 12
mov dword ptr [ebp-52], 0
lea eax, [ebp-52]
push eax
mov dword ptr [ebp-48], 0
lea eax, [ebp-48]
push eax
lea eax, [CTX+84]
push eax
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
push 20
call PARAM_ANALYZE
add esp, 32
mov dword ptr [ebp-16], eax
mov eax, dword ptr [ebp-16]
mov dword ptr [ebp-56], eax
jmp .Lt_079E
.Lt_07A0:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [CTX+96]
mov ecx, ebx
sar ecx, 31
add ebx, dword ptr [eax+40]
adc ecx, dword ptr [eax+44]
mov eax, dword ptr [ebp+12]
add ebx, dword ptr [eax+40]
adc ecx, dword ptr [eax+44]
add ebx, 4294967295
adc ecx, 4294967295
mov eax, dword ptr [ebp+12]
mov edi, dword ptr [eax+40]
mov esi, dword ptr [eax+44]
add edi, 4294967295
adc esi, 4294967295
not edi
not esi
and ebx, edi
and ecx, esi
mov edi, ebx
mov dword ptr [CTX+96], edi
mov edi, dword ptr [CTX+96]
neg edi
mov ecx, edi
mov ebx, ecx
sar ebx, 31
mov edi, dword ptr [ebp+12]
mov dword ptr [edi+48], ecx
mov dword ptr [edi+52], ebx
cmp dword ptr [ebp-16], 12
jne .Lt_07A2
sub esp, 12
push 0
push 0
mov ecx, dword ptr [CTX+84]
sal ecx, 2
add ecx, dword ptr [LISTREG]
mov ebx, dword ptr [ecx]
push dword ptr [REGSTRQ+ebx*4]
push -1
lea ebx, [ebp-32]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 1
push 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
sub esp, 8
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+52]
push dword ptr [ebx+48]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-80]
push eax
call fb_StrAssign
add esp, 28
lea eax, [ebp-80]
push eax
lea eax, [ebp-32]
push eax
push dword ptr [ebp+12]
call SYMBGETREALSIZE
add esp, 4
mov ebx, eax
push ebx
call MEMCOPY
add esp, 32
sub esp, 12
lea ebx, [ebp-80]
push ebx
call fb_StrDelete
add esp, 16
jmp .Lt_07A1
.Lt_07A2:
sub esp, 12
push 1
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
sub esp, 8
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+52]
push dword ptr [ebx+48]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-104]
push eax
call fb_StrAssign
add esp, 28
lea eax, [ebp-104]
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
sub esp, 4
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 8
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-80]
push eax
call fb_StrAssign
add esp, 24
lea eax, [ebp-80]
push eax
push dword ptr [ebp+12]
call SYMBGETREALSIZE
add esp, 4
mov ebx, eax
push ebx
call MEMCOPY
add esp, 32
sub esp, 12
lea ebx, [ebp-104]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-80]
push ebx
call fb_StrDelete
add esp, 16
.Lt_07A1:
jmp .Lt_079D
.Lt_07A9:
mov eax, dword ptr [CTX+92]
mov ebx, eax
sar ebx, 31
mov edx, dword ptr [ebp+12]
mov dword ptr [edx+48], eax
mov dword ptr [edx+52], ebx
movzx eax, byte ptr [CTX+208]
neg eax
test eax, eax
jne .Lt_07AB
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+40]
mov dword ptr [ebp-4], ebx
cmp dword ptr [ebp-16], 1
jne .Lt_07AD
cmp dword ptr [ebp-4], 4
jne .Lt_07AF
sub esp, 8
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov ebx, dword ptr [CTX+84]
dec ebx
push ebx
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 16
push eax
push 6
push offset Lt_0733
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-104]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-104]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-104]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_07AE
.Lt_07AF:
sub esp, 8
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [CTX+84]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 16
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-104]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-104]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-104]
push eax
call fb_StrDelete
add esp, 16
.Lt_07AE:
jmp .Lt_07AC
.Lt_07AD:
mov eax, dword ptr [ebp-4]
mov dword ptr [ebp-60], eax
jmp .Lt_07B9
.Lt_07BB:
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRB+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 16
push eax
push 14
push offset Lt_077A
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_07B8
.Lt_07C0:
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRW+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 16
push eax
push 14
push offset Lt_0780
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_07B8
.Lt_07C5:
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0786
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_07B8
.Lt_07CA:
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_07B8
.Lt_07B9:
mov eax, dword ptr [ebp-60]
add eax, 4294967295
cmp eax, 7
ja .Lt_07B8
mov eax, dword ptr [ebp-60]
jmp dword ptr [.LT_07CF+eax*4-4]
.LT_07CF:
.int .Lt_07BB
.int .Lt_07C0
.int .Lt_07B8
.int .Lt_07C5
.int .Lt_07B8
.int .Lt_07B8
.int .Lt_07B8
.int .Lt_07CA
.Lt_07B8:
.Lt_07AC:
.Lt_07AB:
.Lt_07AA:
jmp .Lt_079D
.Lt_07D0:
mov ebx, dword ptr [CTX+92]
mov eax, ebx
sar eax, 31
mov edx, dword ptr [ebp+12]
mov dword ptr [edx+48], ebx
mov dword ptr [edx+52], eax
jmp .Lt_079D
.Lt_079E:
cmp dword ptr [ebp-56], 13
ja .Lt_07D0
mov ebx, dword ptr [ebp-56]
jmp dword ptr [.LT_07D1+ebx*4]
.LT_07D1:
.int .Lt_07A9
.int .Lt_07A9
.int .Lt_07D0
.int .Lt_07D0
.int .Lt_07D0
.int .Lt_07D0
.int .Lt_07D0
.int .Lt_07D0
.int .Lt_07D0
.int .Lt_07D0
.int .Lt_07D0
.int .Lt_07D0
.int .Lt_07A0
.int .Lt_07A0
.Lt_079D:
jmp .Lt_0799
.Lt_079A:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+40]
mov dword ptr [ebp-4], eax
mov ebx, dword ptr [CTX+92]
mov eax, ebx
sar eax, 31
mov edx, dword ptr [ebp+12]
mov dword ptr [edx+48], ebx
mov dword ptr [edx+52], eax
inc dword ptr [CTX+84]
mov ebx, dword ptr [CTX+84]
cmp ebx, 4
setle bl
shr ebx, 1
sbb ebx, ebx
movzx eax, byte ptr [CTX+208]
neg eax
test eax, eax
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_07D3
mov eax, dword ptr [ebp-12]
and eax, 480
je .Lt_07D4
mov dword ptr [ebp-48], 24
jmp .Lt_1B29
.Lt_07D4:
mov eax, dword ptr [ebp-12]
and eax, 31
mov dword ptr [ebp-48], eax
.Lt_1B29:
mov eax, dword ptr [ebp-48]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax], 1
jne .Lt_07D7
cmp dword ptr [ebp-4], 4
jne .Lt_07D9
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [CTX+84]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 16
push eax
push 6
push offset Lt_0733
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_07D8
.Lt_07D9:
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [CTX+84]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_0734
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 16
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
.Lt_07D8:
jmp .Lt_07D6
.Lt_07D7:
mov eax, dword ptr [ebp-4]
mov dword ptr [ebp-52], eax
jmp .Lt_07E3
.Lt_07E5:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRB+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 16
push eax
push 14
push offset Lt_077A
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_07E2
.Lt_07EA:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRW+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 16
push eax
push 14
push offset Lt_0780
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_07E2
.Lt_07EF:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0786
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_07E2
.Lt_07F4:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_07E2
.Lt_07E3:
mov eax, dword ptr [ebp-52]
add eax, 4294967295
cmp eax, 7
ja .Lt_07E2
mov eax, dword ptr [ebp-52]
jmp dword ptr [.LT_07F9+eax*4-4]
.LT_07F9:
.int .Lt_07E5
.int .Lt_07EA
.int .Lt_07E2
.int .Lt_07EF
.int .Lt_07E2
.int .Lt_07E2
.int .Lt_07E2
.int .Lt_07F4
.Lt_07E2:
.Lt_07D6:
.Lt_07D3:
.Lt_07D2:
.Lt_0799:
jmp .Lt_0797
.Lt_0798:
inc dword ptr [CTX+84]
mov ebx, dword ptr [CTX+92]
mov eax, ebx
sar eax, 31
mov edx, dword ptr [ebp+12]
mov dword ptr [edx+48], ebx
mov dword ptr [edx+52], eax
mov ebx, dword ptr [CTX+84]
cmp ebx, 4
setle bl
shr ebx, 1
sbb ebx, ebx
movzx eax, byte ptr [CTX+208]
neg eax
test eax, eax
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_07FB
sub esp, 8
push 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [CTX+84]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push -1
sub esp, 4
push 8
push offset Lt_0344
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [CTX+92]
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-92]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-92]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-92]
push eax
call fb_StrDelete
add esp, 16
.Lt_07FB:
.Lt_07FA:
.Lt_0797:
.Lt_0720:
cmp dword ptr [ENV+148], -1
jne .Lt_0801
sub esp, 12
push dword ptr [ebp+12]
call EDBGEMITPROCARG_ASM64
add esp, 16
.Lt_0801:
sub esp, 12
lea eax, [ebp-44]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-32]
push eax
call fb_StrDelete
add esp, 16
.Lt_071F:
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret
.size _PROCALLOCARG, .-_PROCALLOCARG
.balign 16
_PROCALLOCLOCAL:
.type _PROCALLOCLOCAL, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_0802:
sub esp, 12
push dword ptr [ebp+12]
call HEMITVARIABLE
add esp, 16
.Lt_0803:
mov esp, ebp
pop ebp
ret
.size _PROCALLOCLOCAL, .-_PROCALLOCLOCAL
.balign 16
_PROCALLOCSTATICVARS:
.type _PROCALLOCSTATICVARS, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_0804:
mov dword ptr [CTX+4], 2
.Lt_0806:
cmp dword ptr [ebp+8], 0
je .Lt_0807
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-4], ebx
cmp dword ptr [ebp-4], 15
jne .Lt_080A
.Lt_080B:
sub esp, 12
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+64]
call _PROCALLOCSTATICVARS
add esp, 16
jmp .Lt_0808
.Lt_080A:
cmp dword ptr [ebp-4], 1
jne .Lt_080C
.Lt_080D:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
je .Lt_080F
sub esp, 12
push dword ptr [ebp+8]
call HMAYBEEMITGLOBALVAR
add esp, 16
.Lt_080F:
.Lt_080E:
.Lt_080C:
.Lt_0808:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+172]
mov dword ptr [ebp+8], ebx
jmp .Lt_0806
.Lt_0807:
.Lt_0805:
pop ebx
mov esp, ebp
pop ebp
ret
.size _PROCALLOCSTATICVARS, .-_PROCALLOCSTATICVARS
.balign 16
_SETVREGDATATYPE:
.type _SETVREGDATATYPE, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_0810:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp+12]
cmp ebx, dword ptr [eax+4]
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+8]
cmp ecx, dword ptr [ebp+16]
setne al
shr eax, 1
sbb eax, eax
or ebx, eax
je .Lt_0813
sub esp, 8
push dword ptr [ebp+16]
push dword ptr [ebp+12]
call IRHLALLOCVREG
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 8
push dword ptr [ebp+8]
push dword ptr [ebp-4]
call _EMITCONVERT
add esp, 16
push edi
push esi
mov edi, dword ptr [ebp+8]
mov esi, dword ptr [ebp-4]
mov ecx, 17
rep movsd
pop esi
pop edi
.Lt_0813:
.Lt_0812:
.Lt_0811:
pop ebx
mov esp, ebp
pop ebp
ret
.size _SETVREGDATATYPE, .-_SETVREGDATATYPE
.balign 16
_EMITLABEL:
.type _EMITLABEL, @function
push ebp
mov ebp, esp
sub esp, 36
push ebx
.Lt_0814:
mov eax, dword ptr [CTX+200]
cmp eax, dword ptr [ebp+8]
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [CTX+204]
cmp eax, dword ptr [ebp+8]
sete cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_0817
sub esp, 12
push dword ptr [ebp+8]
call REG_BRANCH
add esp, 16
jmp .Lt_0816
.Lt_0817:
sub esp, 8
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push 0
sub esp, 4
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-24]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
.Lt_0816:
mov eax, dword ptr [ebp+8]
cmp byte ptr [eax+68], 0
je .Lt_081B
sub esp, 8
push 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 31
push offset Lt_081C
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-12]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_081B:
.Lt_081A:
.Lt_0815:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITLABEL, .-_EMITLABEL
.balign 16
PREPARE_IDX:
.type PREPARE_IDX, @function
push ebp
mov ebp, esp
sub esp, 260
push ebx
.Lt_081E:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+32], 0
jne .Lt_0821
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+48]
cmp dword ptr [ebx+32], 0
jne .Lt_0823
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+48]
cmp dword ptr [eax+12], -1
je .Lt_0825
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+12]
call fb_StrAssign
add esp, 32
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_081F
jmp .Lt_0824
.Lt_0825:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+48]
mov eax, dword ptr [ebx+48]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+16]
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+12]
call fb_StrAssign
add esp, 32
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_081F
.Lt_0824:
jmp .Lt_0822
.Lt_0823:
sub esp, 12
push 0
push 0
sub esp, 12
call REG_TEMPO
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+48]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+4]
and ebx, 2
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+48]
mov eax, dword ptr [ecx+32]
mov ecx, dword ptr [eax+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_0832
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ecx+48]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_012E
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+16]
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push 6
push offset Lt_083A
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 5
push offset Lt_0389
push -1
sub esp, 4
push -1
sub esp, 8
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 16
push eax
push 2
push offset Lt_0124
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 32
push eax
push -1
push dword ptr [ebp+16]
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+16]
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+12]
call fb_StrAssign
add esp, 32
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_081F
jmp .Lt_0831
.Lt_0832:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+16]
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+12]
call fb_StrAssign
add esp, 32
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_081F
.Lt_0831:
.Lt_0822:
jmp .Lt_0820
.Lt_0821:
sub esp, 12
push 0
push 0
sub esp, 12
call REG_TEMPO
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_084E
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_083A
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_012E
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+16]
call fb_StrAssign
add esp, 32
jmp .Lt_084D
.Lt_084E:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+8]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_012E
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+16]
call fb_StrAssign
add esp, 32
.Lt_084D:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+48]
cmp dword ptr [ebx], 4
jne .Lt_085A
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+48]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_085B
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 2
push offset Lt_0118
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+12]
call fb_StrAssign
add esp, 32
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_081F
jmp .Lt_0859
.Lt_085A:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+48]
cmp dword ptr [ebx], 1
jne .Lt_0860
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+48]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+48]
mov ebx, dword ptr [ecx+32]
mov ecx, dword ptr [ebx+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
je .Lt_0862
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ecx+48]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+48]
push dword ptr [ecx+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 5
push offset Lt_0410
push -1
sub esp, 4
push -1
sub esp, 8
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 16
push eax
push 2
push offset Lt_0124
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 32
push eax
push -1
push dword ptr [ebp+16]
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+16]
call fb_StrAssign
add esp, 32
jmp .Lt_0861
.Lt_0862:
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push 6
push offset Lt_03BD
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+48]
push dword ptr [ecx+40]
push dword ptr [ecx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0102
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 5
push offset Lt_0410
push -1
sub esp, 4
push -1
sub esp, 8
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 16
push eax
push 2
push offset Lt_0124
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 32
push eax
push -1
push dword ptr [ebp+16]
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+16]
call fb_StrAssign
add esp, 32
.Lt_0861:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 2
push offset Lt_0118
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+12]
call fb_StrAssign
add esp, 32
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_081F
.Lt_0860:
.Lt_0859:
.Lt_0820:
sub esp, 8
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-24]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push 49
push offset Lt_0877
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-36]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-48]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
push 1
push offset Lt_0000
push -1
push dword ptr [ebp+12]
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_087B
sub esp, 12
push 0
push 4
push offset Lt_087C
push -1
push dword ptr [ebp+12]
call fb_StrAssign
add esp, 32
.Lt_087B:
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_081F:
pop ebx
mov esp, ebp
pop ebp
ret
.size PREPARE_IDX, .-PREPARE_IDX
.balign 16
HGETBOPCODE:
.type HGETBOPCODE, @function
push ebp
mov ebp, esp
sub esp, 8
mov dword ptr [ebp-4], 0
.Lt_087D:
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-8], eax
jmp .Lt_0880
.Lt_0882:
mov eax, offset Lt_01B8
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_0883:
mov eax, offset Lt_01B9
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_0884:
mov eax, offset Lt_0885
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_0886:
mov eax, offset Lt_0887
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_0888:
mov eax, offset Lt_0889
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_088A:
mov eax, offset Lt_088B
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_088C:
mov eax, offset Lt_088D
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_088E:
mov eax, offset Lt_088F
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_0890:
mov eax, offset Lt_0891
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_0892:
mov eax, offset Lt_0893
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_0894:
mov eax, offset Lt_0895
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_0896:
mov eax, offset Lt_0897
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_0898:
mov eax, offset Lt_0899
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_089A:
mov eax, offset Lt_089B
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_089C:
mov eax, offset Lt_089D
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_089E:
mov eax, offset Lt_089F
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_08A0:
mov eax, offset Lt_08A1
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_08A2:
mov eax, offset Lt_08A3
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_08A4:
mov eax, offset Lt_08A5
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_08A6:
mov eax, offset Lt_00F5
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_08A7:
mov eax, offset Lt_08A8
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_08A9:
mov eax, offset Lt_08AA
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_08AB:
mov eax, offset Lt_08AC
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_08AD:
mov eax, offset Lt_08AE
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_08AF:
mov eax, offset Lt_08B0
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_08B1:
mov eax, offset Lt_08B2
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_08B3:
mov eax, offset Lt_08B4
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_08B5:
mov eax, offset Lt_08B6
mov dword ptr [ebp-4], eax
jmp .Lt_087F
.Lt_0880:
mov eax, dword ptr [ebp-8]
add eax, 4294967268
cmp eax, 71
ja .Lt_08B5
mov eax, dword ptr [ebp-8]
jmp dword ptr [.LT_08B7+eax*4-112]
.LT_08B7:
.int .Lt_0882
.int .Lt_0883
.int .Lt_0884
.int .Lt_0886
.int .Lt_0888
.int .Lt_088A
.int .Lt_0890
.int .Lt_0892
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_0894
.int .Lt_08A2
.int .Lt_08A4
.int .Lt_088C
.int .Lt_088E
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_0896
.int .Lt_089A
.int .Lt_089C
.int .Lt_0898
.int .Lt_089E
.int .Lt_08A0
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08B5
.int .Lt_08A7
.int .Lt_08A9
.int .Lt_08AB
.int .Lt_08AD
.int .Lt_08AF
.int .Lt_08B1
.int .Lt_08A6
.int .Lt_08B3
.Lt_087F:
.Lt_087E:
mov eax, dword ptr [ebp-4]
mov esp, ebp
pop ebp
ret
.size HGETBOPCODE, .-HGETBOPCODE
.balign 16
RESTORE_VRREG:
.type RESTORE_VRREG, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_08B8:
mov eax, dword ptr [ebp+12]
mov dword ptr [CTX+216], eax
mov dword ptr [CTX+220], 1
mov eax, dword ptr [ebp+12]
cmp dword ptr [REGHANDLE+eax*4], -2
jne .Lt_08BB
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [eax+12]
mov dword ptr [REGHANDLE+ebx*4], ecx
.Lt_08BB:
.Lt_08BA:
.Lt_08B9:
pop ebx
mov esp, ebp
pop ebp
ret
.size RESTORE_VRREG, .-RESTORE_VRREG
.balign 16
BOP_FLOAT:
.type BOP_FLOAT, @function
push ebp
mov ebp, esp
sub esp, 228
push ebx
.Lt_08BC:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-132], 0
cmp dword ptr [ebp+20], 0
je .Lt_08BF
sub esp, 8
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-124], eax
.Lt_08BF:
.Lt_08BE:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 511
mov dword ptr [ebp-128], ebx
cmp dword ptr [ebp-128], 16
jne .Lt_08C1
sub esp, 12
push 0
push 6
push offset Lt_0739
push -1
lea ebx, [ebp-36]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 7
push offset Lt_08C2
push -1
lea ebx, [ebp-48]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 9
push offset Lt_08C3
push -1
lea ebx, [ebp-60]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 4
push offset Lt_009F
push -1
lea ebx, [ebp-72]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 7
push offset Lt_08C4
push -1
lea ebx, [ebp-84]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 7
push offset Lt_08C5
push -1
lea ebx, [ebp-96]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 7
push offset Lt_08C6
push -1
lea ebx, [ebp-108]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 7
push offset Lt_08C7
push -1
lea ebx, [ebp-120]
push ebx
call fb_StrAssign
add esp, 32
jmp .Lt_08C0
.Lt_08C1:
sub esp, 12
push 0
push 6
push offset Lt_0733
push -1
lea ebx, [ebp-36]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 7
push offset Lt_08C8
push -1
lea ebx, [ebp-48]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 9
push offset Lt_08C9
push -1
lea ebx, [ebp-60]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 4
push offset Lt_00B2
push -1
lea ebx, [ebp-72]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 7
push offset Lt_08CA
push -1
lea ebx, [ebp-84]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 7
push offset Lt_08CB
push -1
lea ebx, [ebp-96]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 7
push offset Lt_08CC
push -1
lea ebx, [ebp-108]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 7
push offset Lt_08CD
push -1
lea ebx, [ebp-120]
push ebx
call fb_StrAssign
add esp, 32
.Lt_08C0:
mov ebx, dword ptr [ebp+12]
cmp dword ptr [ebx], 4
jne .Lt_08CF
sub esp, 8
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+24]
push -1
sub esp, 4
push 7
push offset Lt_08D0
push -1
lea ebx, [ebp-36]
push ebx
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea ebx, [ebp-144]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-168]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-168]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-168]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_08CE
.Lt_08CF:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 0
jne .Lt_08D4
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+24]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-72]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push 7
push offset Lt_08D0
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_08CE
.Lt_08D4:
sub esp, 8
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+24]
push -1
sub esp, 4
push 7
push offset Lt_08D0
push -1
lea eax, [ebp-48]
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-168]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-168]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-168]
push eax
call fb_StrDelete
add esp, 16
.Lt_08CE:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 4
jne .Lt_08E0
sub esp, 8
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+28]
push -1
sub esp, 4
push 7
push offset Lt_08E1
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-168]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-168]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-168]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_08DF
.Lt_08E0:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 0
jne .Lt_08E5
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+28]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-72]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push 7
push offset Lt_08E1
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_08DF
.Lt_08E5:
sub esp, 8
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+28]
push -1
sub esp, 4
push 7
push offset Lt_08E1
push -1
lea eax, [ebp-48]
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-168]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-168]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-168]
push eax
call fb_StrDelete
add esp, 16
.Lt_08DF:
cmp dword ptr [ebp+8], 45
je .Lt_08F2
.Lt_08F3:
cmp dword ptr [ebp+8], 48
je .Lt_08F2
.Lt_08F4:
cmp dword ptr [ebp+8], 47
je .Lt_08F2
.Lt_08F5:
cmp dword ptr [ebp+8], 50
je .Lt_08F2
.Lt_08F6:
cmp dword ptr [ebp+8], 46
je .Lt_08F2
.Lt_08F7:
cmp dword ptr [ebp+8], 49
jne .Lt_08F1
.Lt_08F2:
cmp dword ptr [ebp+44], 0
jne .Lt_08F9
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_08FA
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
.Lt_08F9:
.Lt_08F8:
sub esp, 8
push 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_08FE
push -1
lea eax, [ebp-60]
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-156]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-156]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-156]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+8], 45
jne .Lt_0902
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 4
push offset Lt_0903
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0901
.Lt_0902:
cmp dword ptr [ebp+8], 48
jne .Lt_0906
cmp dword ptr [ebp+44], 0
jne .Lt_0908
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 4
push offset Lt_0903
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0907
.Lt_0908:
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+44]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 4
push offset Lt_0903
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
.Lt_0907:
.Lt_0906:
.Lt_0901:
cmp dword ptr [ebp+8], 45
jne .Lt_090E
.Lt_090F:
mov eax, offset Lt_0910
mov dword ptr [ebp-132], eax
jmp .Lt_090D
.Lt_090E:
cmp dword ptr [ebp+8], 48
jne .Lt_0911
.Lt_0912:
mov eax, offset Lt_0913
mov dword ptr [ebp-132], eax
jmp .Lt_090D
.Lt_0911:
cmp dword ptr [ebp+8], 47
jne .Lt_0914
.Lt_0915:
mov eax, offset Lt_0916
mov dword ptr [ebp-132], eax
jmp .Lt_090D
.Lt_0914:
cmp dword ptr [ebp+8], 50
jne .Lt_0917
.Lt_0918:
mov eax, offset Lt_0919
mov dword ptr [ebp-132], eax
jmp .Lt_090D
.Lt_0917:
cmp dword ptr [ebp+8], 46
jne .Lt_091A
.Lt_091B:
mov eax, offset Lt_091C
mov dword ptr [ebp-132], eax
jmp .Lt_090D
.Lt_091A:
cmp dword ptr [ebp+8], 49
jne .Lt_091D
.Lt_091E:
mov eax, offset Lt_091F
mov dword ptr [ebp-132], eax
.Lt_091D:
.Lt_090D:
cmp dword ptr [ebp+44], 0
jne .Lt_0921
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 0
push dword ptr [ebp-132]
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0920
.Lt_0921:
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+44]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 0
push dword ptr [ebp-132]
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push dword ptr [ebp+44]
call REG_MARK
add esp, 16
.Lt_0920:
cmp dword ptr [ebp+8], 45
jne .Lt_0927
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
.Lt_0927:
cmp dword ptr [ebp+44], 0
jne .Lt_092B
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_092C
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push dword ptr [ebp-124]
push dword ptr [ebp+20]
call RESTORE_VRREG
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
.Lt_092B:
.Lt_092A:
jmp .Lt_08F0
.Lt_08F1:
cmp dword ptr [ebp+8], 28
je .Lt_0934
.Lt_0935:
cmp dword ptr [ebp+8], 29
je .Lt_0934
.Lt_0936:
cmp dword ptr [ebp+8], 30
je .Lt_0934
.Lt_0937:
cmp dword ptr [ebp+8], 31
jne .Lt_0933
.Lt_0934:
cmp dword ptr [ebp+8], 28
jne .Lt_0939
.Lt_093A:
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_08FE
push -1
lea eax, [ebp-84]
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0938
.Lt_0939:
cmp dword ptr [ebp+8], 29
jne .Lt_093D
.Lt_093E:
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_08FE
push -1
lea eax, [ebp-96]
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0938
.Lt_093D:
cmp dword ptr [ebp+8], 30
jne .Lt_0941
.Lt_0942:
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_08FE
push -1
lea eax, [ebp-108]
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0938
.Lt_0941:
cmp dword ptr [ebp+8], 31
jne .Lt_0945
.Lt_0946:
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_08FE
push -1
lea eax, [ebp-120]
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
.Lt_0945:
.Lt_0938:
sub esp, 8
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [REGSTRQ+eax*4]
push 6
push offset Lt_0739
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-168]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-168]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-168]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push dword ptr [ebp-124]
push dword ptr [ebp+20]
call RESTORE_VRREG
add esp, 16
jmp .Lt_08F0
.Lt_0933:
cmp dword ptr [ebp+8], 64
jne .Lt_094D
.Lt_094E:
cmp dword ptr [ebp-128], 16
jne .Lt_0950
sub esp, 4
push dword ptr [ebp-124]
push dword ptr [ebp+20]
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 6
push offset Lt_0951
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [REGSTRQ+eax*4]
push 6
push offset Lt_0739
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_094F
.Lt_0950:
sub esp, 4
push dword ptr [ebp-124]
push dword ptr [ebp+20]
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 7
push offset Lt_0956
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [REGSTRQ+eax*4]
push 6
push offset Lt_0733
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
.Lt_094F:
jmp .Lt_08F0
.Lt_094D:
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+8]
call HGETBOPCODE
add esp, 16
push eax
push 51
push offset Lt_095E
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-168]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-168]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-168]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
.Lt_095B:
.Lt_08F0:
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_08BD:
pop ebx
mov esp, ebp
pop ebp
ret
.size BOP_FLOAT, .-BOP_FLOAT
.balign 16
HLOADOPERANDSANDWRITEBOP:
.type HLOADOPERANDSANDWRITEBOP, @function
push ebp
mov ebp, esp
sub esp, 356
push ebx
.Lt_0962:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-144], 0
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 511
mov dword ptr [ebp-124], ebx
mov ebx, dword ptr [ebp-124]
and ebx, 480
test ebx, ebx
je .Lt_0965
mov dword ptr [ebp-124], 8
.Lt_0965:
cmp dword ptr [ebp-124], 8
je .Lt_0968
.Lt_0969:
cmp dword ptr [ebp-124], 9
je .Lt_0968
.Lt_096A:
cmp dword ptr [ebp-124], 13
je .Lt_0968
.Lt_096B:
cmp dword ptr [ebp-124], 14
je .Lt_0968
.Lt_096C:
cmp dword ptr [ebp-124], 10
je .Lt_0968
.Lt_096D:
cmp dword ptr [ebp-124], 16
jne .Lt_0967
.Lt_0968:
sub esp, 12
push 0
push 11
push offset Lt_096E
push -1
lea ebx, [ebp-60]
push ebx
call fb_StrAssign
add esp, 32
jmp .Lt_0966
.Lt_0967:
cmp dword ptr [ebp-124], 11
je .Lt_0970
.Lt_0971:
cmp dword ptr [ebp-124], 12
je .Lt_0970
.Lt_0972:
cmp dword ptr [ebp-124], 15
jne .Lt_096F
.Lt_0970:
sub esp, 12
push 0
push 11
push offset Lt_0973
push -1
lea ebx, [ebp-60]
push ebx
call fb_StrAssign
add esp, 32
jmp .Lt_0966
.Lt_096F:
cmp dword ptr [ebp-124], 5
je .Lt_0975
.Lt_0976:
cmp dword ptr [ebp-124], 6
jne .Lt_0974
.Lt_0975:
sub esp, 12
push 0
push 10
push offset Lt_0977
push -1
lea ebx, [ebp-60]
push ebx
call fb_StrAssign
add esp, 32
jmp .Lt_0966
.Lt_0974:
cmp dword ptr [ebp-124], 2
je .Lt_0979
.Lt_097A:
cmp dword ptr [ebp-124], 3
je .Lt_0979
.Lt_097B:
cmp dword ptr [ebp-124], 1
je .Lt_0979
.Lt_097C:
cmp dword ptr [ebp-124], 4
jne .Lt_0978
.Lt_0979:
sub esp, 12
push 0
push 10
push offset Lt_097D
push -1
lea ebx, [ebp-60]
push ebx
call fb_StrAssign
add esp, 32
jmp .Lt_0966
.Lt_0978:
sub esp, 8
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset Lt_0000
push -1
lea ebx, [ebp-188]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-188]
push ebx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ebx, [ebp-188]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+4]
call fb_IntToStr
add esp, 16
push eax
push 48
push offset Lt_0982
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
.Lt_097E:
.Lt_0966:
sub esp, 12
push 0
push -1
lea eax, [ebp-60]
push eax
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-180], ebx
cmp dword ptr [ebp-180], 4
jne .Lt_0988
.Lt_0989:
sub esp, 12
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-132], eax
cmp dword ptr [ebp-124], 8
je .Lt_098C
.Lt_098D:
cmp dword ptr [ebp-124], 9
je .Lt_098C
.Lt_098E:
cmp dword ptr [ebp-124], 13
je .Lt_098C
.Lt_098F:
cmp dword ptr [ebp-124], 14
je .Lt_098C
.Lt_0990:
cmp dword ptr [ebp-124], 10
je .Lt_098C
.Lt_0991:
cmp dword ptr [ebp-124], 16
jne .Lt_098B
.Lt_098C:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_098A
.Lt_098B:
cmp dword ptr [ebp-124], 11
je .Lt_0993
.Lt_0994:
cmp dword ptr [ebp-124], 12
je .Lt_0993
.Lt_0995:
cmp dword ptr [ebp-124], 15
jne .Lt_0992
.Lt_0993:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRD+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_098A
.Lt_0992:
cmp dword ptr [ebp-124], 5
je .Lt_0997
.Lt_0998:
cmp dword ptr [ebp-124], 6
jne .Lt_0996
.Lt_0997:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRW+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_098A
.Lt_0996:
cmp dword ptr [ebp-124], 2
je .Lt_099A
.Lt_099B:
cmp dword ptr [ebp-124], 3
je .Lt_099A
.Lt_099C:
cmp dword ptr [ebp-124], 1
je .Lt_099A
.Lt_099D:
cmp dword ptr [ebp-124], 4
jne .Lt_0999
.Lt_099A:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRB+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_098A
.Lt_0999:
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 47
push offset Lt_09A2
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
.Lt_099E:
.Lt_098A:
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0986
.Lt_0988:
cmp dword ptr [ebp-180], 2
jne .Lt_09A6
.Lt_09A7:
sub esp, 4
lea eax, [ebp-36]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+12]
call PREPARE_IDX
add esp, 16
jmp .Lt_0986
.Lt_09A6:
cmp dword ptr [ebp-180], 3
jne .Lt_09A8
.Lt_09A9:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0986
.Lt_09A8:
cmp dword ptr [ebp-180], 5
jne .Lt_09AD
.Lt_09AE:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0986
.Lt_09AD:
cmp dword ptr [ebp-180], 0
jne .Lt_09B2
.Lt_09B3:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_09B4
mov dword ptr [ebp-184], 24
jmp .Lt_1B3A
.Lt_09B4:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-184], eax
.Lt_1B3A:
mov eax, dword ptr [ebp-184]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax], 1
jne .Lt_09B7
sub esp, 12
push 0
push -1
sub esp, 12
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
mov eax, dword ptr [ebp+12]
push dword ptr [eax+28]
push dword ptr [eax+24]
call HFLOATTOHEX_ASM64
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_09B6
.Lt_09B7:
cmp dword ptr [ebp-124], 1
jne .Lt_09B9
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+28], 0
jne .Lt_1B43
cmp dword ptr [eax+24], 0
je .Lt_09BB
.Lt_1B43:
mov eax, dword ptr [ebp+12]
mov dword ptr [eax+24], 1
mov dword ptr [eax+28], 0
.Lt_09BB:
.Lt_09BA:
.Lt_09B9:
.Lt_09B8:
sub esp, 12
push 0
push -1
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+28]
push dword ptr [eax+24]
call fb_LongintToStr
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_09B6:
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0986
.Lt_09B2:
cmp dword ptr [ebp-180], 1
jne .Lt_09BC
.Lt_09BD:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_09BF
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_09BE
.Lt_09BF:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_09BE:
jmp .Lt_0986
.Lt_09BC:
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push 51
push offset Lt_09C7
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
.Lt_09C4:
.Lt_0986:
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-180], ebx
cmp dword ptr [ebp-180], 4
jne .Lt_09CC
.Lt_09CD:
sub esp, 12
mov ebx, dword ptr [ebp+16]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-140], eax
cmp dword ptr [ebp-124], 8
je .Lt_09D0
.Lt_09D1:
cmp dword ptr [ebp-124], 9
je .Lt_09D0
.Lt_09D2:
cmp dword ptr [ebp-124], 13
je .Lt_09D0
.Lt_09D3:
cmp dword ptr [ebp-124], 14
je .Lt_09D0
.Lt_09D4:
cmp dword ptr [ebp-124], 10
je .Lt_09D0
.Lt_09D5:
cmp dword ptr [ebp-124], 16
jne .Lt_09CF
.Lt_09D0:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-140]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_09CE
.Lt_09CF:
cmp dword ptr [ebp-124], 11
je .Lt_09D7
.Lt_09D8:
cmp dword ptr [ebp-124], 12
je .Lt_09D7
.Lt_09D9:
cmp dword ptr [ebp-124], 15
jne .Lt_09D6
.Lt_09D7:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-140]
push dword ptr [REGSTRD+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_09CE
.Lt_09D6:
cmp dword ptr [ebp-124], 5
je .Lt_09DB
.Lt_09DC:
cmp dword ptr [ebp-124], 6
jne .Lt_09DA
.Lt_09DB:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-140]
push dword ptr [REGSTRW+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_09CE
.Lt_09DA:
cmp dword ptr [ebp-124], 2
je .Lt_09DE
.Lt_09DF:
cmp dword ptr [ebp-124], 3
je .Lt_09DE
.Lt_09E0:
cmp dword ptr [ebp-124], 1
je .Lt_09DE
.Lt_09E1:
cmp dword ptr [ebp-124], 4
jne .Lt_09DD
.Lt_09DE:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-140]
push dword ptr [REGSTRB+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_09CE
.Lt_09DD:
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 47
push offset Lt_09E6
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
.Lt_09E2:
.Lt_09CE:
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_09CA
.Lt_09CC:
cmp dword ptr [ebp-180], 0
jne .Lt_09EA
.Lt_09EB:
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_09EC
mov dword ptr [ebp-184], 24
jmp .Lt_1B3B
.Lt_09EC:
mov ebx, dword ptr [ebp+16]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-184], eax
.Lt_1B3B:
mov eax, dword ptr [ebp-184]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax], 1
jne .Lt_09EF
sub esp, 12
push 0
push -1
sub esp, 12
push 0
mov eax, dword ptr [ebp+16]
push dword ptr [eax+4]
mov eax, dword ptr [ebp+16]
push dword ptr [eax+28]
push dword ptr [eax+24]
call HFLOATTOHEX_ASM64
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_09EE
.Lt_09EF:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+4], 1
jne .Lt_09F1
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+28], 0
jne .Lt_1B46
cmp dword ptr [eax+24], 0
je .Lt_09F3
.Lt_1B46:
mov eax, dword ptr [ebp+16]
mov dword ptr [eax+24], 1
mov dword ptr [eax+28], 0
.Lt_09F3:
.Lt_09F2:
.Lt_09F1:
.Lt_09F0:
sub esp, 12
push 0
push -1
sub esp, 4
mov eax, dword ptr [ebp+16]
push dword ptr [eax+28]
push dword ptr [eax+24]
call fb_LongintToStr
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_09EE:
jmp .Lt_09CA
.Lt_09EA:
cmp dword ptr [ebp-180], 3
jne .Lt_09F4
.Lt_09F5:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+16]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_09CA
.Lt_09F4:
cmp dword ptr [ebp-180], 5
jne .Lt_09F9
.Lt_09FA:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+16]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+16]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_09CA
.Lt_09F9:
cmp dword ptr [ebp-180], 2
jne .Lt_09FE
.Lt_09FF:
sub esp, 4
lea eax, [ebp-48]
push eax
lea eax, [ebp-24]
push eax
push dword ptr [ebp+16]
call PREPARE_IDX
add esp, 16
jmp .Lt_09CA
.Lt_09FE:
cmp dword ptr [ebp-180], 1
jne .Lt_0A00
.Lt_0A01:
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+16]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0A03
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+16]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+16]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A02
.Lt_0A03:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+16]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_0A02:
jmp .Lt_09CA
.Lt_0A00:
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push 51
push offset Lt_0A0B
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
.Lt_0A08:
.Lt_09CA:
push 1
push offset Lt_0000
push -1
lea eax, [ebp-36]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_0A0F
sub esp, 12
lea eax, [ebp-36]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_0A0F:
push 1
push offset Lt_0000
push -1
lea eax, [ebp-48]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_0A11
sub esp, 12
lea eax, [ebp-48]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_0A11:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_0A12
mov dword ptr [ebp-148], 24
jmp .Lt_1B3C
.Lt_0A12:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-148], eax
.Lt_1B3C:
mov eax, dword ptr [ebp-148]
imul eax, 28
mov ebx, dword ptr [SYMB_DTYPETB+eax]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-180], ebx
mov ebx, dword ptr [ebp+16]
mov eax, dword ptr [ebx+4]
and eax, 480
je .Lt_0A14
mov dword ptr [ebp-152], 24
jmp .Lt_1B3D
.Lt_0A14:
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+4]
and ebx, 31
mov dword ptr [ebp-152], ebx
.Lt_1B3D:
mov ebx, dword ptr [ebp-152]
imul ebx, 28
mov eax, dword ptr [SYMB_DTYPETB+ebx]
cmp eax, 1
sete al
shr eax, 1
sbb eax, eax
or eax, dword ptr [ebp-180]
je .Lt_0A17
sub esp, 8
push dword ptr [ebp+24]
lea eax, [ebp-60]
push eax
lea eax, [ebp-48]
push eax
lea eax, [ebp-36]
push eax
lea eax, [ebp-24]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+20]
push dword ptr [ebp+16]
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call BOP_FLOAT
add esp, 48
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0963
.Lt_0A17:
.Lt_0A16:
sub esp, 12
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [ebp-60]
push eax
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
lea eax, [ebp-176]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
cmp dword ptr [ebp+20], 0
je .Lt_0A1B
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_0A1D
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+20]
mov ecx, dword ptr [eax+12]
mov dword ptr [ebx+12], ecx
jmp .Lt_0A1C
.Lt_0A1D:
sub esp, 8
push -1
mov ecx, dword ptr [ebp+20]
push dword ptr [ecx+12]
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-132], eax
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 5
jne .Lt_0A1F
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_012E
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A1E
.Lt_0A1F:
cmp dword ptr [ebp-124], 8
je .Lt_0A26
.Lt_0A27:
cmp dword ptr [ebp-124], 9
je .Lt_0A26
.Lt_0A28:
cmp dword ptr [ebp-124], 13
je .Lt_0A26
.Lt_0A29:
cmp dword ptr [ebp-124], 14
je .Lt_0A26
.Lt_0A2A:
cmp dword ptr [ebp-124], 10
jne .Lt_0A25
.Lt_0A26:
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A24
.Lt_0A25:
cmp dword ptr [ebp-124], 11
je .Lt_0A30
.Lt_0A31:
cmp dword ptr [ebp-124], 12
jne .Lt_0A2F
.Lt_0A30:
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRD+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRD+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A24
.Lt_0A2F:
cmp dword ptr [ebp-124], 5
je .Lt_0A37
.Lt_0A38:
cmp dword ptr [ebp-124], 6
jne .Lt_0A36
.Lt_0A37:
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRW+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRW+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A24
.Lt_0A36:
cmp dword ptr [ebp-124], 2
je .Lt_0A3E
.Lt_0A3F:
cmp dword ptr [ebp-124], 3
je .Lt_0A3E
.Lt_0A40:
cmp dword ptr [ebp-124], 1
je .Lt_0A3E
.Lt_0A41:
cmp dword ptr [ebp-124], 4
jne .Lt_0A3D
.Lt_0A3E:
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRB+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRB+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A24
.Lt_0A3D:
sub esp, 8
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-188]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-188]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-188]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 49
push offset Lt_0A4A
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
.Lt_0A46:
.Lt_0A24:
.Lt_0A1E:
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 32
.Lt_0A1C:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 5
jne .Lt_0A4F
sub esp, 8
push -1
push 99999
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-136], eax
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-136]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_012E
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-136]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_0A4F:
.Lt_0A4E:
jmp .Lt_0A1A
.Lt_0A1B:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 5
jne .Lt_0A55
sub esp, 8
push -1
push 99999
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-136], eax
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-136]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_012E
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-136]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_0A55:
.Lt_0A54:
cmp dword ptr [ebp+8], 30
jne .Lt_0A5B
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
je .Lt_0A5D
sub esp, 8
push 0
push 8
call IRHLALLOCVREG
add esp, 16
mov dword ptr [ebp+20], eax
sub esp, 8
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-132], eax
sub esp, 12
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_0A5D:
.Lt_0A5C:
jmp .Lt_0A5A
.Lt_0A5B:
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax]
cmp ecx, 4
setne cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax]
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
and ecx, ebx
je .Lt_0A63
sub esp, 8
push 0
push dword ptr [ebp-124]
call IRHLALLOCVREG
add esp, 16
mov dword ptr [ebp-144], eax
sub esp, 8
push -1
mov eax, dword ptr [ebp-144]
push dword ptr [eax+12]
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-132], eax
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 5
jne .Lt_0A65
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_012E
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A64
.Lt_0A65:
cmp dword ptr [ebp-124], 8
je .Lt_0A6C
.Lt_0A6D:
cmp dword ptr [ebp-124], 9
je .Lt_0A6C
.Lt_0A6E:
cmp dword ptr [ebp-124], 13
je .Lt_0A6C
.Lt_0A6F:
cmp dword ptr [ebp-124], 14
je .Lt_0A6C
.Lt_0A70:
cmp dword ptr [ebp-124], 10
jne .Lt_0A6B
.Lt_0A6C:
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A6A
.Lt_0A6B:
cmp dword ptr [ebp-124], 11
je .Lt_0A76
.Lt_0A77:
cmp dword ptr [ebp-124], 12
jne .Lt_0A75
.Lt_0A76:
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRD+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRD+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A6A
.Lt_0A75:
cmp dword ptr [ebp-124], 5
je .Lt_0A7D
.Lt_0A7E:
cmp dword ptr [ebp-124], 6
jne .Lt_0A7C
.Lt_0A7D:
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRW+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRW+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A6A
.Lt_0A7C:
cmp dword ptr [ebp-124], 2
je .Lt_0A84
.Lt_0A85:
cmp dword ptr [ebp-124], 3
je .Lt_0A84
.Lt_0A86:
cmp dword ptr [ebp-124], 1
je .Lt_0A84
.Lt_0A87:
cmp dword ptr [ebp-124], 4
jne .Lt_0A83
.Lt_0A84:
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRB+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRB+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A6A
.Lt_0A83:
sub esp, 8
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-188]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-188]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-188]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 49
push offset Lt_0A90
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
.Lt_0A8C:
.Lt_0A6A:
.Lt_0A64:
.Lt_0A63:
.Lt_0A62:
.Lt_0A5A:
.Lt_0A1A:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 0
jne .Lt_0A95
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+28], 4294967295
mov ebx, -1
jl .Lt_1B4D
jg .Lt_1B4E
cmp dword ptr [eax+24], 2147483648
jb .Lt_1B4D
.Lt_1B4E:
xor ebx, ebx
.Lt_1B4D:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+28], 0
mov ecx, -1
jg .Lt_1B4F
jl .Lt_1B50
cmp dword ptr [eax+24], 2147483648
jae .Lt_1B4F
.Lt_1B50:
xor ecx, ecx
.Lt_1B4F:
or ebx, ecx
je .Lt_0A97
mov ecx, dword ptr [ebp+16]
cmp dword ptr [ecx+28], 4294967295
mov ebx, -1
jl .Lt_1B51
jg .Lt_1B52
cmp dword ptr [ecx+24], 2147483648
jb .Lt_1B51
.Lt_1B52:
xor ebx, ebx
.Lt_1B51:
mov ecx, dword ptr [ebp+16]
cmp dword ptr [ecx+28], 0
mov eax, -1
jg .Lt_1B53
jl .Lt_1B54
cmp dword ptr [ecx+24], 4294967295
ja .Lt_1B53
.Lt_1B54:
xor eax, eax
.Lt_1B53:
or ebx, eax
je .Lt_0A99
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 8
mov eax, dword ptr [ebp+16]
push dword ptr [eax+28]
push dword ptr [eax+24]
call fb_LongintToStr
add esp, 16
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0A98
.Lt_0A99:
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 8
mov eax, dword ptr [ebp+16]
push dword ptr [eax+28]
push dword ptr [eax+24]
call fb_LongintToStr
add esp, 16
push eax
push 10
push offset Lt_0A9C
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
.Lt_0A98:
sub esp, 12
push 0
push 4
push offset Lt_009F
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
cmp dword ptr [ebp-124], 8
je .Lt_0AA1
.Lt_0AA2:
cmp dword ptr [ebp-124], 9
je .Lt_0AA1
.Lt_0AA3:
cmp dword ptr [ebp-124], 13
je .Lt_0AA1
.Lt_0AA4:
cmp dword ptr [ebp-124], 14
je .Lt_0AA1
.Lt_0AA5:
cmp dword ptr [ebp-124], 10
je .Lt_0AA1
.Lt_0AA6:
cmp dword ptr [ebp-124], 16
jne .Lt_0AA0
.Lt_0AA1:
jmp .Lt_0A9F
.Lt_0AA0:
cmp dword ptr [ebp-124], 11
je .Lt_0AA8
.Lt_0AA9:
cmp dword ptr [ebp-124], 12
je .Lt_0AA8
.Lt_0AAA:
cmp dword ptr [ebp-124], 15
jne .Lt_0AA7
.Lt_0AA8:
sub esp, 12
push 0
push 4
push offset Lt_00B2
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A9F
.Lt_0AA7:
cmp dword ptr [ebp-124], 5
je .Lt_0AAC
.Lt_0AAD:
cmp dword ptr [ebp-124], 6
jne .Lt_0AAB
.Lt_0AAC:
sub esp, 12
push 0
push 3
push offset Lt_00C4
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A9F
.Lt_0AAB:
cmp dword ptr [ebp-124], 2
je .Lt_0AAF
.Lt_0AB0:
cmp dword ptr [ebp-124], 3
je .Lt_0AAF
.Lt_0AB1:
cmp dword ptr [ebp-124], 1
je .Lt_0AAF
.Lt_0AB2:
cmp dword ptr [ebp-124], 4
jne .Lt_0AAE
.Lt_0AAF:
sub esp, 12
push 0
push 3
push offset Lt_00D6
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0A9F
.Lt_0AAE:
sub esp, 8
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-188]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-188]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-188]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 50
push offset Lt_0AB7
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
.Lt_0AB3:
.Lt_0A9F:
.Lt_0A97:
.Lt_0A96:
.Lt_0A95:
.Lt_0A94:
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-180], eax
jmp .Lt_0ABC
.Lt_0ABE:
push 2
push offset Lt_0004
push -1
lea eax, [ebp-24]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0AC0
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0AC1
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0ABF
.Lt_0AC0:
push 3
push offset Lt_0AC5
push -1
lea eax, [ebp-24]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0AC4
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0484
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0ABF
.Lt_0AC4:
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0410
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
.Lt_0ABF:
cmp dword ptr [ebp+20], 0
je .Lt_0ACD
sub esp, 8
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call RESTORE_VRREG
add esp, 16
.Lt_0ACD:
jmp .Lt_0ABB
.Lt_0ACE:
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0ACF
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+20], 0
je .Lt_0AD5
sub esp, 8
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call RESTORE_VRREG
add esp, 16
.Lt_0AD5:
jmp .Lt_0ABB
.Lt_0AD6:
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 4
push offset Lt_06B7
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+20], 0
je .Lt_0ADC
sub esp, 8
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call RESTORE_VRREG
add esp, 16
.Lt_0ADC:
jmp .Lt_0ABB
.Lt_0ADD:
cmp dword ptr [ebp+20], 0
je .Lt_0ADF
cmp dword ptr [ebp-124], 1
jne .Lt_0AE1
sub esp, 8
push 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0AE2
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_092C
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-264]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-264]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-264]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0AE0
.Lt_0AE1:
sub esp, 8
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0AE6
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-252]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-252]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-252]
push eax
call fb_StrDelete
add esp, 16
.Lt_0AE0:
cmp dword ptr [ebp-124], 8
je .Lt_0AEB
.Lt_0AEC:
cmp dword ptr [ebp-124], 9
je .Lt_0AEB
.Lt_0AED:
cmp dword ptr [ebp-124], 13
je .Lt_0AEB
.Lt_0AEE:
cmp dword ptr [ebp-124], 14
je .Lt_0AEB
.Lt_0AEF:
cmp dword ptr [ebp-124], 10
jne .Lt_0AEA
.Lt_0AEB:
sub esp, 8
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRQ]
push 5
push offset Lt_0389
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-276]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-276]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-276]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
push dword ptr [REGSTRQ]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0AE9
.Lt_0AEA:
cmp dword ptr [ebp-124], 11
je .Lt_0AF5
.Lt_0AF6:
cmp dword ptr [ebp-124], 12
jne .Lt_0AF4
.Lt_0AF5:
sub esp, 8
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRD]
push 5
push offset Lt_0389
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-276]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-276]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-276]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
push dword ptr [REGSTRD]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0AE9
.Lt_0AF4:
cmp dword ptr [ebp-124], 5
je .Lt_0AFC
.Lt_0AFD:
cmp dword ptr [ebp-124], 6
jne .Lt_0AFB
.Lt_0AFC:
sub esp, 8
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRW]
push 5
push offset Lt_0389
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-276]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-276]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-276]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
push dword ptr [REGSTRW]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0AE9
.Lt_0AFB:
cmp dword ptr [ebp-124], 2
je .Lt_0B03
.Lt_0B04:
cmp dword ptr [ebp-124], 3
je .Lt_0B03
.Lt_0B05:
cmp dword ptr [ebp-124], 1
je .Lt_0B03
.Lt_0B06:
cmp dword ptr [ebp-124], 4
jne .Lt_0B02
.Lt_0B03:
sub esp, 8
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRB]
push 5
push offset Lt_0389
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-276]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-276]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-276]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
push dword ptr [REGSTRB]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0AE9
.Lt_0B02:
sub esp, 8
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-240]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-240]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-240]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 49
push offset Lt_0A90
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-264]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-264]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-264]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-276]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-276]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-276]
push eax
call fb_StrDelete
add esp, 16
.Lt_0B0B:
.Lt_0AE9:
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 4
push offset Lt_06B7
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0ADE
.Lt_0ADF:
cmp dword ptr [ebp-124], 8
je .Lt_0B16
.Lt_0B17:
cmp dword ptr [ebp-124], 9
je .Lt_0B16
.Lt_0B18:
cmp dword ptr [ebp-124], 13
je .Lt_0B16
.Lt_0B19:
cmp dword ptr [ebp-124], 14
je .Lt_0B16
.Lt_0B1A:
cmp dword ptr [ebp-124], 10
jne .Lt_0B15
.Lt_0B16:
sub esp, 8
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRQ]
push 5
push offset Lt_0389
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-324]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-324]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-324]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
push dword ptr [REGSTRQ]
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0B14
.Lt_0B15:
cmp dword ptr [ebp-124], 11
je .Lt_0B20
.Lt_0B21:
cmp dword ptr [ebp-124], 12
jne .Lt_0B1F
.Lt_0B20:
sub esp, 8
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRD]
push 5
push offset Lt_0389
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-324]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-324]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-324]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
push dword ptr [REGSTRD]
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0B14
.Lt_0B1F:
cmp dword ptr [ebp-124], 5
je .Lt_0B27
.Lt_0B28:
cmp dword ptr [ebp-124], 6
jne .Lt_0B26
.Lt_0B27:
sub esp, 8
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRW]
push 5
push offset Lt_0389
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-324]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-324]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-324]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
push dword ptr [REGSTRW]
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0B14
.Lt_0B26:
cmp dword ptr [ebp-124], 2
je .Lt_0B2E
.Lt_0B2F:
cmp dword ptr [ebp-124], 3
je .Lt_0B2E
.Lt_0B30:
cmp dword ptr [ebp-124], 1
je .Lt_0B2E
.Lt_0B31:
cmp dword ptr [ebp-124], 4
jne .Lt_0B2D
.Lt_0B2E:
sub esp, 8
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRB]
push 5
push offset Lt_0389
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-324]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-324]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-324]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
push dword ptr [REGSTRB]
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0B14
.Lt_0B2D:
sub esp, 8
push 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-288]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-288]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-288]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 49
push offset Lt_0A90
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-312]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-312]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-312]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-324]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-324]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-324]
push eax
call fb_StrDelete
add esp, 16
.Lt_0B36:
.Lt_0B14:
cmp dword ptr [ebp-124], 1
jne .Lt_0B3C
sub esp, 8
push 0
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0AE2
push -1
sub esp, 4
push -1
lea eax, [ebp-120]
push eax
push 5
push offset Lt_092C
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-312]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-312]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-312]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0B3B
.Lt_0B3C:
sub esp, 8
push 0
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-120]
push eax
push 5
push offset Lt_0AE6
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-300]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-300]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-300]
push eax
call fb_StrDelete
add esp, 16
.Lt_0B3B:
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-120]
push eax
push 4
push offset Lt_06B7
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-120]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-276]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-276]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-276]
push eax
call fb_StrDelete
add esp, 16
.Lt_0ADE:
cmp dword ptr [ebp+20], 0
je .Lt_0B4B
sub esp, 8
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call RESTORE_VRREG
add esp, 16
.Lt_0B4B:
jmp .Lt_0ABB
.Lt_0B4C:
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_092C
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+20], 0
je .Lt_0B52
sub esp, 8
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call RESTORE_VRREG
add esp, 16
.Lt_0B52:
jmp .Lt_0ABB
.Lt_0B53:
cmp dword ptr [ebp-124], 8
je .Lt_0B56
.Lt_0B57:
cmp dword ptr [ebp-124], 9
je .Lt_0B56
.Lt_0B58:
cmp dword ptr [ebp-124], 13
je .Lt_0B56
.Lt_0B59:
cmp dword ptr [ebp-124], 14
je .Lt_0B56
.Lt_0B5A:
cmp dword ptr [ebp-124], 10
jne .Lt_0B55
.Lt_0B56:
sub esp, 8
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRQ]
push 5
push offset Lt_0389
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-324]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-324]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-324]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
push dword ptr [REGSTRQ]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0B54
.Lt_0B55:
cmp dword ptr [ebp-124], 11
je .Lt_0B60
.Lt_0B61:
cmp dword ptr [ebp-124], 12
jne .Lt_0B5F
.Lt_0B60:
sub esp, 8
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRD]
push 5
push offset Lt_0389
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-324]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-324]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-324]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
push dword ptr [REGSTRD]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0B54
.Lt_0B5F:
cmp dword ptr [ebp-124], 5
je .Lt_0B67
.Lt_0B68:
cmp dword ptr [ebp-124], 6
jne .Lt_0B66
.Lt_0B67:
sub esp, 8
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRW]
push 5
push offset Lt_0389
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-324]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-324]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-324]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
push dword ptr [REGSTRW]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0B54
.Lt_0B66:
cmp dword ptr [ebp-124], 2
je .Lt_0B6E
.Lt_0B6F:
cmp dword ptr [ebp-124], 3
je .Lt_0B6E
.Lt_0B70:
cmp dword ptr [ebp-124], 1
je .Lt_0B6E
.Lt_0B71:
cmp dword ptr [ebp-124], 4
jne .Lt_0B6D
.Lt_0B6E:
sub esp, 8
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRB]
push 5
push offset Lt_0389
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-324]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-324]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-324]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
push dword ptr [REGSTRB]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0B54
.Lt_0B6D:
sub esp, 8
push 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-288]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-288]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-288]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 49
push offset Lt_0A90
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-312]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-312]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-312]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-324]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-324]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-324]
push eax
call fb_StrDelete
add esp, 16
.Lt_0B76:
.Lt_0B54:
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-24]
push eax
push 5
push offset Lt_092C
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp-124], 1
jne .Lt_0B80
sub esp, 8
push 0
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0AE2
push -1
sub esp, 4
push -1
lea eax, [ebp-24]
push eax
push 5
push offset Lt_092C
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-312]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-312]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-312]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0B7F
.Lt_0B80:
sub esp, 8
push 0
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 5
push offset Lt_0AE6
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-300]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-300]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-300]
push eax
call fb_StrDelete
add esp, 16
.Lt_0B7F:
sub esp, 8
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-276]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-276]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-276]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+20], 0
je .Lt_0B8B
sub esp, 8
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call RESTORE_VRREG
add esp, 16
.Lt_0B8B:
jmp .Lt_0ABB
.Lt_0B8C:
push 2
push offset Lt_0004
push -1
lea eax, [ebp-24]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0B8E
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0484
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0B8D
.Lt_0B8E:
push 3
push offset Lt_0AC5
push -1
lea eax, [ebp-24]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0B91
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0AC1
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0B8D
.Lt_0B91:
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0B94
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
.Lt_0B8D:
cmp dword ptr [ebp+20], 0
je .Lt_0B9A
sub esp, 8
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call RESTORE_VRREG
add esp, 16
.Lt_0B9A:
jmp .Lt_0ABB
.Lt_0B9B:
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 6
push offset Lt_0B9C
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
push 1
push offset Lt_0000
push -1
lea eax, [ebp-96]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_0BA2
sub esp, 8
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-96]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-276]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-276]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-276]
push eax
call fb_StrDelete
add esp, 16
.Lt_0BA2:
jmp .Lt_0ABB
.Lt_0BA7:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
cmp ebx, 9
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+4]
cmp ecx, 14
sete cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
mov ecx, dword ptr [ebp+16]
mov eax, dword ptr [ecx+4]
cmp eax, 9
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax+4]
cmp ecx, 14
sete cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_0BA9
mov ecx, dword ptr [ebp+8]
mov dword ptr [ebp-236], ecx
jmp .Lt_0BAB
.Lt_0BAD:
sub esp, 12
push 0
push 3
push offset Lt_0BAE
push -1
lea ecx, [ebp-84]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0BAA
.Lt_0BAF:
sub esp, 12
push 0
push 2
push offset Lt_0BB0
push -1
lea ecx, [ebp-84]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0BAA
.Lt_0BB1:
sub esp, 12
push 0
push 3
push offset Lt_0BB2
push -1
lea ecx, [ebp-84]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0BAA
.Lt_0BB3:
sub esp, 12
push 0
push 3
push offset Lt_0BB4
push -1
lea ecx, [ebp-84]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0BAA
.Lt_0BB5:
sub esp, 12
push 0
push 2
push offset Lt_0BB6
push -1
lea ecx, [ebp-84]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0BAA
.Lt_0BB7:
sub esp, 12
push 0
push 2
push offset Lt_011F
push -1
lea ecx, [ebp-84]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0BAA
.Lt_0BAB:
mov ecx, dword ptr [ebp-236]
add ecx, 4294967251
cmp ecx, 5
ja .Lt_0BAA
mov ecx, dword ptr [ebp-236]
jmp dword ptr [.LT_0BB8+ecx*4-180]
.LT_0BB8:
.int .Lt_0BB7
.int .Lt_0BB5
.int .Lt_0BAF
.int .Lt_0BB1
.int .Lt_0BB3
.int .Lt_0BAD
.Lt_0BAA:
jmp .Lt_0BA8
.Lt_0BA9:
mov ecx, dword ptr [ebp+8]
mov dword ptr [ebp-236], ecx
jmp .Lt_0BBA
.Lt_0BBC:
sub esp, 12
push 0
push 3
push offset Lt_0BBD
push -1
lea ecx, [ebp-84]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0BB9
.Lt_0BBE:
sub esp, 12
push 0
push 2
push offset Lt_0BBF
push -1
lea ecx, [ebp-84]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0BB9
.Lt_0BC0:
sub esp, 12
push 0
push 3
push offset Lt_0BB2
push -1
lea ecx, [ebp-84]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0BB9
.Lt_0BC1:
sub esp, 12
push 0
push 3
push offset Lt_0BC2
push -1
lea ecx, [ebp-84]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0BB9
.Lt_0BC3:
sub esp, 12
push 0
push 2
push offset Lt_0BC4
push -1
lea ecx, [ebp-84]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0BB9
.Lt_0BC5:
sub esp, 12
push 0
push 2
push offset Lt_011F
push -1
lea ecx, [ebp-84]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0BB9
.Lt_0BBA:
mov ecx, dword ptr [ebp-236]
add ecx, 4294967251
cmp ecx, 5
ja .Lt_0BB9
mov ecx, dword ptr [ebp-236]
jmp dword ptr [.LT_0BC6+ecx*4-180]
.LT_0BC6:
.int .Lt_0BC5
.int .Lt_0BC3
.int .Lt_0BBE
.int .Lt_0BC0
.int .Lt_0BC1
.int .Lt_0BBC
.Lt_0BB9:
.Lt_0BA8:
cmp dword ptr [CTX+212], 2
jne .Lt_0BC7
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-184], eax
jmp .Lt_1B3F
.Lt_0BC7:
mov dword ptr [ebp-184], 0
.Lt_1B3F:
cmp dword ptr [ebp-184], 0
je .Lt_0BCA
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+32], 0
je .Lt_0BCB
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-236], eax
jmp .Lt_1B40
.Lt_0BCB:
mov dword ptr [ebp-236], 0
.Lt_1B40:
cmp dword ptr [ebp-236], 0
je .Lt_0BCE
sub esp, 8
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-276]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-276]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-276]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
push 0
push 15
push offset Lt_0BD3
push -1
lea eax, [ebp-288]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-288]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-288]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 4
push offset Lt_009F
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+32], 0
je .Lt_0BD5
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-292], eax
jmp .Lt_1B41
.Lt_0BD5:
mov dword ptr [ebp-292], 0
.Lt_1B41:
cmp dword ptr [ebp-292], 0
je .Lt_0BD8
sub esp, 8
push -1
push 999999
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-140], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-140]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-140]
mov dword ptr [REGHANDLE+eax*4], -2
sub esp, 8
push 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
mov dword ptr [ebp-344], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+16]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-108]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
lea eax, [ebp-304]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
lea eax, [ebp-316]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
lea eax, [ebp-328]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
mov dword ptr [ebp-332], 0
lea eax, [ebp-340]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-352]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-352]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-352]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 2
push offset Lt_0118
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-108]
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_0119
push -1
lea eax, [ebp-24]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_0BD8:
.Lt_0BD7:
jmp .Lt_0BCD
.Lt_0BCE:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+32], 0
je .Lt_0BDF
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-240], eax
jmp .Lt_1B42
.Lt_0BDF:
mov dword ptr [ebp-240], 0
.Lt_1B42:
cmp dword ptr [ebp-240], 0
je .Lt_0BDE
sub esp, 8
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+16]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-276]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-276]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-276]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
push 0
push 15
push offset Lt_0BD3
push -1
lea eax, [ebp-288]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-288]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-288]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 4
push offset Lt_009F
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_0BDE:
.Lt_0BCD:
.Lt_0BCA:
.Lt_0BC9:
sub esp, 8
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0BE5
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
lea eax, [ebp-208]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
lea eax, [ebp-220]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-232]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-232]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-232]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+24], 0
jne .Lt_0BEB
sub esp, 8
push 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0BED
push -1
sub esp, 4
push -1
lea eax, [ebp-84]
push eax
push 4
push offset Lt_0BEC
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-268]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-268]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-268]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_0BF1
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push 7
push offset Lt_069A
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
lea eax, [ebp-280]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
lea eax, [ebp-292]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-304]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-304]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-304]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp-124], 1
je .Lt_0BF6
sub esp, 8
push 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0BF7
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
lea eax, [ebp-316]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-328]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-328]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-328]
push eax
call fb_StrDelete
add esp, 16
.Lt_0BF6:
.Lt_0BF5:
sub esp, 8
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call RESTORE_VRREG
add esp, 16
jmp .Lt_0BEA
.Lt_0BEB:
sub esp, 8
push 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+24]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0101
push -1
sub esp, 4
push -1
lea eax, [ebp-84]
push eax
push 2
push offset Lt_0BFA
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
lea eax, [ebp-268]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-280]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-280]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-280]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push dword ptr [ebp+24]
call REG_MARK
add esp, 16
.Lt_0BEA:
jmp .Lt_0ABB
.Lt_0BFF:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 0
je .Lt_0C01
push 0
push dword ptr [REGSTRQ+8]
push -1
lea eax, [ebp-24]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_0C03
cmp dword ptr [REGHANDLE+8], -2
je .Lt_0C05
mov eax, dword ptr [REGHANDLE+8]
mov dword ptr [ebp-140], eax
sub esp, 8
push -1
push dword ptr [ebp-140]
call REG_FINDFREE
add esp, 16
mov dword ptr [REGHANDLE+8], -2
sub esp, 8
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
sub esp, 8
push 0
push dword ptr [REGSTRQ+8]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
sub esp, 12
push dword ptr [ebp-140]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-252]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-252]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-252]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp-132], 2
jne .Lt_0C0B
sub esp, 12
push dword ptr [ebp-140]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-132], eax
.Lt_0C0B:
jmp .Lt_0C04
.Lt_0C05:
or dword ptr [CTX+112], 4
.Lt_0C04:
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 10
push offset Lt_0C0C
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
.Lt_0C03:
.Lt_0C02:
sub esp, 12
push 0
push 3
push offset Lt_00D8
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_0C01:
.Lt_0C00:
cmp dword ptr [ebp+8], 41
jne .Lt_0C10
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0C11
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0C0F
.Lt_0C10:
mov eax, dword ptr [ebp-124]
cmp eax, 8
sete al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp-124]
cmp ecx, 13
sete cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
je .Lt_0C17
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push -1
lea ecx, [ebp-24]
push ecx
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea ecx, [ebp-12]
push ecx
push 5
push offset Lt_0C18
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea ecx, [ebp-192]
push ecx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0C16
.Lt_0C17:
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0647
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
.Lt_0C16:
.Lt_0C0F:
jmp .Lt_0ABB
.Lt_0C21:
cmp dword ptr [REGHANDLE+12], -2
je .Lt_0C23
push 0
push dword ptr [REGSTRQ+12]
push -1
lea eax, [ebp-12]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_0C25
mov eax, dword ptr [REGHANDLE+12]
mov dword ptr [ebp-140], eax
sub esp, 8
push -1
push dword ptr [ebp-140]
call REG_FINDFREE
add esp, 16
mov dword ptr [REGHANDLE+12], -2
sub esp, 8
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
sub esp, 8
push 0
push dword ptr [REGSTRQ+12]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
sub esp, 12
push dword ptr [ebp-140]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-252]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-252]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-252]
push eax
call fb_StrDelete
add esp, 16
push 0
push dword ptr [REGSTRQ+12]
push -1
lea eax, [ebp-24]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0C2B
sub esp, 12
push 0
push 0
sub esp, 8
push dword ptr [ebp-140]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_0C2B:
.Lt_0C2A:
cmp dword ptr [ebp-132], 3
jne .Lt_0C2D
sub esp, 12
push dword ptr [ebp-140]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-132], eax
.Lt_0C2D:
.Lt_0C25:
.Lt_0C24:
jmp .Lt_0C22
.Lt_0C23:
or dword ptr [CTX+112], 8
.Lt_0C22:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 0
jne .Lt_0C2F
cmp dword ptr [REGHANDLE+12], -2
jne .Lt_0C31
mov dword ptr [REGHANDLE+12], -3
.Lt_0C31:
sub esp, 12
push 0
push 0
sub esp, 12
call REG_TEMPO
add esp, 12
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 32
cmp dword ptr [REGHANDLE+12], -3
jne .Lt_0C33
mov dword ptr [REGHANDLE+12], -2
.Lt_0C33:
sub esp, 8
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-108]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-252]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-252]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-252]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push -1
lea eax, [ebp-108]
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_0C2F:
.Lt_0C2E:
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax+4]
mov dword ptr [ebp-128], ecx
mov ecx, dword ptr [ebp-128]
and ecx, 480
test ecx, ecx
je .Lt_0C3B
mov dword ptr [ebp-128], 8
.Lt_0C3B:
mov ecx, dword ptr [ebp-124]
cmp ecx, 9
sete cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp-124]
cmp eax, 14
sete al
shr eax, 1
sbb eax, eax
or ecx, eax
mov eax, dword ptr [ebp-128]
cmp eax, 9
sete al
shr eax, 1
sbb eax, eax
or ecx, eax
mov eax, dword ptr [ebp-128]
cmp eax, 14
sete al
shr eax, 1
sbb eax, eax
or ecx, eax
je .Lt_0C3D
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 11
push offset Lt_0C3E
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 5
push offset Lt_0C40
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-240]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-240]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-240]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0C3C
.Lt_0C3D:
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 4
push offset Lt_0C43
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 6
push offset Lt_0C45
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-240]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-240]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-240]
push eax
call fb_StrDelete
add esp, 16
.Lt_0C3C:
cmp dword ptr [ebp+20], 0
jne .Lt_0C49
sub esp, 8
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-240]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-240]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-240]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0C48
.Lt_0C49:
sub esp, 8
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-240]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-240]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-240]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call RESTORE_VRREG
add esp, 16
.Lt_0C48:
jmp .Lt_0ABB
.Lt_0C50:
cmp dword ptr [REGHANDLE+12], -2
je .Lt_0C52
push 0
push dword ptr [REGSTRQ+12]
push -1
lea eax, [ebp-12]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_0C54
mov eax, dword ptr [REGHANDLE+12]
mov dword ptr [ebp-140], eax
sub esp, 8
push -1
push dword ptr [ebp-140]
call REG_FINDFREE
add esp, 16
mov dword ptr [REGHANDLE+12], -2
sub esp, 8
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
sub esp, 8
push 0
push dword ptr [REGSTRQ+12]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
sub esp, 12
push dword ptr [ebp-140]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-252]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-252]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-252]
push eax
call fb_StrDelete
add esp, 16
push 0
push dword ptr [REGSTRQ+12]
push -1
lea eax, [ebp-24]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_0C5A
sub esp, 12
push 0
push 0
sub esp, 8
push dword ptr [ebp-140]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_0C5A:
.Lt_0C59:
cmp dword ptr [ebp-132], 3
jne .Lt_0C5C
sub esp, 12
push dword ptr [ebp-140]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-132], eax
.Lt_0C5C:
.Lt_0C54:
.Lt_0C53:
jmp .Lt_0C51
.Lt_0C52:
or dword ptr [CTX+112], 8
.Lt_0C51:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 0
jne .Lt_0C5E
cmp dword ptr [REGHANDLE+12], -2
jne .Lt_0C60
mov dword ptr [REGHANDLE+12], -3
.Lt_0C60:
sub esp, 12
push 0
push 0
sub esp, 12
call REG_TEMPO
add esp, 12
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 32
cmp dword ptr [REGHANDLE+12], -3
jne .Lt_0C62
mov dword ptr [REGHANDLE+12], -2
.Lt_0C62:
sub esp, 8
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-108]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-252]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-252]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-252]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push -1
lea eax, [ebp-108]
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_0C5E:
.Lt_0C5D:
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax+4]
mov dword ptr [ebp-128], ecx
mov ecx, dword ptr [ebp-128]
and ecx, 480
test ecx, ecx
je .Lt_0C6A
mov dword ptr [ebp-128], 8
.Lt_0C6A:
mov ecx, dword ptr [ebp-124]
cmp ecx, 9
sete cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp-124]
cmp eax, 14
sete al
shr eax, 1
sbb eax, eax
or ecx, eax
mov eax, dword ptr [ebp-128]
cmp eax, 9
sete al
shr eax, 1
sbb eax, eax
or ecx, eax
mov eax, dword ptr [ebp-128]
cmp eax, 14
sete al
shr eax, 1
sbb eax, eax
or ecx, eax
je .Lt_0C6C
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 11
push offset Lt_0C3E
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 5
push offset Lt_0C40
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-240]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-240]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-240]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0C6B
.Lt_0C6C:
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 4
push offset Lt_0C43
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 6
push offset Lt_0C45
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-240]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-240]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-240]
push eax
call fb_StrDelete
add esp, 16
.Lt_0C6B:
cmp dword ptr [ebp+20], 0
jne .Lt_0C74
sub esp, 8
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_0C75
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-240]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-240]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-240]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0C73
.Lt_0C74:
sub esp, 8
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_0C75
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-240]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-240]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-240]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call RESTORE_VRREG
add esp, 16
.Lt_0C73:
jmp .Lt_0ABB
.Lt_0C7C:
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+8]
call HGETBOPCODE
add esp, 16
push eax
push 45
push offset Lt_0C7F
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0ABB
.Lt_0ABC:
mov eax, dword ptr [ebp-180]
add eax, 4294967268
cmp eax, 22
ja .Lt_0C7C
mov eax, dword ptr [ebp-180]
jmp dword ptr [.LT_0C83+eax*4-112]
.LT_0C83:
.int .Lt_0ABE
.int .Lt_0B8C
.int .Lt_0B9B
.int .Lt_0C7C
.int .Lt_0C21
.int .Lt_0C50
.int .Lt_0ACE
.int .Lt_0AD6
.int .Lt_0C7C
.int .Lt_0C7C
.int .Lt_0B4C
.int .Lt_0B53
.int .Lt_0ADD
.int .Lt_0BFF
.int .Lt_0BFF
.int .Lt_0C7C
.int .Lt_0C7C
.int .Lt_0BA7
.int .Lt_0BA7
.int .Lt_0BA7
.int .Lt_0BA7
.int .Lt_0BA7
.int .Lt_0BA7
.Lt_0ABB:
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_0963:
pop ebx
mov esp, ebp
pop ebp
ret
.size HLOADOPERANDSANDWRITEBOP, .-HLOADOPERANDSANDWRITEBOP
.balign 16
_EMITBOP:
.type _EMITBOP, @function
push ebp
mov ebp, esp
sub esp, 36
push ebx
.Lt_0C84:
mov dword ptr [ebp-4], 0
cmp dword ptr [ebp+24], 0
je .Lt_0C87
jmp .Lt_0C86
.Lt_0C87:
cmp dword ptr [ebp+20], 0
jne .Lt_0C88
.Lt_0C88:
.Lt_0C86:
cmp dword ptr [ebp+20], 0
jne .Lt_0C8A
.Lt_0C8A:
.Lt_0C89:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+32], 0
je .Lt_0C91
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+28]
cmp ebx, dword ptr [eax+4]
setne bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-24], ebx
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+28]
and ebx, 480
je .Lt_0C8B
mov dword ptr [ebp-8], 24
jmp .Lt_1B68
.Lt_0C8B:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+28]
and ebx, 31
mov dword ptr [ebp-8], ebx
.Lt_1B68:
mov ebx, dword ptr [ebp-8]
imul ebx, 28
mov eax, dword ptr [SYMB_DTYPETB+ebx]
test eax, eax
sete al
shr eax, 1
sbb eax, eax
and eax, dword ptr [ebp-24]
mov dword ptr [ebp-28], eax
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_0C8D
mov dword ptr [ebp-12], 24
jmp .Lt_1B69
.Lt_0C8D:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-12], eax
.Lt_1B69:
mov eax, dword ptr [ebp-12]
imul eax, 28
mov dword ptr [ebp-32], eax
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+28]
and eax, 480
je .Lt_0C8F
mov dword ptr [ebp-16], 24
jmp .Lt_1B6A
.Lt_0C8F:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+28]
and eax, 31
mov dword ptr [ebp-16], eax
.Lt_1B6A:
mov eax, dword ptr [ebp-16]
imul eax, 28
mov ebx, dword ptr [ebp-32]
mov ecx, dword ptr [SYMB_DTYPETB+eax+4]
cmp ecx, dword ptr [SYMB_DTYPETB+ebx+4]
setne cl
shr ecx, 1
sbb ecx, ecx
and ecx, dword ptr [ebp-28]
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
mov dword ptr [ebp-20], ecx
jmp .Lt_1B67
.Lt_0C91:
mov dword ptr [ebp-20], 0
.Lt_1B67:
cmp dword ptr [ebp-20], 0
je .Lt_0C94
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+4]
mov dword ptr [ebp-4], ebx
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ecx+28]
mov dword ptr [ebx+4], eax
sub esp, 4
push 0
push dword ptr [ebp-4]
push dword ptr [ebp+12]
call _SETVREGDATATYPE
add esp, 16
.Lt_0C94:
.Lt_0C93:
sub esp, 12
push dword ptr [ebp+24]
push dword ptr [ebp+20]
push dword ptr [ebp+16]
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call HLOADOPERANDSANDWRITEBOP
add esp, 32
.Lt_0C85:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITBOP, .-_EMITBOP
.balign 16
_EMITUOP:
.type _EMITUOP, @function
push ebp
mov ebp, esp
sub esp, 180
push ebx
.Lt_0C95:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-48], 0
cmp dword ptr [ebp+16], 0
jne .Lt_0C98
.Lt_0C98:
.Lt_0C97:
cmp dword ptr [ebp+16], 0
je .Lt_0C9A
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
je .Lt_0C9C
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-64], ebx
cmp dword ptr [ebp-64], 4
jne .Lt_0C9F
.Lt_0CA0:
sub esp, 8
push -1
mov ebx, dword ptr [ebp+16]
push dword ptr [ebx+12]
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-40], eax
jmp .Lt_0C9D
.Lt_0C9F:
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 47
push offset Lt_0CA4
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
.Lt_0CA1:
.Lt_0C9D:
jmp .Lt_0C9B
.Lt_0C9C:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+16]
mov ecx, dword ptr [eax+12]
mov dword ptr [ebx+12], ecx
sub esp, 12
mov ecx, dword ptr [ebp+12]
push dword ptr [ecx+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-40], eax
.Lt_0C9B:
.Lt_0C9A:
.Lt_0C99:
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+4]
mov dword ptr [ebp-48], ecx
mov ecx, dword ptr [ebp-48]
and ecx, 480
test ecx, ecx
je .Lt_0CA8
mov dword ptr [ebp-48], 8
.Lt_0CA8:
cmp dword ptr [ebp-48], 8
je .Lt_0CAB
.Lt_0CAC:
cmp dword ptr [ebp-48], 9
je .Lt_0CAB
.Lt_0CAD:
cmp dword ptr [ebp-48], 13
je .Lt_0CAB
.Lt_0CAE:
cmp dword ptr [ebp-48], 14
je .Lt_0CAB
.Lt_0CAF:
cmp dword ptr [ebp-48], 16
je .Lt_0CAB
.Lt_0CB0:
cmp dword ptr [ebp-48], 10
jne .Lt_0CAA
.Lt_0CAB:
sub esp, 12
push 0
push 11
push offset Lt_096E
push -1
lea ecx, [ebp-36]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0CA9
.Lt_0CAA:
cmp dword ptr [ebp-48], 11
je .Lt_0CB2
.Lt_0CB3:
cmp dword ptr [ebp-48], 12
je .Lt_0CB2
.Lt_0CB4:
cmp dword ptr [ebp-48], 15
jne .Lt_0CB1
.Lt_0CB2:
sub esp, 12
push 0
push 11
push offset Lt_0973
push -1
lea ecx, [ebp-36]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0CA9
.Lt_0CB1:
cmp dword ptr [ebp-48], 5
je .Lt_0CB6
.Lt_0CB7:
cmp dword ptr [ebp-48], 6
jne .Lt_0CB5
.Lt_0CB6:
sub esp, 12
push 0
push 10
push offset Lt_0977
push -1
lea ecx, [ebp-36]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0CA9
.Lt_0CB5:
cmp dword ptr [ebp-48], 2
je .Lt_0CB9
.Lt_0CBA:
cmp dword ptr [ebp-48], 3
je .Lt_0CB9
.Lt_0CBB:
cmp dword ptr [ebp-48], 1
je .Lt_0CB9
.Lt_0CBC:
cmp dword ptr [ebp-48], 4
jne .Lt_0CB8
.Lt_0CB9:
sub esp, 12
push 0
push 10
push offset Lt_097D
push -1
lea ecx, [ebp-36]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_0CA9
.Lt_0CB8:
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset Lt_0000
push -1
lea ecx, [ebp-72]
push ecx
call fb_StrAssign
add esp, 20
lea ecx, [ebp-72]
push ecx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ecx, [ebp-72]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov ecx, dword ptr [ebp+12]
push dword ptr [ecx+4]
call fb_IntToStr
add esp, 16
push eax
push 48
push offset Lt_0982
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
.Lt_0CBD:
.Lt_0CA9:
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
mov dword ptr [ebp-64], ecx
cmp dword ptr [ebp-64], 4
jne .Lt_0CC4
.Lt_0CC5:
cmp dword ptr [ebp-48], 1
jne .Lt_0CC7
sub esp, 12
push 0
push 0
sub esp, 8
mov ecx, dword ptr [ebp+12]
push dword ptr [ecx+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRB+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0CC6
.Lt_0CC7:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_0CC6:
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0CC2
.Lt_0CC4:
cmp dword ptr [ebp-64], 2
jne .Lt_0CC8
.Lt_0CC9:
sub esp, 4
lea eax, [ebp-24]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+12]
call PREPARE_IDX
add esp, 16
jmp .Lt_0CC2
.Lt_0CC8:
cmp dword ptr [ebp-64], 3
jne .Lt_0CCA
.Lt_0CCB:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+48]
push dword ptr [ecx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0CC2
.Lt_0CCA:
cmp dword ptr [ebp-64], 5
jne .Lt_0CCF
.Lt_0CD0:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0CC2
.Lt_0CCF:
cmp dword ptr [ebp-64], 0
jne .Lt_0CD4
.Lt_0CD5:
jmp .Lt_0CC2
.Lt_0CD4:
cmp dword ptr [ebp-64], 1
jne .Lt_0CD6
.Lt_0CD7:
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+32]
mov ecx, dword ptr [ebx+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
je .Lt_0CD9
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ecx, dword ptr [ebp+12]
push dword ptr [ecx+40]
push dword ptr [ecx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0CD8
.Lt_0CD9:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_0CD8:
jmp .Lt_0CC2
.Lt_0CD6:
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 43
push offset Lt_0CE1
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
.Lt_0CDE:
.Lt_0CC2:
push 1
push offset Lt_0000
push -1
lea eax, [ebp-24]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_0CE5
sub esp, 12
lea eax, [ebp-24]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_0CE5:
sub esp, 12
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
cmp dword ptr [ebp+8], 52
jne .Lt_0CE8
cmp dword ptr [ebp+16], 0
setne al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx]
cmp ebx, 4
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_0CEA
cmp dword ptr [ebp-48], 8
je .Lt_0CED
.Lt_0CEE:
cmp dword ptr [ebp-48], 9
je .Lt_0CED
.Lt_0CEF:
cmp dword ptr [ebp-48], 13
je .Lt_0CED
.Lt_0CF0:
cmp dword ptr [ebp-48], 14
je .Lt_0CED
.Lt_0CF1:
cmp dword ptr [ebp-48], 10
jne .Lt_0CEC
.Lt_0CED:
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
sub esp, 8
push -1
lea ebx, [ebp-12]
push ebx
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov ebx, dword ptr [ebp-40]
push dword ptr [REGSTRQ+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea ebx, [ebp-72]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0CEB
.Lt_0CEC:
cmp dword ptr [ebp-48], 11
je .Lt_0CF7
.Lt_0CF8:
cmp dword ptr [ebp-48], 12
jne .Lt_0CF6
.Lt_0CF7:
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRD+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRD+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0CEB
.Lt_0CF6:
cmp dword ptr [ebp-48], 5
je .Lt_0CFE
.Lt_0CFF:
cmp dword ptr [ebp-48], 6
jne .Lt_0CFD
.Lt_0CFE:
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRW+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRW+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0CEB
.Lt_0CFD:
cmp dword ptr [ebp-48], 2
je .Lt_0D05
.Lt_0D06:
cmp dword ptr [ebp-48], 3
je .Lt_0D05
.Lt_0D07:
cmp dword ptr [ebp-48], 1
je .Lt_0D05
.Lt_0D08:
cmp dword ptr [ebp-48], 4
jne .Lt_0D04
.Lt_0D05:
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRB+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRB+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0CEB
.Lt_0D04:
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 49
push offset Lt_0A4A
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
.Lt_0D0D:
.Lt_0CEB:
.Lt_0CEA:
.Lt_0CE9:
cmp dword ptr [ebp-48], 1
jne .Lt_0D13
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 6
push offset Lt_0D14
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 6
push offset Lt_0D19
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-132]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-132]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-132]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D12
.Lt_0D13:
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0AE6
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
.Lt_0D12:
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0C96
.Lt_0CE8:
.Lt_0CE7:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+4], 15
jne .Lt_0D1F
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_0D21
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 12
push offset Lt_0D22
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D20
.Lt_0D21:
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 13
push offset Lt_0D25
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
.Lt_0D20:
cmp dword ptr [ebp+8], 60
jne .Lt_0D29
.Lt_0D2A:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset Lt_0D2B
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D28
.Lt_0D29:
cmp dword ptr [ebp+8], 58
jne .Lt_0D2D
.Lt_0D2E:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset Lt_0D2F
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D28
.Lt_0D2D:
cmp dword ptr [ebp+8], 69
jne .Lt_0D31
.Lt_0D32:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset Lt_0D33
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D28
.Lt_0D31:
cmp dword ptr [ebp+8], 68
jne .Lt_0D35
.Lt_0D36:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset Lt_0D37
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D28
.Lt_0D35:
cmp dword ptr [ebp+8], 61
jne .Lt_0D39
.Lt_0D3A:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 6
push offset Lt_0D3B
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D28
.Lt_0D39:
cmp dword ptr [ebp+8], 59
jne .Lt_0D3D
.Lt_0D3E:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 6
push offset Lt_0D3F
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D28
.Lt_0D3D:
cmp dword ptr [ebp+8], 62
jne .Lt_0D41
.Lt_0D42:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset Lt_0D43
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D28
.Lt_0D41:
cmp dword ptr [ebp+8], 63
jne .Lt_0D45
.Lt_0D46:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 6
push offset Lt_0D47
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D28
.Lt_0D45:
cmp dword ptr [ebp+8], 65
jne .Lt_0D49
.Lt_0D4A:
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 18
push offset Lt_0D4B
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D28
.Lt_0D49:
cmp dword ptr [ebp+8], 56
jne .Lt_0D4D
.Lt_0D4E:
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 20
push offset Lt_0D4F
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 15
push offset Lt_0D51
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 17
push offset Lt_0D53
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 16
push offset Lt_0D55
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call RESTORE_VRREG
add esp, 16
jmp .Lt_0D28
.Lt_0D4D:
cmp dword ptr [ebp+8], 57
jne .Lt_0D57
.Lt_0D58:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 13
push offset Lt_0D59
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D28
.Lt_0D57:
cmp dword ptr [ebp+8], 72
jne .Lt_0D5B
.Lt_0D5C:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 9
push offset Lt_0D5D
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D28
.Lt_0D5B:
cmp dword ptr [ebp+8], 71
jne .Lt_0D5F
.Lt_0D60:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 13
push offset Lt_0D61
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D28
.Lt_0D5F:
cmp dword ptr [ebp+8], 70
jne .Lt_0D63
.Lt_0D64:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 7
push offset Lt_0D65
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D28
.Lt_0D63:
cmp dword ptr [ebp+8], 54
jne .Lt_0D67
.Lt_0D68:
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 20
push offset Lt_0D6A
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 15
push offset Lt_0D51
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 17
push offset Lt_0D6D
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call RESTORE_VRREG
add esp, 16
jmp .Lt_0D28
.Lt_0D67:
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 47
push offset Lt_0D72
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
.Lt_0D6F:
.Lt_0D28:
cmp dword ptr [ebp+8], 57
jne .Lt_0D76
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_0D77
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRD+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D75
.Lt_0D76:
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRD+eax*4]
push 6
push offset Lt_0733
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
.Lt_0D75:
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0C96
.Lt_0D1F:
.Lt_0D1E:
mov eax, dword ptr [ebp+8]
cmp eax, 56
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+4]
cmp ecx, 16
setne cl
shr ecx, 1
sbb ecx, ecx
and eax, ecx
je .Lt_0D7F
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
sub esp, 8
push -1
lea ecx, [ebp-12]
push ecx
push 10
push offset Lt_0406
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea ecx, [ebp-72]
push ecx
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [REGHANDLE+12], -2
je .Lt_0D83
mov eax, dword ptr [REGHANDLE+12]
mov dword ptr [ebp-44], eax
sub esp, 8
push -1
push dword ptr [ebp-44]
call REG_FINDFREE
add esp, 16
mov dword ptr [REGHANDLE+12], -2
sub esp, 8
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
sub esp, 8
push 0
push dword ptr [REGSTRQ+12]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
sub esp, 12
push dword ptr [ebp-44]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-168]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-168]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-168]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp-40], 3
jne .Lt_0D89
sub esp, 12
push dword ptr [ebp-44]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-40], eax
.Lt_0D89:
jmp .Lt_0D82
.Lt_0D83:
or dword ptr [CTX+112], 8
.Lt_0D82:
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 4
push offset Lt_0C43
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 13
push offset Lt_0D8B
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
push 0
push 13
push offset Lt_0D8D
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-120]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+16], 0
jne .Lt_0D90
sub esp, 8
push 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-156]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-156]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-156]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0D8F
.Lt_0D90:
sub esp, 8
push 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-156]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-156]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-156]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call RESTORE_VRREG
add esp, 16
.Lt_0D8F:
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0C96
.Lt_0D7F:
.Lt_0D7E:
mov eax, dword ptr [ebp+8]
cmp eax, 54
sete al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+4]
cmp ebx, 16
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_0D98
cmp dword ptr [ebp+16], 0
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
cmp ecx, 4
setne cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
je .Lt_0D9A
sub esp, 8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
sub esp, 8
push -1
lea ecx, [ebp-12]
push ecx
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov ecx, dword ptr [ebp-40]
push dword ptr [REGSTRQ+ecx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea ecx, [ebp-96]
push ecx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-132]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-132]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-132]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_0D9A:
.Lt_0D99:
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0BF7
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+16], 0
je .Lt_0DA2
sub esp, 8
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call RESTORE_VRREG
add esp, 16
.Lt_0DA2:
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0C96
.Lt_0D98:
.Lt_0D97:
mov eax, dword ptr [ebp+8]
cmp eax, 57
sete al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+4]
cmp ebx, 16
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_0DA4
push 0
push dword ptr [REGSTRQ+8]
push -1
lea ebx, [ebp-12]
push ebx
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_0DA6
cmp dword ptr [REGHANDLE+8], -2
je .Lt_0DA8
mov eax, dword ptr [REGHANDLE+8]
mov dword ptr [ebp-44], eax
sub esp, 8
push -1
push dword ptr [ebp-44]
call REG_FINDFREE
add esp, 16
mov dword ptr [REGHANDLE+8], -2
sub esp, 8
push 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push -1
sub esp, 8
push 0
push dword ptr [REGSTRQ+8]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
sub esp, 12
push dword ptr [ebp-44]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-156]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-156]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-156]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 8
push dword ptr [ebp-44]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
cmp dword ptr [ebp-40], 2
jne .Lt_0DAE
sub esp, 12
push dword ptr [ebp-44]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-40], eax
.Lt_0DAE:
jmp .Lt_0DA7
.Lt_0DA8:
or dword ptr [CTX+112], 4
.Lt_0DA7:
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 10
push offset Lt_0C0C
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
.Lt_0DA6:
.Lt_0DA5:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 8
push offset Lt_0DB1
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 16
push offset Lt_0DB3
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+16], 0
jne .Lt_0DB6
sub esp, 8
push 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-120]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DB5
.Lt_0DB6:
sub esp, 8
push 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-120]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
.Lt_0DB5:
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0C96
.Lt_0DA4:
.Lt_0DA3:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_0DBE
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 12
push offset Lt_0DBF
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DBD
.Lt_0DBE:
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 13
push offset Lt_0DC2
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
.Lt_0DBD:
cmp dword ptr [ebp+8], 60
jne .Lt_0DC6
.Lt_0DC7:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 4
push offset Lt_0DC8
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DC5
.Lt_0DC6:
cmp dword ptr [ebp+8], 58
jne .Lt_0DCA
.Lt_0DCB:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 4
push offset Lt_0DCC
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DC5
.Lt_0DCA:
cmp dword ptr [ebp+8], 69
jne .Lt_0DCE
.Lt_0DCF:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 4
push offset Lt_0DD0
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DC5
.Lt_0DCE:
cmp dword ptr [ebp+8], 68
jne .Lt_0DD2
.Lt_0DD3:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 4
push offset Lt_0DD4
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DC5
.Lt_0DD2:
cmp dword ptr [ebp+8], 61
jne .Lt_0DD6
.Lt_0DD7:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset Lt_0DD8
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DC5
.Lt_0DD6:
cmp dword ptr [ebp+8], 59
jne .Lt_0DDA
.Lt_0DDB:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset Lt_0DDC
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DC5
.Lt_0DDA:
cmp dword ptr [ebp+8], 62
jne .Lt_0DDE
.Lt_0DDF:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 4
push offset Lt_0DE0
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DC5
.Lt_0DDE:
cmp dword ptr [ebp+8], 63
jne .Lt_0DE2
.Lt_0DE3:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset Lt_0DE4
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DC5
.Lt_0DE2:
cmp dword ptr [ebp+8], 56
jne .Lt_0DE6
.Lt_0DE7:
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 28
push offset Lt_0DE8
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 15
push offset Lt_0DEA
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 17
push offset Lt_0DEC
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 16
push offset Lt_0DEE
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call RESTORE_VRREG
add esp, 16
jmp .Lt_0DC5
.Lt_0DE6:
cmp dword ptr [ebp+8], 65
jne .Lt_0DF0
.Lt_0DF1:
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 18
push offset Lt_0DF2
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call RESTORE_VRREG
add esp, 16
jmp .Lt_0DC5
.Lt_0DF0:
cmp dword ptr [ebp+8], 57
jne .Lt_0DF4
.Lt_0DF5:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 13
push offset Lt_0DF6
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DC5
.Lt_0DF4:
cmp dword ptr [ebp+8], 72
jne .Lt_0DF8
.Lt_0DF9:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 9
push offset Lt_0DFA
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DC5
.Lt_0DF8:
cmp dword ptr [ebp+8], 71
jne .Lt_0DFC
.Lt_0DFD:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 13
push offset Lt_0DFE
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DC5
.Lt_0DFC:
cmp dword ptr [ebp+8], 70
jne .Lt_0E00
.Lt_0E01:
sub esp, 4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 6
push offset Lt_0E02
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call SAVE_CALL
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0DC5
.Lt_0E00:
cmp dword ptr [ebp+8], 54
jne .Lt_0E04
.Lt_0E05:
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 28
push offset Lt_0E07
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 15
push offset Lt_0DEA
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 17
push offset Lt_0E0A
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call RESTORE_VRREG
add esp, 16
jmp .Lt_0DC5
.Lt_0E04:
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 47
push offset Lt_0E0F
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
.Lt_0E0C:
.Lt_0DC5:
cmp dword ptr [ebp+8], 57
jne .Lt_0E13
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_0D77
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRQ+eax*4]
push 8
push offset Lt_0E14
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0E12
.Lt_0E13:
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [REGSTRQ+eax*4]
push 6
push offset Lt_0739
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
.Lt_0E12:
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_0C96:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITUOP, .-_EMITUOP
.balign 16
HEMITROUNDFLOAT:
.type HEMITROUNDFLOAT, @function
push ebp
mov ebp, esp
sub esp, 168
.Lt_0E1B:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov byte ptr [CTX+136], 1
sub esp, 8
push 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push 51
push offset Lt_0E1D
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-36]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 4
push offset Lt_0910
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-60]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+8], 16
jne .Lt_0E22
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 20
push offset Lt_0E23
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+12], 14
je .Lt_0E26
sub esp, 8
push 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push 20
push offset Lt_0E27
push -1
lea eax, [ebp-156]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-156]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-156]
push eax
call fb_StrDelete
add esp, 16
.Lt_0E26:
.Lt_0E25:
jmp .Lt_0E21
.Lt_0E22:
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 20
push offset Lt_0E29
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+12], 14
je .Lt_0E2C
sub esp, 8
push 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push 20
push offset Lt_0E2D
push -1
lea eax, [ebp-156]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-156]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-156]
push eax
call fb_StrDelete
add esp, 16
.Lt_0E2C:
.Lt_0E2B:
.Lt_0E21:
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 5
push offset Lt_0E2F
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+8], 16
jne .Lt_0E35
cmp dword ptr [ebp+12], 14
je .Lt_0E37
sub esp, 12
push offset Lt_0E38
call NO_ROUNDSD
add esp, 16
jmp .Lt_0E36
.Lt_0E37:
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 15
push offset Lt_0E39
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
.Lt_0E36:
jmp .Lt_0E34
.Lt_0E35:
cmp dword ptr [ebp+12], 14
je .Lt_0E3C
sub esp, 12
push offset Lt_0E3D
call NO_ROUNDSD
add esp, 16
jmp .Lt_0E3B
.Lt_0E3C:
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 16
push offset Lt_0E3E
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
.Lt_0E3B:
.Lt_0E34:
sub esp, 8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-132]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-132]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-132]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_0E1C:
mov esp, ebp
pop ebp
ret
.size HEMITROUNDFLOAT, .-HEMITROUNDFLOAT
.balign 16
_EMITCONVERT:
.type _EMITCONVERT, @function
push ebp
mov ebp, esp
sub esp, 516
push ebx
.Lt_0E42:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-132], 0
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax], 4
je .Lt_0E45
sub esp, 8
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-184]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-184]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-184]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push 44
push offset Lt_0E48
push -1
lea eax, [ebp-196]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-196]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-196]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-208]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-208]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-208]
push eax
call fb_StrDelete
add esp, 16
.Lt_0E45:
.Lt_0E44:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 511
mov dword ptr [ebp-4], ebx
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+4]
and eax, 511
mov dword ptr [ebp-8], eax
mov eax, dword ptr [ebp-4]
and eax, 480
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-8]
and ebx, 480
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_0E4C
push edi
push esi
mov edi, dword ptr [ebp+8]
mov esi, dword ptr [ebp+12]
mov ecx, 17
rep movsd
pop esi
pop edi
sub esp, 12
lea ebx, [ebp-120]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-108]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-96]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-84]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-72]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-60]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-48]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-36]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-24]
push ebx
call fb_StrDelete
add esp, 16
jmp .Lt_0E43
.Lt_0E4C:
.Lt_0E4B:
mov ebx, dword ptr [ebp-4]
and ebx, 480
test ebx, ebx
je .Lt_0E4E
mov dword ptr [ebp-4], 13
.Lt_0E4E:
mov ebx, dword ptr [ebp-8]
and ebx, 480
test ebx, ebx
je .Lt_0E50
mov dword ptr [ebp-8], 13
.Lt_0E50:
cmp dword ptr [ebp-4], 8
jne .Lt_0E52
mov dword ptr [ebp-4], 13
jmp .Lt_0E51
.Lt_0E52:
cmp dword ptr [ebp-4], 10
jne .Lt_0E53
mov dword ptr [ebp-4], 13
jmp .Lt_0E51
.Lt_0E53:
cmp dword ptr [ebp-4], 9
jne .Lt_0E54
mov dword ptr [ebp-4], 14
.Lt_0E54:
.Lt_0E51:
cmp dword ptr [ebp-8], 8
jne .Lt_0E56
mov dword ptr [ebp-8], 13
jmp .Lt_0E55
.Lt_0E56:
cmp dword ptr [ebp-8], 10
jne .Lt_0E57
mov dword ptr [ebp-8], 13
jmp .Lt_0E55
.Lt_0E57:
cmp dword ptr [ebp-8], 9
jne .Lt_0E58
mov dword ptr [ebp-8], 14
.Lt_0E58:
.Lt_0E55:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx]
cmp eax, 4
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx]
cmp ecx, 4
sete cl
shr ecx, 1
sbb ecx, ecx
and eax, ecx
mov dword ptr [ebp-176], eax
mov eax, dword ptr [ebp-4]
and eax, 480
je .Lt_0E59
mov dword ptr [ebp-136], 24
jmp .Lt_1B7E
.Lt_0E59:
mov eax, dword ptr [ebp-4]
and eax, 31
mov dword ptr [ebp-136], eax
.Lt_1B7E:
mov eax, dword ptr [ebp-136]
imul eax, 28
mov dword ptr [ebp-180], eax
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_0E5B
mov dword ptr [ebp-140], 24
jmp .Lt_1B7F
.Lt_0E5B:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-140], eax
.Lt_1B7F:
mov eax, dword ptr [ebp-140]
imul eax, 28
mov ecx, dword ptr [ebp-180]
mov ebx, dword ptr [SYMB_DTYPETB+eax+4]
cmp ebx, dword ptr [SYMB_DTYPETB+ecx+4]
sete bl
shr ebx, 1
sbb ebx, ebx
and ebx, dword ptr [ebp-176]
mov dword ptr [ebp-184], ebx
mov ebx, dword ptr [ebp-4]
and ebx, 480
je .Lt_0E5D
mov dword ptr [ebp-144], 24
jmp .Lt_1B80
.Lt_0E5D:
mov ebx, dword ptr [ebp-4]
and ebx, 31
mov dword ptr [ebp-144], ebx
.Lt_1B80:
mov ebx, dword ptr [ebp-144]
imul ebx, 28
mov dword ptr [ebp-188], ebx
mov ebx, dword ptr [ebp-8]
and ebx, 480
je .Lt_0E5F
mov dword ptr [ebp-148], 24
jmp .Lt_1B81
.Lt_0E5F:
mov ebx, dword ptr [ebp-8]
and ebx, 31
mov dword ptr [ebp-148], ebx
.Lt_1B81:
mov ebx, dword ptr [ebp-148]
imul ebx, 28
mov ecx, dword ptr [ebp-188]
mov eax, dword ptr [SYMB_DTYPETB+ebx]
cmp eax, dword ptr [SYMB_DTYPETB+ecx]
sete al
shr eax, 1
sbb eax, eax
and eax, dword ptr [ebp-184]
je .Lt_0E62
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [eax+12]
mov dword ptr [ecx+12], ebx
sub esp, 12
lea ebx, [ebp-120]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-108]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-96]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-84]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-72]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-60]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-48]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-36]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-24]
push ebx
call fb_StrDelete
add esp, 16
jmp .Lt_0E43
.Lt_0E62:
.Lt_0E61:
mov ebx, dword ptr [ebp-4]
cmp ebx, 13
sete bl
shr ebx, 1
sbb ebx, ebx
mov ecx, dword ptr [ebp-8]
cmp ecx, 13
sete cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
mov ecx, dword ptr [ebp-4]
cmp ecx, 14
sete cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp-8]
cmp eax, 14
sete al
shr eax, 1
sbb eax, eax
and ecx, eax
or ebx, ecx
je .Lt_0E64
push edi
push esi
mov edi, dword ptr [ebp+8]
mov esi, dword ptr [ebp+12]
mov ecx, 17
rep movsd
pop esi
pop edi
sub esp, 12
lea ecx, [ebp-120]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-108]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-96]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-84]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-72]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-60]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-48]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-36]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-24]
push ecx
call fb_StrDelete
add esp, 16
jmp .Lt_0E43
.Lt_0E64:
.Lt_0E63:
mov ecx, dword ptr [ebp-4]
cmp ecx, 13
sete cl
shr ecx, 1
sbb ecx, ecx
mov ebx, dword ptr [ebp-8]
cmp ebx, 14
sete bl
shr ebx, 1
sbb ebx, ebx
and ecx, ebx
mov ebx, dword ptr [ebp-8]
cmp ebx, 13
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp-4]
cmp eax, 14
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
or ecx, ebx
je .Lt_0E66
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+4]
mov dword ptr [ebp-12], ecx
push edi
push esi
mov edi, dword ptr [ebp+8]
mov esi, dword ptr [ebp+12]
mov ecx, 17
rep movsd
pop esi
pop edi
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ebp-12]
mov dword ptr [ecx+4], ebx
sub esp, 12
lea ebx, [ebp-120]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-108]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-96]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-84]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-72]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-60]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-48]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-36]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-24]
push ebx
call fb_StrDelete
add esp, 16
jmp .Lt_0E43
.Lt_0E66:
.Lt_0E65:
mov ebx, dword ptr [ebp-4]
cmp ebx, 17
sete bl
shr ebx, 1
sbb ebx, ebx
mov ecx, dword ptr [ebp-8]
cmp ecx, 20
sete cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
je .Lt_0E68
push edi
push esi
mov edi, dword ptr [ebp+8]
mov esi, dword ptr [ebp+12]
mov ecx, 17
rep movsd
pop esi
pop edi
sub esp, 12
lea ecx, [ebp-120]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-108]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-96]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-84]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-72]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-60]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-48]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-36]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ecx, [ebp-24]
push ecx
call fb_StrDelete
add esp, 16
jmp .Lt_0E43
.Lt_0E68:
.Lt_0E67:
mov ecx, dword ptr [ebp-4]
cmp ecx, 20
sete cl
shr ecx, 1
sbb ecx, ecx
mov ebx, dword ptr [ebp-8]
cmp ebx, 20
sete bl
shr ebx, 1
sbb ebx, ebx
and ecx, ebx
je .Lt_0E6A
push edi
push esi
mov edi, dword ptr [ebp+8]
mov esi, dword ptr [ebp+12]
mov ecx, 17
rep movsd
pop esi
pop edi
sub esp, 12
lea ebx, [ebp-120]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-108]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-96]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-84]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-72]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-60]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-48]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-36]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-24]
push ebx
call fb_StrDelete
add esp, 16
jmp .Lt_0E43
.Lt_0E6A:
.Lt_0E69:
sub esp, 8
push -1
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+12]
call REG_FINDFREE
add esp, 16
sub esp, 12
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-124], eax
cmp dword ptr [ebp-4], 17
jne .Lt_0E6C
mov dword ptr [ebp-4], 13
.Lt_0E6C:
cmp dword ptr [ebp-4], 13
je .Lt_0E6F
.Lt_0E70:
cmp dword ptr [ebp-4], 14
je .Lt_0E6F
.Lt_0E71:
cmp dword ptr [ebp-4], 16
je .Lt_0E6F
.Lt_0E72:
cmp dword ptr [ebp-4], 20
jne .Lt_0E6E
.Lt_0E6F:
sub esp, 12
push 0
push 11
push offset Lt_096E
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0E6D
.Lt_0E6E:
cmp dword ptr [ebp-4], 11
je .Lt_0E74
.Lt_0E75:
cmp dword ptr [ebp-4], 12
je .Lt_0E74
.Lt_0E76:
cmp dword ptr [ebp-4], 15
jne .Lt_0E73
.Lt_0E74:
sub esp, 12
push 0
push 11
push offset Lt_0973
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [REGSTRD+eax*4]
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0E6D
.Lt_0E73:
cmp dword ptr [ebp-4], 5
je .Lt_0E78
.Lt_0E79:
cmp dword ptr [ebp-4], 6
jne .Lt_0E77
.Lt_0E78:
sub esp, 12
push 0
push 10
push offset Lt_0977
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [REGSTRW+eax*4]
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0E6D
.Lt_0E77:
cmp dword ptr [ebp-4], 2
je .Lt_0E7B
.Lt_0E7C:
cmp dword ptr [ebp-4], 3
je .Lt_0E7B
.Lt_0E7D:
cmp dword ptr [ebp-4], 1
je .Lt_0E7B
.Lt_0E7E:
cmp dword ptr [ebp-4], 4
jne .Lt_0E7A
.Lt_0E7B:
sub esp, 12
push 0
push 10
push offset Lt_097D
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [REGSTRB+eax*4]
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0E6D
.Lt_0E7A:
sub esp, 8
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-184]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-184]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-184]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+8]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 55
push offset Lt_0E83
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-208]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-208]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-208]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-220]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-220]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-220]
push eax
call fb_StrDelete
add esp, 16
.Lt_0E7F:
.Lt_0E6D:
cmp dword ptr [ebp-8], 13
je .Lt_0E89
.Lt_0E8A:
cmp dword ptr [ebp-8], 14
je .Lt_0E89
.Lt_0E8B:
cmp dword ptr [ebp-8], 16
je .Lt_0E89
.Lt_0E8C:
cmp dword ptr [ebp-8], 20
jne .Lt_0E88
.Lt_0E89:
sub esp, 12
push 0
push 11
push offset Lt_096E
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0E87
.Lt_0E88:
cmp dword ptr [ebp-8], 11
je .Lt_0E8E
.Lt_0E8F:
cmp dword ptr [ebp-8], 12
je .Lt_0E8E
.Lt_0E90:
cmp dword ptr [ebp-8], 15
jne .Lt_0E8D
.Lt_0E8E:
sub esp, 12
push 0
push 11
push offset Lt_0973
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0E87
.Lt_0E8D:
cmp dword ptr [ebp-8], 5
je .Lt_0E92
.Lt_0E93:
cmp dword ptr [ebp-8], 6
jne .Lt_0E91
.Lt_0E92:
sub esp, 12
push 0
push 10
push offset Lt_0977
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0E87
.Lt_0E91:
cmp dword ptr [ebp-8], 2
je .Lt_0E95
.Lt_0E96:
cmp dword ptr [ebp-8], 3
je .Lt_0E95
.Lt_0E97:
cmp dword ptr [ebp-8], 1
je .Lt_0E95
.Lt_0E98:
cmp dword ptr [ebp-8], 4
jne .Lt_0E94
.Lt_0E95:
sub esp, 12
push 0
push 10
push offset Lt_097D
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0E87
.Lt_0E94:
cmp dword ptr [ebp-8], 7
jne .Lt_0E99
.Lt_0E9A:
cmp dword ptr [SYMB_DTYPETB+200], 2
jne .Lt_0E9C
sub esp, 12
push 0
push 10
push offset Lt_0977
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-8], 6
jmp .Lt_0E9B
.Lt_0E9C:
cmp dword ptr [SYMB_DTYPETB+200], 4
jne .Lt_0E9D
sub esp, 12
push 0
push 11
push offset Lt_0973
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-8], 12
jmp .Lt_0E9B
.Lt_0E9D:
sub esp, 8
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-184]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-184]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-184]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push 55
push offset Lt_0EA0
push -1
lea eax, [ebp-196]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-196]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-196]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-208]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-208]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-208]
push eax
call fb_StrDelete
add esp, 16
.Lt_0E9B:
jmp .Lt_0E87
.Lt_0E99:
sub esp, 8
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-184]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-184]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-184]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 55
push offset Lt_0EA7
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-208]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-208]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-208]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-220]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-220]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-220]
push eax
call fb_StrDelete
add esp, 16
.Lt_0EA3:
.Lt_0E87:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-176], ebx
cmp dword ptr [ebp-176], 2
jne .Lt_0EAD
.Lt_0EAE:
sub esp, 4
lea ebx, [ebp-96]
push ebx
lea ebx, [ebp-72]
push ebx
push dword ptr [ebp+12]
call PREPARE_IDX
add esp, 16
jmp .Lt_0EAB
.Lt_0EAD:
cmp dword ptr [ebp-176], 4
jne .Lt_0EAF
.Lt_0EB0:
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea ebx, [ebp-120]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-128], eax
mov eax, dword ptr [ebp-8]
and eax, 480
test eax, eax
je .Lt_0EB2
mov dword ptr [ebp-8], 13
.Lt_0EB2:
cmp dword ptr [ebp-8], 13
je .Lt_0EB5
.Lt_0EB6:
cmp dword ptr [ebp-8], 14
je .Lt_0EB5
.Lt_0EB7:
cmp dword ptr [ebp-8], 16
jne .Lt_0EB4
.Lt_0EB5:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-128]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0EB3
.Lt_0EB4:
cmp dword ptr [ebp-8], 11
je .Lt_0EB9
.Lt_0EBA:
cmp dword ptr [ebp-8], 12
je .Lt_0EB9
.Lt_0EBB:
cmp dword ptr [ebp-8], 15
jne .Lt_0EB8
.Lt_0EB9:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-128]
push dword ptr [REGSTRD+eax*4]
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0EB3
.Lt_0EB8:
cmp dword ptr [ebp-8], 5
je .Lt_0EBD
.Lt_0EBE:
cmp dword ptr [ebp-8], 6
jne .Lt_0EBC
.Lt_0EBD:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-128]
push dword ptr [REGSTRW+eax*4]
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0EB3
.Lt_0EBC:
cmp dword ptr [ebp-8], 2
je .Lt_0EC0
.Lt_0EC1:
cmp dword ptr [ebp-8], 3
je .Lt_0EC0
.Lt_0EC2:
cmp dword ptr [ebp-8], 1
je .Lt_0EC0
.Lt_0EC3:
cmp dword ptr [ebp-8], 4
jne .Lt_0EBF
.Lt_0EC0:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-128]
push dword ptr [REGSTRB+eax*4]
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0EB3
.Lt_0EBF:
sub esp, 8
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-188]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-188]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-188]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 55
push offset Lt_0EC8
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
.Lt_0EC4:
.Lt_0EB3:
jmp .Lt_0EAB
.Lt_0EAF:
cmp dword ptr [ebp-176], 1
jne .Lt_0ECC
.Lt_0ECD:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0ECF
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0ECE
.Lt_0ECF:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
.Lt_0ECE:
jmp .Lt_0EAB
.Lt_0ECC:
cmp dword ptr [ebp-176], 3
jne .Lt_0ED4
.Lt_0ED5:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0EAB
.Lt_0ED4:
cmp dword ptr [ebp-176], 5
jne .Lt_0ED9
.Lt_0EDA:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 31
cmp ebx, 22
jne .Lt_0EDE
mov ebx, dword ptr [CTX+212]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-216], ebx
jmp .Lt_1B86
.Lt_0EDE:
mov dword ptr [ebp-216], 0
.Lt_1B86:
cmp dword ptr [ebp-216], 0
je .Lt_0EE0
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-220], eax
jmp .Lt_1B87
.Lt_0EE0:
mov dword ptr [ebp-220], 0
.Lt_1B87:
cmp dword ptr [ebp-220], 0
je .Lt_0EE3
sub esp, 8
push 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push -1
sub esp, 8
sub esp, 12
sub esp, 4
push 1
push offset Lt_0118
call fb_StrAllocTempDescZEx
add esp, 12
push eax
lea eax, [ebp-72]
push eax
push 1
call fb_StrInstr
add esp, 24
dec eax
push eax
lea eax, [ebp-72]
push eax
call fb_LEFT
add esp, 16
push eax
push 20
push offset Lt_0EE4
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-256]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-256]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-256]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 3
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
lea eax, [ebp-268]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
lea eax, [ebp-280]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-292]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-292]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-292]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0EE2
.Lt_0EE3:
sub esp, 8
push 3
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_012E
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-268]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-268]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-268]
push eax
call fb_StrDelete
add esp, 16
.Lt_0EE2:
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0E43
jmp .Lt_0EAB
.Lt_0ED9:
cmp dword ptr [ebp-176], 0
jne .Lt_0EEF
.Lt_0EF0:
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_0EF1
mov dword ptr [ebp-180], 24
jmp .Lt_1B88
.Lt_0EF1:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-180], eax
.Lt_1B88:
mov eax, dword ptr [ebp-180]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax], 1
jne .Lt_0EF4
sub esp, 12
push 0
push -1
sub esp, 12
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
mov eax, dword ptr [ebp+12]
push dword ptr [eax+28]
push dword ptr [eax+24]
call HFLOATTOHEX_ASM64
add esp, 28
push eax
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_0EF3
.Lt_0EF4:
sub esp, 12
push 0
push -1
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+28]
push dword ptr [eax+24]
call fb_LongintToStr
add esp, 12
push eax
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
.Lt_0EF3:
jmp .Lt_0EAB
.Lt_0EEF:
sub esp, 8
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-188]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-188]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-188]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 29
push offset Lt_0EF8
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
.Lt_0EF5:
.Lt_0EAB:
push 1
push offset Lt_0000
push -1
lea eax, [ebp-96]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_0EFC
sub esp, 12
lea eax, [ebp-96]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_0EFC:
mov eax, dword ptr [ebp-4]
and eax, 480
je .Lt_0EFD
mov dword ptr [ebp-152], 24
jmp .Lt_1B89
.Lt_0EFD:
mov eax, dword ptr [ebp-4]
and eax, 31
mov dword ptr [ebp-152], eax
.Lt_1B89:
mov eax, dword ptr [ebp-152]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax], 1
jne .Lt_0F00
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_0F01
mov dword ptr [ebp-176], 24
jmp .Lt_1B8A
.Lt_0F01:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-176], eax
.Lt_1B8A:
mov eax, dword ptr [ebp-176]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax], 1
jne .Lt_0F04
cmp dword ptr [ebp-4], 16
jne .Lt_0F06
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_0F08
sub esp, 8
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push 12
push offset Lt_0D22
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
lea eax, [ebp-248]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-260]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-260]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-260]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 5
push offset Lt_0F0B
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
.Lt_0F08:
.Lt_0F07:
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push 16
push offset Lt_0F0C
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-236]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-236]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-236]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0F05
.Lt_0F06:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_0F13
sub esp, 8
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push 12
push offset Lt_0F14
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
lea eax, [ebp-248]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-260]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-260]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-260]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 5
push offset Lt_0F17
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
.Lt_0F13:
.Lt_0F12:
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push 16
push offset Lt_0F18
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 6
push offset Lt_0733
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-236]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-236]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-236]
push eax
call fb_StrDelete
add esp, 16
.Lt_0F05:
jmp .Lt_0F03
.Lt_0F04:
sub esp, 8
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 15
push offset Lt_0F1E
push -1
lea eax, [ebp-188]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-188]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-188]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp-8], 14
jne .Lt_0F21
.Lt_0F22:
cmp dword ptr [ebp-4], 16
jne .Lt_0F24
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 14
push offset Lt_0F27
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 4
push offset Lt_0F29
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-248]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-248]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-248]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push 19
push offset Lt_0F2C
push -1
lea eax, [ebp-260]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-260]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-260]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-36]
push eax
push 5
push offset Lt_0E2F
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-284]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-284]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-284]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-308]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-308]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-308]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push -1
push 999999
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-132], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-132]
mov dword ptr [REGHANDLE+eax*4], -2
sub esp, 8
push 0
mov dword ptr [ebp-344], 0
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-48]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
lea eax, [ebp-332]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-344]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-344]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-344]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-368], 0
mov dword ptr [ebp-364], 0
mov dword ptr [ebp-360], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-48]
push eax
push 5
push offset Lt_0647
mov dword ptr [ebp-356], 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
lea eax, [ebp-356]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-368]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-368]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-368]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-380], 0
mov dword ptr [ebp-376], 0
mov dword ptr [ebp-372], 0
push 0
push 11
push offset Lt_0F37
push -1
lea eax, [ebp-380]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-380]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-380]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-416], 0
mov dword ptr [ebp-412], 0
mov dword ptr [ebp-408], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-48]
push eax
push 4
push offset Lt_06B7
mov dword ptr [ebp-392], 0
mov dword ptr [ebp-388], 0
mov dword ptr [ebp-384], 0
lea eax, [ebp-392]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-404], 0
mov dword ptr [ebp-400], 0
mov dword ptr [ebp-396], 0
lea eax, [ebp-404]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-416]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-416]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-416]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-440], 0
mov dword ptr [ebp-436], 0
mov dword ptr [ebp-432], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-48]
push eax
push 16
push offset Lt_0F3C
mov dword ptr [ebp-428], 0
mov dword ptr [ebp-424], 0
mov dword ptr [ebp-420], 0
lea eax, [ebp-428]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-440]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-440]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-440]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-452], 0
mov dword ptr [ebp-448], 0
mov dword ptr [ebp-444], 0
push 0
push 17
push offset Lt_0F3F
push -1
lea eax, [ebp-452]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-452]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-452]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-476], 0
mov dword ptr [ebp-472], 0
mov dword ptr [ebp-468], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-464], 0
mov dword ptr [ebp-460], 0
mov dword ptr [ebp-456], 0
lea eax, [ebp-464]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-476]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-476]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-476]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-512], 0
mov dword ptr [ebp-508], 0
mov dword ptr [ebp-504], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-488], 0
mov dword ptr [ebp-484], 0
mov dword ptr [ebp-480], 0
lea eax, [ebp-488]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-500], 0
mov dword ptr [ebp-496], 0
mov dword ptr [ebp-492], 0
lea eax, [ebp-500]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-512]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-512]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-512]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0F23
.Lt_0F24:
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 14
push offset Lt_0F48
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 4
push offset Lt_0F29
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-248]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-248]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-248]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push 19
push offset Lt_0F4C
push -1
lea eax, [ebp-260]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-260]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-260]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-36]
push eax
push 5
push offset Lt_0E2F
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-284]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-284]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-284]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-308]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-308]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-308]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push -1
push 999999
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-132], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-132]
mov dword ptr [REGHANDLE+eax*4], -2
sub esp, 8
push 0
mov dword ptr [ebp-344], 0
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-48]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
lea eax, [ebp-332]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-344]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-344]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-344]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-368], 0
mov dword ptr [ebp-364], 0
mov dword ptr [ebp-360], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-48]
push eax
push 5
push offset Lt_0647
mov dword ptr [ebp-356], 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
lea eax, [ebp-356]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-368]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-368]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-368]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-380], 0
mov dword ptr [ebp-376], 0
mov dword ptr [ebp-372], 0
push 0
push 11
push offset Lt_0F37
push -1
lea eax, [ebp-380]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-380]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-380]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-416], 0
mov dword ptr [ebp-412], 0
mov dword ptr [ebp-408], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-48]
push eax
push 4
push offset Lt_06B7
mov dword ptr [ebp-392], 0
mov dword ptr [ebp-388], 0
mov dword ptr [ebp-384], 0
lea eax, [ebp-392]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-404], 0
mov dword ptr [ebp-400], 0
mov dword ptr [ebp-396], 0
lea eax, [ebp-404]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-416]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-416]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-416]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-440], 0
mov dword ptr [ebp-436], 0
mov dword ptr [ebp-432], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-48]
push eax
push 16
push offset Lt_0F5B
mov dword ptr [ebp-428], 0
mov dword ptr [ebp-424], 0
mov dword ptr [ebp-420], 0
lea eax, [ebp-428]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-440]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-440]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-440]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-452], 0
mov dword ptr [ebp-448], 0
mov dword ptr [ebp-444], 0
push 0
push 17
push offset Lt_0F5E
push -1
lea eax, [ebp-452]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-452]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-452]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-476], 0
mov dword ptr [ebp-472], 0
mov dword ptr [ebp-468], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-464], 0
mov dword ptr [ebp-460], 0
mov dword ptr [ebp-456], 0
lea eax, [ebp-464]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-476]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-476]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-476]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-512], 0
mov dword ptr [ebp-508], 0
mov dword ptr [ebp-504], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 6
push offset Lt_0733
mov dword ptr [ebp-488], 0
mov dword ptr [ebp-484], 0
mov dword ptr [ebp-480], 0
lea eax, [ebp-488]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-500], 0
mov dword ptr [ebp-496], 0
mov dword ptr [ebp-492], 0
lea eax, [ebp-500]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-512]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-512]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-512]
push eax
call fb_StrDelete
add esp, 16
.Lt_0F23:
jmp .Lt_0F20
.Lt_0F21:
cmp dword ptr [ebp-8], 13
jne .Lt_0F65
.Lt_0F66:
cmp dword ptr [ebp-4], 16
jne .Lt_0F68
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-120]
push eax
push 16
push offset Lt_0F3C
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
lea eax, [ebp-248]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-260]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-260]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-260]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0F67
.Lt_0F68:
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-120]
push eax
push 16
push offset Lt_0F5B
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 6
push offset Lt_0733
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
lea eax, [ebp-248]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-260]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-260]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-260]
push eax
call fb_StrDelete
add esp, 16
.Lt_0F67:
jmp .Lt_0F20
.Lt_0F65:
cmp dword ptr [ebp-8], 11
je .Lt_0F76
.Lt_0F77:
cmp dword ptr [ebp-8], 12
jne .Lt_0F75
.Lt_0F76:
cmp dword ptr [ebp-4], 16
jne .Lt_0F79
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-120]
push eax
push 16
push offset Lt_0F3C
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
lea eax, [ebp-248]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-260]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-260]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-260]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0F78
.Lt_0F79:
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-120]
push eax
push 16
push offset Lt_0F5B
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 6
push offset Lt_0733
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
lea eax, [ebp-248]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-260]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-260]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-260]
push eax
call fb_StrDelete
add esp, 16
.Lt_0F78:
jmp .Lt_0F20
.Lt_0F75:
cmp dword ptr [ebp-8], 2
je .Lt_0F87
.Lt_0F88:
cmp dword ptr [ebp-8], 5
je .Lt_0F87
.Lt_0F89:
cmp dword ptr [ebp-8], 3
je .Lt_0F87
.Lt_0F8A:
cmp dword ptr [ebp-8], 6
je .Lt_0F87
.Lt_0F8B:
cmp dword ptr [ebp-8], 1
je .Lt_0F87
.Lt_0F8C:
cmp dword ptr [ebp-8], 4
jne .Lt_0F86
.Lt_0F87:
mov eax, dword ptr [ebp-8]
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-8]
cmp ebx, 5
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0F8E
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea ebx, [ebp-72]
push ebx
push -1
sub esp, 4
push -1
lea ebx, [ebp-120]
push ebx
push 12
push offset Lt_0F8F
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea ebx, [ebp-200]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0F8D
.Lt_0F8E:
cmp dword ptr [ebp-8], 1
jne .Lt_0F93
sub esp, 8
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0F94
push -1
sub esp, 4
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-120]
push eax
push 5
push offset Lt_0BE5
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-236]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-236]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-236]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push 9
push offset Lt_0F99
push -1
lea eax, [ebp-248]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-248]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-248]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push 7
push offset Lt_0F9B
push -1
lea eax, [ebp-260]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-260]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-260]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
push 0
push 14
push offset Lt_0F9D
push -1
lea eax, [ebp-272]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-272]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-272]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0F8D
.Lt_0F93:
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-120]
push eax
push 12
push offset Lt_0F9F
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
.Lt_0F8D:
cmp dword ptr [ebp-4], 16
jne .Lt_0FA4
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 19
push offset Lt_0FA5
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-236]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-236]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-236]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0FA3
.Lt_0FA4:
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 19
push offset Lt_0FAA
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 6
push offset Lt_0733
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-236]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-236]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-236]
push eax
call fb_StrDelete
add esp, 16
.Lt_0FA3:
jmp .Lt_0F20
.Lt_0F86:
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push 52
push offset Lt_0FB2
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
.Lt_0FAF:
.Lt_0F20:
.Lt_0F03:
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0E43
.Lt_0F00:
.Lt_0EFF:
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_0FB5
mov dword ptr [ebp-156], 24
jmp .Lt_1B8B
.Lt_0FB5:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-156], eax
.Lt_1B8B:
mov eax, dword ptr [ebp-156]
imul eax, 28
mov ebx, dword ptr [SYMB_DTYPETB+eax]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-176], ebx
mov ebx, dword ptr [ebp-4]
and ebx, 480
je .Lt_0FB7
mov dword ptr [ebp-160], 24
jmp .Lt_1B8C
.Lt_0FB7:
mov ebx, dword ptr [ebp-4]
and ebx, 31
mov dword ptr [ebp-160], ebx
.Lt_1B8C:
mov ebx, dword ptr [ebp-160]
imul ebx, 28
mov eax, dword ptr [SYMB_DTYPETB+ebx]
test eax, eax
sete al
shr eax, 1
sbb eax, eax
and eax, dword ptr [ebp-176]
je .Lt_0FBA
cmp dword ptr [ebp-8], 16
jne .Lt_0FBC
cmp dword ptr [ebp-4], 14
jne .Lt_0FBE
sub esp, 8
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 29
push offset Lt_0FBF
push -1
lea eax, [ebp-188]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-188]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-188]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 15
push offset Lt_0FC1
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push 15
push offset Lt_0FC5
push -1
lea eax, [ebp-236]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-236]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-236]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 14
push 16
call HEMITROUNDFLOAT
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push 19
push offset Lt_0FC7
push -1
lea eax, [ebp-248]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-248]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-248]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 5
push offset Lt_0FC9
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-272]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-272]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-272]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push 20
push offset Lt_0E27
push -1
lea eax, [ebp-284]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-284]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-284]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-36]
push eax
push 5
push offset Lt_0E2F
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-308]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-308]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-308]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-332]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-332]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-332]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-344], 0
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
push 0
push 17
push offset Lt_0FD1
push -1
lea eax, [ebp-344]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-344]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-344]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-356], 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
push 0
push 17
push offset Lt_0FD3
push -1
lea eax, [ebp-356]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-356]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-356]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-368], 0
mov dword ptr [ebp-364], 0
mov dword ptr [ebp-360], 0
push 0
push 20
push offset Lt_0E27
push -1
lea eax, [ebp-368]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-368]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-368]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push -1
push 999999
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-132], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-132]
mov dword ptr [REGHANDLE+eax*4], -2
sub esp, 8
push 0
mov dword ptr [ebp-404], 0
mov dword ptr [ebp-400], 0
mov dword ptr [ebp-396], 0
push 0
push -1
sub esp, 8
push 23
push offset Lt_0FD7
push -1
sub esp, 4
push -1
lea eax, [ebp-48]
push eax
push 8
push offset Lt_0FD6
mov dword ptr [ebp-380], 0
mov dword ptr [ebp-376], 0
mov dword ptr [ebp-372], 0
lea eax, [ebp-380]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-392], 0
mov dword ptr [ebp-388], 0
mov dword ptr [ebp-384], 0
lea eax, [ebp-392]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-404]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-404]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-404]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-428], 0
mov dword ptr [ebp-424], 0
mov dword ptr [ebp-420], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-48]
push eax
push 9
push offset Lt_0FDB
mov dword ptr [ebp-416], 0
mov dword ptr [ebp-412], 0
mov dword ptr [ebp-408], 0
lea eax, [ebp-416]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-428]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-428]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-428]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-452], 0
mov dword ptr [ebp-448], 0
mov dword ptr [ebp-444], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-440], 0
mov dword ptr [ebp-436], 0
mov dword ptr [ebp-432], 0
lea eax, [ebp-440]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-452]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-452]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-452]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-488], 0
mov dword ptr [ebp-484], 0
mov dword ptr [ebp-480], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-464], 0
mov dword ptr [ebp-460], 0
mov dword ptr [ebp-456], 0
lea eax, [ebp-464]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-476], 0
mov dword ptr [ebp-472], 0
mov dword ptr [ebp-468], 0
lea eax, [ebp-476]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-488]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-488]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-488]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0FBD
.Lt_0FBE:
mov eax, dword ptr [ebp-4]
cmp eax, 13
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-4]
cmp ebx, 11
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 12
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 5
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 6
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 3
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 4
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0FE3
mov ebx, dword ptr [ebp+12]
cmp dword ptr [ebx], 4
jne .Lt_0FE5
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
sub esp, 8
push -1
lea ebx, [ebp-72]
push ebx
push 12
push offset Lt_0DBF
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea ebx, [ebp-188]
push ebx
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0FE4
.Lt_0FE5:
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push 13
push offset Lt_0DC2
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
.Lt_0FE4:
sub esp, 8
push -2147483648
push 16
call HEMITROUNDFLOAT
add esp, 16
cmp dword ptr [ebp-4], 13
jne .Lt_0FEB
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0FEA
.Lt_0FEB:
mov eax, dword ptr [ebp-4]
cmp eax, 11
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-4]
cmp ebx, 12
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0FEF
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_0D77
push -1
sub esp, 4
push -1
lea ebx, [ebp-60]
push ebx
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea ebx, [ebp-188]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0FEA
.Lt_0FEF:
mov eax, dword ptr [ebp-4]
cmp eax, 5
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-4]
cmp ebx, 6
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0FF3
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_0FF4
push -1
sub esp, 4
push -1
lea ebx, [ebp-60]
push ebx
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea ebx, [ebp-188]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0FEA
.Lt_0FF3:
cmp dword ptr [ebp-4], 1
jne .Lt_0FF9
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 11
push offset Lt_0FFA
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push 9
push offset Lt_0F99
push -1
lea eax, [ebp-236]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-236]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-236]
push eax
call fb_StrDelete
add esp, 16
.Lt_0FF9:
.Lt_0FF8:
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_0BF1
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
.Lt_0FEA:
jmp .Lt_0FBD
.Lt_0FE3:
sub esp, 8
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-188]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-188]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-188]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 44
push offset Lt_1002
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
.Lt_0FBD:
jmp .Lt_0FBB
.Lt_0FBC:
cmp dword ptr [ebp-4], 14
jne .Lt_1006
sub esp, 8
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 20
push offset Lt_1007
push -1
lea eax, [ebp-188]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-188]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-188]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 15
push offset Lt_0FC1
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push 10
push offset Lt_0A9C
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push 15
push offset Lt_100C
push -1
lea eax, [ebp-236]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-236]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-236]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 14
push 15
call HEMITROUNDFLOAT
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push 19
push offset Lt_100E
push -1
lea eax, [ebp-248]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-248]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-248]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 5
push offset Lt_0FC9
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-272]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-272]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-272]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push 20
push offset Lt_0E2D
push -1
lea eax, [ebp-284]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-284]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-284]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-36]
push eax
push 5
push offset Lt_0E2F
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-308]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-308]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-308]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-332]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-332]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-332]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-344], 0
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
push 0
push 17
push offset Lt_1017
push -1
lea eax, [ebp-344]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-344]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-344]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-356], 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
push 0
push 17
push offset Lt_1019
push -1
lea eax, [ebp-356]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-356]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-356]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-368], 0
mov dword ptr [ebp-364], 0
mov dword ptr [ebp-360], 0
push 0
push 20
push offset Lt_0E2D
push -1
lea eax, [ebp-368]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-368]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-368]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push -1
push 999999
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-132], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-132]
mov dword ptr [REGHANDLE+eax*4], -2
sub esp, 8
push 0
mov dword ptr [ebp-404], 0
mov dword ptr [ebp-400], 0
mov dword ptr [ebp-396], 0
push 0
push -1
sub esp, 8
push 23
push offset Lt_0FD7
push -1
sub esp, 4
push -1
lea eax, [ebp-48]
push eax
push 8
push offset Lt_0FD6
mov dword ptr [ebp-380], 0
mov dword ptr [ebp-376], 0
mov dword ptr [ebp-372], 0
lea eax, [ebp-380]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-392], 0
mov dword ptr [ebp-388], 0
mov dword ptr [ebp-384], 0
lea eax, [ebp-392]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-404]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-404]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-404]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-428], 0
mov dword ptr [ebp-424], 0
mov dword ptr [ebp-420], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-48]
push eax
push 9
push offset Lt_0FDB
mov dword ptr [ebp-416], 0
mov dword ptr [ebp-412], 0
mov dword ptr [ebp-408], 0
lea eax, [ebp-416]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-428]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-428]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-428]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-452], 0
mov dword ptr [ebp-448], 0
mov dword ptr [ebp-444], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-440], 0
mov dword ptr [ebp-436], 0
mov dword ptr [ebp-432], 0
lea eax, [ebp-440]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-452]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-452]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-452]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-488], 0
mov dword ptr [ebp-484], 0
mov dword ptr [ebp-480], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-464], 0
mov dword ptr [ebp-460], 0
mov dword ptr [ebp-456], 0
lea eax, [ebp-464]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-476], 0
mov dword ptr [ebp-472], 0
mov dword ptr [ebp-468], 0
lea eax, [ebp-476]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-488]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-488]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-488]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1005
.Lt_1006:
mov eax, dword ptr [ebp-4]
cmp eax, 13
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-4]
cmp ebx, 11
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 12
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 5
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 6
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 3
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 4
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1026
mov ebx, dword ptr [ebp+12]
cmp dword ptr [ebx], 4
jne .Lt_1028
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
sub esp, 8
push -1
lea ebx, [ebp-72]
push ebx
push 12
push offset Lt_0D22
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea ebx, [ebp-188]
push ebx
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1027
.Lt_1028:
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push 13
push offset Lt_0D25
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
.Lt_1027:
sub esp, 8
push -2147483648
push 15
call HEMITROUNDFLOAT
add esp, 16
cmp dword ptr [ebp-4], 13
jne .Lt_102E
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_102D
.Lt_102E:
mov eax, dword ptr [ebp-4]
cmp eax, 11
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-4]
cmp ebx, 12
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1032
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_0D77
push -1
sub esp, 4
push -1
lea ebx, [ebp-60]
push ebx
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea ebx, [ebp-188]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_102D
.Lt_1032:
mov eax, dword ptr [ebp-4]
cmp eax, 5
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-4]
cmp ebx, 6
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1036
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_0FF4
push -1
sub esp, 4
push -1
lea ebx, [ebp-60]
push ebx
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea ebx, [ebp-188]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_102D
.Lt_1036:
cmp dword ptr [ebp-4], 1
jne .Lt_103B
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 11
push offset Lt_0FFA
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push 9
push offset Lt_0F99
push -1
lea eax, [ebp-236]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-236]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-236]
push eax
call fb_StrDelete
add esp, 16
.Lt_103B:
.Lt_103A:
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_0BF1
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
.Lt_102D:
jmp .Lt_1005
.Lt_1026:
sub esp, 8
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-188]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-188]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-188]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 44
push offset Lt_1043
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-212]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-212]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-212]
push eax
call fb_StrDelete
add esp, 16
.Lt_1005:
.Lt_0FBB:
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0E43
.Lt_0FBA:
.Lt_0FB9:
mov eax, dword ptr [ebp-4]
cmp eax, 20
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-8]
cmp ebx, 20
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1047
cmp dword ptr [ebp-8], 20
jne .Lt_1049
sub esp, 8
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push -1
sub esp, 8
push -1
lea ebx, [ebp-72]
push ebx
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea ebx, [ebp-60]
push ebx
push 5
push offset Lt_012E
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea ebx, [ebp-184]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
lea eax, [ebp-208]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-220]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-220]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-220]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp-4], 13
jne .Lt_104F
sub esp, 8
push 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push -1
sub esp, 4
push 14
push offset Lt_1050
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
lea eax, [ebp-268]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-280]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-280]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-280]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_104E
.Lt_104F:
cmp dword ptr [ebp-4], 20
je .Lt_1056
sub esp, 8
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-232]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-232]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-232]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
push 0
push 62
push offset Lt_1059
push -1
lea eax, [ebp-244]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-244]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-244]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-256]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-256]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-256]
push eax
call fb_StrDelete
add esp, 16
.Lt_1056:
.Lt_104E:
jmp .Lt_1048
.Lt_1049:
sub esp, 8
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-184]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-184]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-184]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push 53
push offset Lt_105E
push -1
lea eax, [ebp-196]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-196]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-196]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-208]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-208]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-208]
push eax
call fb_StrDelete
add esp, 16
.Lt_1048:
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0E43
.Lt_1047:
.Lt_1046:
cmp dword ptr [ebp-4], 1
jne .Lt_1062
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 0
jne .Lt_1064
push 2
push offset Lt_0006
push -1
lea eax, [ebp-72]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
push 19
push offset Lt_1065
push -1
lea ebx, [ebp-72]
push ebx
mov ebx, eax
call fb_StrCompare
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
push 11
push offset Lt_1066
push -1
lea eax, [ebp-72]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
je .Lt_1068
sub esp, 8
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0F94
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-208]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-208]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-208]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1067
.Lt_1068:
sub esp, 8
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0AE2
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-208]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-208]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-208]
push eax
call fb_StrDelete
add esp, 16
.Lt_1067:
jmp .Lt_1063
.Lt_1064:
sub esp, 8
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0F94
push -1
sub esp, 4
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-120]
push eax
push 5
push offset Lt_0BE5
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
lea eax, [ebp-208]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-220]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-220]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-220]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push 9
push offset Lt_0F99
push -1
lea eax, [ebp-232]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-232]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-232]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_0BF1
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-268]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-268]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-268]
push eax
call fb_StrDelete
add esp, 16
.Lt_1063:
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0E43
.Lt_1062:
.Lt_1061:
cmp dword ptr [ebp-8], 1
jne .Lt_1078
sub esp, 8
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0F94
push -1
sub esp, 4
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-120]
push eax
push 5
push offset Lt_0BE5
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
lea eax, [ebp-208]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-220]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-220]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-220]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push 9
push offset Lt_0F99
push -1
lea eax, [ebp-232]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-232]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-232]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
push 0
push 7
push offset Lt_0F9B
push -1
lea eax, [ebp-244]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-244]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-244]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp-4]
and eax, 480
je .Lt_107F
mov dword ptr [ebp-248], 24
jmp .Lt_1B8E
.Lt_107F:
mov eax, dword ptr [ebp-4]
and eax, 31
mov dword ptr [ebp-248], eax
.Lt_1B8E:
mov eax, dword ptr [ebp-248]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax+4], 1
jne .Lt_1082
sub esp, 8
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_0BF1
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-284]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-284]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-284]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1081
.Lt_1082:
sub esp, 8
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_0BF1
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 7
push offset Lt_1086
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-284]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-284]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-284]
push eax
call fb_StrDelete
add esp, 16
.Lt_1081:
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0E43
.Lt_1078:
.Lt_1077:
mov eax, dword ptr [ebp-4]
and eax, 480
je .Lt_108A
mov dword ptr [ebp-164], 24
jmp .Lt_1B8F
.Lt_108A:
mov eax, dword ptr [ebp-4]
and eax, 31
mov dword ptr [ebp-164], eax
.Lt_1B8F:
mov eax, dword ptr [ebp-164]
imul eax, 28
mov dword ptr [ebp-176], eax
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_108C
mov dword ptr [ebp-168], 24
jmp .Lt_1B90
.Lt_108C:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-168], eax
.Lt_1B90:
mov eax, dword ptr [ebp-168]
imul eax, 28
mov ebx, dword ptr [ebp-176]
mov ecx, dword ptr [SYMB_DTYPETB+eax+4]
cmp dword ptr [SYMB_DTYPETB+ebx+4], ecx
jg .Lt_108F
mov ecx, dword ptr [ebp+12]
cmp dword ptr [ecx], 4
jne .Lt_1091
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea ecx, [ebp-108]
push ecx
call fb_StrAssign
add esp, 32
cmp dword ptr [ebp-4], 11
je .Lt_1094
.Lt_1095:
cmp dword ptr [ebp-4], 12
je .Lt_1094
.Lt_1096:
cmp dword ptr [ebp-4], 15
jne .Lt_1093
.Lt_1094:
sub esp, 12
push 0
push 0
mov ecx, dword ptr [ebp-128]
push dword ptr [REGSTRD+ecx*4]
push -1
lea ecx, [ebp-72]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_1092
.Lt_1093:
cmp dword ptr [ebp-4], 5
je .Lt_1098
.Lt_1099:
cmp dword ptr [ebp-4], 6
jne .Lt_1097
.Lt_1098:
sub esp, 12
push 0
push 0
mov ecx, dword ptr [ebp-128]
push dword ptr [REGSTRW+ecx*4]
push -1
lea ecx, [ebp-72]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_1092
.Lt_1097:
cmp dword ptr [ebp-4], 2
je .Lt_109B
.Lt_109C:
cmp dword ptr [ebp-4], 3
je .Lt_109B
.Lt_109D:
cmp dword ptr [ebp-4], 4
jne .Lt_109A
.Lt_109B:
sub esp, 12
push 0
push 0
mov ecx, dword ptr [ebp-128]
push dword ptr [REGSTRB+ecx*4]
push -1
lea ecx, [ebp-72]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_1092
.Lt_109A:
cmp dword ptr [ebp-4], 1
jne .Lt_109E
.Lt_109F:
jmp .Lt_1092
.Lt_109E:
cmp dword ptr [ebp-4], 13
je .Lt_10A1
.Lt_10A2:
cmp dword ptr [ebp-4], 14
je .Lt_10A1
.Lt_10A3:
cmp dword ptr [ebp-4], 16
jne .Lt_10A0
.Lt_10A1:
sub esp, 12
push 0
push 0
mov ecx, dword ptr [ebp-128]
push dword ptr [REGSTRQ+ecx*4]
push -1
lea ecx, [ebp-72]
push ecx
call fb_StrAssign
add esp, 32
jmp .Lt_1092
.Lt_10A0:
sub esp, 8
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push 1
push offset Lt_0000
push -1
lea ecx, [ebp-248]
push ecx
call fb_StrAssign
add esp, 20
lea ecx, [ebp-248]
push ecx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ecx, [ebp-248]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov ecx, dword ptr [ebp+12]
push dword ptr [ecx+4]
call fb_IntToStr
add esp, 16
push eax
push 55
push offset Lt_0EC8
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-272]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-272]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-272]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-284]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-284]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-284]
push eax
call fb_StrDelete
add esp, 16
.Lt_10A4:
.Lt_1092:
.Lt_1091:
.Lt_1090:
sub esp, 8
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-108]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-236]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-236]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-236]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_0E43
.Lt_108F:
.Lt_108E:
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_10AE
mov dword ptr [ebp-172], 24
jmp .Lt_1B92
.Lt_10AE:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-172], eax
.Lt_1B92:
mov eax, dword ptr [ebp-172]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax+8], 0
je .Lt_10B1
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_10B2
mov dword ptr [ebp-176], 24
jmp .Lt_1B93
.Lt_10B2:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-176], eax
.Lt_1B93:
mov eax, dword ptr [ebp-176]
imul eax, 28
mov ecx, dword ptr [SYMB_DTYPETB+eax+4]
mov dword ptr [ebp-180], ecx
cmp dword ptr [ebp-180], 1
je .Lt_10B7
.Lt_10B8:
cmp dword ptr [ebp-180], 2
jne .Lt_10B6
.Lt_10B7:
sub esp, 8
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
sub esp, 8
push -1
lea ecx, [ebp-72]
push ecx
push -1
sub esp, 4
push -1
lea ecx, [ebp-120]
push ecx
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea ecx, [ebp-60]
push ecx
push 7
push offset Lt_1086
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea ecx, [ebp-192]
push ecx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-240]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-240]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-240]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_10B4
.Lt_10B6:
cmp dword ptr [ebp-180], 4
jne .Lt_10BE
.Lt_10BF:
sub esp, 8
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-120]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 8
push offset Lt_0E14
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-240]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-240]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-240]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_10B4
.Lt_10BE:
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push 46
push offset Lt_10C8
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
.Lt_10C5:
.Lt_10B4:
jmp .Lt_10B0
.Lt_10B1:
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_10CB
mov dword ptr [ebp-176], 24
jmp .Lt_1B94
.Lt_10CB:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-176], eax
.Lt_1B94:
mov eax, dword ptr [ebp-176]
imul eax, 28
mov ecx, dword ptr [SYMB_DTYPETB+eax+4]
mov dword ptr [ebp-180], ecx
cmp dword ptr [ebp-180], 1
je .Lt_10D0
.Lt_10D1:
cmp dword ptr [ebp-180], 2
jne .Lt_10CF
.Lt_10D0:
sub esp, 8
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
sub esp, 8
push -1
lea ecx, [ebp-72]
push ecx
push -1
sub esp, 4
push -1
lea ecx, [ebp-120]
push ecx
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea ecx, [ebp-60]
push ecx
push 7
push offset Lt_069A
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea ecx, [ebp-192]
push ecx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-240]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-240]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-240]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_10CD
.Lt_10CF:
cmp dword ptr [ebp-180], 4
jne .Lt_10D7
.Lt_10D8:
sub esp, 8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-72]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [REGSTRD+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-228]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-228]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-228]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 3
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [REGSTRD+eax*4]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [REGSTRD+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-276]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-276]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-276]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_10CD
.Lt_10D7:
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push 46
push offset Lt_10E4
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-216]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-216]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-216]
push eax
call fb_StrDelete
add esp, 16
.Lt_10E1:
.Lt_10CD:
.Lt_10B0:
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
.Lt_0E43:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITCONVERT, .-_EMITCONVERT
.balign 16
EMITSTORESTRUCT:
.type EMITSTORESTRUCT, @function
push ebp
mov ebp, esp
sub esp, 132
push ebx
.Lt_10E7:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+40]
mov dword ptr [ebp-16], eax
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+36]
mov dword ptr [ebp-20], ebx
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+8]
mov ebx, dword ptr [eax+128]
mov dword ptr [ebp-24], ebx
push 1
push offset Lt_0000
push -1
push dword ptr [ebp+20]
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_10EA
sub esp, 12
push dword ptr [ebp+20]
call EMITOP3_OP4
add esp, 16
.Lt_10EA:
mov eax, dword ptr [ebp-24]
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-24]
cmp ebx, 3
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_10EC
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
push dword ptr [ebp+16]
push 5
push offset Lt_0389
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea ebx, [ebp-72]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_10EB
.Lt_10EC:
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_0949
push -1
sub esp, 4
push -1
push dword ptr [ebp+16]
push 6
push offset Lt_0739
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 15
push offset Lt_10F3
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
.Lt_10EB:
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax]
movzx eax, byte ptr [ebx]
cmp eax, 45
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp-16]
cmp eax, 9
sete al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp-16]
cmp ecx, 10
sete cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
mov ecx, dword ptr [ebp-16]
cmp ecx, 12
sete cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
mov ecx, dword ptr [ebp-16]
cmp ecx, 16
sete cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
and ebx, eax
je .Lt_10F6
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
sub esp, 12
sub esp, 12
sub esp, 4
push 5
push offset Lt_03BD
call fb_StrAllocTempDescZEx
add esp, 12
push eax
push dword ptr [ebp+16]
push 1
call fb_StrInstr
add esp, 24
dec eax
push eax
push dword ptr [ebp+16]
call fb_LEFT
add esp, 20
push eax
call fb_VALINT
add esp, 4
add eax, 8
push eax
call fb_IntToStr
add esp, 8
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
push dword ptr [ebp+16]
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-16]
mov dword ptr [ebp-124], eax
jmp .Lt_10F9
.Lt_10FB:
sub esp, 12
push 0
push 3
push offset Lt_00D9
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_10F8
.Lt_10FC:
sub esp, 12
push 0
push 3
push offset Lt_00C7
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_10F8
.Lt_10FD:
sub esp, 12
push 0
push 4
push offset Lt_00B5
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_10F8
.Lt_10FE:
sub esp, 12
push 0
push 4
push offset Lt_00A2
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_10F8
.Lt_10F9:
mov eax, dword ptr [ebp-124]
add eax, 4294967287
cmp eax, 7
ja .Lt_10F8
mov eax, dword ptr [ebp-124]
jmp dword ptr [.LT_10FF+eax*4-36]
.LT_10FF:
.int .Lt_10FB
.int .Lt_10FC
.int .Lt_10F8
.int .Lt_10FD
.int .Lt_10F8
.int .Lt_10F8
.int .Lt_10F8
.int .Lt_10FE
.Lt_10F8:
sub esp, 8
push 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
push dword ptr [ebp+16]
push 5
push offset Lt_0389
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-120]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_10E8
.Lt_10F6:
.Lt_10F5:
sub esp, 8
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+16]
push 10
push offset Lt_068E
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-48]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 11
push offset Lt_0691
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-60]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp-16]
mov dword ptr [ebp-64], eax
jmp .Lt_1108
.Lt_110A:
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 14
push offset Lt_110B
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1107
.Lt_110D:
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 14
push offset Lt_110E
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1107
.Lt_1110:
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 14
push offset Lt_110E
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 11
push offset Lt_1112
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 16
push offset Lt_1114
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1107
.Lt_1116:
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 15
push offset Lt_1117
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1107
.Lt_1119:
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 15
push offset Lt_1117
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 11
push offset Lt_111B
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 16
push offset Lt_111D
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1107
.Lt_111F:
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 15
push offset Lt_1117
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 11
push offset Lt_111B
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 16
push offset Lt_1122
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1107
.Lt_1124:
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 15
push offset Lt_1117
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 11
push offset Lt_111B
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 16
push offset Lt_1122
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 11
push offset Lt_1112
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push 16
push offset Lt_1129
push -1
lea eax, [ebp-124]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-124]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-124]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1107
.Lt_112B:
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 15
push offset Lt_112C
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1107
.Lt_1108:
mov eax, dword ptr [ebp-64]
add eax, 4294967287
cmp eax, 7
ja .Lt_1107
mov eax, dword ptr [ebp-64]
jmp dword ptr [.LT_112E+eax*4-36]
.LT_112E:
.int .Lt_110A
.int .Lt_110D
.int .Lt_1110
.int .Lt_1116
.int .Lt_1119
.int .Lt_111F
.int .Lt_1124
.int .Lt_112B
.Lt_1107:
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_10E8:
pop ebx
mov esp, ebp
pop ebp
ret
.size EMITSTORESTRUCT, .-EMITSTORESTRUCT
.balign 16
HISSTRUCTIN2REGS:
.type HISSTRUCTIN2REGS, @function
push ebp
mov ebp, esp
sub esp, 4
push ebx
mov dword ptr [ebp-4], 0
.Lt_112F:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 511
cmp ebx, 20
jne .Lt_1132
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+8]
mov ebx, dword ptr [eax+128]
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-4], ebx
jmp .Lt_1130
.Lt_1132:
.Lt_1131:
mov dword ptr [ebp-4], 0
.Lt_1130:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret
.size HISSTRUCTIN2REGS, .-HISSTRUCTIN2REGS
.balign 16
_EMITSTORE:
.type _EMITSTORE, @function
push ebp
mov ebp, esp
sub esp, 272
push ebx
push esi
.Lt_1133:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-104], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_1135
mov dword ptr [ebp-108], 24
jmp .Lt_1BD6
.Lt_1135:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-108], eax
.Lt_1BD6:
mov eax, dword ptr [ebp-108]
imul eax, 28
mov dword ptr [ebp-116], eax
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_1137
mov dword ptr [ebp-112], 24
jmp .Lt_1BD7
.Lt_1137:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-112], eax
.Lt_1BD7:
mov eax, dword ptr [ebp-112]
imul eax, 28
mov ebx, dword ptr [ebp-116]
mov ecx, dword ptr [SYMB_DTYPETB+eax+4]
cmp dword ptr [SYMB_DTYPETB+ebx+4], ecx
jge .Lt_113A
sub esp, 8
push 0
mov ecx, dword ptr [ebp+8]
push dword ptr [ecx+4]
call IRHLALLOCVREG
add esp, 16
mov dword ptr [ebp-120], eax
sub esp, 8
push dword ptr [ebp+12]
push dword ptr [ebp-120]
call _EMITCONVERT
add esp, 16
push edi
mov edi, dword ptr [ebp+12]
mov esi, dword ptr [ebp-120]
mov ecx, 17
rep movsd
pop edi
.Lt_113A:
.Lt_1139:
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax]
mov dword ptr [ebp-116], ecx
cmp dword ptr [ebp-116], 2
jne .Lt_113D
.Lt_113E:
sub esp, 4
lea ecx, [ebp-36]
push ecx
lea ecx, [ebp-12]
push ecx
push dword ptr [ebp+8]
call PREPARE_IDX
add esp, 16
jmp .Lt_113B
.Lt_113D:
cmp dword ptr [ebp-116], 4
jne .Lt_113F
.Lt_1140:
mov ecx, dword ptr [ebp+12]
cmp dword ptr [ecx], 0
jne .Lt_1142
sub esp, 8
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset Lt_0000
push -1
lea ecx, [ebp-128]
push ecx
call fb_StrAssign
add esp, 20
lea ecx, [ebp-128]
push ecx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ecx, [ebp-128]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push 96
push offset Lt_1145
push -1
lea ecx, [ebp-140]
push ecx
call fb_StrAssign
add esp, 20
lea ecx, [ebp-140]
push ecx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ecx, [ebp-140]
push ecx
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push 1
push offset Lt_0000
push -1
lea ecx, [ebp-152]
push ecx
call fb_StrAssign
add esp, 20
lea ecx, [ebp-152]
push ecx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ecx, [ebp-152]
push ecx
call fb_StrDelete
add esp, 16
mov ecx, dword ptr [ebp+12]
cmp dword ptr [ecx+28], 0
mov eax, -1
jg .Lt_1BE6
jl .Lt_1BE7
cmp dword ptr [ecx+24], 0
jae .Lt_1BE6
.Lt_1BE7:
xor eax, eax
.Lt_1BE6:
mov ecx, dword ptr [ebp+12]
cmp dword ptr [ecx+28], 0
mov ebx, -1
jl .Lt_1BE8
jg .Lt_1BE9
cmp dword ptr [ecx+24], 2147483647
jbe .Lt_1BE8
.Lt_1BE9:
xor ebx, ebx
.Lt_1BE8:
and eax, ebx
je .Lt_1149
sub esp, 12
push 0
push 0
sub esp, 8
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRD+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1148
.Lt_1149:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+8]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_1148:
jmp .Lt_1141
.Lt_1142:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
mov dword ptr [ebp-104], ebx
mov ebx, dword ptr [ebp-104]
and ebx, 480
test ebx, ebx
je .Lt_114B
mov dword ptr [ebp-104], 8
.Lt_114B:
cmp dword ptr [ebp-104], 8
je .Lt_114E
.Lt_114F:
cmp dword ptr [ebp-104], 9
je .Lt_114E
.Lt_1150:
cmp dword ptr [ebp-104], 13
je .Lt_114E
.Lt_1151:
cmp dword ptr [ebp-104], 14
je .Lt_114E
.Lt_1152:
cmp dword ptr [ebp-104], 16
je .Lt_114E
.Lt_1153:
cmp dword ptr [ebp-104], 10
jne .Lt_114D
.Lt_114E:
sub esp, 12
push 0
push 0
sub esp, 8
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_114C
.Lt_114D:
cmp dword ptr [ebp-104], 11
je .Lt_1155
.Lt_1156:
cmp dword ptr [ebp-104], 12
je .Lt_1155
.Lt_1157:
cmp dword ptr [ebp-104], 15
jne .Lt_1154
.Lt_1155:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+8]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRD+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_114C
.Lt_1154:
cmp dword ptr [ebp-104], 5
je .Lt_1159
.Lt_115A:
cmp dword ptr [ebp-104], 6
jne .Lt_1158
.Lt_1159:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+8]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRW+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_114C
.Lt_1158:
cmp dword ptr [ebp-104], 2
je .Lt_115C
.Lt_115D:
cmp dword ptr [ebp-104], 3
je .Lt_115C
.Lt_115E:
cmp dword ptr [ebp-104], 1
je .Lt_115C
.Lt_115F:
cmp dword ptr [ebp-104], 4
jne .Lt_115B
.Lt_115C:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+8]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRB+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_114C
.Lt_115B:
sub esp, 8
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-128]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-128]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-128]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 52
push offset Lt_1164
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-152]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-152]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-152]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-164]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-164]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-164]
push eax
call fb_StrDelete
add esp, 16
.Lt_1160:
.Lt_114C:
.Lt_1141:
jmp .Lt_113B
.Lt_113F:
cmp dword ptr [ebp-116], 1
jne .Lt_1168
.Lt_1169:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_116B
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_116A
.Lt_116B:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_116A:
jmp .Lt_113B
.Lt_1168:
cmp dword ptr [ebp-116], 3
jne .Lt_1170
.Lt_1171:
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+40], 0
jne .Lt_1BEC
cmp dword ptr [eax+36], 0
je .Lt_1173
.Lt_1BEC:
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+48], 0
jne .Lt_1175
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+40], 4294967295
mov ebx, -1
jl .Lt_1BED
jg .Lt_1BEE
cmp dword ptr [eax+36], 2147483648
jb .Lt_1BED
.Lt_1BEE:
xor ebx, ebx
.Lt_1BED:
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+40], 0
mov ecx, -1
jg .Lt_1BEF
jl .Lt_1BF0
cmp dword ptr [eax+36], 4294967295
ja .Lt_1BEF
.Lt_1BF0:
xor ecx, ecx
.Lt_1BEF:
or ebx, ecx
je .Lt_1177
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 8
mov ecx, dword ptr [ebp+8]
push dword ptr [ecx+40]
push dword ptr [ecx+36]
call fb_LongintToStr
add esp, 16
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1176
.Lt_1177:
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 8
mov eax, dword ptr [ebp+8]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push 10
push offset Lt_0A9C
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 32
.Lt_1176:
sub esp, 12
push 0
push 6
push offset Lt_0693
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1174
.Lt_1175:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+48]
push dword ptr [ecx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_1174:
jmp .Lt_1172
.Lt_1173:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+48]
push dword ptr [ecx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 2
push offset Lt_0118
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_1172:
jmp .Lt_113B
.Lt_1170:
cmp dword ptr [ebp-116], 5
jne .Lt_117F
.Lt_1180:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+8]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_113B
.Lt_117F:
sub esp, 8
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-128]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-128]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-128]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push 26
push offset Lt_1187
push -1
lea eax, [ebp-140]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-140]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-140]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-152]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-152]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-152]
push eax
call fb_StrDelete
add esp, 16
.Lt_1184:
.Lt_113B:
sub esp, 12
push dword ptr [ebp+12]
call HISSTRUCTIN2REGS
add esp, 16
test eax, eax
je .Lt_118B
lea eax, [ebp-36]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call EMITSTORESTRUCT
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1134
.Lt_118B:
.Lt_118A:
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
mov dword ptr [ebp-116], ecx
cmp dword ptr [ebp-116], 2
jne .Lt_118E
.Lt_118F:
sub esp, 4
lea ecx, [ebp-48]
push ecx
lea ecx, [ebp-24]
push ecx
push dword ptr [ebp+12]
call PREPARE_IDX
add esp, 16
jmp .Lt_118C
.Lt_118E:
cmp dword ptr [ebp-116], 4
jne .Lt_1190
.Lt_1191:
mov ecx, dword ptr [ebp+12]
mov eax, dword ptr [ecx+4]
mov dword ptr [ebp-104], eax
mov eax, dword ptr [ebp-104]
and eax, 480
test eax, eax
je .Lt_1193
mov dword ptr [ebp-104], 8
.Lt_1193:
cmp dword ptr [ebp-104], 8
je .Lt_1196
.Lt_1197:
cmp dword ptr [ebp-104], 9
je .Lt_1196
.Lt_1198:
cmp dword ptr [ebp-104], 13
je .Lt_1196
.Lt_1199:
cmp dword ptr [ebp-104], 14
je .Lt_1196
.Lt_119A:
cmp dword ptr [ebp-104], 16
je .Lt_1196
.Lt_119B:
cmp dword ptr [ebp-104], 10
jne .Lt_1195
.Lt_1196:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1194
.Lt_1195:
cmp dword ptr [ebp-104], 11
je .Lt_119D
.Lt_119E:
cmp dword ptr [ebp-104], 12
je .Lt_119D
.Lt_119F:
cmp dword ptr [ebp-104], 15
jne .Lt_119C
.Lt_119D:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRD+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1194
.Lt_119C:
cmp dword ptr [ebp-104], 5
je .Lt_11A1
.Lt_11A2:
cmp dword ptr [ebp-104], 6
jne .Lt_11A0
.Lt_11A1:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRW+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1194
.Lt_11A0:
cmp dword ptr [ebp-104], 2
je .Lt_11A4
.Lt_11A5:
cmp dword ptr [ebp-104], 3
je .Lt_11A4
.Lt_11A6:
cmp dword ptr [ebp-104], 1
je .Lt_11A4
.Lt_11A7:
cmp dword ptr [ebp-104], 4
jne .Lt_11A3
.Lt_11A4:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRB+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1194
.Lt_11A3:
sub esp, 8
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-128]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-128]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-128]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 52
push offset Lt_11AC
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-152]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-152]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-152]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-164]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-164]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-164]
push eax
call fb_StrDelete
add esp, 16
.Lt_11A8:
.Lt_1194:
jmp .Lt_118C
.Lt_1190:
cmp dword ptr [ebp-116], 1
jne .Lt_11B0
.Lt_11B1:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+32], 0
je .Lt_11B2
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+32]
mov ecx, dword ptr [ebx+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-120], eax
jmp .Lt_1BD9
.Lt_11B2:
mov dword ptr [ebp-120], 0
.Lt_1BD9:
cmp dword ptr [ebp-120], 0
je .Lt_11B5
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_11B4
.Lt_11B5:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_11B4:
jmp .Lt_118C
.Lt_11B0:
cmp dword ptr [ebp-116], 3
jne .Lt_11BA
.Lt_11BB:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+48], 0
je .Lt_11BD
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+48]
push dword ptr [ecx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_11BC
.Lt_11BD:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push 2
push offset Lt_0118
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_11BC:
jmp .Lt_118C
.Lt_11BA:
cmp dword ptr [ebp-116], 5
jne .Lt_11C3
.Lt_11C4:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_118C
.Lt_11C3:
cmp dword ptr [ebp-116], 0
jne .Lt_11C8
.Lt_11C9:
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
cmp ecx, 1
sete cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+28], 0
mov ebx, -1
jne .Lt_1BF5
cmp dword ptr [eax+24], 0
jne .Lt_1BF5
.Lt_1BF6:
xor ebx, ebx
.Lt_1BF5:
and ecx, ebx
je .Lt_11CB
mov ebx, dword ptr [ebp+12]
mov dword ptr [ebx+24], 1
mov dword ptr [ebx+28], 0
.Lt_11CB:
.Lt_11CA:
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+4]
and ecx, 480
je .Lt_11CC
mov dword ptr [ebp-120], 24
jmp .Lt_1BDA
.Lt_11CC:
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+4]
and ebx, 31
mov dword ptr [ebp-120], ebx
.Lt_1BDA:
mov ebx, dword ptr [ebp-120]
imul ebx, 28
cmp dword ptr [SYMB_DTYPETB+ebx], 1
jne .Lt_11CF
sub esp, 12
push 0
push -1
sub esp, 12
push 0
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+4]
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+28]
push dword ptr [ebx+24]
call HFLOATTOHEX_ASM64
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_11CE
.Lt_11CF:
sub esp, 12
push 0
push -1
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+28]
push dword ptr [eax+24]
call fb_LongintToStr
add esp, 12
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_11CE:
jmp .Lt_118C
.Lt_11C8:
sub esp, 8
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-128]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-128]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-128]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push 29
push offset Lt_0EF8
push -1
lea eax, [ebp-140]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-140]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-140]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-152]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-152]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-152]
push eax
call fb_StrDelete
add esp, 16
.Lt_11D0:
.Lt_118C:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 511
mov dword ptr [ebp-104], ebx
mov ebx, dword ptr [ebp-104]
and ebx, 480
test ebx, ebx
je .Lt_11D5
mov dword ptr [ebp-104], 8
.Lt_11D5:
cmp dword ptr [ebp-104], 8
je .Lt_11D8
.Lt_11D9:
cmp dword ptr [ebp-104], 9
je .Lt_11D8
.Lt_11DA:
cmp dword ptr [ebp-104], 13
je .Lt_11D8
.Lt_11DB:
cmp dword ptr [ebp-104], 14
je .Lt_11D8
.Lt_11DC:
cmp dword ptr [ebp-104], 16
je .Lt_11D8
.Lt_11DD:
cmp dword ptr [ebp-104], 10
jne .Lt_11D7
.Lt_11D8:
sub esp, 12
push 0
push 11
push offset Lt_096E
push -1
lea ebx, [ebp-60]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 10
push offset Lt_0406
push -1
lea ebx, [ebp-72]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 6
push offset Lt_06B8
push -1
lea ebx, [ebp-84]
push ebx
call fb_StrAssign
add esp, 32
jmp .Lt_11D6
.Lt_11D7:
cmp dword ptr [ebp-104], 11
je .Lt_11DF
.Lt_11E0:
cmp dword ptr [ebp-104], 12
je .Lt_11DF
.Lt_11E1:
cmp dword ptr [ebp-104], 15
jne .Lt_11DE
.Lt_11DF:
sub esp, 12
push 0
push 11
push offset Lt_0973
push -1
lea ebx, [ebp-60]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 10
push offset Lt_0A9C
push -1
lea ebx, [ebp-72]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 6
push offset Lt_0D77
push -1
lea ebx, [ebp-84]
push ebx
call fb_StrAssign
add esp, 32
jmp .Lt_11D6
.Lt_11DE:
cmp dword ptr [ebp-104], 5
je .Lt_11E3
.Lt_11E4:
cmp dword ptr [ebp-104], 6
jne .Lt_11E2
.Lt_11E3:
sub esp, 12
push 0
push 10
push offset Lt_0977
push -1
lea ebx, [ebp-60]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 12
push offset Lt_0F9F
push -1
lea ebx, [ebp-72]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 5
push offset Lt_0FF4
push -1
lea ebx, [ebp-84]
push ebx
call fb_StrAssign
add esp, 32
jmp .Lt_11D6
.Lt_11E2:
cmp dword ptr [ebp-104], 2
je .Lt_11E6
.Lt_11E7:
cmp dword ptr [ebp-104], 3
je .Lt_11E6
.Lt_11E8:
cmp dword ptr [ebp-104], 1
je .Lt_11E6
.Lt_11E9:
cmp dword ptr [ebp-104], 4
jne .Lt_11E5
.Lt_11E6:
sub esp, 12
push 0
push 10
push offset Lt_097D
push -1
lea ebx, [ebp-60]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 9
push offset Lt_11EA
push -1
lea ebx, [ebp-72]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 5
push offset Lt_0BF1
push -1
lea ebx, [ebp-84]
push ebx
call fb_StrAssign
add esp, 32
jmp .Lt_11D6
.Lt_11E5:
cmp dword ptr [ebp-104], 7
jne .Lt_11EB
.Lt_11EC:
cmp dword ptr [SYMB_DTYPETB+200], 2
jne .Lt_11EE
sub esp, 12
push 0
push 10
push offset Lt_0977
push -1
lea ebx, [ebp-60]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 12
push offset Lt_0F9F
push -1
lea ebx, [ebp-72]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 5
push offset Lt_0FF4
push -1
lea ebx, [ebp-84]
push ebx
call fb_StrAssign
add esp, 32
jmp .Lt_11ED
.Lt_11EE:
cmp dword ptr [SYMB_DTYPETB+200], 4
jne .Lt_11EF
sub esp, 12
push 0
push 11
push offset Lt_0973
push -1
lea ebx, [ebp-60]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 10
push offset Lt_0A9C
push -1
lea ebx, [ebp-72]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 6
push offset Lt_0D77
push -1
lea ebx, [ebp-84]
push ebx
call fb_StrAssign
add esp, 32
jmp .Lt_11ED
.Lt_11EF:
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push 1
push offset Lt_0000
push -1
lea ebx, [ebp-124]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-124]
push ebx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ebx, [ebp-124]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push 54
push offset Lt_11F2
push -1
lea ebx, [ebp-136]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-136]
push ebx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ebx, [ebp-136]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push 1
push offset Lt_0000
push -1
lea ebx, [ebp-148]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-148]
push ebx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ebx, [ebp-148]
push ebx
call fb_StrDelete
add esp, 16
.Lt_11ED:
jmp .Lt_11D6
.Lt_11EB:
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push 1
push offset Lt_0000
push -1
lea ebx, [ebp-124]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-124]
push ebx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ebx, [ebp-124]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [ebp-104]
call fb_IntToStr
add esp, 16
push eax
push 53
push offset Lt_11F9
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-148]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-148]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-148]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
.Lt_11F5:
.Lt_11D6:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
cmp ecx, 1
sete cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
je .Lt_11FE
cmp dword ptr [CTX+212], 2
jne .Lt_11FF
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-116], eax
jmp .Lt_1BDB
.Lt_11FF:
mov dword ptr [ebp-116], 0
.Lt_1BDB:
cmp dword ptr [ebp-116], 0
je .Lt_1202
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+32], 0
je .Lt_1203
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-204], eax
jmp .Lt_1BDC
.Lt_1203:
mov dword ptr [ebp-204], 0
.Lt_1BDC:
cmp dword ptr [ebp-204], 0
je .Lt_1206
sub esp, 8
push -1
push 999998
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-100], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-100]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-100]
mov dword ptr [REGHANDLE+eax*4], -2
sub esp, 8
push 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-96]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
lea eax, [ebp-220]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-268]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-268]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-268]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 2
push offset Lt_0118
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-96]
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_0119
push -1
lea eax, [ebp-12]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_1206:
.Lt_1205:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+32], 0
je .Lt_120C
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-208], eax
jmp .Lt_1BDD
.Lt_120C:
mov dword ptr [ebp-208], 0
.Lt_1BDD:
cmp dword ptr [ebp-208], 0
je .Lt_120F
sub esp, 8
push 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
lea eax, [ebp-220]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-244]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-244]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-244]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 6
push offset Lt_0693
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_120F:
.Lt_120E:
.Lt_1202:
.Lt_1201:
sub esp, 8
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-152]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-152]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-152]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-84]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
lea eax, [ebp-176]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-200]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-200]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-200]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_11FD
.Lt_11FE:
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax]
cmp ecx, 2
sete cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
and ecx, ebx
je .Lt_121A
push 1
push offset Lt_0000
push -1
lea ebx, [ebp-48]
push ebx
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_121C
sub esp, 12
lea eax, [ebp-48]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_121C:
sub esp, 8
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-148]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-148]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-148]
push eax
call fb_StrDelete
add esp, 16
push 1
push offset Lt_0000
push -1
lea eax, [ebp-36]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_1221
sub esp, 12
lea eax, [ebp-36]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_1221:
sub esp, 8
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-84]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-196]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-196]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-196]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_11FD
.Lt_121A:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
cmp ecx, 3
sete cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ecx]
cmp eax, 3
sete al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov esi, dword ptr [ecx]
cmp esi, 1
sete dl
mov esi, edx
shr esi, 1
sbb esi, esi
and eax, esi
or ebx, eax
je .Lt_1226
sub esp, 8
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-148]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-148]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-148]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-84]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-196]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-196]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-196]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_11FD
.Lt_1226:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov esi, dword ptr [eax]
cmp esi, 2
sete dl
mov esi, edx
shr esi, 1
sbb esi, esi
and ebx, esi
mov esi, dword ptr [ebp+8]
mov eax, dword ptr [esi]
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov esi, dword ptr [ebp+12]
mov ecx, dword ptr [esi]
cmp ecx, 1
sete cl
shr ecx, 1
sbb ecx, ecx
and eax, ecx
or ebx, eax
je .Lt_122E
push 1
push offset Lt_0000
push -1
lea eax, [ebp-48]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_1230
sub esp, 12
lea eax, [ebp-48]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_1230:
sub esp, 8
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-148]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-148]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-148]
push eax
call fb_StrDelete
add esp, 16
push 1
push offset Lt_0000
push -1
lea eax, [ebp-36]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_1235
sub esp, 12
lea eax, [ebp-36]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_1235:
sub esp, 8
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-84]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-196]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-196]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-196]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_11FD
.Lt_122E:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
cmp ebx, 3
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
cmp ecx, 2
sete cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ecx]
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov esi, dword ptr [ecx]
cmp esi, 3
sete dl
mov esi, edx
shr esi, 1
sbb esi, esi
and eax, esi
or ebx, eax
je .Lt_123A
push 1
push offset Lt_0000
push -1
lea eax, [ebp-48]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_123C
sub esp, 12
lea eax, [ebp-48]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_123C:
sub esp, 8
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-148]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-148]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-148]
push eax
call fb_StrDelete
add esp, 16
push 1
push offset Lt_0000
push -1
lea eax, [ebp-36]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_1241
sub esp, 12
lea eax, [ebp-36]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_1241:
sub esp, 8
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-84]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-196]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-196]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-196]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_11FD
.Lt_123A:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
cmp ebx, 3
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov esi, dword ptr [eax]
cmp esi, 3
sete dl
mov esi, edx
shr esi, 1
sbb esi, esi
and ebx, esi
je .Lt_1246
sub esp, 8
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
sub esp, 8
push -1
lea esi, [ebp-24]
push esi
push -1
sub esp, 4
push -1
lea esi, [ebp-60]
push esi
push -1
lea esi, [ebp-72]
push esi
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea esi, [ebp-124]
push esi
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-148]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-148]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-148]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-84]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-196]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-196]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-196]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_11FD
.Lt_1246:
push 1
push offset Lt_0000
push -1
lea eax, [ebp-36]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_124F
sub esp, 12
lea eax, [ebp-36]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_124F:
push 1
push offset Lt_0000
push -1
lea eax, [ebp-48]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_1251
sub esp, 12
lea eax, [ebp-48]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_1251:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 0
jne .Lt_1253
mov eax, dword ptr [ebp+8]
mov esi, dword ptr [eax]
mov dword ptr [ebp-116], esi
cmp dword ptr [ebp-116], 4
jne .Lt_1256
.Lt_1257:
sub esp, 8
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push -1
sub esp, 8
push -1
lea esi, [ebp-24]
push esi
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea esi, [ebp-12]
push esi
push -1
sub esp, 4
push -1
lea esi, [ebp-60]
push esi
push 13
push offset Lt_1258
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea esi, [ebp-128]
push esi
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-176]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-176]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-176]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1254
.Lt_1256:
cmp dword ptr [ebp-116], 1
je .Lt_125F
.Lt_1260:
cmp dword ptr [ebp-116], 2
je .Lt_125F
.Lt_1261:
cmp dword ptr [ebp-116], 3
jne .Lt_125E
.Lt_125F:
cmp dword ptr [CTX+212], 2
jne .Lt_1262
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-120], eax
jmp .Lt_1BDE
.Lt_1262:
mov dword ptr [ebp-120], 0
.Lt_1BDE:
cmp dword ptr [ebp-120], 0
je .Lt_1265
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+32], 0
je .Lt_1266
mov eax, dword ptr [ebp+8]
mov esi, dword ptr [eax+32]
mov eax, dword ptr [esi+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-124], eax
jmp .Lt_1BDF
.Lt_1266:
mov dword ptr [ebp-124], 0
.Lt_1BDF:
cmp dword ptr [ebp-124], 0
je .Lt_1269
sub esp, 8
push -1
push 999998
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-100], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-100]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-100]
mov dword ptr [REGHANDLE+eax*4], -2
sub esp, 8
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-96]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-184]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-184]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-184]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 2
push offset Lt_0118
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-96]
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_0119
push -1
lea eax, [ebp-12]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_1269:
.Lt_1268:
.Lt_1265:
.Lt_1264:
cmp dword ptr [ebp-104], 15
jne .Lt_1270
.Lt_1271:
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_126F
.Lt_1270:
cmp dword ptr [ebp-104], 16
jne .Lt_1277
.Lt_1278:
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_126F
.Lt_1277:
cmp dword ptr [ebp-104], 8
je .Lt_1280
.Lt_1281:
cmp dword ptr [ebp-104], 9
je .Lt_1280
.Lt_1282:
cmp dword ptr [ebp-104], 13
je .Lt_1280
.Lt_1283:
cmp dword ptr [ebp-104], 14
je .Lt_1280
.Lt_1284:
cmp dword ptr [ebp-104], 10
jne .Lt_127F
.Lt_1280:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+28], 4294967295
mov esi, -1
jl .Lt_1C0E
jg .Lt_1C0F
cmp dword ptr [eax+24], 2147483648
jb .Lt_1C0E
.Lt_1C0F:
xor esi, esi
.Lt_1C0E:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+28], 0
mov ebx, -1
jg .Lt_1C10
jl .Lt_1C11
cmp dword ptr [eax+24], 4294967295
ja .Lt_1C10
.Lt_1C11:
xor ebx, ebx
.Lt_1C10:
or esi, ebx
je .Lt_1286
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push -1
sub esp, 8
push -1
lea ebx, [ebp-24]
push ebx
push 10
push offset Lt_0406
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea ebx, [ebp-132]
push ebx
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1285
.Lt_1286:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+28], 0
jl .Lt_128D
jg .Lt_1C12
cmp dword ptr [eax+24], 2147483648
jb .Lt_128D
.Lt_1C12:
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 10
push offset Lt_0A9C
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-192]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-192]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-192]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1285
.Lt_128D:
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
.Lt_1285:
jmp .Lt_126F
.Lt_127F:
sub esp, 8
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push -1
lea eax, [ebp-60]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-180]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-180]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-180]
push eax
call fb_StrDelete
add esp, 16
.Lt_1299:
.Lt_126F:
jmp .Lt_1254
.Lt_125E:
sub esp, 8
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-128]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-128]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-128]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push 50
push offset Lt_12A2
push -1
lea eax, [ebp-140]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-140]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-140]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-152]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-152]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-152]
push eax
call fb_StrDelete
add esp, 16
.Lt_129F:
.Lt_1254:
jmp .Lt_1252
.Lt_1253:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 5
jne .Lt_12A5
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 31
cmp ebx, 22
jne .Lt_12A6
mov ebx, dword ptr [CTX+212]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-116], ebx
jmp .Lt_1BE0
.Lt_12A6:
mov dword ptr [ebp-116], 0
.Lt_1BE0:
cmp dword ptr [ebp-116], 0
je .Lt_12A8
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-120], eax
jmp .Lt_1BE1
.Lt_12A8:
mov dword ptr [ebp-120], 0
.Lt_1BE1:
cmp dword ptr [ebp-120], 0
je .Lt_12AB
sub esp, 8
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push -1
sub esp, 8
sub esp, 12
sub esp, 4
push 1
push offset Lt_0118
call fb_StrAllocTempDescZEx
add esp, 12
push eax
lea eax, [ebp-24]
push eax
push 1
call fb_StrInstr
add esp, 24
dec eax
push eax
lea eax, [ebp-24]
push eax
call fb_LEFT
add esp, 16
push eax
push 20
push offset Lt_0EE4
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-196]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-196]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-196]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_12AA
.Lt_12AB:
sub esp, 8
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 10
push offset Lt_068E
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-184]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-184]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-184]
push eax
call fb_StrDelete
add esp, 16
.Lt_12AA:
cmp dword ptr [CTX+212], 2
jne .Lt_12B1
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-124], eax
jmp .Lt_1BE2
.Lt_12B1:
mov dword ptr [ebp-124], 0
.Lt_1BE2:
cmp dword ptr [ebp-124], 0
je .Lt_12B4
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+32], 0
je .Lt_12B5
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-164], eax
jmp .Lt_1BE3
.Lt_12B5:
mov dword ptr [ebp-164], 0
.Lt_1BE3:
cmp dword ptr [ebp-164], 0
je .Lt_12B8
sub esp, 8
push -1
push 999998
call REG_FINDFREE
add esp, 16
mov dword ptr [ebp-100], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-100]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-100]
mov dword ptr [REGHANDLE+eax*4], -2
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-96]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
lea eax, [ebp-176]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 2
push offset Lt_0118
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-96]
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_0119
push -1
lea eax, [ebp-12]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_12B8:
.Lt_12B7:
.Lt_12B4:
.Lt_12B3:
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1252
.Lt_12A5:
cmp dword ptr [CTX+212], 2
jne .Lt_12C1
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-116], eax
jmp .Lt_1BE4
.Lt_12C1:
mov dword ptr [ebp-116], 0
.Lt_1BE4:
cmp dword ptr [ebp-116], 0
je .Lt_12C4
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+32], 0
je .Lt_12C5
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-168], eax
jmp .Lt_1BE5
.Lt_12C5:
mov dword ptr [ebp-168], 0
.Lt_1BE5:
cmp dword ptr [ebp-168], 0
je .Lt_12C8
sub esp, 8
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-204]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-204]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-204]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 6
push offset Lt_0693
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_12C8:
.Lt_12C7:
.Lt_12C4:
.Lt_12C3:
sub esp, 8
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-164]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-164]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-164]
push eax
call fb_StrDelete
add esp, 16
.Lt_1252:
.Lt_11FD:
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_1134:
pop esi
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITSTORE, .-_EMITSTORE
.balign 16
_EMITLOADRES:
.type _EMITLOADRES, @function
push ebp
mov ebp, esp
sub esp, 148
push ebx
.Lt_12D0:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 511
mov dword ptr [ebp-40], ebx
mov dword ptr [ebp-44], 0
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx]
mov dword ptr [ebp-48], eax
cmp dword ptr [ebp-48], 2
jne .Lt_12D4
.Lt_12D5:
sub esp, 4
lea eax, [ebp-36]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+8]
call PREPARE_IDX
add esp, 16
jmp .Lt_12D2
.Lt_12D4:
cmp dword ptr [ebp-48], 1
jne .Lt_12D6
.Lt_12D7:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_12D9
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_12D8
.Lt_12D9:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_12D8:
jmp .Lt_12D2
.Lt_12D6:
cmp dword ptr [ebp-48], 3
jne .Lt_12DE
.Lt_12DF:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 44
push offset Lt_12E5
push -1
lea eax, [ebp-108]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-108]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-108]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-120]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-120]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-120]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_12D2
.Lt_12DE:
cmp dword ptr [ebp-48], 4
jne .Lt_12E8
.Lt_12E9:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+8]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_12D2
.Lt_12E8:
sub esp, 8
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-60]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 44
push offset Lt_12ED
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
.Lt_12EA:
.Lt_12D2:
sub esp, 12
push dword ptr [ebp+8]
call HISSTRUCTIN2REGS
add esp, 16
test eax, eax
je .Lt_12F1
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax], 1
jne .Lt_12F2
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-48], eax
jmp .Lt_1C19
.Lt_12F2:
mov dword ptr [ebp-48], -1
.Lt_1C19:
cmp dword ptr [ebp-48], 0
je .Lt_12F5
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 64
push offset Lt_12F8
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
.Lt_12F5:
.Lt_12F4:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+40]
mov dword ptr [ebp-44], eax
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+36]
mov ebx, dword ptr [eax+40]
add ecx, 8
adc ebx, 0
push ebx
push ecx
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+32]
mov ecx, dword ptr [eax+128]
mov dword ptr [ebp-64], ecx
jmp .Lt_12FD
.Lt_12FF:
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push -1
lea ecx, [ebp-12]
push ecx
push 10
push offset Lt_0406
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea ecx, [ebp-76]
push ecx
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 10
push offset Lt_1302
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_12FC
.Lt_1305:
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp-44], 12
jne .Lt_1309
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 13
push offset Lt_0D25
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1308
.Lt_1309:
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 13
push offset Lt_0DC2
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_1308:
jmp .Lt_12FC
.Lt_130E:
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 13
push offset Lt_0DC2
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRQ]
push 5
push offset Lt_0389
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-136]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-136]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-136]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_12FC
.Lt_1315:
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 13
push offset Lt_0DC2
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp-44], 12
jne .Lt_1319
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 13
push offset Lt_131A
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1318
.Lt_1319:
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 13
push offset Lt_131D
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_1318:
jmp .Lt_12FC
.Lt_12FD:
mov eax, dword ptr [ebp-64]
add eax, 4294967294
cmp eax, 4
ja .Lt_12FC
mov eax, dword ptr [ebp-64]
jmp dword ptr [.LT_1320+eax*4-8]
.LT_1320:
.int .Lt_12FF
.int .Lt_1305
.int .Lt_12FC
.int .Lt_130E
.int .Lt_1315
.Lt_12FC:
jmp .Lt_12F0
.Lt_12F1:
mov eax, dword ptr [ebp-40]
and eax, 480
je .Lt_1321
mov dword ptr [ebp-48], 24
jmp .Lt_1C1A
.Lt_1321:
mov eax, dword ptr [ebp-40]
and eax, 31
mov dword ptr [ebp-48], eax
.Lt_1C1A:
cmp dword ptr [ebp-48], 24
jne .Lt_1324
mov dword ptr [ebp-40], 8
.Lt_1324:
push 1
push offset Lt_0000
push -1
lea eax, [ebp-36]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_1326
sub esp, 12
lea eax, [ebp-36]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_1326:
cmp dword ptr [ebp-40], 16
jne .Lt_1328
.Lt_1329:
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 12
push offset Lt_0DBF
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1327
.Lt_1328:
cmp dword ptr [ebp-40], 15
jne .Lt_132C
.Lt_132D:
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 12
push offset Lt_0D22
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1327
.Lt_132C:
cmp dword ptr [ebp-40], 8
je .Lt_1331
.Lt_1332:
cmp dword ptr [ebp-40], 9
je .Lt_1331
.Lt_1333:
cmp dword ptr [ebp-40], 13
je .Lt_1331
.Lt_1334:
cmp dword ptr [ebp-40], 14
je .Lt_1331
.Lt_1335:
cmp dword ptr [ebp-40], 10
jne .Lt_1330
.Lt_1331:
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [REGSTRQ]
push 5
push offset Lt_0389
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1327
.Lt_1330:
cmp dword ptr [ebp-40], 11
je .Lt_133B
.Lt_133C:
cmp dword ptr [ebp-40], 12
jne .Lt_133A
.Lt_133B:
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 13
push offset Lt_06BD
push -1
sub esp, 4
push 0
push dword ptr [REGSTRD]
push 5
push offset Lt_0389
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1327
.Lt_133A:
cmp dword ptr [ebp-40], 5
je .Lt_1342
.Lt_1343:
cmp dword ptr [ebp-40], 6
jne .Lt_1341
.Lt_1342:
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 12
push offset Lt_06A1
push -1
sub esp, 4
push 0
push dword ptr [REGSTRQ]
push 7
push offset Lt_069A
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1327
.Lt_1341:
cmp dword ptr [ebp-40], 2
je .Lt_1349
.Lt_134A:
cmp dword ptr [ebp-40], 3
je .Lt_1349
.Lt_134B:
cmp dword ptr [ebp-40], 1
je .Lt_1349
.Lt_134C:
cmp dword ptr [ebp-40], 4
jne .Lt_1348
.Lt_1349:
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 12
push offset Lt_069B
push -1
sub esp, 4
push 0
push dword ptr [REGSTRQ]
push 7
push offset Lt_069A
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1327
.Lt_1348:
sub esp, 8
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-60]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+8]
push dword ptr [eax+4]
call fb_IntToStr
add esp, 16
push eax
push 52
push offset Lt_1355
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-84]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-84]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-84]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-96]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-96]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-96]
push eax
call fb_StrDelete
add esp, 16
.Lt_1351:
.Lt_1327:
.Lt_12F0:
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_12D1:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITLOADRES, .-_EMITLOADRES
.balign 16
_EMITADDR:
.type _EMITADDR, @function
push ebp
mov ebp, esp
sub esp, 164
push ebx
.Lt_1359:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 4
je .Lt_135C
sub esp, 8
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-40]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-40]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-40]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 46
push offset Lt_135F
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_135A
.Lt_135C:
.Lt_135B:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+32], 0
je .Lt_1362
sub esp, 8
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
push dword ptr [ebx+32]
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+32]
push dword ptr [eax+28]
call SYMBGETVALISTTYPE
add esp, 16
cmp eax, 3
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 65536
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
mov ecx, eax
test ecx, ecx
setne bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-28], ebx
jmp .Lt_1C20
.Lt_1362:
mov dword ptr [ebp-28], 0
.Lt_1C20:
cmp dword ptr [ebp-28], 0
je .Lt_1365
cmp dword ptr [ebp+8], 22
jne .Lt_1367
mov dword ptr [ebp+8], 76
.Lt_1367:
.Lt_1366:
.Lt_1365:
.Lt_1364:
sub esp, 8
push -1
mov ebx, dword ptr [ebp+16]
push dword ptr [ebx+12]
call REG_FINDFREE
add esp, 16
cmp dword ptr [ebp+8], 22
jne .Lt_1369
.Lt_136A:
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx]
mov dword ptr [ebp-80], ecx
cmp dword ptr [ebp-80], 2
jne .Lt_136D
.Lt_136E:
sub esp, 4
lea ecx, [ebp-24]
push ecx
lea ecx, [ebp-12]
push ecx
push dword ptr [ebp+12]
call PREPARE_IDX
add esp, 16
jmp .Lt_136B
.Lt_136D:
cmp dword ptr [ebp-80], 1
jne .Lt_136F
.Lt_1370:
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+32]
mov ecx, dword ptr [ebx+4]
and ecx, 2
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or ecx, ebx
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax]
cmp ebx, 7
sete bl
shr ebx, 1
sbb ebx, ebx
or ecx, ebx
je .Lt_1372
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1371
.Lt_1372:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_1371:
jmp .Lt_136B
.Lt_136F:
cmp dword ptr [ebp-80], 3
jne .Lt_1377
.Lt_1378:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_136B
.Lt_1377:
cmp dword ptr [ebp-80], 5
jne .Lt_137C
.Lt_137D:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-128]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-128]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-128]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push 45
push offset Lt_1383
push -1
lea eax, [ebp-140]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-140]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-140]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-152]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-152]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-152]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_136B
.Lt_137C:
sub esp, 8
push 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-92]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-92]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-92]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push 43
push offset Lt_1389
push -1
lea eax, [ebp-104]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-104]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-104]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-116]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-116]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-116]
push eax
call fb_StrDelete
add esp, 16
.Lt_1386:
.Lt_136B:
push 1
push offset Lt_0000
push -1
lea eax, [ebp-24]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_138D
sub esp, 12
lea eax, [ebp-24]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_138D:
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+16]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_012E
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1368
.Lt_1369:
cmp dword ptr [ebp+8], 76
jne .Lt_1392
.Lt_1393:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-32], ebx
cmp dword ptr [ebp-32], 2
jne .Lt_1396
.Lt_1397:
sub esp, 4
lea ebx, [ebp-24]
push ebx
lea ebx, [ebp-12]
push ebx
push dword ptr [ebp+12]
call PREPARE_IDX
add esp, 16
push 1
push offset Lt_0000
push -1
lea ebx, [ebp-24]
push ebx
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_1399
sub esp, 12
lea eax, [ebp-24]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_1399:
jmp .Lt_1394
.Lt_1396:
cmp dword ptr [ebp-32], 1
jne .Lt_139A
.Lt_139B:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_139D
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+4]
and ebx, 8
test ebx, ebx
je .Lt_139E
mov ebx, dword ptr [CTX+212]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-36], ebx
jmp .Lt_1C21
.Lt_139E:
mov dword ptr [ebp-36], 0
.Lt_1C21:
cmp dword ptr [ebp-36], 0
je .Lt_13A0
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-40], eax
jmp .Lt_1C22
.Lt_13A0:
mov dword ptr [ebp-40], 0
.Lt_1C22:
cmp dword ptr [ebp-40], 0
je .Lt_13A3
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 6
push offset Lt_0693
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_13A2
.Lt_13A3:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_13A2:
jmp .Lt_139C
.Lt_139D:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_139C:
jmp .Lt_1394
.Lt_139A:
cmp dword ptr [ebp-32], 3
jne .Lt_13AB
.Lt_13AC:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1394
.Lt_13AB:
cmp dword ptr [ebp-32], 5
jne .Lt_13B0
.Lt_13B1:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1394
.Lt_13B0:
cmp dword ptr [ebp-32], 4
jne .Lt_13B5
.Lt_13B6:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 2
push offset Lt_0118
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1394
.Lt_13B5:
sub esp, 8
push 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-44]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-44]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
push 0
push 42
push offset Lt_13BC
push -1
lea eax, [ebp-56]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-56]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-56]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-68]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-68]
push eax
call fb_StrDelete
add esp, 16
.Lt_13B9:
.Lt_1394:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 5
jne .Lt_13C0
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+16]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_012E
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_13BF
.Lt_13C0:
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+16]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
.Lt_13BF:
.Lt_1392:
.Lt_1368:
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_135A:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITADDR, .-_EMITADDR
.balign 16
HDOCALL:
.type HDOCALL, @function
push ebp
mov ebp, esp
sub esp, 3948
push ebx
push esi
push edi
.Lt_13DC:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov byte ptr [ebp-72], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-3696]
push eax
mov edi, eax
xor eax, eax
mov ecx, 903
rep stosd
pop eax
lea eax, [ebp-3696]
mov dword ptr [ebp-3732], eax
lea eax, [ebp-3696]
mov dword ptr [ebp-3728], eax
mov dword ptr [ebp-3724], 3612
mov dword ptr [ebp-3720], 12
mov dword ptr [ebp-3716], 1
mov dword ptr [ebp-3712], 49
mov dword ptr [ebp-3708], 301
mov dword ptr [ebp-3704], 0
mov dword ptr [ebp-3700], 300
mov dword ptr [ebp-3736], 0
mov dword ptr [ebp-3740], 0
mov dword ptr [ebp-3744], 0
mov dword ptr [ebp-3748], 0
mov byte ptr [CTX+137], 1
cmp byte ptr [ebp+32], 0
je .Lt_13E0
sub esp, 8
push dword ptr [ebp+16]
push dword ptr [ebp+12]
call REG_CALLPTR
add esp, 16
.Lt_13E0:
mov eax, dword ptr [CTX+96]
add eax, 104
mov dword ptr [CTX+108], eax
mov eax, dword ptr [CTX+108]
mov dword ptr [CTX+104], eax
sub esp, 12
lea eax, [IRHL+60]
push eax
call LISTGETTAIL
add esp, 16
mov dword ptr [ebp-24], eax
.Lt_13E1:
cmp dword ptr [ebp-24], 0
je .Lt_13E3
mov eax, dword ptr [ebp-24]
mov ebx, dword ptr [eax+8]
cmp ebx, dword ptr [ebp+24]
sete al
shr eax, 1
sbb eax, eax
test eax, eax
setne bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-3752], ebx
jmp .Lt_1C2D
.Lt_13E3:
mov dword ptr [ebp-3752], 0
.Lt_1C2D:
cmp dword ptr [ebp-3752], 0
je .Lt_13E2
sub esp, 12
push dword ptr [ebp-24]
call LISTGETPREV
add esp, 16
mov dword ptr [ebp-28], eax
mov eax, dword ptr [ebp-24]
mov ebx, dword ptr [eax+4]
mov dword ptr [ebp-32], ebx
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea ebx, [ebp-56]
push ebx
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-4], -1
mov ebx, dword ptr [ebp-32]
mov eax, dword ptr [ebx+4]
and eax, 480
test eax, eax
sete al
shr eax, 1
sbb eax, eax
sub esp, 8
mov ebx, dword ptr [ebp-32]
push dword ptr [ebx+8]
mov ebx, dword ptr [ebp-32]
push dword ptr [ebx+4]
mov ebx, eax
call SYMBGETVALISTTYPE
add esp, 16
cmp eax, 3
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_13E6
sub esp, 8
push 0
push 8
call IRHLALLOCVREG
add esp, 16
mov dword ptr [ebp-3744], eax
sub esp, 4
push dword ptr [ebp-3744]
push dword ptr [ebp-32]
push 22
call _EMITADDR
add esp, 16
mov edi, dword ptr [ebp-32]
mov esi, dword ptr [ebp-3744]
mov ecx, 17
rep movsd
.Lt_13E6:
.Lt_13E5:
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+4]
and ebx, 511
mov dword ptr [ebp-20], ebx
mov ebx, dword ptr [ebp-32]
mov eax, dword ptr [ebx]
mov dword ptr [ebp-3764], eax
cmp dword ptr [ebp-3764], 2
jne .Lt_13E9
.Lt_13EA:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+32], 0
jne .Lt_13EC
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+48]
cmp dword ptr [ebx+32], 0
jne .Lt_13EE
mov ebx, dword ptr [ebp-32]
mov eax, dword ptr [ebx+48]
cmp dword ptr [eax+12], -1
je .Lt_13F0
sub esp, 12
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_13EF
.Lt_13F0:
sub esp, 12
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+48]
mov eax, dword ptr [ebx+48]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea eax, [ebp-3824]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-56]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3848], 0
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
lea eax, [ebp-3848]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3860], 0
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
lea eax, [ebp-3860]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
.Lt_13EF:
jmp .Lt_13ED
.Lt_13EE:
sub esp, 12
push 0
push 0
sub esp, 12
call REG_TEMPO
add esp, 12
push eax
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+48]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+4]
and ebx, 2
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp-32]
mov ecx, dword ptr [eax+48]
mov eax, dword ptr [ecx+32]
mov ecx, dword ptr [eax+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_13FD
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ecx, dword ptr [ebp-32]
mov ebx, dword ptr [ecx+48]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-68]
push eax
push 5
push offset Lt_012E
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea eax, [ebp-3824]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-56]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_0124
push -1
lea eax, [ebp-56]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 12
push eax
push -1
lea eax, [ebp-56]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 5
push offset Lt_0389
push -1
lea eax, [ebp-56]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-68]
push eax
push -1
lea eax, [ebp-56]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 3
push offset Lt_0123
push -1
lea eax, [ebp-56]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_0118
push -1
lea eax, [ebp-56]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-68]
push eax
push -1
lea eax, [ebp-56]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_0119
push -1
lea eax, [ebp-56]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 5
push offset Lt_1404
push -1
lea eax, [ebp-56]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-68]
push eax
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-3848], 0
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
lea eax, [ebp-3848]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3860], 0
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
lea eax, [ebp-3860]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3872], 0
mov dword ptr [ebp-3868], 0
mov dword ptr [ebp-3864], 0
lea eax, [ebp-3872]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_13FC
.Lt_13FD:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-68]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-56]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-68]
push eax
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea eax, [ebp-3824]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3848], 0
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
lea eax, [ebp-3848]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
.Lt_13FC:
.Lt_13ED:
jmp .Lt_13EB
.Lt_13EC:
sub esp, 12
push 0
push 0
sub esp, 12
call REG_TEMPO
add esp, 12
push eax
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-32]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1410
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp-32]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp-32]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-68]
push eax
push 5
push offset Lt_012E
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea eax, [ebp-3824]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-56]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_140F
.Lt_1410:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp-32]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-68]
push eax
push 5
push offset Lt_012E
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-56]
push eax
call fb_StrAssign
add esp, 32
.Lt_140F:
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+48]
cmp dword ptr [ebx], 4
jne .Lt_141C
sub esp, 12
mov ebx, dword ptr [ebp-32]
mov eax, dword ptr [ebx+48]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_085B
push -1
sub esp, 4
push -1
lea eax, [ebp-68]
push eax
push 2
push offset Lt_0118
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_141B
.Lt_141C:
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+48]
cmp dword ptr [ebx], 1
jne .Lt_1421
mov ebx, dword ptr [ebp-32]
mov eax, dword ptr [ebx+48]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-32]
mov ecx, dword ptr [ebx+48]
mov ebx, dword ptr [ecx+32]
mov ecx, dword ptr [ebx+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
je .Lt_1423
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ecx, dword ptr [ebp-32]
mov eax, dword ptr [ecx+48]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp-32]
mov ecx, dword ptr [eax+48]
push dword ptr [ecx+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-68]
push eax
push -1
sub esp, 4
push 5
push offset Lt_0410
push -1
sub esp, 4
push -1
sub esp, 8
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 16
push eax
push 2
push offset Lt_0124
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea eax, [ebp-3824]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3848], 0
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
lea eax, [ebp-3848]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3860], 0
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
lea eax, [ebp-3860]
push eax
call fb_StrConcat
add esp, 32
push eax
push -1
lea eax, [ebp-56]
push eax
mov dword ptr [ebp-3872], 0
mov dword ptr [ebp-3868], 0
mov dword ptr [ebp-3864], 0
lea eax, [ebp-3872]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-56]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1422
.Lt_1423:
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push 6
push offset Lt_03BD
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp-32]
mov ecx, dword ptr [eax+48]
push dword ptr [ecx+40]
push dword ptr [ecx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0102
push -1
sub esp, 4
push -1
lea eax, [ebp-68]
push eax
push -1
sub esp, 4
push 5
push offset Lt_0410
push -1
sub esp, 4
push -1
sub esp, 8
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 16
push eax
push 2
push offset Lt_0124
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea eax, [ebp-3824]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call fb_StrConcat
add esp, 32
push eax
push -1
lea eax, [ebp-56]
push eax
mov dword ptr [ebp-3848], 0
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
lea eax, [ebp-3848]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-56]
push eax
call fb_StrAssign
add esp, 32
.Lt_1422:
sub esp, 12
push 0
push 2
push offset Lt_0118
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-68]
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 2
push offset Lt_0119
push -1
lea eax, [ebp-44]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_141B
.Lt_1421:
sub esp, 8
push 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3776]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3776]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3776]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push 40
push offset Lt_1436
push -1
lea eax, [ebp-3788]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3788]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3788]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3800]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3800]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3800]
push eax
call fb_StrDelete
add esp, 16
.Lt_141B:
.Lt_13EB:
jmp .Lt_13E7
.Lt_13E9:
cmp dword ptr [ebp-3764], 4
jne .Lt_1439
.Lt_143A:
mov eax, dword ptr [ebp-20]
and eax, 480
je .Lt_143B
mov dword ptr [ebp-3768], 24
jmp .Lt_1C2E
.Lt_143B:
mov eax, dword ptr [ebp-20]
and eax, 31
mov dword ptr [ebp-3768], eax
.Lt_1C2E:
cmp dword ptr [ebp-3768], 24
jne .Lt_143E
mov dword ptr [ebp-20], 8
.Lt_143E:
sub esp, 12
mov eax, dword ptr [ebp-32]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-4], eax
cmp dword ptr [ebp-20], 8
je .Lt_1441
.Lt_1442:
cmp dword ptr [ebp-20], 9
je .Lt_1441
.Lt_1443:
cmp dword ptr [ebp-20], 13
je .Lt_1441
.Lt_1444:
cmp dword ptr [ebp-20], 14
je .Lt_1441
.Lt_1445:
cmp dword ptr [ebp-20], 16
je .Lt_1441
.Lt_1446:
cmp dword ptr [ebp-20], 10
je .Lt_1441
.Lt_1447:
cmp dword ptr [ebp-20], 20
jne .Lt_1440
.Lt_1441:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_143F
.Lt_1440:
cmp dword ptr [ebp-20], 11
je .Lt_1449
.Lt_144A:
cmp dword ptr [ebp-20], 12
je .Lt_1449
.Lt_144B:
cmp dword ptr [ebp-20], 15
jne .Lt_1448
.Lt_1449:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRD+eax*4]
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_143F
.Lt_1448:
cmp dword ptr [ebp-20], 5
je .Lt_144D
.Lt_144E:
cmp dword ptr [ebp-20], 6
jne .Lt_144C
.Lt_144D:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRW+eax*4]
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_143F
.Lt_144C:
cmp dword ptr [ebp-20], 2
je .Lt_1450
.Lt_1451:
cmp dword ptr [ebp-20], 3
je .Lt_1450
.Lt_1452:
cmp dword ptr [ebp-20], 1
je .Lt_1450
.Lt_1453:
cmp dword ptr [ebp-20], 4
jne .Lt_144F
.Lt_1450:
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRB+eax*4]
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_143F
.Lt_144F:
sub esp, 8
push 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3780]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3780]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3780]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [ebp-20]
call fb_IntToStr
add esp, 16
push eax
push 55
push offset Lt_1458
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3804]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3804]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3804]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3816]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3816]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3816]
push eax
call fb_StrDelete
add esp, 16
.Lt_1454:
.Lt_143F:
jmp .Lt_13E7
.Lt_1439:
cmp dword ptr [ebp-3764], 1
jne .Lt_145C
.Lt_145D:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+32], 0
je .Lt_145E
mov eax, dword ptr [ebp-32]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp-32]
mov ebx, dword ptr [ecx+32]
mov ecx, dword ptr [ebx+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3768], eax
jmp .Lt_1C2F
.Lt_145E:
mov dword ptr [ebp-3768], 0
.Lt_1C2F:
cmp dword ptr [ebp-3768], 0
je .Lt_1461
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp-32]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp-32]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1460
.Lt_1461:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
.Lt_1460:
jmp .Lt_13E7
.Lt_145C:
cmp dword ptr [ebp-3764], 3
jne .Lt_1466
.Lt_1467:
sub esp, 12
mov eax, dword ptr [ebp-32]
mov ecx, dword ptr [eax+48]
push dword ptr [ecx+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_13E7
.Lt_1466:
cmp dword ptr [ebp-3764], 5
jne .Lt_146B
.Lt_146C:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp-32]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp-32]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_13E7
.Lt_146B:
cmp dword ptr [ebp-3764], 0
jne .Lt_1470
.Lt_1471:
mov eax, dword ptr [ebp-20]
and eax, 480
je .Lt_1472
mov dword ptr [ebp-3768], 24
jmp .Lt_1C30
.Lt_1472:
mov eax, dword ptr [ebp-20]
and eax, 31
mov dword ptr [ebp-3768], eax
.Lt_1C30:
mov eax, dword ptr [ebp-3768]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax], 1
jne .Lt_1475
sub esp, 12
push 0
push -1
sub esp, 12
push 0
push dword ptr [ebp-20]
mov eax, dword ptr [ebp-32]
push dword ptr [eax+28]
push dword ptr [eax+24]
call HFLOATTOHEX_ASM64
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1474
.Lt_1475:
cmp dword ptr [ebp-20], 1
jne .Lt_1477
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 0
jne .Lt_1C4B
cmp dword ptr [eax+24], 0
je .Lt_1479
.Lt_1C4B:
mov eax, dword ptr [ebp-32]
mov dword ptr [eax+24], 1
mov dword ptr [eax+28], 0
.Lt_1479:
.Lt_1478:
.Lt_1477:
.Lt_1476:
sub esp, 12
push 0
push -1
sub esp, 4
mov eax, dword ptr [ebp-32]
push dword ptr [eax+28]
push dword ptr [eax+24]
call fb_LongintToStr
add esp, 12
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
.Lt_1474:
jmp .Lt_13E7
.Lt_1470:
sub esp, 8
push 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3776]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3776]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3776]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push 45
push offset Lt_147D
push -1
lea eax, [ebp-3788]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3788]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3788]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3800]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3800]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3800]
push eax
call fb_StrDelete
add esp, 16
.Lt_147A:
.Lt_13E7:
mov eax, dword ptr [ebp-20]
and eax, 480
je .Lt_1480
mov dword ptr [ebp-3760], 24
jmp .Lt_1C31
.Lt_1480:
mov eax, dword ptr [ebp-20]
and eax, 31
mov dword ptr [ebp-3760], eax
.Lt_1C31:
cmp dword ptr [ebp-3760], 24
jne .Lt_1483
mov dword ptr [ebp-20], 8
.Lt_1483:
sub esp, 12
lea eax, [ebp-16]
push eax
lea eax, [ebp-12]
push eax
lea eax, [ebp-8]
push eax
mov eax, dword ptr [ebp-32]
push dword ptr [eax+8]
push dword ptr [ebp-20]
call PARAM_ANALYZE
add esp, 32
mov dword ptr [ebp-76], eax
cmp dword ptr [ebp-76], 10
jl .Lt_1485
cmp dword ptr [CTX+212], 2
jne .Lt_1487
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 0
jne .Lt_1489
add dword ptr [ebp-3740], 8
mov eax, dword ptr [ebp-20]
and eax, 480
je .Lt_148A
mov dword ptr [ebp-3764], 24
jmp .Lt_1C32
.Lt_148A:
mov eax, dword ptr [ebp-20]
and eax, 31
mov dword ptr [ebp-3764], eax
.Lt_1C32:
mov eax, dword ptr [ebp-3764]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax], 1
jne .Lt_148D
cmp dword ptr [ebp-20], 15
jne .Lt_148F
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 6
push offset Lt_1490
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea ecx, [ebp+eax-3696]
push ecx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea ecx, [ebp-44]
push ecx
push -1
mov ecx, dword ptr [ebp-3736]
imul ecx, 12
lea eax, [ebp+ecx-3696]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_148E
.Lt_148F:
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 9
push offset Lt_1491
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea ecx, [ebp+eax-3696]
push ecx
call fb_StrAssign
add esp, 32
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 10
push offset Lt_0406
push -1
mov ecx, dword ptr [ebp-3736]
imul ecx, 12
lea eax, [ebp+ecx-3696]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea ecx, [ebp+eax-3696]
push ecx
call fb_StrConcatAssign
add esp, 32
.Lt_148E:
jmp .Lt_148C
.Lt_148D:
mov ecx, dword ptr [ebp-32]
cmp dword ptr [ecx+28], 4294967295
mov eax, -1
jg .Lt_1C4C
jl .Lt_1C4D
cmp dword ptr [ecx+24], 2147483648
jae .Lt_1C4C
.Lt_1C4D:
xor eax, eax
.Lt_1C4C:
mov ecx, dword ptr [ebp-32]
cmp dword ptr [ecx+28], 0
mov ebx, -1
jl .Lt_1C4E
jg .Lt_1C4F
cmp dword ptr [ecx+24], 2147483648
jb .Lt_1C4E
.Lt_1C4F:
xor ebx, ebx
.Lt_1C4E:
and eax, ebx
je .Lt_1492
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 6
push offset Lt_1490
push -1
mov ebx, dword ptr [ebp-3736]
imul ebx, 12
lea eax, [ebp+ebx-3696]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea ebx, [ebp+eax-3696]
push ebx
call fb_StrConcatAssign
add esp, 32
jmp .Lt_148C
.Lt_1492:
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 9
push offset Lt_1491
push -1
mov ebx, dword ptr [ebp-3736]
imul ebx, 12
lea eax, [ebp+ebx-3696]
push eax
call fb_StrAssign
add esp, 32
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 10
push offset Lt_0406
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea ebx, [ebp+eax-3696]
push ebx
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea ebx, [ebp-44]
push ebx
push -1
mov ebx, dword ptr [ebp-3736]
imul ebx, 12
lea eax, [ebp+ebx-3696]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_148C:
jmp .Lt_1488
.Lt_1489:
cmp dword ptr [ebp-20], 20
jne .Lt_1494
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+8]
mov eax, dword ptr [ebx+40]
mov dword ptr [ebp-80], eax
mov eax, dword ptr [ebp-80]
add dword ptr [ebp-3740], eax
cmp dword ptr [ebp-80], 8
jle .Lt_1496
mov eax, dword ptr [ebp-80]
mov ecx, 8
cdq
idiv ecx
mov eax, edx
mov dword ptr [ebp-84], eax
cmp dword ptr [ebp-84], 0
jne .Lt_1498
mov dword ptr [ebp-84], 8
.Lt_1498:
.Lt_1499:
cmp dword ptr [ebp-80], 0
jle .Lt_149A
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 11
push offset Lt_149B
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea ebx, [ebp+eax-3696]
push ebx
call fb_StrAssign
add esp, 32
cmp dword ptr [ebp-80], 8
jle .Lt_149D
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 11
push offset Lt_149E
push -1
mov ebx, dword ptr [ebp-3736]
imul ebx, 12
lea eax, [ebp+ebx-3696]
push eax
call fb_StrAssign
add esp, 32
.Lt_149D:
.Lt_149C:
add dword ptr [ebp-80], -8
jmp .Lt_1499
.Lt_149A:
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push -1
sub esp, 8
push -1
sub esp, 8
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+8]
mov ecx, dword ptr [ebp-84]
mov eax, ecx
sar eax, 31
mov edi, dword ptr [ebx+40]
mov esi, dword ptr [ebx+44]
sub edi, ecx
sbb esi, eax
push esi
push edi
call fb_LongintToStr
add esp, 16
push eax
push 10
push offset Lt_149F
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call fb_StrAssign
add esp, 32
mov edi, dword ptr [ebp-32]
cmp dword ptr [edi], 4
jne .Lt_14A2
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 10
push offset Lt_0406
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call fb_StrConcatAssign
add esp, 32
jmp .Lt_14A1
.Lt_14A2:
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 10
push offset Lt_068E
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call fb_StrConcatAssign
add esp, 32
.Lt_14A1:
jmp .Lt_1495
.Lt_1496:
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 6
push offset Lt_1490
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call fb_StrConcatAssign
add esp, 32
.Lt_1495:
jmp .Lt_1493
.Lt_1494:
add dword ptr [ebp-3740], 8
mov edi, dword ptr [ebp-32]
cmp dword ptr [edi], 5
jne .Lt_14A4
mov edi, dword ptr [ebp-32]
mov eax, dword ptr [edi+4]
and eax, 31
cmp eax, 22
jne .Lt_14A5
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3764], eax
jmp .Lt_1C33
.Lt_14A5:
mov dword ptr [ebp-3764], 0
.Lt_1C33:
cmp dword ptr [ebp-3764], 0
je .Lt_14A8
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 9
push offset Lt_1491
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call fb_StrAssign
add esp, 32
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 20
push offset Lt_0EE4
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
sub esp, 12
sub esp, 4
push 1
push offset Lt_0118
call fb_StrAllocTempDescZEx
add esp, 12
push eax
lea eax, [ebp-44]
push eax
push 1
call fb_StrInstr
add esp, 24
dec eax
push eax
lea eax, [ebp-44]
push eax
call fb_LEFT
add esp, 12
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 15
push offset Lt_0BCF
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_14A7
.Lt_14A8:
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 9
push offset Lt_1491
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call fb_StrAssign
add esp, 32
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 10
push offset Lt_068E
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call fb_StrConcatAssign
add esp, 32
.Lt_14A7:
jmp .Lt_14A3
.Lt_14A4:
mov edi, dword ptr [ebp-32]
cmp dword ptr [edi], 4
jne .Lt_14AA
sub esp, 12
push 0
push 0
mov edi, dword ptr [ebp-4]
push dword ptr [REGSTRQ+edi*4]
push -1
lea edi, [ebp-44]
push edi
call fb_StrAssign
add esp, 32
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 6
push offset Lt_1490
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call fb_StrConcatAssign
add esp, 32
jmp .Lt_14A9
.Lt_14AA:
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push 6
push offset Lt_1490
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call fb_StrConcatAssign
add esp, 32
.Lt_14A9:
.Lt_14A3:
.Lt_1493:
push 1
push offset Lt_0000
push -1
lea edi, [ebp-56]
push edi
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_14AC
inc dword ptr [ebp-3736]
sub esp, 12
push 0
push -1
lea eax, [ebp-56]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call fb_StrAssign
add esp, 32
.Lt_14AC:
.Lt_14AB:
.Lt_1488:
jmp .Lt_1486
.Lt_1487:
push 1
push offset Lt_0000
push -1
lea edi, [ebp-56]
push edi
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_14AE
sub esp, 12
lea eax, [ebp-56]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_14AE:
cmp dword ptr [ebp-76], 11
jne .Lt_14B0
cmp dword ptr [ebp-20], 20
jne .Lt_14B2
mov eax, dword ptr [ebp-32]
mov edi, dword ptr [eax+8]
mov eax, dword ptr [edi+40]
mov dword ptr [ebp-80], eax
jmp .Lt_14B1
.Lt_14B2:
mov eax, dword ptr [ebp-20]
imul eax, 28
mov edi, dword ptr [SYMB_DTYPETB+eax+4]
mov dword ptr [ebp-80], edi
.Lt_14B1:
mov edi, dword ptr [ebp-32]
cmp dword ptr [edi], 4
jne .Lt_14B4
mov edi, dword ptr [ebp-80]
mov dword ptr [ebp-3764], edi
jmp .Lt_14B6
.Lt_14B8:
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
sub esp, 8
push -1
lea edi, [ebp-44]
push edi
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov edi, dword ptr [ebp-8]
sal edi, 3
add edi, -8
push edi
call fb_IntToStr
add esp, 16
push eax
push 14
push offset Lt_14B9
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_14B5
.Lt_14BF:
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 14
push offset Lt_0780
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_14B5
.Lt_14C4:
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0786
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_14B5
.Lt_14C9:
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_14B5
.Lt_14B6:
mov eax, dword ptr [ebp-3764]
add eax, 4294967295
cmp eax, 7
ja .Lt_14B5
mov eax, dword ptr [ebp-3764]
jmp dword ptr [.LT_14CE+eax*4-4]
.LT_14CE:
.int .Lt_14B8
.int .Lt_14BF
.int .Lt_14B5
.int .Lt_14C4
.int .Lt_14B5
.int .Lt_14B5
.int .Lt_14B5
.int .Lt_14C9
.Lt_14B5:
jmp .Lt_14B3
.Lt_14B4:
mov eax, dword ptr [ebp-80]
mov dword ptr [ebp-3764], eax
jmp .Lt_14D0
.Lt_14D2:
sub esp, 8
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 9
push offset Lt_11EA
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3788]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3788]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3788]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
sub esp, 8
push 10
push offset Lt_14D5
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 14
push offset Lt_14B9
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3824]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3824]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3824]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_14CF
.Lt_14D9:
sub esp, 8
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 9
push offset Lt_14DA
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3788]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3788]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3788]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
sub esp, 8
push 10
push offset Lt_14DD
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 14
push offset Lt_0780
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3824]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3824]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3824]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_14CF
.Lt_14E1:
sub esp, 8
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 10
push offset Lt_0A9C
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3788]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3788]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3788]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_14E4
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0786
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3824]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3824]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3824]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_14CF
.Lt_14E8:
sub esp, 8
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3788]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3788]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3788]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_14EB
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3824]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3824]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3824]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_14CF
.Lt_14D0:
mov eax, dword ptr [ebp-3764]
add eax, 4294967295
cmp eax, 7
ja .Lt_14CF
mov eax, dword ptr [ebp-3764]
jmp dword ptr [.LT_14EF+eax*4-4]
.LT_14EF:
.int .Lt_14D2
.int .Lt_14D9
.int .Lt_14CF
.int .Lt_14E1
.int .Lt_14CF
.int .Lt_14CF
.int .Lt_14CF
.int .Lt_14E8
.Lt_14CF:
.Lt_14B3:
jmp .Lt_14AF
.Lt_14B0:
cmp dword ptr [ebp-76], 12
jne .Lt_14F0
sub esp, 8
push dword ptr [ebp-4]
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
push dword ptr [eax]
call REG_TRANSFER
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov edi, dword ptr [eax]
push dword ptr [REGSTRQ+edi*4]
push 5
push offset Lt_012E
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea edi, [ebp-3772]
push edi
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp-32]
mov edi, dword ptr [eax+8]
mov esi, dword ptr [CTX+108]
mov eax, esi
sar eax, 31
add esi, dword ptr [edi+40]
adc eax, dword ptr [edi+44]
mov edi, dword ptr [ebp-32]
mov ecx, dword ptr [edi+8]
add esi, dword ptr [ecx+40]
adc eax, dword ptr [ecx+44]
add esi, 4294967295
adc eax, 4294967295
mov ecx, dword ptr [ebp-32]
mov edi, dword ptr [ecx+8]
mov ebx, dword ptr [edi+40]
mov ecx, dword ptr [edi+44]
add ebx, 4294967295
adc ecx, 4294967295
not ebx
not ecx
and esi, ebx
and eax, ecx
mov ebx, esi
mov dword ptr [CTX+108], ebx
mov ebx, dword ptr [CTX+108]
mov ecx, 8
mov eax, ebx
cdq
idiv ecx
mov eax, edx
mov ebx, eax
neg ebx
add ebx, dword ptr [CTX+108]
add ebx, 8
mov dword ptr [CTX+108], ebx
sub esp, 12
push 0
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [LISTREG]
mov esi, dword ptr [ebx]
push dword ptr [REGSTRQ+esi*4]
push -1
lea esi, [ebp-68]
push esi
call fb_StrAssign
add esp, 32
sub esp, 12
push 1
push 1
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
sub esp, 8
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
mov esi, dword ptr [CTX+108]
neg esi
push esi
call fb_IntToStr
add esp, 8
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3832]
push eax
call fb_StrAssign
add esp, 28
lea eax, [ebp-3832]
push eax
lea eax, [ebp-68]
push eax
mov eax, dword ptr [ebp-32]
mov esi, dword ptr [eax+8]
mov eax, dword ptr [esi+40]
push eax
call MEMCOPY
add esp, 32
sub esp, 12
lea eax, [ebp-3832]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3892], 0
mov dword ptr [ebp-3888], 0
mov dword ptr [ebp-3884], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [CTX+108]
neg eax
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov esi, dword ptr [eax]
push dword ptr [REGSTRQ+esi*4]
push 5
push offset Lt_012E
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
mov dword ptr [ebp-3836], 0
lea esi, [ebp-3844]
push esi
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
mov dword ptr [ebp-3848], 0
lea eax, [ebp-3856]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3868], 0
mov dword ptr [ebp-3864], 0
mov dword ptr [ebp-3860], 0
lea eax, [ebp-3868]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3880], 0
mov dword ptr [ebp-3876], 0
mov dword ptr [ebp-3872], 0
lea eax, [ebp-3880]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3892]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3892]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3892]
push eax
call fb_StrDelete
add esp, 16
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
sete al
shr eax, 1
sbb eax, eax
mov esi, dword ptr [CTX+212]
test esi, esi
sete dl
mov esi, edx
shr esi, 1
sbb esi, esi
and eax, esi
je .Lt_14FD
sub esp, 8
push 3
mov dword ptr [ebp-3940], 0
mov dword ptr [ebp-3936], 0
mov dword ptr [ebp-3932], 0
push 0
push -1
sub esp, 8
push 0
mov esi, dword ptr [ebp-12]
sal esi, 2
add esi, dword ptr [LISTREG]
mov eax, dword ptr [esi]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3904], 0
mov dword ptr [ebp-3900], 0
mov dword ptr [ebp-3896], 0
lea eax, [ebp-3904]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3916], 0
mov dword ptr [ebp-3912], 0
mov dword ptr [ebp-3908], 0
lea eax, [ebp-3916]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3928], 0
mov dword ptr [ebp-3924], 0
mov dword ptr [ebp-3920], 0
lea eax, [ebp-3928]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3940]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3940]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3940]
push eax
call fb_StrDelete
add esp, 16
.Lt_14FD:
.Lt_14FC:
jmp .Lt_14AF
.Lt_14F0:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 0
jne .Lt_1503
cmp dword ptr [ebp-20], 15
jne .Lt_1505
mov eax, dword ptr [ebp-32]
fld qword ptr [eax+24]
fcomp qword ptr [Lt_1AEB]
fnstsw ax
test ah, 0b01000000
jz .Lt_1507
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push 13
push offset Lt_1508
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1506
.Lt_1507:
sub esp, 8
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 10
push offset Lt_0A9C
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3820]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3820]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3820]
push eax
call fb_StrDelete
add esp, 16
.Lt_1506:
sub esp, 8
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_14E4
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0786
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3796]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3796]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3796]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1504
.Lt_1505:
cmp dword ptr [ebp-20], 16
jne .Lt_150F
mov eax, dword ptr [ebp-32]
fld qword ptr [eax+24]
fcomp qword ptr [Lt_1AEB]
fnstsw ax
test ah, 0b01000000
jz .Lt_1511
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push 13
push offset Lt_1512
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1510
.Lt_1511:
sub esp, 8
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3820]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3820]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3820]
push eax
call fb_StrDelete
add esp, 16
.Lt_1510:
sub esp, 8
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_14EB
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3796]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3796]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3796]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1504
.Lt_150F:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 4294967295
mov esi, -1
jl .Lt_1C53
jg .Lt_1C54
cmp dword ptr [eax+24], 2147483648
jb .Lt_1C53
.Lt_1C54:
xor esi, esi
.Lt_1C53:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 0
mov ebx, -1
jg .Lt_1C55
jl .Lt_1C56
cmp dword ptr [eax+24], 4294967295
ja .Lt_1C55
.Lt_1C56:
xor ebx, ebx
.Lt_1C55:
or esi, ebx
je .Lt_151A
sub esp, 8
push 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
push 0
push -1
sub esp, 8
push -1
lea ebx, [ebp-44]
push ebx
push 10
push offset Lt_0406
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea ebx, [ebp-3772]
push ebx
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3784]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3784]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3784]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_14EB
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3820]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3820]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3820]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1519
.Lt_151A:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 0
jl .Lt_1520
jg .Lt_1C57
cmp dword ptr [eax+24], 2147483648
jb .Lt_1520
.Lt_1C57:
sub esp, 8
push 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 10
push offset Lt_0A9C
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3784]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3784]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3784]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_14EB
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3820]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3820]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3820]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1519
.Lt_1520:
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
.Lt_1519:
.Lt_1504:
jmp .Lt_1502
.Lt_1503:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 4
jne .Lt_152B
cmp dword ptr [ebp-20], 20
jne .Lt_152D
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+8]
mov esi, dword ptr [CTX+108]
mov eax, esi
sar eax, 31
add esi, dword ptr [ebx+40]
adc eax, dword ptr [ebx+44]
mov ebx, dword ptr [ebp-32]
mov ecx, dword ptr [ebx+8]
add esi, dword ptr [ecx+40]
adc eax, dword ptr [ecx+44]
add esi, 4294967295
adc eax, 4294967295
mov ecx, dword ptr [ebp-32]
mov ebx, dword ptr [ecx+8]
mov edi, dword ptr [ebx+40]
mov ecx, dword ptr [ebx+44]
add edi, 4294967295
adc ecx, 4294967295
not edi
not ecx
and esi, edi
and eax, ecx
mov edi, esi
mov dword ptr [CTX+108], edi
mov edi, dword ptr [CTX+108]
mov ecx, 8
mov eax, edi
cdq
idiv ecx
mov eax, edx
mov edi, eax
neg edi
add edi, dword ptr [CTX+108]
add edi, 8
mov dword ptr [CTX+108], edi
sub esp, 12
push 1
push 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
sub esp, 8
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
mov edi, dword ptr [CTX+108]
neg edi
push edi
call fb_IntToStr
add esp, 8
push eax
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3784]
push eax
call fb_StrAssign
add esp, 28
lea eax, [ebp-3784]
push eax
lea eax, [ebp-44]
push eax
mov eax, dword ptr [ebp-32]
mov edi, dword ptr [eax+8]
mov eax, dword ptr [edi+40]
push eax
call MEMCOPY
add esp, 32
sub esp, 12
lea eax, [ebp-3784]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [CTX+108]
neg eax
push eax
call fb_IntToStr
add esp, 16
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3820]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3820]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3820]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
mov dword ptr [ebp-3848], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_14EB
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
lea eax, [ebp-3832]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
mov dword ptr [ebp-3836], 0
lea eax, [ebp-3844]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3856]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3856]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3856]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_152C
.Lt_152D:
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
.Lt_152C:
jmp .Lt_152A
.Lt_152B:
mov eax, dword ptr [ebp-32]
mov edi, dword ptr [eax]
cmp edi, 5
sete dl
mov edi, edx
shr edi, 1
sbb edi, edi
mov eax, dword ptr [ebp-20]
cmp eax, 20
sete al
shr eax, 1
sbb eax, eax
or edi, eax
je .Lt_153B
mov eax, dword ptr [ebp-32]
mov edi, dword ptr [eax+4]
and edi, 31
cmp edi, 22
jne .Lt_153C
mov edi, dword ptr [CTX+212]
cmp edi, 2
sete dl
mov edi, edx
shr edi, 1
sbb edi, edi
mov dword ptr [ebp-3764], edi
jmp .Lt_1C34
.Lt_153C:
mov dword ptr [ebp-3764], 0
.Lt_1C34:
cmp dword ptr [ebp-3764], 0
je .Lt_153E
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3768], eax
jmp .Lt_1C35
.Lt_153E:
mov dword ptr [ebp-3768], 0
.Lt_1C35:
cmp dword ptr [ebp-3768], 0
je .Lt_1541
sub esp, 8
push 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push -1
sub esp, 8
sub esp, 12
sub esp, 4
push 1
push offset Lt_0118
call fb_StrAllocTempDescZEx
add esp, 12
push eax
lea eax, [ebp-44]
push eax
push 1
call fb_StrInstr
add esp, 24
dec eax
push eax
lea eax, [ebp-44]
push eax
call fb_LEFT
add esp, 16
push eax
push 20
push offset Lt_0EE4
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3804]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3804]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3804]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1540
.Lt_1541:
sub esp, 8
push 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 10
push offset Lt_068E
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3792]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3792]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3792]
push eax
call fb_StrDelete
add esp, 16
.Lt_1540:
jmp .Lt_153A
.Lt_153B:
sub esp, 8
push 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3784]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3784]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3784]
push eax
call fb_StrDelete
add esp, 16
.Lt_153A:
cmp dword ptr [ebp-20], 20
jne .Lt_154A
mov eax, dword ptr [ebp-32]
mov edi, dword ptr [eax+8]
mov esi, dword ptr [CTX+108]
mov eax, esi
sar eax, 31
add esi, dword ptr [edi+40]
adc eax, dword ptr [edi+44]
mov edi, dword ptr [ebp-32]
mov ecx, dword ptr [edi+8]
add esi, dword ptr [ecx+40]
adc eax, dword ptr [ecx+44]
add esi, 4294967295
adc eax, 4294967295
mov ecx, dword ptr [ebp-32]
mov edi, dword ptr [ecx+8]
mov ebx, dword ptr [edi+40]
mov ecx, dword ptr [edi+44]
add ebx, 4294967295
adc ecx, 4294967295
not ebx
not ecx
and esi, ebx
and eax, ecx
mov ebx, esi
mov dword ptr [CTX+108], ebx
mov ebx, dword ptr [CTX+108]
mov ecx, 8
mov eax, ebx
cdq
idiv ecx
mov eax, edx
mov ebx, eax
neg ebx
add ebx, dword ptr [CTX+108]
add ebx, 8
mov dword ptr [CTX+108], ebx
sub esp, 12
push 1
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
sub esp, 8
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
mov ebx, dword ptr [CTX+108]
neg ebx
push ebx
call fb_IntToStr
add esp, 8
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3796]
push eax
call fb_StrAssign
add esp, 28
lea eax, [ebp-3796]
push eax
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
sub esp, 4
push 0
push 4
push offset Lt_009F
push -1
lea eax, [ebp-3772]
push eax
call fb_StrAssign
add esp, 24
lea eax, [ebp-3772]
push eax
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+8]
mov eax, dword ptr [ebx+40]
push eax
call MEMCOPY
add esp, 32
sub esp, 12
lea eax, [ebp-3796]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-3772]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [CTX+108]
neg eax
push eax
call fb_IntToStr
add esp, 16
push eax
push 10
push offset Lt_068E
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3832]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3832]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3832]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3868], 0
mov dword ptr [ebp-3864], 0
mov dword ptr [ebp-3860], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_14EB
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
mov dword ptr [ebp-3836], 0
lea eax, [ebp-3844]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
mov dword ptr [ebp-3848], 0
lea eax, [ebp-3856]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3868]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3868]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3868]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1549
.Lt_154A:
sub esp, 8
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_14EB
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3796]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3796]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3796]
push eax
call fb_StrDelete
add esp, 16
.Lt_1549:
.Lt_152A:
.Lt_1502:
.Lt_14AF:
.Lt_1486:
jmp .Lt_1484
.Lt_1485:
push 1
push offset Lt_0000
push -1
lea eax, [ebp-56]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_1558
sub esp, 12
lea eax, [ebp-56]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_1558:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 0
jne .Lt_155A
cmp dword ptr [ebp-20], 15
jne .Lt_155C
mov eax, dword ptr [ebp-32]
fld qword ptr [eax+24]
fcomp qword ptr [Lt_1AEB]
fnstsw ax
test ah, 0b01000000
jz .Lt_155E
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push 13
push offset Lt_1508
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_155D
.Lt_155E:
sub esp, 8
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 10
push offset Lt_0A9C
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3820]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3820]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3820]
push eax
call fb_StrDelete
add esp, 16
.Lt_155D:
sub esp, 8
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_0D77
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-16]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push 9
push offset Lt_0714
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3796]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3796]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3796]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_155B
.Lt_155C:
cmp dword ptr [ebp-20], 16
jne .Lt_1565
mov eax, dword ptr [ebp-32]
fld qword ptr [eax+24]
fcomp qword ptr [Lt_1AEB]
fnstsw ax
test ah, 0b01000000
jz .Lt_1567
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push 13
push offset Lt_1508
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1566
.Lt_1567:
sub esp, 8
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3820]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3820]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3820]
push eax
call fb_StrDelete
add esp, 16
.Lt_1566:
sub esp, 8
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-16]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push 9
push offset Lt_0719
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3796]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3796]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3796]
push eax
call fb_StrDelete
add esp, 16
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [CTX+212]
test ebx, ebx
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_156F
sub esp, 8
push 3
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_14EB
push -1
sub esp, 4
push -1
sub esp, 12
mov ebx, dword ptr [ebp-8]
sal ebx, 3
add ebx, -8
push ebx
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3832]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3832]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3832]
push eax
call fb_StrDelete
add esp, 16
.Lt_156F:
.Lt_156E:
jmp .Lt_155B
.Lt_1565:
sub esp, 8
push dword ptr [ebp-4]
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
push dword ptr [eax]
call REG_TRANSFER
add esp, 16
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 0
jne .Lt_1574
cmp dword ptr [eax+24], 0
jne .Lt_1574
.Lt_1C5E:
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
sub esp, 8
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [LISTREG]
mov eax, dword ptr [ebx]
push dword ptr [REGSTRD+eax*4]
push 5
push offset Lt_092C
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1573
.Lt_1574:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 0
mov ebx, -1
jg .Lt_1C5F
jl .Lt_1C60
cmp dword ptr [eax+24], 0
ja .Lt_1C5F
.Lt_1C60:
xor ebx, ebx
.Lt_1C5F:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 0
mov esi, -1
jl .Lt_1C61
jg .Lt_1C62
cmp dword ptr [eax+24], 2147483647
jbe .Lt_1C61
.Lt_1C62:
xor esi, esi
.Lt_1C61:
and ebx, esi
je .Lt_1579
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
sub esp, 8
push -1
lea esi, [ebp-44]
push esi
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov esi, dword ptr [ebp-12]
sal esi, 2
add esi, dword ptr [LISTREG]
mov ebx, dword ptr [esi]
push dword ptr [REGSTRD+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea ebx, [ebp-3772]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1573
.Lt_1579:
cmp dword ptr [ebp-20], 8
je .Lt_1580
.Lt_1581:
cmp dword ptr [ebp-20], 9
je .Lt_1580
.Lt_1582:
cmp dword ptr [ebp-20], 13
je .Lt_1580
.Lt_1583:
cmp dword ptr [ebp-20], 14
je .Lt_1580
.Lt_1584:
cmp dword ptr [ebp-20], 10
jne .Lt_157F
.Lt_1580:
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea ebx, [ebp-3772]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_157E
.Lt_157F:
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea ebx, [ebp-3772]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
.Lt_1589:
.Lt_157E:
.Lt_1573:
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [CTX+212]
test ebx, ebx
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_158F
sub esp, 8
push 3
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
sub esp, 8
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [LISTREG]
mov eax, dword ptr [ebx]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
.Lt_158F:
.Lt_158E:
.Lt_155B:
jmp .Lt_1559
.Lt_155A:
cmp dword ptr [ebp-20], 20
jne .Lt_1594
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+8]
mov eax, dword ptr [ebx+40]
mov dword ptr [ebp-80], eax
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 4
jne .Lt_1596
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-44]
push eax
push 2
push offset Lt_0118
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
.Lt_1596:
.Lt_1595:
cmp dword ptr [CTX+212], 2
jne .Lt_159A
mov eax, dword ptr [ebp-76]
mov dword ptr [ebp-3764], eax
jmp .Lt_159C
.Lt_159E:
sub esp, 12
push dword ptr [ebp-4]
push offset LISTREG
push dword ptr [ebp-12]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call REG_FILLR
add esp, 32
jmp .Lt_159B
.Lt_159F:
sub esp, 12
push dword ptr [ebp-4]
push offset LISTREG
mov eax, dword ptr [ebp-12]
dec eax
push eax
lea eax, [ebp-44]
push eax
push 8
call REG_FILLR
add esp, 32
sub esp, 12
push dword ptr [ebp-4]
push offset LISTREG
push dword ptr [ebp-12]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call REG_FILLR
add esp, 32
jmp .Lt_159B
.Lt_15A0:
sub esp, 12
push dword ptr [ebp-4]
push offset LISTREG
push dword ptr [ebp-12]
lea eax, [ebp-44]
push eax
push 8
call REG_FILLR
add esp, 32
sub esp, 4
push dword ptr [ebp-16]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call REG_FILLX
add esp, 16
jmp .Lt_159B
.Lt_15A1:
sub esp, 4
push dword ptr [ebp-16]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call REG_FILLX
add esp, 16
jmp .Lt_159B
.Lt_15A2:
sub esp, 4
push dword ptr [ebp-16]
lea eax, [ebp-44]
push eax
push 8
call REG_FILLX
add esp, 16
sub esp, 12
push dword ptr [ebp-4]
push offset LISTREG
push dword ptr [ebp-12]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call REG_FILLR
add esp, 32
jmp .Lt_159B
.Lt_15A3:
sub esp, 4
mov eax, dword ptr [ebp-16]
dec eax
push eax
lea eax, [ebp-44]
push eax
push 8
call REG_FILLX
add esp, 16
sub esp, 4
push dword ptr [ebp-16]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call REG_FILLX
add esp, 16
jmp .Lt_159B
.Lt_159C:
cmp dword ptr [ebp-3764], 5
ja .Lt_159B
mov eax, dword ptr [ebp-3764]
jmp dword ptr [.LT_15A4+eax*4]
.LT_15A4:
.int .Lt_159E
.int .Lt_15A1
.int .Lt_159F
.int .Lt_15A0
.int .Lt_15A2
.int .Lt_15A3
.Lt_159B:
jmp .Lt_1599
.Lt_159A:
cmp dword ptr [ebp-76], 0
jne .Lt_15A6
sub esp, 12
push dword ptr [ebp-4]
push offset LISTREG
push dword ptr [ebp-12]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call REG_FILLR
add esp, 32
jmp .Lt_15A5
.Lt_15A6:
cmp dword ptr [ebp-76], 1
jne .Lt_15A7
sub esp, 4
push dword ptr [ebp-16]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call REG_FILLX
add esp, 16
jmp .Lt_15A5
.Lt_15A7:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 4
jne .Lt_15A9
mov eax, dword ptr [ebp-80]
mov dword ptr [ebp-3764], eax
jmp .Lt_15AB
.Lt_15AD:
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 14
push offset Lt_14B9
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_15AA
.Lt_15B2:
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 14
push offset Lt_0780
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_15AA
.Lt_15B7:
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0786
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_15AA
.Lt_15BC:
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_15AA
.Lt_15AB:
mov eax, dword ptr [ebp-3764]
add eax, 4294967295
cmp eax, 7
ja .Lt_15AA
mov eax, dword ptr [ebp-3764]
jmp dword ptr [.LT_15C1+eax*4-4]
.LT_15C1:
.int .Lt_15AD
.int .Lt_15B2
.int .Lt_15AA
.int .Lt_15B7
.int .Lt_15AA
.int .Lt_15AA
.int .Lt_15AA
.int .Lt_15BC
.Lt_15AA:
jmp .Lt_15A8
.Lt_15A9:
mov eax, dword ptr [ebp-80]
mov dword ptr [ebp-3764], eax
jmp .Lt_15C3
.Lt_15C5:
sub esp, 8
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 9
push offset Lt_11EA
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3788]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3788]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3788]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
sub esp, 8
push 10
push offset Lt_14D5
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 14
push offset Lt_14B9
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3824]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3824]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3824]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_15C2
.Lt_15CB:
sub esp, 8
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 9
push offset Lt_14DA
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3788]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3788]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3788]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
sub esp, 8
push 10
push offset Lt_14DD
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 14
push offset Lt_0780
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3824]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3824]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3824]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_15C2
.Lt_15D1:
sub esp, 8
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 10
push offset Lt_0A9C
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3788]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3788]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3788]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_14E4
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0786
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3824]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3824]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3824]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_15C2
.Lt_15D7:
sub esp, 8
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3788]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3788]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3788]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_14EB
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3824]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3824]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3824]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_15C2
.Lt_15C3:
mov eax, dword ptr [ebp-3764]
add eax, 4294967295
cmp eax, 7
ja .Lt_15C2
mov eax, dword ptr [ebp-3764]
jmp dword ptr [.LT_15DD+eax*4-4]
.LT_15DD:
.int .Lt_15C5
.int .Lt_15CB
.int .Lt_15C2
.int .Lt_15D1
.int .Lt_15C2
.int .Lt_15C2
.int .Lt_15C2
.int .Lt_15D7
.Lt_15C2:
.Lt_15A8:
.Lt_15A5:
.Lt_1599:
jmp .Lt_1559
.Lt_1594:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 5
jne .Lt_15DF
sub esp, 8
push dword ptr [ebp-4]
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
push dword ptr [eax]
call REG_TRANSFER
add esp, 16
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+4]
and ebx, 31
cmp ebx, 22
jne .Lt_15E0
mov ebx, dword ptr [CTX+212]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-3764], ebx
jmp .Lt_1C36
.Lt_15E0:
mov dword ptr [ebp-3764], 0
.Lt_1C36:
cmp dword ptr [ebp-3764], 0
je .Lt_15E2
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3768], eax
jmp .Lt_1C37
.Lt_15E2:
mov dword ptr [ebp-3768], 0
.Lt_1C37:
cmp dword ptr [ebp-3768], 0
je .Lt_15E5
sub esp, 8
push 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push -1
sub esp, 8
sub esp, 12
sub esp, 4
push 1
push offset Lt_0118
call fb_StrAllocTempDescZEx
add esp, 12
push eax
lea eax, [ebp-44]
push eax
push 1
call fb_StrInstr
add esp, 24
dec eax
push eax
lea eax, [ebp-44]
push eax
call fb_LEFT
add esp, 16
push eax
push -1
sub esp, 4
push 13
push offset Lt_03BC
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea ebx, [ebp-3780]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
lea eax, [ebp-3816]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3828]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3828]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3828]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_15E4
.Lt_15E5:
sub esp, 8
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push 5
push offset Lt_012E
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea ebx, [ebp-3780]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3816]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3816]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3816]
push eax
call fb_StrDelete
add esp, 16
.Lt_15E4:
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [CTX+212]
test ebx, ebx
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_15F0
sub esp, 8
push 3
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
sub esp, 8
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [LISTREG]
mov eax, dword ptr [ebx]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3816]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3816]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3816]
push eax
call fb_StrDelete
add esp, 16
.Lt_15F0:
.Lt_15EF:
jmp .Lt_15DE
.Lt_15DF:
mov eax, dword ptr [ebp-20]
and eax, 480
je .Lt_15F5
mov dword ptr [ebp-3764], 24
jmp .Lt_1C38
.Lt_15F5:
mov eax, dword ptr [ebp-20]
and eax, 31
mov dword ptr [ebp-3764], eax
.Lt_1C38:
mov eax, dword ptr [ebp-3764]
imul eax, 28
cmp dword ptr [SYMB_DTYPETB+eax], 1
jne .Lt_15F8
cmp dword ptr [ebp-20], 16
jne .Lt_15FA
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 4
jne .Lt_15FC
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-16]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push 9
push offset Lt_0719
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_15FB
.Lt_15FC:
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-16]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push 10
push offset Lt_1601
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
.Lt_15FB:
jmp .Lt_15F9
.Lt_15FA:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 4
jne .Lt_1607
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-16]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push 9
push offset Lt_0714
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1606
.Lt_1607:
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-16]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push 10
push offset Lt_160C
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
.Lt_1606:
.Lt_15F9:
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [CTX+212]
test ebx, ebx
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_1612
sub esp, 8
push 3
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov ebx, dword ptr [ebp-16]
dec ebx
push ebx
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 11
push offset Lt_1614
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 17
push offset Lt_1613
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3860], 0
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp-16]
dec eax
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_1619
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push 6
push offset Lt_0739
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea ebx, [ebp-3824]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3848], 0
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
lea eax, [ebp-3848]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3860]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3860]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3860]
push eax
call fb_StrDelete
add esp, 16
.Lt_1612:
.Lt_1611:
jmp .Lt_15F7
.Lt_15F8:
sub esp, 8
push dword ptr [ebp-4]
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
push dword ptr [eax]
call REG_TRANSFER
add esp, 16
cmp dword ptr [ebp-20], 19
jne .Lt_161F
cmp dword ptr [CTX+212], 2
jne .Lt_1621
sub esp, 8
push 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3780]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3780]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3780]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
push 0
push 72
push offset Lt_1624
push -1
lea eax, [ebp-3792]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3792]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3792]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3804]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3804]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3804]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1620
.Lt_1621:
mov dword ptr [ebp-20], 8
.Lt_1620:
.Lt_161F:
.Lt_161E:
cmp dword ptr [CTX+212], 2
jne .Lt_1627
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3768], eax
jmp .Lt_1C39
.Lt_1627:
mov dword ptr [ebp-3768], 0
.Lt_1C39:
cmp dword ptr [ebp-3768], 0
je .Lt_162A
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+32], 0
je .Lt_162B
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3772], eax
jmp .Lt_1C3A
.Lt_162B:
mov dword ptr [ebp-3772], 0
.Lt_1C3A:
cmp dword ptr [ebp-3772], 0
je .Lt_162E
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
sub esp, 8
push 15
push offset Lt_0BCF
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp-32]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 6
push offset Lt_0693
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
.Lt_162E:
.Lt_162D:
.Lt_162A:
.Lt_1629:
cmp dword ptr [ebp-20], 8
je .Lt_1634
.Lt_1635:
cmp dword ptr [ebp-20], 9
je .Lt_1634
.Lt_1636:
cmp dword ptr [ebp-20], 13
je .Lt_1634
.Lt_1637:
cmp dword ptr [ebp-20], 14
je .Lt_1634
.Lt_1638:
cmp dword ptr [ebp-20], 10
jne .Lt_1633
.Lt_1634:
sub esp, 8
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRQ+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea ebx, [ebp-3780]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3816]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3816]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3816]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1632
.Lt_1633:
cmp dword ptr [ebp-20], 11
je .Lt_163E
.Lt_163F:
cmp dword ptr [ebp-20], 12
jne .Lt_163D
.Lt_163E:
sub esp, 8
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRD+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea ebx, [ebp-3780]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3816]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3816]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3816]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1632
.Lt_163D:
cmp dword ptr [ebp-20], 5
je .Lt_1645
.Lt_1646:
cmp dword ptr [ebp-20], 6
jne .Lt_1644
.Lt_1645:
sub esp, 8
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRW+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea ebx, [ebp-3780]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3816]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3816]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3816]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1632
.Lt_1644:
cmp dword ptr [ebp-20], 2
je .Lt_164C
.Lt_164D:
cmp dword ptr [ebp-20], 3
je .Lt_164C
.Lt_164E:
cmp dword ptr [ebp-20], 1
je .Lt_164C
.Lt_164F:
cmp dword ptr [ebp-20], 4
jne .Lt_164B
.Lt_164C:
sub esp, 8
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [REGSTRB+ebx*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea ebx, [ebp-3780]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3816]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3816]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3816]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1632
.Lt_164B:
sub esp, 8
push 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3780]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3780]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3780]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [ebp-20]
call fb_IntToStr
add esp, 16
push eax
push 55
push offset Lt_1658
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3804]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3804]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3804]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3816]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3816]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3816]
push eax
call fb_StrDelete
add esp, 16
.Lt_1654:
.Lt_1632:
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [CTX+212]
test ebx, ebx
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_165D
sub esp, 8
push 3
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
sub esp, 8
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [LISTREG]
mov eax, dword ptr [ebx]
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 8
push offset Lt_14BA
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call fb_IntToStr
add esp, 16
push eax
push 15
push offset Lt_0343
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3816]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3816]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3816]
push eax
call fb_StrDelete
add esp, 16
.Lt_165D:
.Lt_165C:
.Lt_15F7:
.Lt_15DE:
.Lt_1559:
.Lt_1484:
sub esp, 8
push dword ptr [ebp-24]
lea eax, [IRHL+60]
push eax
call LISTDELNODE
add esp, 16
mov eax, dword ptr [ebp-28]
mov dword ptr [ebp-24], eax
jmp .Lt_13E1
.Lt_13E2:
mov eax, dword ptr [CTX+80]
cmp dword ptr [ebp-8], eax
jle .Lt_1663
mov eax, dword ptr [ebp-8]
mov dword ptr [CTX+80], eax
.Lt_1663:
push 1
push offset Lt_0000
push -1
push dword ptr [ebp+16]
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_1665
sub esp, 8
push 0
push dword ptr [ebp+16]
call HWRITEASM64
add esp, 16
.Lt_1665:
cmp byte ptr [ebp+32], 0
je .Lt_1667
sub esp, 12
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push 6
push offset Lt_13D1
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
mov dword ptr [ebp-3760], 0
lea eax, [ebp-3768]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3780]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3780]
push eax
call REG_FREEABLE
add esp, 16
sub esp, 12
lea eax, [ebp-3780]
push eax
call fb_StrDelete
add esp, 16
.Lt_1667:
cmp dword ptr [ebp-3740], 0
je .Lt_166B
mov eax, dword ptr [ebp-3740]
mov ecx, 16
cdq
idiv ecx
mov eax, edx
test eax, eax
je .Lt_166D
mov eax, dword ptr [ebp-3740]
sar eax, 31
and eax, 15
add eax, dword ptr [ebp-3740]
sar eax, 4
sal eax, 4
add eax, 16
mov dword ptr [ebp-3740], eax
sub esp, 8
push 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
mov dword ptr [ebp-3760], 0
push 0
push 11
push offset Lt_166E
push -1
lea eax, [ebp-3768]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3768]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3768]
push eax
call fb_StrDelete
add esp, 16
.Lt_166D:
.Lt_166C:
mov eax, dword ptr [ebp-3736]
mov dword ptr [ebp-3760], eax
jmp .Lt_1670
.Lt_1673:
push 4
push offset Lt_01DD
push -1
sub esp, 12
push 3
mov eax, dword ptr [ebp-3760]
imul eax, 12
lea ebx, [ebp+eax-3696]
push ebx
call fb_RIGHT
add esp, 20
push eax
call fb_StrCompare
add esp, 16
test eax, eax
jne .Lt_1675
sub esp, 8
push 3
mov eax, dword ptr [ebp-3760]
imul eax, 12
lea ebx, [ebp+eax-3696]
push ebx
call HWRITEASM64
add esp, 16
jmp .Lt_1674
.Lt_1675:
sub esp, 8
push 0
mov ebx, dword ptr [ebp-3760]
imul ebx, 12
lea eax, [ebp+ebx-3696]
push eax
call HWRITEASM64
add esp, 16
.Lt_1674:
.Lt_1671:
dec dword ptr [ebp-3760]
.Lt_1670:
cmp dword ptr [ebp-3760], 1
jge .Lt_1673
.Lt_1672:
.Lt_166B:
.Lt_166A:
cmp byte ptr [ebp+32], 0
je .Lt_1677
sub esp, 12
push 1
call REG_ALLOWED
add esp, 16
.Lt_1677:
call REG_SAVE
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
jne .Lt_1679
cmp dword ptr [CTX+212], 2
jne .Lt_167B
sub esp, 8
push 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
cmp dword ptr [ebp-16], 8
jg .Lt_167C
mov eax, dword ptr [ebp-16]
mov dword ptr [ebp-3760], eax
jmp .Lt_1C3B
.Lt_167C:
mov dword ptr [ebp-3760], 8
.Lt_1C3B:
push dword ptr [ebp-3760]
call fb_IntToStr
add esp, 16
push eax
push 10
push offset Lt_0A9C
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3784]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3784]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3784]
push eax
call fb_StrDelete
add esp, 16
.Lt_167B:
.Lt_167A:
.Lt_1679:
.Lt_1678:
cmp dword ptr [CTX+212], 2
jne .Lt_1680
sub esp, 12
push 0
call FBGETOPTION
add esp, 16
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3756], eax
jmp .Lt_1C3C
.Lt_1680:
mov dword ptr [ebp-3756], 0
.Lt_1C3C:
cmp dword ptr [ebp-3756], 0
je .Lt_1683
sub esp, 8
push 1
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_13D2
push -1
sub esp, 4
push -1
push dword ptr [ebp+12]
push 6
push offset Lt_13D1
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
mov dword ptr [ebp-3760], 0
lea eax, [ebp-3768]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3792]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3792]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3792]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1682
.Lt_1683:
sub esp, 8
push 1
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
push 0
push -1
sub esp, 8
push -1
push dword ptr [ebp+12]
push 6
push offset Lt_13D1
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
mov dword ptr [ebp-3760], 0
lea eax, [ebp-3768]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3780]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3780]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3780]
push eax
call fb_StrDelete
add esp, 16
.Lt_1682:
cmp dword ptr [ebp-3740], 0
je .Lt_168A
sub esp, 8
push 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [ebp-3740]
call fb_IntToStr
add esp, 16
push eax
push 10
push offset Lt_168B
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
mov dword ptr [ebp-3760], 0
lea eax, [ebp-3768]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3780]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3780]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3780]
push eax
call fb_StrDelete
add esp, 16
mov dword ptr [ebp-3740], 0
mov dword ptr [ebp-3736], 0
.Lt_168A:
.Lt_1689:
mov eax, dword ptr [CTX+100]
cmp dword ptr [CTX+108], eax
jle .Lt_168F
mov eax, dword ptr [CTX+108]
mov dword ptr [CTX+100], eax
.Lt_168F:
mov dword ptr [CTX+104], 0
mov byte ptr [CTX+137], 0
cmp dword ptr [ebp+20], 0
je .Lt_1691
sub esp, 12
push dword ptr [ebp+20]
call HISSTRUCTIN2REGS
add esp, 16
test eax, eax
je .Lt_1693
mov eax, dword ptr [ebp+20]
mov dword ptr [eax], 1
mov eax, dword ptr [SYMB_DTYPETB+368]
sal eax, 1
add dword ptr [CTX+96], eax
mov eax, dword ptr [CTX+96]
neg eax
mov esi, eax
mov ebx, esi
sar ebx, 31
mov eax, dword ptr [ebp+20]
mov dword ptr [eax+36], esi
mov dword ptr [eax+40], ebx
mov esi, dword ptr [ebp+20]
mov ebx, dword ptr [esi+8]
mov esi, dword ptr [ebx+128]
mov dword ptr [ebp-3760], esi
jmp .Lt_1695
.Lt_1697:
sub esp, 8
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_1698
push -1
sub esp, 4
push -1
sub esp, 8
mov esi, dword ptr [ebp+20]
push dword ptr [esi+40]
push dword ptr [esi+36]
call fb_LongintToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3796]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3796]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3796]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_169C
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+20]
mov ebx, dword ptr [eax+36]
mov esi, dword ptr [eax+40]
add ebx, 8
adc esi, 0
push esi
push ebx
call fb_LongintToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3832]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3832]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3832]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1694
.Lt_16A0:
sub esp, 8
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_1698
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+20]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3796]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3796]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3796]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
push 0
push -1
sub esp, 8
push 12
push offset Lt_16A4
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+20]
mov esi, dword ptr [eax+36]
mov ebx, dword ptr [eax+40]
add esi, 8
adc ebx, 0
push ebx
push esi
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3832]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3832]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3832]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1694
.Lt_16A8:
sub esp, 8
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
sub esp, 8
push 12
push offset Lt_16A4
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+20]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3796]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3796]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3796]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
push 0
push -1
sub esp, 8
push 11
push offset Lt_1698
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+20]
mov ebx, dword ptr [eax+36]
mov esi, dword ptr [eax+40]
add ebx, 8
adc esi, 0
push esi
push ebx
call fb_LongintToStr
add esp, 16
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3832]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3832]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3832]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1694
.Lt_16AF:
sub esp, 8
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
sub esp, 8
push 12
push offset Lt_16A4
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+20]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3796]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3796]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3796]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
push 0
push -1
sub esp, 8
push 12
push offset Lt_16B3
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+20]
mov esi, dword ptr [eax+36]
mov ebx, dword ptr [eax+40]
add esi, 8
adc ebx, 0
push ebx
push esi
call fb_LongintToStr
add esp, 16
push eax
push 6
push offset Lt_0739
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3832]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3832]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3832]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1694
.Lt_1695:
mov eax, dword ptr [ebp-3760]
add eax, 4294967294
cmp eax, 4
ja .Lt_1694
mov eax, dword ptr [ebp-3760]
jmp dword ptr [.LT_16B7+eax*4-8]
.LT_16B7:
.int .Lt_1697
.int .Lt_16A0
.int .Lt_1694
.int .Lt_16A8
.int .Lt_16AF
.Lt_1694:
jmp .Lt_1692
.Lt_1693:
mov eax, dword ptr [ebp+20]
mov esi, dword ptr [eax+4]
and esi, 511
mov dword ptr [ebp-20], esi
mov esi, dword ptr [ebp-20]
and esi, 480
je .Lt_16B8
mov dword ptr [ebp-3760], 24
jmp .Lt_1C3D
.Lt_16B8:
mov esi, dword ptr [ebp-20]
and esi, 31
mov dword ptr [ebp-3760], esi
.Lt_1C3D:
cmp dword ptr [ebp-3760], 24
jne .Lt_16BB
mov dword ptr [ebp-20], 8
.Lt_16BB:
cmp dword ptr [ebp-20], 16
jne .Lt_16BD
sub esp, 8
push 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
push 0
push 15
push offset Lt_16BE
push -1
lea esi, [ebp-3772]
push esi
call fb_StrAssign
add esp, 20
lea esi, [ebp-3772]
push esi
call HWRITEASM64
add esp, 16
sub esp, 12
lea esi, [ebp-3772]
push esi
call fb_StrDelete
add esp, 16
jmp .Lt_16BC
.Lt_16BD:
cmp dword ptr [ebp-20], 15
jne .Lt_16C0
sub esp, 8
push 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
push 0
push 15
push offset Lt_16C1
push -1
lea esi, [ebp-3772]
push esi
call fb_StrAssign
add esp, 20
lea esi, [ebp-3772]
push esi
call HWRITEASM64
add esp, 16
sub esp, 12
lea esi, [ebp-3772]
push esi
call fb_StrDelete
add esp, 16
.Lt_16C0:
.Lt_16BC:
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea esi, [ebp-56]
push esi
call fb_StrAssign
add esp, 32
sub esp, 8
push -1
mov esi, dword ptr [ebp+20]
push dword ptr [esi+12]
call REG_FINDFREE
add esp, 16
mov esi, dword ptr [ebp+20]
mov eax, dword ptr [esi]
mov dword ptr [ebp-3764], eax
cmp dword ptr [ebp-3764], 2
jne .Lt_16C5
.Lt_16C6:
sub esp, 4
lea eax, [ebp-56]
push eax
lea eax, [ebp-44]
push eax
push dword ptr [ebp+20]
call PREPARE_IDX
add esp, 16
jmp .Lt_16C3
.Lt_16C5:
cmp dword ptr [ebp-3764], 4
jne .Lt_16C7
.Lt_16C8:
cmp dword ptr [ebp-20], 8
je .Lt_16CB
.Lt_16CC:
cmp dword ptr [ebp-20], 9
je .Lt_16CB
.Lt_16CD:
cmp dword ptr [ebp-20], 13
je .Lt_16CB
.Lt_16CE:
cmp dword ptr [ebp-20], 14
je .Lt_16CB
.Lt_16CF:
cmp dword ptr [ebp-20], 16
je .Lt_16CB
.Lt_16D0:
cmp dword ptr [ebp-20], 10
jne .Lt_16CA
.Lt_16CB:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_16C9
.Lt_16CA:
cmp dword ptr [ebp-20], 11
je .Lt_16D2
.Lt_16D3:
cmp dword ptr [ebp-20], 12
je .Lt_16D2
.Lt_16D4:
cmp dword ptr [ebp-20], 15
jne .Lt_16D1
.Lt_16D2:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRD+eax*4]
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_16C9
.Lt_16D1:
cmp dword ptr [ebp-20], 5
je .Lt_16D6
.Lt_16D7:
cmp dword ptr [ebp-20], 6
jne .Lt_16D5
.Lt_16D6:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRW+eax*4]
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_16C9
.Lt_16D5:
cmp dword ptr [ebp-20], 2
je .Lt_16D9
.Lt_16DA:
cmp dword ptr [ebp-20], 3
je .Lt_16D9
.Lt_16DB:
cmp dword ptr [ebp-20], 1
je .Lt_16D9
.Lt_16DC:
cmp dword ptr [ebp-20], 4
jne .Lt_16D8
.Lt_16D9:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRB+eax*4]
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_16C9
.Lt_16D8:
sub esp, 8
push 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3776]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3776]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3776]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [ebp-20]
call fb_IntToStr
add esp, 16
push eax
push 55
push offset Lt_16E1
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3800]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3800]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3800]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
push dword ptr [REGSTRQ+68]
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
.Lt_16DD:
.Lt_16C9:
jmp .Lt_16C3
.Lt_16C7:
cmp dword ptr [ebp-3764], 1
jne .Lt_16E5
.Lt_16E6:
mov eax, dword ptr [ebp+20]
mov esi, dword ptr [eax+32]
mov eax, dword ptr [esi+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov esi, dword ptr [ebp+20]
mov ebx, dword ptr [esi+32]
mov esi, dword ptr [ebx+4]
and esi, 1
test esi, esi
setne dl
mov esi, edx
shr esi, 1
sbb esi, esi
or eax, esi
je .Lt_16E8
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov esi, dword ptr [ebp+20]
push dword ptr [esi+40]
push dword ptr [esi+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+20]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_16E7
.Lt_16E8:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
.Lt_16E7:
jmp .Lt_16C3
.Lt_16E5:
cmp dword ptr [ebp-3764], 3
jne .Lt_16ED
.Lt_16EE:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+20]
mov esi, dword ptr [eax+48]
push dword ptr [esi+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_16C3
.Lt_16ED:
cmp dword ptr [ebp-3764], 5
jne .Lt_16F2
.Lt_16F3:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+20]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+20]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push 44
push offset Lt_16F9
push -1
lea eax, [ebp-3824]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3824]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3824]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3836]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3836]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3836]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_16C3
.Lt_16F2:
sub esp, 8
push 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3776]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3776]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3776]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [ebp+20]
push dword ptr [eax]
call fb_IntToStr
add esp, 16
push eax
push 46
push offset Lt_16FF
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3800]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3800]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3800]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3812]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3812]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3812]
push eax
call fb_StrDelete
add esp, 16
.Lt_16FC:
.Lt_16C3:
push 1
push offset Lt_0000
push -1
lea eax, [ebp-56]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_1704
sub esp, 12
lea eax, [ebp-56]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_1704:
cmp dword ptr [ebp-20], 8
je .Lt_1707
.Lt_1708:
cmp dword ptr [ebp-20], 9
je .Lt_1707
.Lt_1709:
cmp dword ptr [ebp-20], 13
je .Lt_1707
.Lt_170A:
cmp dword ptr [ebp-20], 14
je .Lt_1707
.Lt_170B:
cmp dword ptr [ebp-20], 16
je .Lt_1707
.Lt_170C:
cmp dword ptr [ebp-20], 10
jne .Lt_1706
.Lt_1707:
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
sub esp, 8
push 0
push dword ptr [REGSTRQ]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-44]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1705
.Lt_1706:
cmp dword ptr [ebp-20], 11
je .Lt_1712
.Lt_1713:
cmp dword ptr [ebp-20], 12
je .Lt_1712
.Lt_1714:
cmp dword ptr [ebp-20], 15
jne .Lt_1711
.Lt_1712:
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
sub esp, 8
push 0
push dword ptr [REGSTRD]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-44]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1705
.Lt_1711:
cmp dword ptr [ebp-20], 5
je .Lt_171A
.Lt_171B:
cmp dword ptr [ebp-20], 6
jne .Lt_1719
.Lt_171A:
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
sub esp, 8
push 0
push dword ptr [REGSTRW]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-44]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1705
.Lt_1719:
cmp dword ptr [ebp-20], 2
je .Lt_1721
.Lt_1722:
cmp dword ptr [ebp-20], 3
je .Lt_1721
.Lt_1723:
cmp dword ptr [ebp-20], 1
je .Lt_1721
.Lt_1724:
cmp dword ptr [ebp-20], 4
jne .Lt_1720
.Lt_1721:
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
sub esp, 8
push 0
push dword ptr [REGSTRB]
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-44]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1705
.Lt_1720:
sub esp, 8
push 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3772]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3772]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3772]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [ebp-20]
call fb_IntToStr
add esp, 16
push eax
push 55
push offset Lt_172D
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-3796]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3796]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3796]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-3808]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-3808]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-3808]
push eax
call fb_StrDelete
add esp, 16
.Lt_1729:
.Lt_1705:
.Lt_1692:
.Lt_1691:
.Lt_1690:
sub esp, 12
lea eax, [ebp-3732]
push eax
call fb_ArrayDestructStr
add esp, 16
sub esp, 12
lea eax, [ebp-68]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-56]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-44]
push eax
call fb_StrDelete
add esp, 16
.Lt_13DD:
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret
.size HDOCALL, .-HDOCALL
.balign 16
_EMITCALL:
.type _EMITCALL, @function
push ebp
mov ebp, esp
sub esp, 36
push ebx
.Lt_1731:
mov byte ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+80]
mov dword ptr [ebp-8], ebx
cmp dword ptr [ebp-8], 0
je .Lt_1734
mov ebx, dword ptr [ebp-8]
cmp dword ptr [ebx+56], 4
jne .Lt_1736
mov byte ptr [ebp-4], 1
.Lt_1736:
.Lt_1735:
.Lt_1734:
.Lt_1733:
sub esp, 4
push 0
movzx eax, byte ptr [ebp-4]
push eax
push dword ptr [ebp+20]
push dword ptr [ebp+16]
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
sub esp, 8
push 0
push 1
push offset Lt_0000
push -1
lea ebx, [ebp-32]
push ebx
call fb_StrAssign
add esp, 28
lea ebx, [ebp-32]
push ebx
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
sub esp, 4
push 0
push 0
sub esp, 8
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 12
push eax
push -1
lea eax, [ebp-20]
push eax
call fb_StrAssign
add esp, 24
lea eax, [ebp-20]
push eax
push dword ptr [ebp+8]
call HDOCALL
add esp, 32
sub esp, 12
lea eax, [ebp-32]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-20]
push eax
call fb_StrDelete
add esp, 16
.Lt_1732:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITCALL, .-_EMITCALL
.balign 16
_EMITCALLPTR:
.type _EMITCALLPTR, @function
push ebp
mov ebp, esp
sub esp, 84
push ebx
.Lt_1739:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov byte ptr [ebp-28], 0
mov dword ptr [ebp-32], 0
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-36], ebx
cmp dword ptr [ebp-36], 4
jne .Lt_173D
.Lt_173E:
sub esp, 12
push 0
push 0
sub esp, 8
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_173B
.Lt_173D:
cmp dword ptr [ebp-36], 2
jne .Lt_173F
.Lt_1740:
sub esp, 4
lea eax, [ebp-24]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+12]
call PREPARE_IDX
add esp, 16
jmp .Lt_173B
.Lt_173F:
cmp dword ptr [ebp-36], 3
jne .Lt_1741
.Lt_1742:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_173B
.Lt_1741:
cmp dword ptr [ebp-36], 5
jne .Lt_1746
.Lt_1747:
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_173B
.Lt_1746:
cmp dword ptr [ebp-36], 0
jne .Lt_1748
.Lt_1749:
sub esp, 8
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-48]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 44
push offset Lt_174C
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-60]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_173B
.Lt_1748:
cmp dword ptr [ebp-36], 1
jne .Lt_174F
.Lt_1750:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1752
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1751
.Lt_1752:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_1751:
jmp .Lt_173B
.Lt_174F:
sub esp, 8
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-48]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 51
push offset Lt_09C7
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-60]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-72]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
.Lt_1757:
.Lt_173B:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+80]
mov dword ptr [ebp-32], ebx
cmp dword ptr [ebp-32], 0
je .Lt_175C
mov ebx, dword ptr [ebp-32]
cmp dword ptr [ebx+56], 4
jne .Lt_175E
mov byte ptr [ebp-28], 1
.Lt_175E:
.Lt_175D:
.Lt_175C:
.Lt_175B:
sub esp, 4
push 1
movzx eax, byte ptr [ebp-28]
push eax
push dword ptr [ebp+24]
push dword ptr [ebp+16]
lea ebx, [ebp-24]
push ebx
lea ebx, [ebp-12]
push ebx
push dword ptr [ebp+8]
call HDOCALL
add esp, 32
sub esp, 12
lea ebx, [ebp-24]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-12]
push ebx
call fb_StrDelete
add esp, 16
.Lt_173A:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITCALLPTR, .-_EMITCALLPTR
.balign 16
_EMITJUMPPTR:
.type _EMITJUMPPTR, @function
push ebp
mov ebp, esp
sub esp, 52
push ebx
.Lt_175F:
mov dword ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [CTX+120]
cmp dword ptr [eax+12], ebx
jne .Lt_1762
mov ebx, dword ptr [CTX+116]
mov dword ptr [ebp-4], ebx
mov dword ptr [CTX+124], 0
mov dword ptr [CTX+120], -2
jmp .Lt_1761
.Lt_1762:
sub esp, 12
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-4], eax
.Lt_1761:
sub esp, 8
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [REGSTRQ+eax*4]
push 6
push offset Lt_1763
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-40]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-40]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-40]
push eax
call fb_StrDelete
add esp, 16
.Lt_1760:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITJUMPPTR, .-_EMITJUMPPTR
.balign 16
_EMITBRANCH:
.type _EMITBRANCH, @function
push ebp
mov ebp, esp
sub esp, 40
.Lt_1767:
sub esp, 8
push 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+12]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_0101
push 0
sub esp, 4
push dword ptr [ebp+8]
call HGETBOPCODE
add esp, 8
push eax
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-36]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-36]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [CTX+216], 0
je .Lt_176D
mov eax, dword ptr [CTX+216]
mov dword ptr [REGHANDLE+eax*4], -2
mov dword ptr [CTX+216], 0
.Lt_176D:
.Lt_176C:
cmp dword ptr [CTX+200], 0
je .Lt_176F
mov eax, dword ptr [ebp+12]
mov dword ptr [CTX+204], eax
.Lt_176F:
.Lt_176E:
cmp dword ptr [ebp+8], 98
je .Lt_1771
sub esp, 12
push dword ptr [ebp+12]
call REG_MARK
add esp, 16
.Lt_1771:
.Lt_1770:
.Lt_1768:
mov esp, ebp
pop ebp
ret
.size _EMITBRANCH, .-_EMITBRANCH
.balign 16
_EMITRETURN:
.type _EMITRETURN, @function
push ebp
mov ebp, esp
sub esp, 24
.Lt_1772:
sub esp, 8
push 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 30
push offset Lt_1774
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-12]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push 4
push offset Lt_05D1
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-24]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
.Lt_1773:
mov esp, ebp
pop ebp
ret
.size _EMITRETURN, .-_EMITRETURN
.balign 16
_EMITJMPTB:
.type _EMITJMPTB, @function
push ebp
mov ebp, esp
sub esp, 300
push ebx
push esi
push edi
.Lt_1777:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrInit
add esp, 32
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-52], 0
cmp dword ptr [ebp+24], 0
jne .Lt_177B
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+28]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 5
push offset Lt_0E2F
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_177A
.Lt_177B:
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ebp+36], 0
mov eax, -1
ja .Lt_1C74
jb .Lt_1C75
cmp dword ptr [ebp+32], 2147483647
ja .Lt_1C74
.Lt_1C75:
xor eax, eax
.Lt_1C74:
cmp dword ptr [ebp+36], 4294967295
mov ebx, -1
jb .Lt_1C76
ja .Lt_1C77
cmp dword ptr [ebp+32], 2147483648
jb .Lt_1C76
.Lt_1C77:
xor ebx, ebx
.Lt_1C76:
and eax, ebx
je .Lt_1781
sub esp, 12
push 0
push 0
sub esp, 4
push -1
push 999998
call REG_FINDFREE
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 8
push dword ptr [ebp+36]
push dword ptr [ebp+32]
call fb_ULongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-48]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-268]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-268]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-268]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-48]
push eax
push 10
push offset Lt_1786
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
lea eax, [ebp-280]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-292]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-292]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-292]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1780
.Lt_1781:
sub esp, 8
push 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 8
push dword ptr [ebp+36]
push dword ptr [ebp+32]
call fb_ULongintToStr
add esp, 16
push eax
push 10
push offset Lt_1786
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-244]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-244]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-244]
push eax
call fb_StrDelete
add esp, 16
.Lt_1780:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 8
push dword ptr [ebp+44]
push dword ptr [ebp+40]
call fb_ULongintToStr
add esp, 16
push eax
push 10
push offset Lt_178B
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+28]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 4
push offset Lt_091C
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-124]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-124]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-124]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
sub esp, 8
push 8
push offset Lt_1791
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 16
push offset Lt_1790
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
push 0
push 6
push offset Lt_04F7
push -1
lea eax, [ebp-172]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-172]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-172]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 9
push offset Lt_04F9
push -1
lea eax, [ebp-184]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-184]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-184]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-208]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-208]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-208]
push eax
call fb_StrDelete
add esp, 16
mov dword ptr [ebp-224], 0
mov eax, dword ptr [ebp+40]
mov dword ptr [ebp-228], eax
jmp .Lt_179A
.Lt_179D:
mov ebx, dword ptr [ebp-224]
mov eax, ebx
sar eax, 31
mov ecx, dword ptr [ebp-52]
sal ecx, 3
mov esi, dword ptr [ebp+16]
add esi, ecx
mov edi, dword ptr [esi]
mov ecx, dword ptr [esi+4]
cmp eax, ecx
jne .Lt_179F
cmp ebx, edi
jne .Lt_179F
.Lt_1C78:
sub esp, 8
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
mov edi, dword ptr [ebp-52]
sal edi, 2
mov ecx, dword ptr [ebp+20]
add ecx, edi
push dword ptr [ecx]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 7
push offset Lt_0214
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-252]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-252]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-252]
push eax
call fb_StrDelete
add esp, 16
inc dword ptr [ebp-52]
jmp .Lt_179E
.Lt_179F:
sub esp, 8
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+28]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 7
push offset Lt_0214
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-252]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-252]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-252]
push eax
call fb_StrDelete
add esp, 16
.Lt_179E:
.Lt_179B:
inc dword ptr [ebp-224]
.Lt_179A:
mov eax, dword ptr [ebp-228]
cmp dword ptr [ebp-224], eax
jle .Lt_179D
.Lt_179C:
sub esp, 12
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push 6
push offset Lt_057B
push -1
lea eax, [ebp-220]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-220]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-220]
push eax
call fb_StrDelete
add esp, 16
.Lt_177A:
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_1778:
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITJMPTB, .-_EMITJMPTB
.balign 16
_EMITMEM:
.type _EMITMEM, @function
push ebp
mov ebp, esp
sub esp, 308
push ebx
.Lt_17A5:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
sub esp, 12
push 0
push 5
push offset Lt_0389
push -1
lea eax, [ebp-72]
push eax
call fb_StrInit
add esp, 32
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-88], 0
cmp dword ptr [ebp+8], 107
jne .Lt_17A8
.Lt_17A9:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_17AB
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-88], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-88]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-84], 1
jmp .Lt_17AA
.Lt_17AB:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 1
jne .Lt_17AC
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_17AE
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_17AD
.Lt_17AE:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_17AD:
mov dword ptr [ebp-84], 0
jmp .Lt_17AA
.Lt_17AC:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 5
jne .Lt_17B3
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-84], 1
sub esp, 12
push 0
push 5
push offset Lt_012E
push -1
lea eax, [ebp-72]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_17AA
.Lt_17B3:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 49
push offset Lt_17B9
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-124]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-124]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-124]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_17A6
.Lt_17AA:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 4
jne .Lt_17BD
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp+16]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push -1
lea eax, [ebp-24]
push eax
push 6
push offset Lt_0D14
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-136]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-136]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-136]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-60]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-60]
push eax
push 4
push offset Lt_17C2
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-184]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-184]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-184]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-48]
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-208]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-208]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-208]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push 22
push offset Lt_17C9
push -1
lea eax, [ebp-220]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-220]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-220]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push 8
push offset Lt_17CB
push -1
lea eax, [ebp-232]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-232]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-232]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 5
push offset Lt_0484
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-256]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-256]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-256]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-48]
push eax
push 5
push offset Lt_0417
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
lea eax, [ebp-268]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-280]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-280]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-280]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-60]
push eax
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
lea eax, [ebp-292]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-304]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-304]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-304]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_17A6
.Lt_17BD:
.Lt_17BC:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 0
je .Lt_17D4
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 54
push offset Lt_17D7
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-124]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-124]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-124]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_17A6
.Lt_17D4:
.Lt_17D3:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+28], 0
jne .Lt_17DB
cmp dword ptr [eax+24], 0
jne .Lt_17DB
.Lt_1C7B:
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_17A6
.Lt_17DB:
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax+24]
mov ebx, dword ptr [eax+28]
mov dword ptr [ebp-96], ecx
mov dword ptr [ebp-92], ebx
cmp dword ptr [ebp-92], 0
jg .Lt_17DF
jl .Lt_1C7C
cmp dword ptr [ebp-96], 8
ja .Lt_17DF
.Lt_1C7C:
.Lt_17E0:
cmp dword ptr [ebp-92], 0
jne .Lt_1C7D
cmp dword ptr [ebp-96], 3
je .Lt_17DF
.Lt_1C7D:
.Lt_17E1:
cmp dword ptr [ebp-92], 0
jne .Lt_1C7E
cmp dword ptr [ebp-96], 5
je .Lt_17DF
.Lt_1C7E:
.Lt_17E2:
cmp dword ptr [ebp-92], 0
jne .Lt_1C7F
cmp dword ptr [ebp-96], 6
je .Lt_17DF
.Lt_1C7F:
.Lt_17E3:
cmp dword ptr [ebp-92], 0
jne .Lt_17DE
cmp dword ptr [ebp-96], 7
jne .Lt_17DE
.Lt_1C80:
.Lt_17DF:
sub esp, 4
push dword ptr [ebp-84]
lea ecx, [ebp-12]
push ecx
mov ecx, dword ptr [ebp+16]
mov ebx, dword ptr [ecx+24]
push ebx
call MEMCLEAR
add esp, 16
jmp .Lt_17DC
.Lt_17DE:
cmp dword ptr [ebp-92], 0
jne .Lt_17E4
cmp dword ptr [ebp-96], 1
jne .Lt_17E4
.Lt_1C81:
.Lt_17E5:
mov ebx, dword ptr [ebp+12]
cmp dword ptr [ebx], 4
jne .Lt_17E7
sub esp, 8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_040C
push -1
sub esp, 4
push -1
lea ebx, [ebp-12]
push ebx
push 15
push offset Lt_17E8
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea ebx, [ebp-108]
push ebx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-132]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-132]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-132]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_17E6
.Lt_17E7:
sub esp, 8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 6
push offset Lt_17EC
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-132]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-132]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-132]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 22
push offset Lt_17C9
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
.Lt_17E6:
jmp .Lt_17DC
.Lt_17E4:
cmp dword ptr [ebp-92], 0
jne .Lt_17F1
cmp dword ptr [ebp-96], 2
jne .Lt_17F1
.Lt_1C82:
.Lt_17F2:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_17F4
sub esp, 8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_040C
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 15
push offset Lt_17F5
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-132]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-132]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-132]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_17F3
.Lt_17F4:
sub esp, 8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 6
push offset Lt_17EC
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-132]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-132]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-132]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 22
push offset Lt_17FC
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
.Lt_17F3:
jmp .Lt_17DC
.Lt_17F1:
cmp dword ptr [ebp-92], 0
jne .Lt_17FE
cmp dword ptr [ebp-96], 4
jne .Lt_17FE
.Lt_1C83:
.Lt_17FF:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_1801
sub esp, 8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_040C
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 16
push offset Lt_1802
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-132]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-132]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-132]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1800
.Lt_1801:
sub esp, 8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 6
push offset Lt_17EC
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-132]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-132]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-132]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 23
push offset Lt_1809
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
.Lt_1800:
jmp .Lt_17DC
.Lt_17FE:
cmp dword ptr [ebp-92], 0
jne .Lt_180B
cmp dword ptr [ebp-96], 8
jne .Lt_180B
.Lt_1C84:
.Lt_180C:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_180E
sub esp, 8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_040C
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 16
push offset Lt_040B
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-132]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-132]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-132]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_180D
.Lt_180E:
sub esp, 8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 6
push offset Lt_17EC
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-132]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-132]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-132]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 23
push offset Lt_1815
push -1
lea eax, [ebp-144]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-144]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-144]
push eax
call fb_StrDelete
add esp, 16
.Lt_180D:
.Lt_180B:
.Lt_17DC:
jmp .Lt_17A7
.Lt_17A8:
cmp dword ptr [ebp+8], 105
jne .Lt_1817
.Lt_1818:
cmp dword ptr [ebp+24], 0
jne .Lt_181A
cmp dword ptr [ebp+20], 0
jne .Lt_181A
.Lt_1C85:
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_17A6
.Lt_181A:
.Lt_1819:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-92], ebx
cmp dword ptr [ebp-92], 2
jne .Lt_181D
.Lt_181E:
sub esp, 4
lea ebx, [ebp-36]
push ebx
lea ebx, [ebp-12]
push ebx
push dword ptr [ebp+12]
call PREPARE_IDX
add esp, 16
jmp .Lt_181B
.Lt_181D:
cmp dword ptr [ebp-92], 4
jne .Lt_181F
.Lt_1820:
sub esp, 12
push 0
push 0
sub esp, 8
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_181B
.Lt_181F:
cmp dword ptr [ebp-92], 1
jne .Lt_1821
.Lt_1822:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1824
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1823
.Lt_1824:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_1823:
jmp .Lt_181B
.Lt_1821:
cmp dword ptr [ebp-92], 3
jne .Lt_1829
.Lt_182A:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_181B
.Lt_1829:
cmp dword ptr [ebp-92], 5
jne .Lt_182E
.Lt_182F:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-80], 1
jmp .Lt_181B
.Lt_182E:
cmp dword ptr [ebp-92], 0
jne .Lt_1833
.Lt_1834:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+12]
push dword ptr [eax+28]
push dword ptr [eax+24]
call fb_LongintToStr
add esp, 16
push eax
push 2
push offset Lt_0118
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_181B
.Lt_1833:
sub esp, 8
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-104]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-104]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-104]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push 45
push offset Lt_183A
push -1
lea eax, [ebp-116]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-116]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-116]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-128]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-128]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-128]
push eax
call fb_StrDelete
add esp, 16
.Lt_1837:
.Lt_181B:
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-92], ebx
cmp dword ptr [ebp-92], 4
jne .Lt_183F
.Lt_1840:
sub esp, 12
mov ebx, dword ptr [ebp+16]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-88], eax
sub esp, 12
push 0
push 0
mov eax, dword ptr [ebp-88]
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_183D
.Lt_183F:
cmp dword ptr [ebp-92], 1
jne .Lt_1841
.Lt_1842:
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+16]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1844
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov ebx, dword ptr [ebp+16]
push dword ptr [ebx+40]
push dword ptr [ebx+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+16]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1843
.Lt_1844:
sub esp, 12
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
mov eax, dword ptr [ebp+16]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
.Lt_1843:
jmp .Lt_183D
.Lt_1841:
cmp dword ptr [ebp-92], 5
jne .Lt_1849
.Lt_184A:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [ebp+16]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 6
push offset Lt_0833
push 0
sub esp, 4
mov eax, dword ptr [ebp+16]
push dword ptr [eax+32]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-84], 1
jmp .Lt_183D
.Lt_1849:
cmp dword ptr [ebp-92], 3
jne .Lt_184E
.Lt_184F:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+48]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 2
push offset Lt_0118
push -1
mov eax, dword ptr [ebp+16]
push dword ptr [eax+40]
push dword ptr [eax+36]
call fb_LongintToStr
add esp, 8
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_183D
.Lt_184E:
sub esp, 8
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-104]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-104]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-104]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push 64
push offset Lt_1856
push -1
lea eax, [ebp-116]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-116]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-116]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-128]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-128]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-128]
push eax
call fb_StrDelete
add esp, 16
.Lt_1853:
.Lt_183D:
push 1
push offset Lt_0000
push -1
lea eax, [ebp-36]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_185A
sub esp, 12
lea eax, [ebp-36]
push eax
call EMITOP3_OP4
add esp, 16
.Lt_185A:
cmp dword ptr [ebp+24], 0
jg .Lt_185D
jl .Lt_1C8A
cmp dword ptr [ebp+20], 8
ja .Lt_185D
.Lt_1C8A:
.Lt_185E:
cmp dword ptr [ebp+24], 0
jne .Lt_1C8B
cmp dword ptr [ebp+20], 3
je .Lt_185D
.Lt_1C8B:
.Lt_185F:
cmp dword ptr [ebp+24], 0
jne .Lt_1C8C
cmp dword ptr [ebp+20], 5
je .Lt_185D
.Lt_1C8C:
.Lt_1860:
cmp dword ptr [ebp+24], 0
jne .Lt_1C8D
cmp dword ptr [ebp+20], 6
je .Lt_185D
.Lt_1C8D:
.Lt_1861:
cmp dword ptr [ebp+24], 0
jne .Lt_185C
cmp dword ptr [ebp+20], 7
jne .Lt_185C
.Lt_1C8E:
.Lt_185D:
sub esp, 12
push dword ptr [ebp-80]
push dword ptr [ebp-84]
lea eax, [ebp-12]
push eax
lea eax, [ebp-24]
push eax
mov eax, dword ptr [ebp+20]
push eax
call MEMCOPY
add esp, 32
jmp .Lt_185B
.Lt_185C:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 1
jne .Lt_1864
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 10
push offset Lt_0406
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
push dword ptr [ebp-76]
push 2
push offset Lt_0118
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_1863
.Lt_1864:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 4
je .Lt_1869
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-24]
push eax
push 10
push offset Lt_068E
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
mov dword ptr [ebp-88], 0
.Lt_1869:
.Lt_1863:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 1
jne .Lt_186D
call REG_TEMPO
mov dword ptr [ebp-76], eax
sub esp, 8
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
push dword ptr [ebp-76]
push 5
push offset Lt_0389
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-136]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-136]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-136]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
push dword ptr [ebp-76]
push 2
push offset Lt_0118
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_186D:
.Lt_186C:
cmp dword ptr [ebp+24], 0
jne .Lt_1875
cmp dword ptr [ebp+20], 1
jne .Lt_1875
.Lt_1C8F:
.Lt_1876:
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-88]
push dword ptr [REGSTRQ+eax*4]
push 10
push offset Lt_1877
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-124]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-124]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-124]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_187C
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_04BD
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 15
push offset Lt_17E8
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_187B
.Lt_187C:
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_0BF1
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
.Lt_187B:
jmp .Lt_1874
.Lt_1875:
cmp dword ptr [ebp+24], 0
jne .Lt_1883
cmp dword ptr [ebp+20], 2
jne .Lt_1883
.Lt_1C90:
.Lt_1884:
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-88]
push dword ptr [REGSTRQ+eax*4]
push 10
push offset Lt_1885
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-124]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-124]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-124]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_188A
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_04B3
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 15
push offset Lt_17F5
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1889
.Lt_188A:
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_0FF4
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
.Lt_1889:
jmp .Lt_1874
.Lt_1883:
cmp dword ptr [ebp+24], 0
jne .Lt_1891
cmp dword ptr [ebp+20], 4
jne .Lt_1891
.Lt_1C91:
.Lt_1892:
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-88]
push dword ptr [REGSTRQ+eax*4]
push 11
push offset Lt_1893
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-124]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-124]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-124]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_1898
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_04A9
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 16
push offset Lt_1802
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1897
.Lt_1898:
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_0D77
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
.Lt_1897:
jmp .Lt_1874
.Lt_1891:
cmp dword ptr [ebp+24], 0
jne .Lt_189F
cmp dword ptr [ebp+20], 8
jne .Lt_189F
.Lt_1C92:
.Lt_18A0:
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
mov eax, dword ptr [ebp-88]
push dword ptr [REGSTRQ+eax*4]
push 11
push offset Lt_0475
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-124]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-124]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-124]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_18A5
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_047A
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 16
push offset Lt_040B
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_18A4
.Lt_18A5:
sub esp, 8
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_06B8
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 5
push offset Lt_0389
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-160]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-160]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-160]
push eax
call fb_StrDelete
add esp, 16
.Lt_18A4:
.Lt_189F:
.Lt_1874:
.Lt_1862:
.Lt_185B:
.Lt_1817:
.Lt_17A7:
sub esp, 12
lea eax, [ebp-72]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-60]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-36]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_17A6:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITMEM, .-_EMITMEM
.balign 16
_EMITCOMMENT:
.type _EMITCOMMENT, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_18AC:
.Lt_18AD:
mov esp, ebp
pop ebp
ret
.size _EMITCOMMENT, .-_EMITCOMMENT
.balign 16
_EMITASMLINE:
.type _EMITASMLINE, @function
push ebp
mov ebp, esp
sub esp, 68
push ebx
.Lt_18AE:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-16], eax
.Lt_18B0:
cmp dword ptr [ebp-16], 0
je .Lt_18B1
mov eax, dword ptr [ebp-16]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-20], ebx
cmp dword ptr [ebp-20], 0
jne .Lt_18B4
.Lt_18B5:
sub esp, 12
push 0
push -1
sub esp, 8
push 0
mov ebx, dword ptr [ebp-16]
push dword ptr [ebx+4]
push -1
lea ebx, [ebp-12]
push ebx
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea ebx, [ebp-32]
push ebx
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
jmp .Lt_18B2
.Lt_18B4:
cmp dword ptr [ebp-20], 1
jne .Lt_18B7
.Lt_18B8:
mov eax, dword ptr [ebp-16]
mov ebx, dword ptr [eax+4]
mov ecx, dword ptr [ebx+48]
mov eax, dword ptr [ebx+52]
mov dword ptr [ebp-28], ecx
mov dword ptr [ebp-24], eax
cmp dword ptr [ebp-24], 0
jne .Lt_1C93
cmp dword ptr [ebp-28], 0
je .Lt_18BA
.Lt_1C93:
sub esp, 12
push 0
push -1
sub esp, 4
push -1
lea ecx, [ebp-12]
push ecx
call fb_StrLen
add esp, 8
dec eax
push eax
lea eax, [ebp-12]
push eax
call fb_LEFT
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push dword ptr [ebp-24]
push dword ptr [ebp-28]
call fb_LongintToStr
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push 5
push offset Lt_18BB
push -1
lea eax, [ebp-12]
push eax
call fb_StrConcatAssign
add esp, 32
jmp .Lt_18B9
.Lt_18BA:
sub esp, 12
push 0
push -1
sub esp, 8
push 0
sub esp, 12
mov eax, dword ptr [ebp-16]
push dword ptr [eax+4]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 32
.Lt_18B9:
jmp .Lt_18B2
.Lt_18B7:
sub esp, 8
push 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-32]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-32]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-32]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
push 0
push 42
push offset Lt_18C0
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-44]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-44]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-56]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-56]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-56]
push eax
call fb_StrDelete
add esp, 16
.Lt_18BD:
.Lt_18B2:
mov eax, dword ptr [ebp-16]
mov ecx, dword ptr [eax+8]
mov dword ptr [ebp-16], ecx
jmp .Lt_18B0
.Lt_18B1:
sub esp, 8
push 0
lea ecx, [ebp-12]
push ecx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ecx, [ebp-12]
push ecx
call fb_StrDelete
add esp, 16
.Lt_18AF:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITASMLINE, .-_EMITASMLINE
.balign 16
_EMITVARINIBEGIN:
.type _EMITVARINIBEGIN, @function
push ebp
mov ebp, esp
sub esp, 100
push ebx
.Lt_18C3:
mov dword ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
cmp ebx, 20
jne .Lt_18C6
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+104]
mov dword ptr [ebp-4], ebx
jmp .Lt_18C5
.Lt_18C6:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+4]
and eax, 262144
test eax, eax
je .Lt_18C8
mov eax, dword ptr [SYMB_DTYPETB+368]
mov dword ptr [ebp-4], eax
jmp .Lt_18C7
.Lt_18C8:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
and ebx, 480
je .Lt_18C9
mov dword ptr [ebp-68], 24
jmp .Lt_1C94
.Lt_18C9:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+28]
and eax, 511
and eax, 31
mov dword ptr [ebp-68], eax
.Lt_1C94:
mov eax, dword ptr [ebp-68]
imul eax, 28
mov ebx, dword ptr [SYMB_DTYPETB+eax+4]
mov dword ptr [ebp-4], ebx
.Lt_18C7:
.Lt_18C5:
sub esp, 12
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
push 0
push 6
push offset Lt_04F7
push -1
lea ebx, [ebp-16]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-16]
push ebx
call ASM_SECTION
add esp, 16
sub esp, 12
lea ebx, [ebp-16]
push ebx
call fb_StrDelete
add esp, 16
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+4]
and eax, 32
test eax, eax
je .Lt_18CD
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 8
push offset Lt_04FD
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
.Lt_18CD:
.Lt_18CC:
sub esp, 8
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [ebp-4]
call fb_IntToStr
add esp, 16
push eax
push 8
push offset Lt_18D0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-40]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-40]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-40]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push 0
sub esp, 4
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 16
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
and ecx, 4
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_18D6
jmp .Lt_18D5
.Lt_18D6:
cmp dword ptr [ENV+148], -1
jne .Lt_18D8
sub esp, 8
push 1
push dword ptr [ebp+8]
call EDBGEMITGLOBALVAR_ASM64
add esp, 16
.Lt_18D8:
.Lt_18D5:
.Lt_18C4:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITVARINIBEGIN, .-_EMITVARINIBEGIN
.balign 16
_EMITVARINII:
.type _EMITVARINII, @function
push ebp
mov ebp, esp
sub esp, 100
push ebx
.Lt_18D9:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-16], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
mov dword ptr [ebp-20], ebx
mov ebx, dword ptr [ebp-20]
and ebx, 480
test ebx, ebx
je .Lt_18DC
mov dword ptr [ebp-20], 8
.Lt_18DC:
mov ebx, dword ptr [ebp-20]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
cmp dword ptr [ebp+16], 0
mov eax, -1
jne .Lt_1C99
cmp dword ptr [ebp+12], 0
jne .Lt_1C99
.Lt_1C9A:
xor eax, eax
.Lt_1C99:
and ebx, eax
je .Lt_18DE
mov dword ptr [ebp+12], 1
mov dword ptr [ebp+16], 0
.Lt_18DE:
.Lt_18DD:
mov eax, dword ptr [ebp-20]
and eax, 480
je .Lt_18DF
mov dword ptr [ebp-84], 24
jmp .Lt_1C97
.Lt_18DF:
mov eax, dword ptr [ebp-20]
and eax, 31
mov dword ptr [ebp-84], eax
.Lt_1C97:
mov eax, dword ptr [ebp-84]
imul eax, 28
mov ebx, dword ptr [SYMB_DTYPETB+eax+4]
mov dword ptr [ebp-88], ebx
jmp .Lt_18E2
.Lt_18E4:
sub esp, 12
push 0
push 6
push offset Lt_18E5
push -1
lea ebx, [ebp-12]
push ebx
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-16], 2
jmp .Lt_18E1
.Lt_18E6:
sub esp, 12
push 0
push 6
push offset Lt_18E7
push -1
lea ebx, [ebp-12]
push ebx
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-16], 4
jmp .Lt_18E1
.Lt_18E8:
sub esp, 12
push 0
push 6
push offset Lt_18E9
push -1
lea ebx, [ebp-12]
push ebx
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-16], 8
jmp .Lt_18E1
.Lt_18EA:
sub esp, 12
push 0
push 6
push offset Lt_18EB
push -1
lea ebx, [ebp-12]
push ebx
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-16], 16
jmp .Lt_18E1
.Lt_18EC:
sub esp, 12
push 0
push 6
push offset Lt_18EB
push -1
lea ebx, [ebp-12]
push ebx
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-16], 8
jmp .Lt_18E1
.Lt_18E2:
mov ebx, dword ptr [ebp-88]
add ebx, 4294967295
cmp ebx, 7
ja .Lt_18EC
mov ebx, dword ptr [ebp-88]
jmp dword ptr [.LT_18ED+ebx*4-4]
.LT_18ED:
.int .Lt_18E4
.int .Lt_18E6
.int .Lt_18EC
.int .Lt_18E8
.int .Lt_18EC
.int .Lt_18EC
.int .Lt_18EC
.int .Lt_18EA
.Lt_18E1:
sub esp, 8
push 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 8
push dword ptr [ebp+16]
push dword ptr [ebp+12]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 4
push offset Lt_0259
push -1
sub esp, 4
push -1
sub esp, 8
push dword ptr [ebp-16]
sub esp, 12
push dword ptr [ebp+16]
push dword ptr [ebp+12]
call fb_HEX_l
add esp, 20
push eax
call fb_RIGHT
add esp, 16
push eax
push -1
sub esp, 4
push 4
push offset Lt_18EE
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-80]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-80]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-80]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_18DA:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITVARINII, .-_EMITVARINII
.balign 16
_EMITVARINIF:
.type _EMITVARINIF, @function
push ebp
mov ebp, esp
sub esp, 20
push ebx
.Lt_18F4:
sub esp, 8
push 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push -1
sub esp, 12
push 1
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
push ebx
push dword ptr [ebp+16]
push dword ptr [ebp+12]
call HFLOATTOHEX_ASM64
add esp, 28
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-12]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_18F5:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITVARINIF, .-_EMITVARINIF
.balign 16
_EMITPROCBEGIN:
.type _EMITPROCBEGIN, @function
push ebp
mov ebp, esp
sub esp, 100
push ebx
.Lt_18F7:
call IRHLEMITPROCBEGIN
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [CTX+44]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [CTX+68]
push eax
call fb_StrAssign
add esp, 32
mov dword ptr [CTX+200], 0
mov dword ptr [CTX+204], 0
mov dword ptr [CTX+120], -2
mov dword ptr [CTX+124], 0
mov dword ptr [CTX+220], 0
mov byte ptr [CTX+208], 0
sub esp, 12
push 0
push 1
push offset Lt_0000
push -1
lea eax, [CTX+56]
push eax
call fb_StrAssign
add esp, 32
mov dword ptr [CTX+4], 3
mov byte ptr [CTX+137], 0
mov dword ptr [CTXDBG+4], -1
inc dword ptr [CTX]
mov dword ptr [CTX+84], 0
mov dword ptr [CTX+88], 0
cmp dword ptr [CTX+212], 2
jne .Lt_18FA
mov dword ptr [CTX+92], 16
mov dword ptr [CTX+96], 40
jmp .Lt_18F9
.Lt_18FA:
mov dword ptr [CTX+92], 8
mov dword ptr [CTX+96], 56
.Lt_18F9:
mov dword ptr [CTX+80], 0
mov dword ptr [CTX+112], 0
mov dword ptr [CTX+100], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 256
test ebx, ebx
je .Lt_18FC
sub esp, 12
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 9
push offset Lt_18FD
push -1
lea ebx, [ebp-52]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-52]
push ebx
call ASM_SECTION
add esp, 16
sub esp, 12
lea ebx, [ebp-52]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0505
push -1
sub esp, 4
push 0
sub esp, 12
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 18
push offset Lt_18FF
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 6
push offset Lt_057B
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
.Lt_18FC:
.Lt_18FB:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+80]
mov dword ptr [ebp-4], ebx
cmp dword ptr [ebp-4], 0
je .Lt_1905
mov ebx, dword ptr [ebp-4]
cmp dword ptr [ebx+56], 4
jne .Lt_1907
mov byte ptr [CTX+208], 1
cmp dword ptr [CTX+212], 2
jne .Lt_1909
add dword ptr [CTX+96], 112
.Lt_1909:
.Lt_1908:
.Lt_1907:
.Lt_1906:
.Lt_1905:
.Lt_1904:
sub esp, 8
push 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
push 0
push 6
push offset Lt_057B
push -1
lea ebx, [ebp-16]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-16]
push ebx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ebx, [ebp-16]
push ebx
call fb_StrDelete
add esp, 16
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+4]
and eax, 64
test eax, eax
jne .Lt_190C
sub esp, 8
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push 8
push offset Lt_04FD
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
.Lt_190C:
.Lt_190B:
dec dword ptr [CTX]
sub esp, 8
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push 0
sub esp, 4
push dword ptr [ebp+8]
call SYMBGETMANGLEDNAME
add esp, 8
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-40]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-40]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-40]
push eax
call fb_StrDelete
add esp, 16
inc dword ptr [CTX]
cmp dword ptr [ENV+148], -1
jne .Lt_1912
sub esp, 12
push dword ptr [ebp+8]
call EDBGEMITPROCHEADER_ASM64
add esp, 16
.Lt_1912:
mov dword ptr [CTX+4], 4
.Lt_18F8:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITPROCBEGIN, .-_EMITPROCBEGIN
.balign 16
_EMITPROCEND:
.type _EMITPROCEND, @function
push ebp
mov ebp, esp
sub esp, 132
push ebx
.Lt_1913:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov eax, dword ptr [CTX+96]
cmp dword ptr [CTX+100], eax
jle .Lt_1916
mov eax, dword ptr [CTX+100]
mov dword ptr [CTX+96], eax
.Lt_1916:
cmp dword ptr [CTX+212], 0
jne .Lt_1918
cmp dword ptr [CTX+80], 0
je .Lt_191A
cmp dword ptr [CTX+80], 4
jle .Lt_191B
mov eax, dword ptr [CTX+80]
sal eax, 3
mov dword ptr [ebp-44], eax
jmp .Lt_1C9B
.Lt_191B:
mov dword ptr [ebp-44], 32
.Lt_1C9B:
mov eax, dword ptr [ebp-44]
add dword ptr [CTX+96], eax
.Lt_191A:
jmp .Lt_1917
.Lt_1918:
mov eax, dword ptr [CTX+80]
sal eax, 3
add dword ptr [CTX+96], eax
.Lt_1917:
mov eax, dword ptr [CTX+96]
add eax, 15
and eax, -16
mov dword ptr [CTX+96], eax
mov dword ptr [CTX+4], 3
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+8]
and ebx, 128
test ebx, ebx
jne .Lt_191E
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 9
push offset Lt_191F
push -1
lea ebx, [ebp-52]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-52]
push ebx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ebx, [ebp-52]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 13
push offset Lt_1921
push -1
lea ebx, [ebp-64]
push ebx
call fb_StrAssign
add esp, 20
lea ebx, [ebp-64]
push ebx
call HWRITEASM64
add esp, 16
sub esp, 12
lea ebx, [ebp-64]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
push dword ptr [CTX+96]
call fb_IntToStr
add esp, 16
push eax
push 10
push offset Lt_1923
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-88]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
mov eax, dword ptr [CTX+112]
and eax, 2
je .Lt_1927
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 27
push offset Lt_1928
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 29
push offset Lt_192B
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_1927:
cmp dword ptr [CTX+212], 0
jne .Lt_192D
mov eax, dword ptr [CTX+112]
and eax, 32
je .Lt_192F
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset Lt_1930
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 30
push offset Lt_1933
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_192F:
mov eax, dword ptr [CTX+112]
and eax, 16
je .Lt_1935
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset Lt_1936
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 30
push offset Lt_1939
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_1935:
mov eax, dword ptr [CTX+112]
and eax, 4096
je .Lt_193B
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset Lt_193C
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 30
push offset Lt_193F
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_193B:
mov eax, dword ptr [CTX+112]
and eax, 8192
je .Lt_1941
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset Lt_1942
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 30
push offset Lt_1945
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_1941:
mov eax, dword ptr [CTX+112]
and eax, 16384
je .Lt_1947
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset Lt_1948
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 30
push offset Lt_194B
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_1947:
mov eax, dword ptr [CTX+112]
and eax, 32768
je .Lt_194D
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset Lt_194E
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 30
push offset Lt_1951
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_194D:
jmp .Lt_192C
.Lt_192D:
mov eax, dword ptr [CTX+112]
and eax, 4096
je .Lt_1953
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset Lt_1954
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 30
push offset Lt_1957
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_1953:
mov eax, dword ptr [CTX+112]
and eax, 8192
je .Lt_1959
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset Lt_195A
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 30
push offset Lt_195D
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_1959:
mov eax, dword ptr [CTX+112]
and eax, 16384
je .Lt_195F
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset Lt_1960
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 30
push offset Lt_1963
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_195F:
mov eax, dword ptr [CTX+112]
and eax, 32768
je .Lt_1965
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset Lt_1966
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
push 0
push 30
push offset Lt_1969
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
sub esp, 4
push 32
mov eax, dword ptr [CTX]
imul eax, 3
push eax
call fb_StrFill1
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrConcatAssign
add esp, 32
.Lt_1965:
.Lt_192C:
push 1
push offset Lt_0000
push -1
lea eax, [ebp-16]
push eax
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_196B
sub esp, 12
push 0
push -1
sub esp, 8
lea eax, [ebp-16]
push eax
call fb_RTRIM
add esp, 12
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 32
.Lt_196B:
.Lt_191E:
.Lt_191D:
cmp dword ptr [CTX+212], 2
jne .Lt_196D
cmp byte ptr [CTX+208], 0
je .Lt_196F
cmp dword ptr [CTX+84], 1
jge .Lt_1971
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 29
push offset Lt_1972
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_1971:
cmp dword ptr [CTX+84], 2
jge .Lt_1975
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 29
push offset Lt_1976
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_1975:
cmp dword ptr [CTX+84], 3
jge .Lt_1979
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 29
push offset Lt_197A
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_1979:
cmp dword ptr [CTX+84], 4
jge .Lt_197D
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 29
push offset Lt_197E
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_197D:
cmp dword ptr [CTX+84], 5
jge .Lt_1981
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 28
push offset Lt_1982
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_1981:
cmp dword ptr [CTX+84], 6
jge .Lt_1985
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 28
push offset Lt_1986
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_1985:
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-28]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 14
push offset Lt_1988
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-28]
push eax
push 4
push offset Lt_17C2
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-76]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-76]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-76]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [CTX+88], 1
jge .Lt_198D
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 31
push offset Lt_198E
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_198D:
cmp dword ptr [CTX+88], 2
jge .Lt_1991
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset Lt_1992
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_1991:
cmp dword ptr [CTX+88], 3
jge .Lt_1995
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset Lt_1996
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_1995:
cmp dword ptr [CTX+88], 4
jge .Lt_1999
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset Lt_199A
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_1999:
cmp dword ptr [CTX+88], 5
jge .Lt_199D
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset Lt_199E
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_199D:
cmp dword ptr [CTX+88], 6
jge .Lt_19A1
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset Lt_19A2
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_19A1:
cmp dword ptr [CTX+88], 7
jge .Lt_19A5
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset Lt_19A6
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_19A5:
cmp dword ptr [CTX+88], 8
jge .Lt_19A9
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset Lt_19AA
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_19A9:
sub esp, 8
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-28]
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-100]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
.Lt_196F:
.Lt_196E:
.Lt_196D:
.Lt_196C:
mov dword ptr [CTX+4], 5
cmp dword ptr [ENV+148], -1
jne .Lt_19AF
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-28]
push eax
call fb_StrAssign
add esp, 32
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
sub esp, 12
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [CTXDBG+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_01F4
push -1
lea eax, [ebp-28]
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-88]
push eax
call fb_StrAssign
add esp, 32
lea eax, [ebp-88]
push eax
push 0
push 224
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-88]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-28]
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-112]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-112]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-112]
push eax
call fb_StrDelete
add esp, 16
.Lt_19AF:
.Lt_19AE:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+8]
and ebx, 128
test ebx, ebx
jne .Lt_19B7
push 1
push offset Lt_0000
push -1
lea ebx, [ebp-16]
push ebx
call fb_StrCompare
add esp, 16
test eax, eax
je .Lt_19B9
sub esp, 8
push 0
lea eax, [ebp-16]
push eax
call HWRITEASM64
add esp, 16
.Lt_19B9:
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 12
push offset Lt_19BA
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 8
push offset Lt_19BC
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
.Lt_19B7:
.Lt_19B6:
sub esp, 8
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push 4
push offset Lt_05D1
push -1
lea eax, [ebp-40]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-40]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-40]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [ENV+148], -1
jne .Lt_19C0
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-52]
push eax
call fb_StrInit
add esp, 32
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
sub esp, 12
push 0
push -1
sub esp, 8
push 0
sub esp, 12
push dword ptr [CTXDBG+32]
call SYMBGETMANGLEDNAME
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_01F4
push -1
lea eax, [ebp-52]
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-100]
push eax
call fb_StrAssign
add esp, 32
lea eax, [ebp-100]
push eax
push 0
push 36
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 1
push offset Lt_0000
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call DBG_ADDSTAB
add esp, 16
sub esp, 12
lea eax, [ebp-100]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-52]
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-124]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-124]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-124]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
.Lt_19C0:
.Lt_19BF:
dec dword ptr [CTX]
sub esp, 12
lea eax, [CTX+140]
push eax
call FLISTRESET
add esp, 16
mov dword ptr [CTX+196], 0
call IRHLEMITPROCEND
sub esp, 12
push 0
push -1
lea eax, [CTX+44]
push eax
push -1
lea eax, [CTX+20]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [CTX+56]
push eax
push -1
lea eax, [CTX+20]
push eax
call fb_StrConcatAssign
add esp, 32
sub esp, 12
push 0
push -1
lea eax, [CTX+68]
push eax
push -1
lea eax, [CTX+20]
push eax
call fb_StrConcatAssign
add esp, 32
mov dword ptr [CTX+4], 0
sub esp, 12
lea eax, [ebp-28]
push eax
call fb_StrDelete
add esp, 16
sub esp, 12
lea eax, [ebp-16]
push eax
call fb_StrDelete
add esp, 16
.Lt_1914:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITPROCEND, .-_EMITPROCEND
.balign 16
_EMITVARINIOFS:
.type _EMITVARINIOFS, @function
push ebp
mov ebp, esp
sub esp, 68
push ebx
.Lt_19C7:
sub esp, 12
push 0
push 0
sub esp, 8
push dword ptr [ebp+12]
call SYMBGETMANGLEDNAME
add esp, 12
push eax
push -1
lea eax, [ebp-12]
push eax
call fb_StrInit
add esp, 32
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
mov dword ptr [ebp-16], ebx
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+28]
and eax, 511
and eax, 31
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+28]
and ecx, 511
and ecx, 480
add ecx, 32
or eax, ecx
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+28]
and ebx, 511
and ebx, 261632
sal ebx, 1
or eax, ebx
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+28]
and ecx, 511
and ecx, 32505856
or eax, ecx
mov dword ptr [ebp-20], eax
cmp dword ptr [ebp+20], 0
jne .Lt_1C9C
cmp dword ptr [ebp+16], 0
je .Lt_19CA
.Lt_1C9C:
sub esp, 8
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 8
push dword ptr [ebp+20]
push dword ptr [ebp+16]
call fb_LongintToStr
add esp, 16
push eax
push -1
sub esp, 4
push 2
push offset Lt_085B
push -1
sub esp, 4
push -1
lea eax, [ebp-12]
push eax
push 7
push offset Lt_0214
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-68]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-68]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_19C9
.Lt_19CA:
sub esp, 8
push 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-12]
push eax
push 7
push offset Lt_0214
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-44]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-44]
push eax
call fb_StrDelete
add esp, 16
.Lt_19C9:
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
.Lt_19C8:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITVARINIOFS, .-_EMITVARINIOFS
.balign 16
_EMITVARINIPAD:
.type _EMITVARINIPAD, @function
push ebp
mov ebp, esp
sub esp, 24
.Lt_19D1:
sub esp, 8
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 8
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call fb_LongintToStr
add esp, 16
push eax
push 7
push offset Lt_19D3
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-24]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-24]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-24]
push eax
call fb_StrDelete
add esp, 16
.Lt_19D2:
mov esp, ebp
pop ebp
ret
.size _EMITVARINIPAD, .-_EMITVARINIPAD
.balign 16
_EMITFBCTINFSTRING:
.type _EMITFBCTINFSTRING, @function
push ebp
mov ebp, esp
sub esp, 56
.Lt_19D6:
sub esp, 12
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 9
push offset Lt_19D8
push -1
lea eax, [ebp-12]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-12]
push eax
call ASM_SECTION
add esp, 16
sub esp, 12
lea eax, [ebp-12]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0247
push -1
sub esp, 4
push 0
push dword ptr [ebp+8]
push 9
push offset Lt_0244
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-48]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-48]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-48]
push eax
call fb_StrDelete
add esp, 16
.Lt_19D7:
mov esp, ebp
pop ebp
ret
.size _EMITFBCTINFSTRING, .-_EMITFBCTINFSTRING
.balign 16
_EMITVARINISTR:
.type _EMITVARINISTR, @function
push ebp
mov ebp, esp
sub esp, 68
push ebx
.Lt_19DD:
mov dword ptr [ebp-4], 0
cmp dword ptr [ebp+12], 0
jne .Lt_19E0
cmp dword ptr [ebp+8], 0
jne .Lt_19E0
.Lt_1C9D:
sub esp, 8
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 12
push offset Lt_19E1
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-52]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_19DE
.Lt_19E0:
.Lt_19DF:
mov ebx, dword ptr [ebp+20]
mov eax, dword ptr [ebp+24]
cmp dword ptr [ebp+12], eax
jg .Lt_19E4
jl .Lt_1C9E
cmp dword ptr [ebp+8], ebx
jae .Lt_19E4
.Lt_1C9E:
push 0
push 1
push 0
push 9
call ERRREPORTWARN
add esp, 16
sub esp, 12
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
sub esp, 4
mov ebx, dword ptr [ebp+8]
push ebx
push dword ptr [ebp+16]
call fb_StrAllocTempDescZ
add esp, 4
push eax
call fb_LEFT
add esp, 12
push eax
push -1
lea eax, [ebp-52]
push eax
call fb_StrAssign
add esp, 20
push dword ptr [ebp-52]
call HESCAPE
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 12
lea eax, [ebp-52]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_19E3
.Lt_19E4:
sub esp, 12
push dword ptr [ebp+16]
call HESCAPE
add esp, 16
mov dword ptr [ebp-4], eax
.Lt_19E3:
sub esp, 8
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
sub esp, 8
push 4
push offset Lt_0247
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push 9
push offset Lt_0244
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-40]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-40]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-40]
push eax
call fb_StrDelete
add esp, 16
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebp+12]
cmp dword ptr [ebp+24], eax
jg .Lt_19EA
jl .Lt_1C9F
cmp dword ptr [ebp+20], ebx
jae .Lt_19EA
.Lt_1C9F:
sub esp, 8
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 8
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp+12]
sub eax, dword ptr [ebp+20]
sbb ebx, dword ptr [ebp+24]
push ebx
push eax
call fb_LongintToStr
add esp, 16
push eax
push 7
push offset Lt_19D3
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-64]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-64]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-64]
push eax
call fb_StrDelete
add esp, 16
.Lt_19EA:
.Lt_19E9:
.Lt_19DE:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITVARINISTR, .-_EMITVARINISTR
.balign 16
_EMITVARINIWSTR:
.type _EMITVARINIWSTR, @function
push ebp
mov ebp, esp
sub esp, 80
push ebx
push esi
.Lt_19ED:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov eax, dword ptr [SYMB_DTYPETB+200]
mov dword ptr [ebp-20], eax
cmp dword ptr [ebp+12], 0
jne .Lt_19F0
cmp dword ptr [ebp+8], 0
jne .Lt_19F0
.Lt_1CA0:
cmp dword ptr [ebp-20], 2
jne .Lt_19F2
sub esp, 8
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push 8
push offset Lt_19F4
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-68]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-68]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_19F1
.Lt_19F2:
sub esp, 8
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push 8
push offset Lt_19F6
push -1
lea eax, [ebp-68]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-68]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-68]
push eax
call fb_StrDelete
add esp, 16
.Lt_19F1:
sub esp, 12
lea eax, [ebp-16]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_19EE
.Lt_19F0:
.Lt_19EF:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebp+12]
cmp dword ptr [ebp+24], eax
jl .Lt_19F9
jg .Lt_1CA1
cmp dword ptr [ebp+20], ebx
jbe .Lt_19F9
.Lt_1CA1:
push 0
push 1
push 0
push 9
call ERRREPORTWARN
add esp, 16
sub esp, 12
sub esp, 12
mov ebx, dword ptr [ebp+8]
push ebx
push dword ptr [ebp+16]
call fb_WstrLeft
add esp, 20
mov dword ptr [ebp-60], eax
push dword ptr [ebp-60]
call HESCAPEW
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 12
push dword ptr [ebp-60]
call fb_WstrDelete
add esp, 16
jmp .Lt_19F8
.Lt_19F9:
sub esp, 12
push dword ptr [ebp+16]
call HESCAPEW
add esp, 16
mov dword ptr [ebp-4], eax
.Lt_19F8:
sub esp, 12
push 0
push -1
sub esp, 8
push 2
push offset Lt_026B
push -1
sub esp, 4
push -1
sub esp, 8
mov eax, dword ptr [SYMB_DTYPETB+200]
sal eax, 1
push eax
sub esp, 12
push 8
push offset Lt_0504
call fb_StrAllocTempDescZEx
add esp, 20
push eax
call fb_LEFT
add esp, 16
push eax
push -1
sub esp, 4
push 0
push dword ptr [ebp-4]
push 9
push offset Lt_19FC
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-16]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 0
lea eax, [ebp-16]
push eax
call HWRITEASM64
add esp, 16
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebp+12]
cmp dword ptr [ebp+24], eax
jg .Lt_1A01
jl .Lt_1CA2
cmp dword ptr [ebp+20], ebx
jae .Lt_1A01
.Lt_1CA2:
sub esp, 8
push 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 8
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp+12]
sub eax, dword ptr [ebp+20]
sbb ebx, dword ptr [ebp+24]
mov esi, dword ptr [ebp-20]
mov ecx, esi
sar ecx, 31
push ecx
push esi
push ebx
push eax
mov eax, [esp+0]
mul dword ptr [esp+8]
xchg eax, [esp+0]
imul eax, [esp+12]
add eax, edx
mov edx, [esp+4]
imul edx, [esp+8]
add edx, eax
mov [esp+4], edx
pop eax
pop ebx
add esp, 8
push ebx
push eax
call fb_LongintToStr
add esp, 16
push eax
push 7
push offset Lt_19D3
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-80]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-80]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-80]
push eax
call fb_StrDelete
add esp, 16
.Lt_1A01:
.Lt_1A00:
sub esp, 12
lea eax, [ebp-16]
push eax
call fb_StrDelete
add esp, 16
.Lt_19EE:
pop esi
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITVARINIWSTR, .-_EMITVARINIWSTR
.balign 16
_EMITMACRO:
.type _EMITMACRO, @function
push ebp
mov ebp, esp
sub esp, 404
push ebx
.Lt_1A04:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
cmp dword ptr [CTX+212], 0
jne .Lt_1A07
mov eax, dword ptr [ebp+12]
mov dword ptr [eax+4], 8
.Lt_1A07:
.Lt_1A06:
cmp dword ptr [ebp+8], 109
jne .Lt_1A09
.Lt_1A0A:
sub esp, 8
push 0
push 8
call IRHLALLOCVREG
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 8
push -1
mov eax, dword ptr [ebp-4]
push dword ptr [eax+12]
call REG_FINDFREE
add esp, 16
cmp dword ptr [CTX+212], 2
jne .Lt_1A0C
sub esp, 4
push dword ptr [ebp-4]
push dword ptr [ebp+12]
push 22
call _EMITADDR
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp-4]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-32]
push eax
call fb_StrAssign
add esp, 32
sub esp, 8
push 1
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [CTX+84]
sal eax, 3
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 4
push offset Lt_1A0D
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 16
push offset Lt_1802
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-104]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-104]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-104]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push -1
sub esp, 8
push -1
sub esp, 12
mov eax, dword ptr [CTX+88]
sal eax, 3
add eax, 48
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 4
push offset Lt_1A0D
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 17
push offset Lt_1A12
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-152]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-152]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-152]
push eax
call fb_StrDelete
add esp, 16
cmp dword ptr [CTX+84], 6
jg .Lt_1A17
mov dword ptr [ebp-156], 0
jmp .Lt_1CA3
.Lt_1A17:
mov eax, dword ptr [CTX+84]
add eax, -6
mov dword ptr [ebp-156], eax
.Lt_1CA3:
cmp dword ptr [CTX+88], 8
jg .Lt_1A19
mov dword ptr [ebp-160], 0
jmp .Lt_1CA4
.Lt_1A19:
mov eax, dword ptr [CTX+88]
add eax, -8
mov dword ptr [ebp-160], eax
.Lt_1CA4:
mov eax, dword ptr [ebp-160]
add eax, dword ptr [ebp-156]
sal eax, 3
add eax, 16
mov dword ptr [ebp-16], eax
sub esp, 8
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
push -1
sub esp, 12
push dword ptr [ebp-16]
call fb_IntToStr
add esp, 16
push eax
push 9
push offset Lt_1A1B
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-196]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-196]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-196]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_047A
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 17
push offset Lt_1A1F
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
lea eax, [ebp-208]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
lea eax, [ebp-220]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-232]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-232]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-232]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
push 0
push 19
push offset Lt_1A23
push -1
lea eax, [ebp-244]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-244]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-244]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_047A
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 18
push offset Lt_1A25
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
lea eax, [ebp-268]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-280]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-280]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-280]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1A0B
.Lt_1A0C:
sub esp, 8
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_03BD
push -1
sub esp, 4
push -1
sub esp, 12
mov eax, dword ptr [CTX+84]
sal eax, 3
add eax, 16
push eax
call fb_IntToStr
add esp, 16
push eax
push -1
sub esp, 4
push 3
push offset Lt_0123
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp-4]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_012E
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-116]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-116]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-116]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push dword ptr [ebp-4]
push dword ptr [ebp+12]
call _EMITSTORE
add esp, 16
.Lt_1A0B:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 3
jne .Lt_1A2F
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+48]
mov eax, dword ptr [ebx+12]
mov dword ptr [ebp-20], eax
mov dword ptr [ebp-60], 1
.Lt_1A33:
mov eax, dword ptr [ebp-60]
mov ebx, dword ptr [ebp-20]
cmp dword ptr [REGHANDLE+eax*4], ebx
jne .Lt_1A35
mov ebx, dword ptr [ebp-60]
mov dword ptr [REGHANDLE+ebx*4], -2
jmp .Lt_1A32
.Lt_1A35:
.Lt_1A34:
.Lt_1A31:
inc dword ptr [ebp-60]
.Lt_1A30:
cmp dword ptr [ebp-60], 15
jle .Lt_1A33
.Lt_1A32:
.Lt_1A2F:
.Lt_1A2E:
jmp .Lt_1A08
.Lt_1A09:
cmp dword ptr [ebp+8], 112
jne .Lt_1A36
.Lt_1A37:
cmp dword ptr [CTX+212], 2
jne .Lt_1A39
sub esp, 8
push 0
push 8
call IRHLALLOCVREG
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 8
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call REG_FINDFREE
add esp, 16
sub esp, 4
push dword ptr [ebp-4]
push dword ptr [ebp+12]
push 22
call _EMITADDR
add esp, 16
sub esp, 12
push 0
push 0
sub esp, 8
mov eax, dword ptr [ebp-4]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 12
push dword ptr [REGSTRQ+eax*4]
push -1
lea eax, [ebp-32]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-44]
push eax
call fb_StrAssign
add esp, 32
sub esp, 12
push 0
push 0
sub esp, 12
call SYMBUNIQUELABEL
add esp, 12
push eax
push -1
lea eax, [ebp-56]
push eax
call fb_StrAssign
add esp, 32
mov eax, dword ptr [ebp+20]
mov ebx, dword ptr [eax+4]
cmp ebx, 16
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+20]
mov ecx, dword ptr [eax+4]
cmp ecx, 15
sete cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_1A3B
sub esp, 8
push 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
push 0
push -1
sub esp, 8
push 7
push offset Lt_1A3D
push -1
sub esp, 4
push -1
lea ecx, [ebp-32]
push ecx
push 17
push offset Lt_1A3C
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea ecx, [ebp-68]
push ecx
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-92]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-92]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-92]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 4
push offset Lt_1A41
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-116]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-116]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-116]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 22
push offset Lt_1A44
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-152]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-152]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-152]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_1A49
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 17
push offset Lt_1A48
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
lea eax, [ebp-176]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-188]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-188]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-188]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 23
push offset Lt_1A4D
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-56]
push eax
push 5
push offset Lt_0E2F
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-248]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-248]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-248]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-44]
push eax
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-272]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-272]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-272]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 22
push offset Lt_1A55
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
lea eax, [ebp-284]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-308]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-308]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-308]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-344], 0
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_1A49
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 17
push offset Lt_1A59
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
lea eax, [ebp-332]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-344]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-344]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-344]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-368], 0
mov dword ptr [ebp-364], 0
mov dword ptr [ebp-360], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-56]
push eax
mov dword ptr [ebp-356], 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
lea eax, [ebp-356]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-368]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-368]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-368]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-404], 0
mov dword ptr [ebp-400], 0
mov dword ptr [ebp-396], 0
push 0
push -1
sub esp, 8
push 8
push offset Lt_1A5F
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-380], 0
mov dword ptr [ebp-376], 0
mov dword ptr [ebp-372], 0
lea eax, [ebp-380]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-392], 0
mov dword ptr [ebp-388], 0
mov dword ptr [ebp-384], 0
lea eax, [ebp-392]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-404]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-404]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-404]
push eax
call fb_StrDelete
add esp, 16
jmp .Lt_1A3A
.Lt_1A3B:
sub esp, 8
push 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
push 0
push -1
sub esp, 8
push 6
push offset Lt_1A64
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 16
push offset Lt_1A63
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-92]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-92]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-92]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-44]
push eax
push 4
push offset Lt_1A41
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-116]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-116]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-116]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 21
push offset Lt_1A6A
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-152]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-152]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-152]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_1A49
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 16
push offset Lt_1A6E
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
lea eax, [ebp-176]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-188]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-188]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-188]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 23
push offset Lt_1A4D
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-224]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-224]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-224]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
sub esp, 8
push -1
lea eax, [ebp-56]
push eax
push 5
push offset Lt_0E2F
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-248]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-248]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-248]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-44]
push eax
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-272]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-272]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-272]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 22
push offset Lt_1A55
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
lea eax, [ebp-284]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-308]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-308]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-308]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-344], 0
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
push 0
push -1
sub esp, 8
push 5
push offset Lt_1A49
push -1
sub esp, 4
push -1
lea eax, [ebp-32]
push eax
push 17
push offset Lt_1A59
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
lea eax, [ebp-332]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-344]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-344]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-344]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-368], 0
mov dword ptr [ebp-364], 0
mov dword ptr [ebp-360], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_00EE
push -1
lea eax, [ebp-56]
push eax
mov dword ptr [ebp-356], 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
lea eax, [ebp-356]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-368]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-368]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-368]
push eax
call fb_StrDelete
add esp, 16
sub esp, 8
push 0
mov dword ptr [ebp-404], 0
mov dword ptr [ebp-400], 0
mov dword ptr [ebp-396], 0
push 0
push -1
sub esp, 8
push 8
push offset Lt_1A5F
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-380], 0
mov dword ptr [ebp-376], 0
mov dword ptr [ebp-372], 0
lea eax, [ebp-380]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-392], 0
mov dword ptr [ebp-388], 0
mov dword ptr [ebp-384], 0
lea eax, [ebp-392]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-404]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-404]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-404]
push eax
call fb_StrDelete
add esp, 16
.Lt_1A3A:
jmp .Lt_1A38
.Lt_1A39:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 3
jne .Lt_1A85
sub esp, 12
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+48]
push dword ptr [ecx+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-12], eax
jmp .Lt_1A84
.Lt_1A85:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_1A86
sub esp, 12
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
mov dword ptr [ebp-12], eax
.Lt_1A86:
.Lt_1A84:
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
cmp ecx, 4
setne cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 480
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
cmp ebx, -1
sete bl
shr ebx, 1
sbb ebx, ebx
or ecx, ebx
je .Lt_1A88
sub esp, 4
push dword ptr [ebp+20]
push dword ptr [ebp+12]
push 76
call _EMITADDR
add esp, 16
mov ebx, dword ptr [ebp+12]
cmp dword ptr [ebx], 3
jne .Lt_1A8A
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+48]
mov ebx, dword ptr [ebp-12]
mov eax, dword ptr [ecx+12]
mov dword ptr [REGHANDLE+ebx*4], eax
jmp .Lt_1A89
.Lt_1A8A:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_1A8B
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp-12]
mov ecx, dword ptr [eax+12]
mov dword ptr [REGHANDLE+ebx*4], ecx
.Lt_1A8B:
.Lt_1A89:
push 0
push 8
push 0
push 8
call IRHLALLOCVRIMM
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 12
push 0
push 0
push dword ptr [ebp-4]
push dword ptr [ebp+12]
push 28
call _EMITBOP
add esp, 32
jmp .Lt_1A87
.Lt_1A88:
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [ebp+20]
mov ebx, dword ptr [eax+12]
mov dword ptr [ecx+12], ebx
.Lt_1A87:
sub esp, 8
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
sub esp, 8
push 2
push offset Lt_0119
push -1
sub esp, 4
push 0
sub esp, 12
mov ebx, dword ptr [ebp+20]
push dword ptr [ebx+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push -1
sub esp, 4
push 4
push offset Lt_1A8C
push -1
sub esp, 4
push 0
sub esp, 12
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call REG_FINDREAL
add esp, 16
push dword ptr [REGSTRQ+eax*4]
push 5
push offset Lt_0389
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call fb_StrConcat
add esp, 24
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call fb_StrConcat
add esp, 28
push eax
push -1
lea eax, [ebp-116]
push eax
call fb_StrAssign
add esp, 20
lea eax, [ebp-116]
push eax
call HWRITEASM64
add esp, 16
sub esp, 12
lea eax, [ebp-116]
push eax
call fb_StrDelete
add esp, 16
.Lt_1A38:
jmp .Lt_1A08
.Lt_1A36:
cmp dword ptr [ebp+8], 110
jne .Lt_1A92
.Lt_1A93:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 3
jne .Lt_1A95
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+48]
mov eax, dword ptr [ebx+12]
mov dword ptr [ebp-20], eax
mov dword ptr [ebp-60], 1
.Lt_1A99:
mov eax, dword ptr [ebp-60]
mov ebx, dword ptr [ebp-20]
cmp dword ptr [REGHANDLE+eax*4], ebx
jne .Lt_1A9B
mov ebx, dword ptr [ebp-60]
mov dword ptr [REGHANDLE+ebx*4], -2
jmp .Lt_1A98
.Lt_1A9B:
.Lt_1A9A:
.Lt_1A97:
inc dword ptr [ebp-60]
.Lt_1A96:
cmp dword ptr [ebp-60], 15
jle .Lt_1A99
.Lt_1A98:
.Lt_1A95:
.Lt_1A94:
jmp .Lt_1A08
.Lt_1A92:
cmp dword ptr [ebp+8], 111
jne .Lt_1A9C
.Lt_1A9D:
cmp dword ptr [CTX+212], 2
jne .Lt_1A9F
sub esp, 8
push 0
push 8
call IRHLALLOCVREG
add esp, 16
mov dword ptr [ebp-4], eax
sub esp, 4
push dword ptr [ebp-4]
push dword ptr [ebp+12]
push 22
call _EMITADDR
add esp, 16
sub esp, 8
push 0
push 8
call IRHLALLOCVREG
add esp, 16
mov dword ptr [ebp-8], eax
sub esp, 4
push dword ptr [ebp-8]
push dword ptr [ebp+16]
push 22
call _EMITADDR
add esp, 16
sub esp, 12
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
push dword ptr [ebp-8]
push dword ptr [ebp-4]
push 105
call _EMITMEM
add esp, 32
jmp .Lt_1A9E
.Lt_1A9F:
sub esp, 8
push dword ptr [ebp+16]
push dword ptr [ebp+12]
call _EMITSTORE
add esp, 16
.Lt_1A9E:
.Lt_1A9C:
.Lt_1A08:
sub esp, 12
lea ebx, [ebp-56]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-44]
push ebx
call fb_StrDelete
add esp, 16
sub esp, 12
lea ebx, [ebp-32]
push ebx
call fb_StrDelete
add esp, 16
.Lt_1A05:
pop ebx
mov esp, ebp
pop ebp
ret
.size _EMITMACRO, .-_EMITMACRO
.balign 16
_EMITDECL:
.type _EMITDECL, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AA0:
.Lt_1AA1:
mov esp, ebp
pop ebp
ret
.size _EMITDECL, .-_EMITDECL
.balign 16
_EMITSCOPEBEGIN:
.type _EMITSCOPEBEGIN, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AA2:
.Lt_1AA3:
mov esp, ebp
pop ebp
ret
.size _EMITSCOPEBEGIN, .-_EMITSCOPEBEGIN
.balign 16
_EMITSCOPEEND:
.type _EMITSCOPEEND, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AA4:
.Lt_1AA5:
mov esp, ebp
pop ebp
ret
.size _EMITSCOPEEND, .-_EMITSCOPEEND
.balign 16
_EMITVARINIEND:
.type _EMITVARINIEND, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AA6:
.Lt_1AA7:
mov esp, ebp
pop ebp
ret
.size _EMITVARINIEND, .-_EMITVARINIEND
.balign 16
_EMITVARINISCOPEBEGIN:
.type _EMITVARINISCOPEBEGIN, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AA8:
.Lt_1AA9:
mov esp, ebp
pop ebp
ret
.size _EMITVARINISCOPEBEGIN, .-_EMITVARINISCOPEBEGIN
.balign 16
_SCOPEBEGIN:
.type _SCOPEBEGIN, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AAA:
.Lt_1AAB:
mov esp, ebp
pop ebp
ret
.size _SCOPEBEGIN, .-_SCOPEBEGIN
.balign 16
_SCOPEEND:
.type _SCOPEEND, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AAC:
.Lt_1AAD:
mov esp, ebp
pop ebp
ret
.size _SCOPEEND, .-_SCOPEEND
.balign 16
_EMITVARINISCOPEEND:
.type _EMITVARINISCOPEEND, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AAE:
.Lt_1AAF:
mov esp, ebp
pop ebp
ret
.size _EMITVARINISCOPEEND, .-_EMITVARINISCOPEEND
.balign 16
_EMITFBCTINFBEGIN:
.type _EMITFBCTINFBEGIN, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AB0:
.Lt_1AB1:
mov esp, ebp
pop ebp
ret
.size _EMITFBCTINFBEGIN, .-_EMITFBCTINFBEGIN
.balign 16
_EMITFBCTINFEND:
.type _EMITFBCTINFEND, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AB2:
.Lt_1AB3:
mov esp, ebp
pop ebp
ret
.size _EMITFBCTINFEND, .-_EMITFBCTINFEND
.balign 16
_EMITSPILLREGS:
.type _EMITSPILLREGS, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AB4:
.Lt_1AB5:
mov esp, ebp
pop ebp
ret
.size _EMITSPILLREGS, .-_EMITSPILLREGS
.balign 16
_EMITLOAD:
.type _EMITLOAD, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AB6:
.Lt_1AB7:
mov esp, ebp
pop ebp
ret
.size _EMITLOAD, .-_EMITLOAD
.balign 16
_GLOBAL__I:
.type _GLOBAL__I, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AC1:
sub esp, 12
push offset CTXDBG
call _ZN6DBGCTXC1Ev
add esp, 16
sub esp, 12
push offset CTX
call _ZN13ASM64_CONTEXTC1Ev
add esp, 16
.Lt_1AC2:
mov esp, ebp
pop ebp
ret
.size _GLOBAL__I, .-_GLOBAL__I
.balign 16
_GLOBAL__D:
.type _GLOBAL__D, @function
push ebp
mov ebp, esp
sub esp, 8
.Lt_1AC4:
sub esp, 4
push offset _ZN8TDBGSTABD1Ev
push offset _ZN8TDBGSTABC1Ev
push offset DBGSTAB
call fb_ArrayEraseObj
add esp, 16
sub esp, 4
push offset _ZN7TDBGSTRD1Ev
push offset _ZN7TDBGSTRC1Ev
push offset DBGSTR
call fb_ArrayEraseObj
add esp, 16
sub esp, 12
push offset CTX
call _ZN13ASM64_CONTEXTD1Ev
add esp, 16
sub esp, 12
push offset CTXDBG
call _ZN6DBGCTXD1Ev
add esp, 16
.Lt_1AC5:
mov esp, ebp
pop ebp
ret
.size _GLOBAL__D, .-_GLOBAL__D

.section .rodata
.balign 4
Lt_0000:	.ascii	"\0"
.balign 4
Lt_0004:	.ascii	"1\0"
.balign 4
Lt_0006:	.ascii	"0\0"
.balign 4
Lt_000F:	.ascii	"FreeBASIC 1.08.0\0"
.balign 4
Lt_0019:	.ascii	"/\0"

.section .data
.balign 4

.globl IRGAS64_VTBL
IRGAS64_VTBL:
.int _INIT
.int _END
.int _EMITBEGIN
.int _EMITEND
.int _GETOPTIONVALUE
.int _SUPPORTSOP
.int _PROCBEGIN
.int _PROCEND
.int _PROCALLOCARG
.int _PROCALLOCLOCAL
.long 0
.int _SCOPEBEGIN
.int _SCOPEEND
.int _PROCALLOCSTATICVARS
.int _EMITCONVERT
.int _EMITLABEL
.int _EMITLABEL
.int _EMITRETURN
.int _EMITPROCBEGIN
.int _EMITPROCEND
.int IRHLEMITPUSHARG
.int _EMITASMLINE
.int _EMITCOMMENT
.int _EMITBOP
.int _EMITUOP
.int _EMITSTORE
.int _EMITSPILLREGS
.int _EMITLOAD
.int _EMITLOADRES
.long 0
.int _EMITADDR
.int _EMITCALL
.int _EMITCALLPTR
.long 0
.int _EMITJUMPPTR
.int _EMITBRANCH
.int _EMITJMPTB
.int _EMITMEM
.int _EMITMACRO
.int _EMITSCOPEBEGIN
.int _EMITSCOPEEND
.int _EMITDECL
.int _EMITDBG
.int _EMITVARINIBEGIN
.int _EMITVARINIEND
.int _EMITVARINII
.int _EMITVARINIF
.int _EMITVARINIOFS
.int _EMITVARINISTR
.int _EMITVARINIWSTR
.int _EMITVARINIPAD
.int _EMITVARINISCOPEBEGIN
.int _EMITVARINISCOPEEND
.int _EMITFBCTINFBEGIN
.int _EMITFBCTINFSTRING
.int _EMITFBCTINFEND
.int IRHLALLOCVREG
.int IRHLALLOCVRIMM
.int IRHLALLOCVRIMMF
.int IRHLALLOCVRVAR
.int IRHLALLOCVRIDX
.int IRHLALLOCVRPTR
.int IRHLALLOCVROFS
.int _SETVREGDATATYPE
.long 0
.long 0
.long 0
.long 0

.section .bss
.balign 4
	.lcomm	Lt_005A,36
.balign 4
	.lcomm	Lt_005B,36
.balign 4
	.lcomm	Lt_005C,48
.balign 4
	.lcomm	CTXDBG,56
.balign 4
	.lcomm	REGHANDLE,72
.balign 4
	.lcomm	REGROOM,144
.balign 4
	.lcomm	CTX,224

.section .data
.balign 4
DBGSTR:
.long 0
.long 0
.int 0
.int 16
.int 0
.int 8
.skip 96,0
.balign 4
DBGSTAB:
.long 0
.long 0
.int 0
.int 16
.int 0
.int 8
.skip 96,0
.balign 4
REMAPTB:
.int 7
.int 16
.int 2
.int 3
.int 4
.int 5
.int 6
.int 6
.int 9
.int 10
.int 9
.int 1
.int 8
.int 9
.int 10
.int 11
.int 12
.int 13
.int 14
.int 17
.skip 24,0
.balign 4
STABSTB:
.int Lt_008C
.int Lt_008D
.int Lt_008E
.int Lt_008F
.int Lt_0090
.int Lt_0091
.int Lt_0092
.int Lt_0093
.int Lt_0094
.int Lt_0095
.int Lt_0096
.int Lt_0097
.int Lt_0098
.int Lt_0099
.int Lt_009A
.int Lt_009B
.int Lt_009C

.section .rodata
.balign 4
Lt_008C:	.ascii	"integer:t1=-1\0"
.balign 4
Lt_008D:	.ascii	"void:t7=-11\0"
.balign 4
Lt_008E:	.ascii	"byte:t2=-6\0"
.balign 4
Lt_008F:	.ascii	"ubyte:t3=-5\0"
.balign 4
Lt_0090:	.ascii	"char:t4=-2\0"
.balign 4
Lt_0091:	.ascii	"short:t5=-3\0"
.balign 4
Lt_0092:	.ascii	"ushort:t6=-7\0"
.balign 4
Lt_0093:	.ascii	"uinteger:t8=-8\0"
.balign 4
Lt_0094:	.ascii	"longint:t9=-31\0"
.balign 4
Lt_0095:	.ascii	"ulongint:t10=-32\0"
.balign 4
Lt_0096:	.ascii	"single:t11=-12\0"
.balign 4
Lt_0097:	.ascii	"double:t12=-13\0"
.balign 4
Lt_0098:	.ascii	"string:t13=s12data:*2,0,64;len:1,64,64;size:1,128,64;;\0"
.balign 4
Lt_0099:	.ascii	"fixstr:t14=-2\0"
.balign 4
Lt_009A:	.ascii	"pchar:t15=*4;\0"
.balign 4
Lt_009B:	.ascii	"boolean:t16=@s8;-16\0"
.balign 4
Lt_009C:	.ascii	"va_list:t17=-11\0"

.section .data
.balign 4
REGSTRQ:
.int Lt_009F
.int Lt_00A0
.int Lt_00A1
.int Lt_00A2
.int Lt_00A3
.int Lt_00A4
.int Lt_00A5
.int Lt_00A6
.int Lt_00A7
.int Lt_00A8
.int Lt_00A9
.int Lt_00AA
.int Lt_00AB
.int Lt_00AC
.int Lt_00AD
.int Lt_00AE
.int Lt_00AF
.int Lt_00B0

.section .rodata
.balign 4
Lt_009F:	.ascii	"rax\0"
.balign 4
Lt_00A0:	.ascii	"rbx\0"
.balign 4
Lt_00A1:	.ascii	"rcx\0"
.balign 4
Lt_00A2:	.ascii	"rdx\0"
.balign 4
Lt_00A3:	.ascii	"rsi\0"
.balign 4
Lt_00A4:	.ascii	"rdi\0"
.balign 4
Lt_00A5:	.ascii	"rbp\0"
.balign 4
Lt_00A6:	.ascii	"rsp\0"
.balign 4
Lt_00A7:	.ascii	"r8\0"
.balign 4
Lt_00A8:	.ascii	"r9\0"
.balign 4
Lt_00A9:	.ascii	"r10\0"
.balign 4
Lt_00AA:	.ascii	"r11\0"
.balign 4
Lt_00AB:	.ascii	"r12\0"
.balign 4
Lt_00AC:	.ascii	"r13\0"
.balign 4
Lt_00AD:	.ascii	"r14\0"
.balign 4
Lt_00AE:	.ascii	"r15\0"
.balign 4
Lt_00AF:	.ascii	"rip\0"
.balign 4
Lt_00B0:	.ascii	"* X_Q\0"

.section .data
.balign 4
REGSTRD:
.int Lt_00B2
.int Lt_00B3
.int Lt_00B4
.int Lt_00B5
.int Lt_00B6
.int Lt_00B7
.int Lt_00B8
.int Lt_00B9
.int Lt_00BA
.int Lt_00BB
.int Lt_00BC
.int Lt_00BD
.int Lt_00BE
.int Lt_00BF
.int Lt_00C0
.int Lt_00C1
.int Lt_0000
.int Lt_00C2

.section .rodata
.balign 4
Lt_00B2:	.ascii	"eax\0"
.balign 4
Lt_00B3:	.ascii	"ebx\0"
.balign 4
Lt_00B4:	.ascii	"ecx\0"
.balign 4
Lt_00B5:	.ascii	"edx\0"
.balign 4
Lt_00B6:	.ascii	"esi\0"
.balign 4
Lt_00B7:	.ascii	"edi\0"
.balign 4
Lt_00B8:	.ascii	"ebp\0"
.balign 4
Lt_00B9:	.ascii	"esp\0"
.balign 4
Lt_00BA:	.ascii	"r8d\0"
.balign 4
Lt_00BB:	.ascii	"r9d\0"
.balign 4
Lt_00BC:	.ascii	"r10d\0"
.balign 4
Lt_00BD:	.ascii	"r11d\0"
.balign 4
Lt_00BE:	.ascii	"r12d\0"
.balign 4
Lt_00BF:	.ascii	"r13d\0"
.balign 4
Lt_00C0:	.ascii	"r14d\0"
.balign 4
Lt_00C1:	.ascii	"r15d\0"
.balign 4
Lt_00C2:	.ascii	"* X_D\0"

.section .data
.balign 4
REGSTRW:
.int Lt_00C4
.int Lt_00C5
.int Lt_00C6
.int Lt_00C7
.int Lt_00C8
.int Lt_00C9
.int Lt_00CA
.int Lt_00CB
.int Lt_00CC
.int Lt_00CD
.int Lt_00CE
.int Lt_00CF
.int Lt_00D0
.int Lt_00D1
.int Lt_00D2
.int Lt_00D3
.int Lt_0000
.int Lt_00D4

.section .rodata
.balign 4
Lt_00C4:	.ascii	"ax\0"
.balign 4
Lt_00C5:	.ascii	"bx\0"
.balign 4
Lt_00C6:	.ascii	"cx\0"
.balign 4
Lt_00C7:	.ascii	"dx\0"
.balign 4
Lt_00C8:	.ascii	"si\0"
.balign 4
Lt_00C9:	.ascii	"di\0"
.balign 4
Lt_00CA:	.ascii	"bp\0"
.balign 4
Lt_00CB:	.ascii	"sp\0"
.balign 4
Lt_00CC:	.ascii	"r8w\0"
.balign 4
Lt_00CD:	.ascii	"r9w\0"
.balign 4
Lt_00CE:	.ascii	"r10w\0"
.balign 4
Lt_00CF:	.ascii	"r11w\0"
.balign 4
Lt_00D0:	.ascii	"r12w\0"
.balign 4
Lt_00D1:	.ascii	"r13w\0"
.balign 4
Lt_00D2:	.ascii	"r14w\0"
.balign 4
Lt_00D3:	.ascii	"r15w\0"
.balign 4
Lt_00D4:	.ascii	"* X_W\0"

.section .data
.balign 4
REGSTRB:
.int Lt_00D6
.int Lt_00D7
.int Lt_00D8
.int Lt_00D9
.int Lt_00DA
.int Lt_00DB
.int Lt_00DC
.int Lt_00DD
.int Lt_00DE
.int Lt_00DF
.int Lt_00E0
.int Lt_00E1
.int Lt_00E2
.int Lt_00E3
.int Lt_00E4
.int Lt_00E5
.int Lt_0000
.int Lt_00E6

.section .rodata
.balign 4
Lt_00D6:	.ascii	"al\0"
.balign 4
Lt_00D7:	.ascii	"bl\0"
.balign 4
Lt_00D8:	.ascii	"cl\0"
.balign 4
Lt_00D9:	.ascii	"dl\0"
.balign 4
Lt_00DA:	.ascii	"sil\0"
.balign 4
Lt_00DB:	.ascii	"dil\0"
.balign 4
Lt_00DC:	.ascii	"bpl\0"
.balign 4
Lt_00DD:	.ascii	"spl\0"
.balign 4
Lt_00DE:	.ascii	"r8b\0"
.balign 4
Lt_00DF:	.ascii	"r9b\0"
.balign 4
Lt_00E0:	.ascii	"r10b\0"
.balign 4
Lt_00E1:	.ascii	"r11b\0"
.balign 4
Lt_00E2:	.ascii	"r12b\0"
.balign 4
Lt_00E3:	.ascii	"r13b\0"
.balign 4
Lt_00E4:	.ascii	"r14b\0"
.balign 4
Lt_00E5:	.ascii	"r15b\0"
.balign 4
Lt_00E6:	.ascii	"* X_B\0"

.section .data
.balign 4
REG_PRIO:
.byte 11
.byte 10
.byte 8
.byte 9
.byte 3
.byte 2
.byte 12
.byte 13
.byte 14
.byte 15
.byte 1
.byte 5
.byte 4
.balign 4
LISTREG:
.long 0
.long 0
.int 0
.int 4
.int 1
.int 17
.skip 12,0

.section .rodata
.balign 4
Lt_00EE:	.ascii	":\0"
.balign 4
Lt_00F2:	.ascii	"#O9\0"
.balign 4
Lt_00F3:	.ascii	"mov\0"
.balign 4
Lt_00F4:	.ascii	"lea\0"
.balign 4
Lt_00F5:	.ascii	"jmp\0"
.balign 4
Lt_00F8:	.ascii	"movsxd\0"
.balign 4
Lt_00FB:	.ascii	"movsx\0"
.balign 4
Lt_00FE:	.ascii	"movzx\0"
.balign 4
Lt_0101:	.ascii	" \0"
.balign 4
Lt_0102:	.ascii	",\0"
.balign 4
Lt_0103:	.ascii	"#\0"
.balign 4
Lt_010A:	.ascii	"rsi rdi rcx rdx rbx rax r8 r9 r10 r11 r12 r13 r14 r15\0"
.balign 4
Lt_010D:	.ascii	"#O0\0"
.balign 4
Lt_0111:	.ascii	"   add \0"
.balign 4
Lt_0118:	.ascii	"[\0"
.balign 4
Lt_0119:	.ascii	"]\0"
.balign 4
Lt_011F:	.ascii	"e\0"
.balign 4
Lt_0122:	.ascii	"#O4\0"
.balign 4
Lt_0123:	.ascii	", \0"
.balign 4
Lt_0124:	.ascii	"\n\0"
.balign 4
Lt_0125:	.ascii	" #Optim 4\0"
.balign 4
Lt_012D:	.ascii	"#O5\0"
.balign 4
Lt_012E:	.ascii	"lea \0"
.balign 4
Lt_012F:	.ascii	" #Optim 5\0"
.balign 4
Lt_013B:	.ascii	"#O7\0"
.balign 4
Lt_013C:	.ascii	" #Optim 7\0"
.balign 4
Lt_0146:	.ascii	"#O1 \0"
.balign 4
Lt_014D:	.ascii	"FOUND AN ERROR : prevpart empty ????????\0"
.balign 4
Lt_0157:	.ascii	"movss\0"
.balign 4
Lt_015A:	.ascii	"movd\0"
.balign 4
Lt_015B:	.ascii	"movq\0"
.balign 4
Lt_015C:	.ascii	"#O2\0"
.balign 4
Lt_0160:	.ascii	" #Optim 2\0"
.balign 4
Lt_016F:	.ascii	"#O3\0"
.balign 4
Lt_0174:	.ascii	"movsd\0"
.balign 4
Lt_017A:	.ascii	"FOUND AN ERROR : in check_optim 3-2 mov unknown=\0"
.balign 4
Lt_017E:	.ascii	" #Optim 3\0"
.balign 4
Lt_0189:	.ascii	"#O6\0"
.balign 4
Lt_018A:	.ascii	" #Optim 6\0"
.balign 4
Lt_0196:	.ascii	"inc\0"
.balign 4
Lt_0197:	.ascii	"dec\0"
.balign 4
Lt_019A:	.ascii	"not\0"
.balign 4
Lt_019D:	.ascii	"neg\0"
.balign 4
Lt_01A4:	.ascii	"mov lea cmp add sub imu idiv div shl shr sar and xor or call jmp push test cvt \0"
.balign 4
Lt_01B8:	.ascii	"add\0"
.balign 4
Lt_01B9:	.ascii	"sub\0"
.balign 4
Lt_01BC:	.ascii	"imu\0"
.balign 4
Lt_01C2:	.ascii	"cmp\0"
.balign 4
Lt_01D8:	.ascii	".section \0"
.balign 4
Lt_01DD:	.ascii	"#NO\0"
.balign 4
Lt_01F4:	.ascii	"-\0"
.balign 4
Lt_0210:	.ascii	"0x\0"
.balign 4
Lt_0211:	.ascii	" # DBL=\0"
.balign 4
Lt_0214:	.ascii	".quad \0"
.balign 4
Lt_0216:	.ascii	" # SNG=\0"
.balign 4
Lt_0219:	.ascii	".long \0"
.balign 4
Lt_022A:	.ascii	"src/compiler/ir-gas64.bas\0"
.balign 4
Lt_0239:	.ascii	".dbgstr,\"a\"\0"
.balign 4
Lt_023B:	.ascii	".dbgstr,\"dr\"\0"
.balign 4
Lt_023D:	.ascii	".byte 0\0"
.balign 4
Lt_0244:	.ascii	".ascii \"\0"
.balign 4
Lt_0245:	.ascii	"\\\0"
.balign 4
Lt_0246:	.ascii	"\\\\\0"
.balign 4
Lt_0247:	.ascii	"\\0\"\0"
.balign 4
Lt_024F:	.ascii	".dbgdat,\"a\"\0"
.balign 4
Lt_0251:	.ascii	".dbgdat,\"dr\"\0"
.balign 4
Lt_0258:	.ascii	".quad 0x\0"
.balign 4
Lt_0259:	.ascii	" # \0"
.balign 4
Lt_026B:	.ascii	"\"\0"
.balign 4
Lt_026C:	.ascii	".file \"\0"
.balign 4
Lt_0270:	.ascii	"DUMMY\0"
.balign 4
Lt_028D:	.ascii	":G\0"
.balign 4
Lt_028F:	.ascii	":S\0"
.balign 4
Lt_029B:	.ascii	":V\0"
.balign 4
Lt_02A4:	.ascii	":F\0"
.balign 4
Lt_02A5:	.ascii	":f\0"
.balign 4
Lt_02B0:	.ascii	"p\0"
.balign 4
Lt_02B1:	.ascii	"v\0"
.balign 4
Lt_02B7:	.ascii	"=*\0"
.balign 4
Lt_02BA:	.ascii	":Tt\0"
.balign 4
Lt_02BB:	.ascii	"=s\0"
.balign 4
Lt_02CF:	.ascii	";\0"
.balign 4
Lt_02D3:	.ascii	":T\0"
.balign 4
Lt_02D4:	.ascii	"=e\0"
.balign 4
Lt_02EB:	.ascii	"=\0"
.balign 4
Lt_02EE:	.ascii	"ar1;\0"
.balign 4
Lt_02EF:	.ascii	"0;\0"
.balign 4
Lt_0310:	.ascii	"=f\0"
.balign 4
Lt_031E:	.ascii	"FOUND AN ERROR : Other emitdbg not handled=\0"
.balign 4
Lt_031F:	.ascii	"for ref AST_OP_DBG_LINEEND=\0"
.balign 4
Lt_0320:	.ascii	"114\0"
.balign 4
Lt_033E:	.ascii	"FOUND AN ERROR : Spilling overflow when proc calling\0"
.balign 4
Lt_0343:	.ascii	"mov QWORD PTR \0"
.balign 4
Lt_0344:	.ascii	"[rbp], \0"
.balign 4
Lt_0389:	.ascii	"mov \0"
.balign 4
Lt_03BC:	.ascii	", QWORD PTR \0"
.balign 4
Lt_03BD:	.ascii	"[rbp]\0"
.balign 4
Lt_03D7:	.ascii	"FOUND AN ERROR : virtual register=\0"
.balign 4
Lt_03D8:	.ascii	" no real register corresponding, using KREG_XXX\0"
.balign 4
Lt_03F3:	.ascii	"rcx rdx rbx rdi rsi r8 r9 r10 r11 r12 r13 r14 r15\0"
.balign 4
Lt_0406:	.ascii	"mov rax, \0"
.balign 4
Lt_040B:	.ascii	"mov QWORD PTR [\0"
.balign 4
Lt_040C:	.ascii	"], 0\0"
.balign 4
Lt_0410:	.ascii	"add \0"
.balign 4
Lt_0411:	.ascii	", 8\0"
.balign 4
Lt_0415:	.ascii	"dec rax\0"
.balign 4
Lt_0417:	.ascii	"jnz \0"
.balign 4
Lt_042C:	.ascii	"mov dword ptr [\0"
.balign 4
Lt_0432:	.ascii	"mov word ptr 4[\0"
.balign 4
Lt_0438:	.ascii	"mov byte ptr 6[\0"
.balign 4
Lt_043D:	.ascii	"mov byte ptr 4[\0"
.balign 4
Lt_0442:	.ascii	"mov word ptr [\0"
.balign 4
Lt_0448:	.ascii	"mov byte ptr 2[\0"
.balign 4
Lt_044D:	.ascii	"mov byte ptr [\0"
.balign 4
Lt_0475:	.ascii	"mov rax, [\0"
.balign 4
Lt_0479:	.ascii	"mov [\0"
.balign 4
Lt_047A:	.ascii	"], rax\0"
.balign 4
Lt_0484:	.ascii	"dec \0"
.balign 4
Lt_04A5:	.ascii	"mov eax, dword ptr [\0"
.balign 4
Lt_04A9:	.ascii	"], eax\0"
.balign 4
Lt_04AF:	.ascii	"mov ax, word ptr 4[\0"
.balign 4
Lt_04B3:	.ascii	"], ax\0"
.balign 4
Lt_04B9:	.ascii	"mov al, byte ptr 6[\0"
.balign 4
Lt_04BD:	.ascii	"], al\0"
.balign 4
Lt_04C2:	.ascii	"mov al, byte ptr 4[\0"
.balign 4
Lt_04CA:	.ascii	"mov ax, word ptr [\0"
.balign 4
Lt_04D3:	.ascii	"mov al, byte ptr 2[\0"
.balign 4
Lt_04DB:	.ascii	"mov al, byte ptr [\0"
.balign 4
Lt_04F7:	.ascii	".data\0"
.balign 4
Lt_04F9:	.ascii	".align 8\0"
.balign 4
Lt_04FD:	.ascii	".globl \0"
.balign 4
Lt_0504:	.ascii	"\\0\\0\\0\\0\0"
.balign 4
Lt_0505:	.ascii	"\"\0"
.balign 4
Lt_052E:	.ascii	".bss\0"
.balign 4
Lt_053A:	.ascii	".comm \0"
.balign 4
Lt_0543:	.ascii	".local \0"
.balign 4
Lt_054C:	.ascii	".lcomm \0"
.balign 4
Lt_0559:	.ascii	"stmxcsr $mxcsr[rip]\0"
.balign 4
Lt_055B:	.ascii	"push $mxcsr[rip]\0"
.balign 4
Lt_055D:	.ascii	"and dword ptr $mxcsr[rip], 0xFFFF9FFF\0"
.balign 4
Lt_055F:	.ascii	"ldmxcsr $mxcsr[rip]\0"
.balign 4
Lt_0561:	.ascii	"cvts\0"
.balign 4
Lt_0562:	.ascii	"2si rax, xmm0\0"
.balign 4
Lt_0566:	.ascii	"pop $mxcsr[rip]\0"
.balign 4
Lt_0579:	.ascii	".intel_syntax noprefix\0"
.balign 4
Lt_057B:	.ascii	".text\0"
.balign 4
Lt_0589:	.ascii	".init_array\0"
.balign 4
Lt_058B:	.ascii	".ctors\0"
.balign 4
Lt_0596:	.ascii	".fini_array\0"
.balign 4
Lt_0598:	.ascii	".dtors\0"
.balign 4
Lt_05A5:	.ascii	".local $mxcsr\0"
.balign 4
Lt_05A7:	.ascii	".comm $mxcsr,8,8\0"
.balign 4
Lt_05A9:	.ascii	".local $sse41\0"
.balign 4
Lt_05AB:	.ascii	".comm $sse41,4,8\0"
.balign 4
Lt_05AD:	.ascii	".lcomm $mxcsr,8,8\0"
.balign 4
Lt_05AF:	.ascii	".lcomm $sse41,4,8\0"
.balign 4
Lt_05B8:	.ascii	".quad $sse41_test\0"
.balign 4
Lt_05BB:	.ascii	"$sse41_test:\0"
.balign 4
Lt_05BD:	.ascii	"push rbx\0"
.balign 4
Lt_05BF:	.ascii	"push rcx\0"
.balign 4
Lt_05C1:	.ascii	"push rdx\0"
.balign 4
Lt_05C3:	.ascii	"mov  eax, 1\0"
.balign 4
Lt_05C5:	.ascii	"cpuid\0"
.balign 4
Lt_05C7:	.ascii	"and ecx, 0b10000000000000000000\0"
.balign 4
Lt_05C9:	.ascii	"mov $sse41[rip], ecx\0"
.balign 4
Lt_05CB:	.ascii	"pop rdx\0"
.balign 4
Lt_05CD:	.ascii	"pop rcx\0"
.balign 4
Lt_05CF:	.ascii	"pop rbx\0"
.balign 4
Lt_05D1:	.ascii	"ret\0"
.balign 4
Lt_05E7:	.ascii	"_GETOPTIONVALUE\0"
.balign 4
Lt_0647:	.ascii	"shr \0"
.balign 4
Lt_0648:	.ascii	", 16\0"
.balign 4
Lt_065A:	.ascii	", 32\0"
.balign 4
Lt_068E:	.ascii	"lea rax, \0"
.balign 4
Lt_0691:	.ascii	"add rax, 8\0"
.balign 4
Lt_0693:	.ascii	"[rax]\0"
.balign 4
Lt_069A:	.ascii	"movzx \0"
.balign 4
Lt_069B:	.ascii	", BYTE PTR \0"
.balign 4
Lt_06A1:	.ascii	", WORD PTR \0"
.balign 4
Lt_06AB:	.ascii	", WORD PTR [\0"
.balign 4
Lt_06B1:	.ascii	"movzx eax, BYTE PTR 2[\0"
.balign 4
Lt_06B5:	.ascii	"shl rax, 16\0"
.balign 4
Lt_06B7:	.ascii	"or \0"
.balign 4
Lt_06B8:	.ascii	", rax\0"
.balign 4
Lt_06BD:	.ascii	", DWORD PTR \0"
.balign 4
Lt_06C7:	.ascii	", DWORD PTR [\0"
.balign 4
Lt_06CD:	.ascii	"movzx eax, BYTE PTR 4[\0"
.balign 4
Lt_06D1:	.ascii	"shl rax, 32\0"
.balign 4
Lt_06E0:	.ascii	"movzx eax, WORD PTR 4[\0"
.balign 4
Lt_06F9:	.ascii	"movzx eax, BYTE PTR 6[\0"
.balign 4
Lt_06FD:	.ascii	"shl rax, 48\0"
.balign 4
Lt_0714:	.ascii	"movd xmm\0"
.balign 4
Lt_0719:	.ascii	"movq xmm\0"
.balign 4
Lt_0733:	.ascii	"movd \0"
.balign 4
Lt_0734:	.ascii	"[rbp], xmm\0"
.balign 4
Lt_0739:	.ascii	"movq \0"
.balign 4
Lt_077A:	.ascii	"mov BYTE PTR \0"
.balign 4
Lt_0780:	.ascii	"mov WORD PTR \0"
.balign 4
Lt_0786:	.ascii	"mov DWORD PTR \0"
.balign 4
Lt_081C:	.ascii	"push rax #dummy push for gosub\0"
.balign 4
Lt_0833:	.ascii	"[rip+\0"
.balign 4
Lt_083A:	.ascii	"] #NO\0"
.balign 4
Lt_085B:	.ascii	"+\0"
.balign 4
Lt_0877:	.ascii	"FOUND AN ERROR : prepare_IDX case not handled 01\0"
.balign 4
Lt_087C:	.ascii	"X X\0"
.balign 4
Lt_0885:	.ascii	"mul\0"
.balign 4
Lt_0887:	.ascii	"div\0"
.balign 4
Lt_0889:	.ascii	"intdiv\0"
.balign 4
Lt_088B:	.ascii	"mod\0"
.balign 4
Lt_088D:	.ascii	"shl\0"
.balign 4
Lt_088F:	.ascii	"ashr\0"
.balign 4
Lt_0891:	.ascii	"and\0"
.balign 4
Lt_0893:	.ascii	"or\0"
.balign 4
Lt_0895:	.ascii	"xor\0"
.balign 4
Lt_0897:	.ascii	"icmp eq\0"
.balign 4
Lt_0899:	.ascii	"icmp ne\0"
.balign 4
Lt_089B:	.ascii	"icmp sgt\0"
.balign 4
Lt_089D:	.ascii	"icmp slt\0"
.balign 4
Lt_089F:	.ascii	"icmp sge\0"
.balign 4
Lt_08A1:	.ascii	"icmp sle\0"
.balign 4
Lt_08A3:	.ascii	"eqv\0"
.balign 4
Lt_08A5:	.ascii	"imp\0"
.balign 4
Lt_08A8:	.ascii	"je\0"
.balign 4
Lt_08AA:	.ascii	"jgt\0"
.balign 4
Lt_08AC:	.ascii	"jlt\0"
.balign 4
Lt_08AE:	.ascii	"jne\0"
.balign 4
Lt_08B0:	.ascii	"jge\0"
.balign 4
Lt_08B2:	.ascii	"jle\0"
.balign 4
Lt_08B4:	.ascii	"call\0"
.balign 4
Lt_08B6:	.ascii	"bop unknown\0"
.balign 4
Lt_08C2:	.ascii	"movsd \0"
.balign 4
Lt_08C3:	.ascii	"ucomisd \0"
.balign 4
Lt_08C4:	.ascii	"addsd \0"
.balign 4
Lt_08C5:	.ascii	"subsd \0"
.balign 4
Lt_08C6:	.ascii	"mulsd \0"
.balign 4
Lt_08C7:	.ascii	"divsd \0"
.balign 4
Lt_08C8:	.ascii	"movss \0"
.balign 4
Lt_08C9:	.ascii	"ucomiss \0"
.balign 4
Lt_08CA:	.ascii	"addss \0"
.balign 4
Lt_08CB:	.ascii	"subss \0"
.balign 4
Lt_08CC:	.ascii	"mulss \0"
.balign 4
Lt_08CD:	.ascii	"divss \0"
.balign 4
Lt_08D0:	.ascii	"xmm0, \0"
.balign 4
Lt_08E1:	.ascii	"xmm1, \0"
.balign 4
Lt_08FA:	.ascii	", -1\0"
.balign 4
Lt_08FE:	.ascii	"xmm0, xmm1\0"
.balign 4
Lt_0903:	.ascii	"jp \0"
.balign 4
Lt_0910:	.ascii	"je \0"
.balign 4
Lt_0913:	.ascii	"jne \0"
.balign 4
Lt_0916:	.ascii	"jb \0"
.balign 4
Lt_0919:	.ascii	"jbe \0"
.balign 4
Lt_091C:	.ascii	"ja \0"
.balign 4
Lt_091F:	.ascii	"jae \0"
.balign 4
Lt_092C:	.ascii	"xor \0"
.balign 4
Lt_0949:	.ascii	", xmm0\0"
.balign 4
Lt_0951:	.ascii	"atan2\0"
.balign 4
Lt_0956:	.ascii	"atan2f\0"
.balign 4
Lt_095E:	.ascii	"FOUND AN ERROR : in bop float needs to be coded : \0"
.balign 4
Lt_096E:	.ascii	"QWORD PTR \0"
.balign 4
Lt_0973:	.ascii	"DWORD PTR \0"
.balign 4
Lt_0977:	.ascii	"WORD PTR \0"
.balign 4
Lt_097D:	.ascii	"BYTE PTR \0"
.balign 4
Lt_0982:	.ascii	"FOUND AN ERROR : BOP datatype not handled 01 = \0"
.balign 4
Lt_09A2:	.ascii	"FOUND AN ERROR : BOP datatype not handled 010 \0"
.balign 4
Lt_09C7:	.ascii	"FOUND AN ERROR : in loadoperand typ not handled v1\0"
.balign 4
Lt_09E6:	.ascii	"FOUND AN ERROR : BOP datatype not handled 012 \0"
.balign 4
Lt_0A0B:	.ascii	"FOUND AN ERROR : in loadoperand typ not handled v2\0"
.balign 4
Lt_0A4A:	.ascii	"FOUND AN ERROR : BOP datatype not handled 011 = \0"
.balign 4
Lt_0A90:	.ascii	"FOUND AN ERROR : BOP datatype not handled 012 = \0"
.balign 4
Lt_0A9C:	.ascii	"mov eax, \0"
.balign 4
Lt_0AB7:	.ascii	"FOUND AN ERROR : BOP datatype not handled 0100 = \0"
.balign 4
Lt_0AC1:	.ascii	"inc \0"
.balign 4
Lt_0AC5:	.ascii	"-1\0"
.balign 4
Lt_0ACF:	.ascii	"and \0"
.balign 4
Lt_0AE2:	.ascii	", 1\0"
.balign 4
Lt_0AE6:	.ascii	"not \0"
.balign 4
Lt_0B94:	.ascii	"sub \0"
.balign 4
Lt_0B9C:	.ascii	"imul \0"
.balign 4
Lt_0BAE:	.ascii	"be\0"
.balign 4
Lt_0BB0:	.ascii	"b\0"
.balign 4
Lt_0BB2:	.ascii	"ne\0"
.balign 4
Lt_0BB4:	.ascii	"nb\0"
.balign 4
Lt_0BB6:	.ascii	"a\0"
.balign 4
Lt_0BBD:	.ascii	"le\0"
.balign 4
Lt_0BBF:	.ascii	"l\0"
.balign 4
Lt_0BC2:	.ascii	"ge\0"
.balign 4
Lt_0BC4:	.ascii	"g\0"
.balign 4
Lt_0BCF:	.ascii	"@GOTPCREL[rip]\0"
.balign 4
Lt_0BD3:	.ascii	"mov rax, [rax]\0"
.balign 4
Lt_0BE5:	.ascii	"cmp \0"
.balign 4
Lt_0BEC:	.ascii	"set\0"
.balign 4
Lt_0BED:	.ascii	" al\0"
.balign 4
Lt_0BF1:	.ascii	", al\0"
.balign 4
Lt_0BF7:	.ascii	"neg \0"
.balign 4
Lt_0BFA:	.ascii	"j\0"
.balign 4
Lt_0C0C:	.ascii	"mov rcx, \0"
.balign 4
Lt_0C11:	.ascii	"shl \0"
.balign 4
Lt_0C18:	.ascii	"sar \0"
.balign 4
Lt_0C3E:	.ascii	"mov edx, 0\0"
.balign 4
Lt_0C40:	.ascii	"div \0"
.balign 4
Lt_0C43:	.ascii	"cqo\0"
.balign 4
Lt_0C45:	.ascii	"idiv \0"
.balign 4
Lt_0C75:	.ascii	", rdx\0"
.balign 4
Lt_0C7F:	.ascii	"FOUND AN ERROR : op int needs to be coded : \0"
.balign 4
Lt_0CA4:	.ascii	"FOUND AN ERROR : in emituop typ not handled vr\0"
.balign 4
Lt_0CE1:	.ascii	"FOUND AN ERROR : in uop typ not handled v1\0"
.balign 4
Lt_0D14:	.ascii	"test \0"
.balign 4
Lt_0D19:	.ascii	"sete \0"
.balign 4
Lt_0D22:	.ascii	"movd xmm0, \0"
.balign 4
Lt_0D25:	.ascii	"movss xmm0, \0"
.balign 4
Lt_0D2B:	.ascii	"cosf\0"
.balign 4
Lt_0D2F:	.ascii	"sinf\0"
.balign 4
Lt_0D33:	.ascii	"expf\0"
.balign 4
Lt_0D37:	.ascii	"logf\0"
.balign 4
Lt_0D3B:	.ascii	"acosf\0"
.balign 4
Lt_0D3F:	.ascii	"asinf\0"
.balign 4
Lt_0D43:	.ascii	"tanf\0"
.balign 4
Lt_0D47:	.ascii	"atanf\0"
.balign 4
Lt_0D4B:	.ascii	"sqrtss\011xmm0, xmm0\0"
.balign 4
Lt_0D4F:	.ascii	"mov eax, 0x7FFFFFFF\0"
.balign 4
Lt_0D51:	.ascii	"movd xmm1, eax\0"
.balign 4
Lt_0D53:	.ascii	"andps xmm1, xmm0\0"
.balign 4
Lt_0D55:	.ascii	"movd xmm0, xmm1\0"
.balign 4
Lt_0D59:	.ascii	"fb_SGNSingle\0"
.balign 4
Lt_0D5D:	.ascii	"fb_FRACf\0"
.balign 4
Lt_0D61:	.ascii	"fb_FIXSingle\0"
.balign 4
Lt_0D65:	.ascii	"floorf\0"
.balign 4
Lt_0D6A:	.ascii	"mov eax, 0x80000000\0"
.balign 4
Lt_0D6D:	.ascii	"xorps xmm0, xmm1\0"
.balign 4
Lt_0D72:	.ascii	"FOUND AN ERROR : in uop not handled for single\0"
.balign 4
Lt_0D77:	.ascii	", eax\0"
.balign 4
Lt_0D8B:	.ascii	"xor rax, rdx\0"
.balign 4
Lt_0D8D:	.ascii	"sub rax, rdx\0"
.balign 4
Lt_0DB1:	.ascii	"fb_SGNl\0"
.balign 4
Lt_0DB3:	.ascii	"movsxd rax, eax\0"
.balign 4
Lt_0DBF:	.ascii	"movq xmm0, \0"
.balign 4
Lt_0DC2:	.ascii	"movsd xmm0, \0"
.balign 4
Lt_0DC8:	.ascii	"cos\0"
.balign 4
Lt_0DCC:	.ascii	"sin\0"
.balign 4
Lt_0DD0:	.ascii	"exp\0"
.balign 4
Lt_0DD4:	.ascii	"log\0"
.balign 4
Lt_0DD8:	.ascii	"acos\0"
.balign 4
Lt_0DDC:	.ascii	"asin\0"
.balign 4
Lt_0DE0:	.ascii	"tan\0"
.balign 4
Lt_0DE4:	.ascii	"atan\0"
.balign 4
Lt_0DE8:	.ascii	"mov rax, 0x7FFFFFFFFFFFFFFF\0"
.balign 4
Lt_0DEA:	.ascii	"movq xmm1, rax\0"
.balign 4
Lt_0DEC:	.ascii	"andpd xmm1, xmm0\0"
.balign 4
Lt_0DEE:	.ascii	"movq xmm0, xmm1\0"
.balign 4
Lt_0DF2:	.ascii	"sqrtsd\011xmm0, xmm0\0"
.balign 4
Lt_0DF6:	.ascii	"fb_SGNDouble\0"
.balign 4
Lt_0DFA:	.ascii	"fb_FRACd\0"
.balign 4
Lt_0DFE:	.ascii	"fb_FIXDouble\0"
.balign 4
Lt_0E02:	.ascii	"floor\0"
.balign 4
Lt_0E07:	.ascii	"mov rax, 0x8000000000000000\0"
.balign 4
Lt_0E0A:	.ascii	"xorpd xmm0, xmm1\0"
.balign 4
Lt_0E0F:	.ascii	"FOUND AN ERROR : in uop not handled for double\0"
.balign 4
Lt_0E14:	.ascii	"movsxd \0"
.balign 4
Lt_0E1D:	.ascii	"test DWORD PTR $sse41[rip], 0b10000000000000000000\0"
.balign 4
Lt_0E23:	.ascii	"roundsd xmm0,xmm0,4\0"
.balign 4
Lt_0E27:	.ascii	"cvttsd2si rax, xmm0\0"
.balign 4
Lt_0E29:	.ascii	"roundss xmm0,xmm0,4\0"
.balign 4
Lt_0E2D:	.ascii	"cvttss2si rax, xmm0\0"
.balign 4
Lt_0E2F:	.ascii	"jmp \0"
.balign 4
Lt_0E38:	.ascii	"d\0"
.balign 4
Lt_0E39:	.ascii	"call nearbyint\0"
.balign 4
Lt_0E3D:	.ascii	"s\0"
.balign 4
Lt_0E3E:	.ascii	"call nearbyintf\0"
.balign 4
Lt_0E48:	.ascii	"FOUND AN ERROR : v1 in converting not a reg\0"
.balign 4
Lt_0E83:	.ascii	"FOUND AN ERROR : converting datatype not handled 01 = \0"
.balign 4
Lt_0EA0:	.ascii	"FOUND AN ERROR : converting datatype WCHAR not handled\0"
.balign 4
Lt_0EA7:	.ascii	"FOUND AN ERROR : converting datatype not handled 02 = \0"
.balign 4
Lt_0EC8:	.ascii	"FOUND AN ERROR : Converting datatype not handled 03 = \0"
.balign 4
Lt_0EE4:	.ascii	"mov rax, QWORD PTR \0"
.balign 4
Lt_0EF8:	.ascii	"FOUND AN ERROR : store 02 ??\0"
.balign 4
Lt_0F0B:	.ascii	"xmm0\0"
.balign 4
Lt_0F0C:	.ascii	"cvtss2sd xmm0, \0"
.balign 4
Lt_0F14:	.ascii	"movq xmm1, \0"
.balign 4
Lt_0F17:	.ascii	"xmm1\0"
.balign 4
Lt_0F18:	.ascii	"cvtsd2ss xmm0, \0"
.balign 4
Lt_0F1E:	.ascii	"pxor xmm0,xmm0\0"
.balign 4
Lt_0F27:	.ascii	"test\011rax, rax\0"
.balign 4
Lt_0F29:	.ascii	"js \0"
.balign 4
Lt_0F2C:	.ascii	"cvtsi2sd xmm0, rax\0"
.balign 4
Lt_0F37:	.ascii	"and eax, 1\0"
.balign 4
Lt_0F3C:	.ascii	"cvtsi2sd xmm0, \0"
.balign 4
Lt_0F3F:	.ascii	"addsd xmm0, xmm0\0"
.balign 4
Lt_0F48:	.ascii	"test rax, rax\0"
.balign 4
Lt_0F4C:	.ascii	"cvtsi2ss\011xmm0, rax\0"
.balign 4
Lt_0F5B:	.ascii	"cvtsi2ss xmm0, \0"
.balign 4
Lt_0F5E:	.ascii	"addss xmm0, xmm0\0"
.balign 4
Lt_0F8F:	.ascii	"movsx eax, \0"
.balign 4
Lt_0F94:	.ascii	", 0\0"
.balign 4
Lt_0F99:	.ascii	"setne al\0"
.balign 4
Lt_0F9B:	.ascii	"neg al\0"
.balign 4
Lt_0F9D:	.ascii	"movsx eax, al\0"
.balign 4
Lt_0F9F:	.ascii	"movzx eax, \0"
.balign 4
Lt_0FA5:	.ascii	"cvtsi2sd xmm0, eax\0"
.balign 4
Lt_0FAA:	.ascii	"cvtsi2ss xmm0, eax\0"
.balign 4
Lt_0FB2:	.ascii	"FOUND AN ERROR : Converting datatype not handled 04\0"
.balign 4
Lt_0FBF:	.ascii	"mov rax, 4890909195324358656\0"
.balign 4
Lt_0FC1:	.ascii	"movq xmm2, rax\0"
.balign 4
Lt_0FC5:	.ascii	"movq xmm0, rax\0"
.balign 4
Lt_0FC7:	.ascii	"ucomisd xmm0, xmm2\0"
.balign 4
Lt_0FC9:	.ascii	"jnb \0"
.balign 4
Lt_0FD1:	.ascii	"movsd\011xmm1, xmm2\0"
.balign 4
Lt_0FD3:	.ascii	"subsd\011xmm0, xmm1\0"
.balign 4
Lt_0FD6:	.ascii	"movabs \0"
.balign 4
Lt_0FD7:	.ascii	", -9223372036854775808\0"
.balign 4
Lt_0FDB:	.ascii	"xor rax,\0"
.balign 4
Lt_0FF4:	.ascii	", ax\0"
.balign 4
Lt_0FFA:	.ascii	"cmp rax, 0\0"
.balign 4
Lt_1002:	.ascii	"FOUND AN ERROR : Converting float to int 01\0"
.balign 4
Lt_1007:	.ascii	"mov rax, 1593835520\0"
.balign 4
Lt_100C:	.ascii	"movd xmm0, eax\0"
.balign 4
Lt_100E:	.ascii	"ucomiss xmm0, xmm2\0"
.balign 4
Lt_1017:	.ascii	"movss\011xmm1, xmm2\0"
.balign 4
Lt_1019:	.ascii	"subss\011xmm0, xmm1\0"
.balign 4
Lt_1043:	.ascii	"FOUND AN ERROR : Converting float to int 02\0"
.balign 4
Lt_1050:	.ascii	", QWORD PTR [\0"
.balign 4
Lt_1059:	.ascii	"FOUND AN ERROR : Converting struct to datatype not handled 01\0"
.balign 4
Lt_105E:	.ascii	"FOUND AN ERROR : Converting to struct not handled 02\0"
.balign 4
Lt_1065:	.ascii	"0x0000000000000000\0"
.balign 4
Lt_1066:	.ascii	"0x00000000\0"
.balign 4
Lt_1086:	.ascii	"movsx \0"
.balign 4
Lt_10C8:	.ascii	"FOUND AN ERROR : in conv something missing 01\0"
.balign 4
Lt_10E4:	.ascii	"FOUND AN ERROR : in conv something missing 02\0"
.balign 4
Lt_10F3:	.ascii	"movq rdx, xmm1\0"
.balign 4
Lt_110B:	.ascii	"mov [rax], dl\0"
.balign 4
Lt_110E:	.ascii	"mov [rax], dx\0"
.balign 4
Lt_1112:	.ascii	"shr rdx, 2\0"
.balign 4
Lt_1114:	.ascii	"mov [rax+2], dl\0"
.balign 4
Lt_1117:	.ascii	"mov [rax], edx\0"
.balign 4
Lt_111B:	.ascii	"shr rdx, 4\0"
.balign 4
Lt_111D:	.ascii	"mov [rax+4], dl\0"
.balign 4
Lt_1122:	.ascii	"mov [rax+4], dx\0"
.balign 4
Lt_1129:	.ascii	"mov [rax+6], dl\0"
.balign 4
Lt_112C:	.ascii	"mov [rax], rdx\0"
.balign 4
Lt_1145:	.ascii	"FOUND AN ERROR : In emitstore used to be sure that case IMM to REG may happen.... report to dev\0"
.balign 4
Lt_1164:	.ascii	"FOUND AN ERROR : Storing datatype not handled 01 = \0"
.balign 4
Lt_1187:	.ascii	"FOUND AN ERROR : store 01\0"
.balign 4
Lt_11AC:	.ascii	"FOUND AN ERROR : Storing datatype not handled 02 = \0"
.balign 4
Lt_11EA:	.ascii	"mov al, \0"
.balign 4
Lt_11F2:	.ascii	"FOUND AN ERROR : emitstore datatype WCHAR not handled\0"
.balign 4
Lt_11F9:	.ascii	"FOUND AN ERROR : emitstore datatype not handled 03= \0"
.balign 4
Lt_1258:	.ascii	"movNOTUSED? \0"
.balign 4
Lt_12A2:	.ascii	"FOUND AN ERROR : in store perhaps OFS not handled\0"
.balign 4
Lt_12E5:	.ascii	"FOUND AN ERROR : in loadres OFS not handled\0"
.balign 4
Lt_12ED:	.ascii	"FOUND AN ERROR : in loadres typ not handled\0"
.balign 4
Lt_12F8:	.ascii	"FOUND AN ERROR : IR_VREGTYPE not handled in emitloadres (linux)\0"
.balign 4
Lt_1302:	.ascii	"mov rdx, \0"
.balign 4
Lt_131A:	.ascii	"movss xmm1, \0"
.balign 4
Lt_131D:	.ascii	"movsd xmm1, \0"
.balign 4
Lt_1355:	.ascii	"FOUND AN ERROR : in loadres datatype not handled = \0"
.balign 4
Lt_135F:	.ascii	"FOUND AN ERROR : vr in addrof/deref not a reg\0"
.balign 4
Lt_1383:	.ascii	"FOUND AN ERROR : in emitaddr OFS not handled\0"
.balign 4
Lt_1389:	.ascii	"FOUND AN ERROR : typ in addrof not handled\0"
.balign 4
Lt_13BC:	.ascii	"FOUND AN ERROR : typ in deref not handled\0"
.balign 4
Lt_13D1:	.ascii	"call \0"
.balign 4
Lt_13D2:	.ascii	"@PLT\0"
.balign 4
Lt_1404:	.ascii	" #NO\0"
.balign 4
Lt_1436:	.ascii	"FOUND AN ERROR : hdocall error with idx\0"
.balign 4
Lt_1458:	.ascii	"FOUND AN ERROR : in hdocall datatype not handled 01 = \0"
.balign 4
Lt_147D:	.ascii	"FOUND AN ERROR : in hdocall typ not handled \0"
.balign 4
Lt_1490:	.ascii	"push \0"
.balign 4
Lt_1491:	.ascii	"push rax\0"
.balign 4
Lt_149B:	.ascii	"push [rax]\0"
.balign 4
Lt_149E:	.ascii	"sub rax, 8\0"
.balign 4
Lt_149F:	.ascii	"add rax, \0"
.balign 4
Lt_14B9:	.ascii	"mov byte PTR \0"
.balign 4
Lt_14BA:	.ascii	"[rsp], \0"
.balign 4
Lt_14D5:	.ascii	"[rsp], al\0"
.balign 4
Lt_14DA:	.ascii	"mov ax, \0"
.balign 4
Lt_14DD:	.ascii	"[rsp], ax\0"
.balign 4
Lt_14E4:	.ascii	"[rsp], eax\0"
.balign 4
Lt_14EB:	.ascii	"[rsp], rax\0"
.balign 4
Lt_1508:	.ascii	"xor eax, eax\0"
.balign 4
Lt_1512:	.ascii	"xor rax, rax\0"
.balign 4
Lt_1601:	.ascii	"movsd xmm\0"
.balign 4
Lt_160C:	.ascii	"movss xmm\0"
.balign 4
Lt_1613:	.ascii	"movsd QWORD PTR \0"
.balign 4
Lt_1614:	.ascii	"[rsp], xmm\0"
.balign 4
Lt_1619:	.ascii	", xmm\0"
.balign 4
Lt_1624:	.ascii	"FOUND AN ERROR : in hdocall Va_list and target linux could be a problem\0"
.balign 4
Lt_1658:	.ascii	"FOUND AN ERROR : in hdocall datatype not handled 03 = \0"
.balign 4
Lt_166E:	.ascii	"sub rsp, 8\0"
.balign 4
Lt_168B:	.ascii	"add rsp, \0"
.balign 4
Lt_1698:	.ascii	"[rbp], rax\0"
.balign 4
Lt_169C:	.ascii	"[rbp], rdx\0"
.balign 4
Lt_16A4:	.ascii	"[rbp], xmm0\0"
.balign 4
Lt_16B3:	.ascii	"[rbp], xmm1\0"
.balign 4
Lt_16BE:	.ascii	"movq rax, xmm0\0"
.balign 4
Lt_16C1:	.ascii	"movd eax, xmm0\0"
.balign 4
Lt_16E1:	.ascii	"FOUND AN ERROR : in hdocall datatype not handled 04 = \0"
.balign 4
Lt_16F9:	.ascii	"FOUND AN ERROR : in hdocall OFS not handled\0"
.balign 4
Lt_16FF:	.ascii	"FOUND AN ERROR : in hdocall typ not handled =\0"
.balign 4
Lt_172D:	.ascii	"FOUND AN ERROR : in hdocall datatype not handled 05 = \0"
.balign 4
Lt_174C:	.ascii	"FOUND AN ERROR : Never IMM as first operand\0"
.balign 4
Lt_1763:	.ascii	"jmp [\0"
.balign 4
Lt_1774:	.ascii	"pop rax # dummy pop for gosub\0"
.balign 4
Lt_1786:	.ascii	"sub rax, \0"
.balign 4
Lt_178B:	.ascii	"cmp rax, \0"
.balign 4
Lt_1790:	.ascii	"jmp QWORD PTR [\0"
.balign 4
Lt_1791:	.ascii	"+rax*8]\0"
.balign 4
Lt_17B9:	.ascii	"FOUND AN ERROR : Memclear v1 not a reg nor a var\0"
.balign 4
Lt_17C2:	.ascii	"jz \0"
.balign 4
Lt_17C9:	.ascii	"mov BYTE PTR [rax], 0\0"
.balign 4
Lt_17CB:	.ascii	"inc rax\0"
.balign 4
Lt_17D7:	.ascii	"FOUND AN ERROR : Memclear without an immediat as size\0"
.balign 4
Lt_17E8:	.ascii	"mov BYTE PTR [\0"
.balign 4
Lt_17EC:	.ascii	"rax, \0"
.balign 4
Lt_17F5:	.ascii	"mov WORD PTR [\0"
.balign 4
Lt_17FC:	.ascii	"mov WORD PTR [rax], 0\0"
.balign 4
Lt_1802:	.ascii	"mov DWORD PTR [\0"
.balign 4
Lt_1809:	.ascii	"mov DWORD PTR [rax], 0\0"
.balign 4
Lt_1815:	.ascii	"mov QWORD PTR [rax], 0\0"
.balign 4
Lt_183A:	.ascii	"FOUND AN ERROR : memcopy 01 type not handled\0"
.balign 4
Lt_1856:	.ascii	"FOUND AN ERROR : Memcopy v2 not a reg nor a var nor ofs nor ptr\0"
.balign 4
Lt_1877:	.ascii	"mov al, [\0"
.balign 4
Lt_1885:	.ascii	"mov ax, [\0"
.balign 4
Lt_1893:	.ascii	"mov eax, [\0"
.balign 4
Lt_18BB:	.ascii	"[rbp\0"
.balign 4
Lt_18C0:	.ascii	"FOUND AN ERROR : in emitasm token unknown\0"
.balign 4
Lt_18D0:	.ascii	".align \0"
.balign 4
Lt_18E5:	.ascii	".byte\0"
.balign 4
Lt_18E7:	.ascii	".word\0"
.balign 4
Lt_18E9:	.ascii	".long\0"
.balign 4
Lt_18EB:	.ascii	".quad\0"
.balign 4
Lt_18EE:	.ascii	" 0x\0"
.balign 4
Lt_18FD:	.ascii	".drectve\0"
.balign 4
Lt_18FF:	.ascii	".ascii \" -export:\0"
.balign 4
Lt_191F:	.ascii	"push rbp\0"
.balign 4
Lt_1921:	.ascii	"mov  rbp,rsp\0"
.balign 4
Lt_1923:	.ascii	"sub rsp, \0"
.balign 4
Lt_1928:	.ascii	"mov QWORD PTR -8[rbp], rbx\0"
.balign 4
Lt_192B:	.ascii	"mov  rbx, QWORD PTR -8[rbp]\n\0"
.balign 4
Lt_1930:	.ascii	"mov QWORD PTR -16[rbp], rdi\0"
.balign 4
Lt_1933:	.ascii	"mov  rdi, QWORD PTR -16[rbp]\n\0"
.balign 4
Lt_1936:	.ascii	"mov QWORD PTR -24[rbp], rsi\0"
.balign 4
Lt_1939:	.ascii	"mov  rsi, QWORD PTR -24[rbp]\n\0"
.balign 4
Lt_193C:	.ascii	"mov QWORD PTR -32[rbp], r12\0"
.balign 4
Lt_193F:	.ascii	"mov  r12, QWORD PTR -32[rbp]\n\0"
.balign 4
Lt_1942:	.ascii	"mov QWORD PTR -40[rbp], r13\0"
.balign 4
Lt_1945:	.ascii	"mov  r13, QWORD PTR -40[rbp]\n\0"
.balign 4
Lt_1948:	.ascii	"mov QWORD PTR -48[rbp], r14\0"
.balign 4
Lt_194B:	.ascii	"mov  r14, QWORD PTR -48[rbp]\n\0"
.balign 4
Lt_194E:	.ascii	"mov QWORD PTR -56[rbp], r15\0"
.balign 4
Lt_1951:	.ascii	"mov  r15, QWORD PTR -56[rbp]\n\0"
.balign 4
Lt_1954:	.ascii	"mov QWORD PTR -16[rbp], r12\0"
.balign 4
Lt_1957:	.ascii	"mov  r12, QWORD PTR -16[rbp]\n\0"
.balign 4
Lt_195A:	.ascii	"mov QWORD PTR -24[rbp], r13\0"
.balign 4
Lt_195D:	.ascii	"mov  r13, QWORD PTR -24[rbp]\n\0"
.balign 4
Lt_1960:	.ascii	"mov QWORD PTR -32[rbp], r14\0"
.balign 4
Lt_1963:	.ascii	"mov  r14, QWORD PTR -32[rbp]\n\0"
.balign 4
Lt_1966:	.ascii	"mov QWORD PTR -40[rbp], r15\0"
.balign 4
Lt_1969:	.ascii	"mov  r15, QWORD PTR -40[rbp]\n\0"
.balign 4
Lt_1972:	.ascii	"mov QWORD PTR -152[rbp], rdi\0"
.balign 4
Lt_1976:	.ascii	"mov QWORD PTR -144[rbp], rsi\0"
.balign 4
Lt_197A:	.ascii	"mov QWORD PTR -136[rbp], rdx\0"
.balign 4
Lt_197E:	.ascii	"mov QWORD PTR -128[rbp], rcx\0"
.balign 4
Lt_1982:	.ascii	"mov QWORD PTR -120[rbp], r8\0"
.balign 4
Lt_1986:	.ascii	"mov QWORD PTR -112[rbp], r9\0"
.balign 4
Lt_1988:	.ascii	"test eax, eax\0"
.balign 4
Lt_198E:	.ascii	"movq QWORD PTR -104[rbp], xmm0\0"
.balign 4
Lt_1992:	.ascii	"movq QWORD PTR -96[rbp], xmm1\0"
.balign 4
Lt_1996:	.ascii	"movq QWORD PTR -88[rbp], xmm2\0"
.balign 4
Lt_199A:	.ascii	"movq QWORD PTR -80[rbp], xmm3\0"
.balign 4
Lt_199E:	.ascii	"movq QWORD PTR -72[rbp], xmm4\0"
.balign 4
Lt_19A2:	.ascii	"movq QWORD PTR -64[rbp], xmm5\0"
.balign 4
Lt_19A6:	.ascii	"movq QWORD PTR -56[rbp], xmm6\0"
.balign 4
Lt_19AA:	.ascii	"movq QWORD PTR -48[rbp], xmm7\0"
.balign 4
Lt_19BA:	.ascii	"mov rsp,rbp\0"
.balign 4
Lt_19BC:	.ascii	"pop rbp\0"
.balign 4
Lt_19D3:	.ascii	".zero \0"
.balign 4
Lt_19D8:	.ascii	".fbctinf\0"
.balign 4
Lt_19E1:	.ascii	".byte 0 # 0\0"
.balign 4
Lt_19F4:	.ascii	".word 0\0"
.balign 4
Lt_19F6:	.ascii	".long 0\0"
.balign 4
Lt_19FC:	.ascii	".ascii \"\0"
.balign 4
Lt_1A0D:	.ascii	"], \0"
.balign 4
Lt_1A12:	.ascii	"mov DWORD PTR 4[\0"
.balign 4
Lt_1A1B:	.ascii	"lea rax,\0"
.balign 4
Lt_1A1F:	.ascii	"mov QWORD PTR 8[\0"
.balign 4
Lt_1A23:	.ascii	"lea rax, -152[rbp]\0"
.balign 4
Lt_1A25:	.ascii	"mov QWORD PTR 16[\0"
.balign 4
Lt_1A3C:	.ascii	"cmp DWORD PTR 4[\0"
.balign 4
Lt_1A3D:	.ascii	"], 104\0"
.balign 4
Lt_1A41:	.ascii	"jg \0"
.balign 4
Lt_1A44:	.ascii	"mov eax, DWORD PTR 4[\0"
.balign 4
Lt_1A48:	.ascii	"add DWORD PTR 4[\0"
.balign 4
Lt_1A49:	.ascii	"], 8\0"
.balign 4
Lt_1A4D:	.ascii	"add rax, QWORD PTR 16[\0"
.balign 4
Lt_1A55:	.ascii	"mov rax, QWORD PTR 8[\0"
.balign 4
Lt_1A59:	.ascii	"add QWORD PTR 8[\0"
.balign 4
Lt_1A5F:	.ascii	", [rax]\0"
.balign 4
Lt_1A63:	.ascii	"cmp DWORD PTR [\0"
.balign 4
Lt_1A64:	.ascii	"], 40\0"
.balign 4
Lt_1A6A:	.ascii	"mov eax, DWORD PTR [\0"
.balign 4
Lt_1A6E:	.ascii	"add DWORD PTR [\0"
.balign 4
Lt_1A8C:	.ascii	", [\0"
.balign 4
Lt_1ABC:	.ascii	"FOUND AN ERROR : emitlabelINF used ???? = \0"
.balign 8
Lt_1AEA:	.quad	0x3FE62E42FEFA39EF
.balign 8
Lt_1AEB:	.quad	0x0000000000000000
.balign 8
Lt_1AEC:	.quad	0x4000000000000000
.balign 8
Lt_1AED:	.quad	0x3FF0000000000000
.balign 8
Lt_1AF4:	.quad	0x3FF4CCCCCCCCCCCD
.balign 8
Lt_1AF5:	.quad	0x3FF8000000000000

.section .ctors, "aw", @progbits
.int fb_ctor__irzgas64
.int _GLOBAL__I

.section .dtors, "aw", @progbits
.int _GLOBAL__D
