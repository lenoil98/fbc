	.intel_syntax noprefix

.section .text
.balign 16

.globl _DBG_FILENAME@4
_DBG_FILENAME@4:
push ebp
mov ebp, esp
sub esp, 12
.Lt_01E1:
push -1
lea eax, [_CTXDBG+8]
push eax
push -1
push dword ptr [ebp+8]
call _fb_StrCompare@16
test eax, eax
je .Lt_01E4
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 2
push offset _Lt_0006
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
push 0
push 132
push dword ptr [ebp+8]
call _DBG_ADDSTAB@16
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
push 0
push -1
push dword ptr [ebp+8]
push -1
lea eax, [_CTXDBG+8]
push eax
call _fb_StrAssign@20
.Lt_01E4:
.Lt_01E3:
.Lt_01E2:
mov esp, ebp
pop ebp
ret 4
.balign 16

.globl _EDBGEMITHEADER_ASM64@4
_EDBGEMITHEADER_ASM64@4:
push ebp
mov ebp, esp
sub esp, 160
.Lt_0265:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [_CTXDBG], 1
mov dword ptr [_CTXDBG+36], -1
mov dword ptr [_CTXDBG+40], 1000
push dword ptr [_CTXDBG+40]
push 0
push 1
push offset __ZN7TDBGSTRD1Ev
push offset __ZN7TDBGSTRC1Ev
push 16
push offset _DBGSTR
call _fb_ArrayRedimObj
add esp, 28
test eax, eax
je .Lt_0268
push 0
push 0
push offset _Lt_022B
push 866
call _fb_ErrorThrowAt
add esp, 16
jmp eax
.Lt_0268:
mov dword ptr [_CTXDBG+44], -1
mov dword ptr [_CTXDBG+48], 1000
push dword ptr [_CTXDBG+48]
push 0
push 1
push offset __ZN8TDBGSTABD1Ev
push offset __ZN8TDBGSTABC1Ev
push 16
push offset _DBGSTAB
call _fb_ArrayRedimObj
add esp, 28
test eax, eax
je .Lt_026A
push 0
push 0
push offset _Lt_022B
push 869
call _fb_ErrorThrowAt
add esp, 16
jmp eax
.Lt_026A:
mov dword ptr [_CTXDBG+52], 1
mov dword ptr [_CTXDBG+4], -1
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push -1
push 2
push offset _Lt_026C
push -1
push 0
push dword ptr [ebp+8]
call _HESCAPE@4
push eax
push 8
push offset _Lt_026D
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
lea eax, [ebp-48]
push eax
call _HWRITEASM64@8
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 2
push offset _Lt_0006
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
push 0
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 6
push offset _Lt_0271
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
lea eax, [ebp-60]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 2
push offset _Lt_0006
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
push 0
push 255
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 17
push offset _Lt_000F
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
push dword ptr [ebp+8]
call _PATHISABSOLUTE@4
test eax, eax
jne .Lt_0277
lea eax, [ebp-12]
push eax
push 0
push 100
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push -1
push 2
push offset _Lt_001A
push -1
call _HCURDIR@0
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-156]
push eax
call _fb_StrAssign@20
lea eax, [ebp-156]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-156]
push eax
call _fb_StrDelete@4
.Lt_0277:
.Lt_0276:
lea eax, [ebp-12]
push eax
push 0
push 100
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 0
push dword ptr [ebp+8]
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-132]
push eax
call _fb_StrAssign@20
lea eax, [ebp-132]
push eax
call _HWRITEASM64@8
lea eax, [ebp-132]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-136], 0
.Lt_0280:
push 0
push 0
mov eax, dword ptr [ebp-136]
push dword ptr [_STABSTB+eax*4]
push -1
lea eax, [ebp-148]
push eax
call _fb_StrInit@20
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push 2
push offset _Lt_0006
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
push 0
push 128
lea eax, [ebp-148]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
inc dword ptr [_CTXDBG]
lea eax, [ebp-148]
push eax
call _fb_StrDelete@4
.Lt_027E:
inc dword ptr [ebp-136]
.Lt_027D:
cmp dword ptr [ebp-136], 16
jle .Lt_0280
.Lt_027F:
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_0266:
mov esp, ebp
pop ebp
ret 4
.balign 16

.globl _EDBGEMITGLOBALVAR_ASM64@8
_EDBGEMITGLOBALVAR_ASM64@8:
push ebp
mov ebp, esp
sub esp, 32
push ebx
.Lt_0282:
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 128
test ebx, ebx
je .Lt_0285
lea ebx, [ebp-20]
push ebx
call _fb_StrDelete@4
jmp .Lt_0283
.Lt_0285:
.Lt_0284:
cmp dword ptr [ebp+12], 0
jne .Lt_0287
.Lt_0288:
mov dword ptr [ebp-4], 36
jmp .Lt_0286
.Lt_0287:
cmp dword ptr [ebp+12], 2
jne .Lt_0289
.Lt_028A:
mov dword ptr [ebp-4], 40
jmp .Lt_0286
.Lt_0289:
mov dword ptr [ebp-4], 38
.Lt_028B:
.Lt_0286:
push 0
push 0
push dword ptr [ebp+8]
call _SYMBGETDBGNAME@4
push eax
push -1
lea eax, [ebp-20]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 32
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
and ecx, 8
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_028D
push 0
push 3
push offset _Lt_028E
push -1
lea ecx, [ebp-20]
push ecx
call _fb_StrConcatAssign@20
jmp .Lt_028C
.Lt_028D:
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ecx+4]
and ebx, 2
test ebx, ebx
je .Lt_028F
push 0
push 3
push offset _Lt_0290
push -1
lea ebx, [ebp-20]
push ebx
call _fb_StrConcatAssign@20
jmp .Lt_028C
.Lt_028F:
push 0
push 2
push offset _Lt_00EF
push -1
lea ebx, [ebp-20]
push ebx
call _fb_StrConcatAssign@20
.Lt_028C:
push 0
push -1
push 0
push dword ptr [ebp+8]
call _HGETDATATYPE_ASM64@8
push eax
push -1
lea eax, [ebp-20]
push eax
call _fb_StrConcatAssign@20
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
push 0
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
lea eax, [ebp-32]
push eax
call _fb_StrAssign@20
lea eax, [ebp-32]
push eax
push 0
mov al, byte ptr [ebp-4]
push eax
lea eax, [ebp-20]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-32]
push eax
call _fb_StrDelete@4
lea eax, [ebp-20]
push eax
call _fb_StrDelete@4
.Lt_0283:
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16

.globl _EDBGEMITLOCALVAR_ASM64@8
_EDBGEMITLOCALVAR_ASM64@8:
push ebp
mov ebp, esp
sub esp, 28
push ebx
.Lt_0294:
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
push 0
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+16]
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
cmp dword ptr [ebp+12], 0
je .Lt_0297
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+12]
and ebx, 2
test ebx, ebx
jne .Lt_0299
lea ebx, [ebp-28]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-16]
push ebx
call _fb_StrDelete@4
jmp .Lt_0295
.Lt_0299:
.Lt_0298:
mov ebx, dword ptr [ebp+8]
cmp dword ptr [ebx+56], 0
je .Lt_029B
mov dword ptr [ebp-4], 38
jmp .Lt_029A
.Lt_029B:
mov dword ptr [ebp-4], 40
.Lt_029A:
push 0
push 3
push offset _Lt_029C
push -1
lea ebx, [ebp-16]
push ebx
call _fb_StrConcatAssign@20
push 0
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
lea eax, [ebp-28]
push eax
call _fb_StrAssign@20
jmp .Lt_0296
.Lt_0297:
mov dword ptr [ebp-4], 128
push 0
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+52]
push dword ptr [eax+48]
call _fb_LongintToStr@8
push eax
push -1
lea eax, [ebp-28]
push eax
call _fb_StrAssign@20
.Lt_0296:
push 0
push -1
push 0
push dword ptr [ebp+8]
call _HGETDATATYPE_ASM64@8
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
lea eax, [ebp-28]
push eax
push 0
mov al, byte ptr [ebp-4]
push eax
lea eax, [ebp-16]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-28]
push eax
call _fb_StrDelete@4
lea eax, [ebp-16]
push eax
call _fb_StrDelete@4
.Lt_0295:
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16

.globl _EDBGEMITPROCHEADER_ASM64@4
_EDBGEMITPROCHEADER_ASM64@4:
push ebp
mov ebp, esp
sub esp, 48
push ebx
.Lt_029D:
push 0
push 261
lea eax, [_ENV+280]
push eax
push -1
push offset _Lt_02A9
call _fb_StrAssign@20
push 0
push -1
push 0
push offset _Lt_02A9
call _fb_StrUcase2@8
push eax
push -1
push offset _Lt_02A9
call _fb_StrAssign@20
push offset _Lt_02A9
call _DBG_FILENAME@4
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+12]
and ebx, 4096
test ebx, ebx
je .Lt_02A0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
lea eax, [ebp-48]
push eax
push 1
push 42
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push -1
call _FBGETENTRYPOINT@0
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
lea eax, [ebp-36]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+112]
mov dword ptr [ebx+16], 1
mov ebx, dword ptr [_LEX+422144]
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+112]
mov eax, dword ptr [ebx+8372]
mov dword ptr [ecx+20], eax
push 0
push -1
call _FBGETENTRYPOINT@0
push eax
push -1
push offset _Lt_02AA
call _fb_StrAssign@20
jmp .Lt_029F
.Lt_02A0:
push 0
push 0
push dword ptr [ebp+8]
call _SYMBGETDBGNAME@4
push eax
push -1
push offset _Lt_02AA
call _fb_StrAssign@20
.Lt_029F:
push 0
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push offset _Lt_02AB
call _fb_StrAssign@20
mov eax, dword ptr [ebp+8]
mov dword ptr [_CTXDBG+32], eax
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
and ecx, 32
test ecx, ecx
je .Lt_02A4
push 0
push 3
push offset _Lt_02A5
push -1
push offset _Lt_02AA
call _fb_StrConcatAssign@20
jmp .Lt_02A3
.Lt_02A4:
push 0
push 3
push offset _Lt_02A6
push -1
push offset _Lt_02AA
call _fb_StrConcatAssign@20
.Lt_02A3:
push 0
push -1
push 0
push dword ptr [ebp+8]
call _HGETDATATYPE_ASM64@8
push eax
push -1
push offset _Lt_02AA
call _fb_StrConcatAssign@20
push offset _Lt_02AB
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+112]
mov ax, word ptr [ecx+16]
push eax
push 36
push offset _Lt_02AA
call _DBG_ADDSTAB@16
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push 2
push offset _Lt_0006
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
lea eax, [ebp-24]
push eax
push 1
push 68
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_029E:
pop ebx
mov esp, ebp
pop ebp
ret 4

.section .bss
.balign 4
	.lcomm	_Lt_02AA,12
.balign 4
	.lcomm	_Lt_02AB,12
.balign 4
	.lcomm	_Lt_02A9,12

.section .text
.balign 16

.globl _EDBGEMITPROCARG_ASM64@4
_EDBGEMITPROCARG_ASM64@4:
push ebp
mov ebp, esp
sub esp, 36
push ebx
.Lt_02AC:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push -1
push 2
push offset _Lt_00EF
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+16]
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 32768
test ebx, ebx
je .Lt_02B0
push 0
push 2
push offset _Lt_02B1
push -1
lea ebx, [ebp-12]
push ebx
call _fb_StrConcatAssign@20
jmp .Lt_02AF
.Lt_02B0:
push 0
push 2
push offset _Lt_02B2
push -1
lea ebx, [ebp-12]
push ebx
call _fb_StrConcatAssign@20
.Lt_02AF:
push 0
push -1
push 0
push dword ptr [ebp+8]
call _HGETDATATYPE_ASM64@8
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrConcatAssign@20
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+52]
push dword ptr [eax+48]
call _fb_LongintToStr@8
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
lea eax, [ebp-36]
push eax
push 0
push 160
lea eax, [ebp-12]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_02AD:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16

.globl _REG_FINDREAL@4
_REG_FINDREAL@4:
push ebp
mov ebp, esp
sub esp, 132
push ebx
mov dword ptr [ebp-4], 0
.Lt_03C6:
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-76], 0
.Lt_03CB:
mov eax, dword ptr [ebp-76]
mov ebx, dword ptr [ebp+8]
cmp dword ptr [_REGHANDLE+eax*4], ebx
jne .Lt_03CD
mov ebx, dword ptr [ebp-76]
mov dword ptr [ebp-4], ebx
jmp .Lt_03C7
.Lt_03CD:
.Lt_03CC:
.Lt_03C9:
inc dword ptr [ebp-76]
.Lt_03C8:
cmp dword ptr [ebp-76], 15
jle .Lt_03CB
.Lt_03CA:
mov dword ptr [ebp-12], 0
cmp dword ptr [_CTX+196], 0
jle .Lt_03CF
lea ebx, [_CTX+140]
push ebx
call _FLISTGETHEAD@4
mov dword ptr [ebp-12], eax
.Lt_03D0:
cmp dword ptr [ebp-12], 0
je .Lt_03D1
mov eax, dword ptr [ebp-12]
mov ebx, dword ptr [ebp+8]
cmp dword ptr [eax+4], ebx
jne .Lt_03D3
jmp .Lt_03D1
.Lt_03D3:
.Lt_03D2:
push dword ptr [ebp-12]
call _FLISTGETNEXT@4
mov dword ptr [ebp-12], eax
jmp .Lt_03D0
.Lt_03D1:
.Lt_03CF:
.Lt_03CE:
cmp dword ptr [ebp-12], 0
jne .Lt_03D5
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
push 0
push -1
push 48
push offset _Lt_03D9
push -1
push -1
push dword ptr [ebp+8]
call _fb_IntToStr@4
push eax
push 35
push offset _Lt_03D8
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
lea eax, [ebp-120]
push eax
call _HWRITEASM64@8
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-132]
push eax
call _fb_StrAssign@20
lea eax, [ebp-132]
push eax
call _HWRITEASM64@8
lea eax, [ebp-132]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-4], 17
jmp .Lt_03C7
.Lt_03D5:
.Lt_03D4:
push -1
push dword ptr [ebp+8]
call _REG_FINDFREE@8
mov dword ptr [ebp-8], eax
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push -1
mov eax, dword ptr [ebp-12]
push dword ptr [eax+8]
call _fb_IntToStr@4
push eax
push -1
push 13
push offset _Lt_03BD
push -1
push 0
mov eax, dword ptr [ebp-8]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp-12]
mov dword ptr [eax+4], -2
mov eax, dword ptr [ebp-8]
mov dword ptr [ebp-4], eax
.Lt_03C7:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16

.globl _REG_TEMPO@0
_REG_TEMPO@0:
push ebp
mov ebp, esp
sub esp, 8
push ebx
mov dword ptr [ebp-4], 0
.Lt_03E3:
mov dword ptr [ebp-8], 0
inc dword ptr [_Lt_03E5]
push -1
push dword ptr [_Lt_03E5]
call _REG_FINDFREE@8
mov dword ptr [ebp-8], eax
mov eax, dword ptr [ebp-8]
mov ebx, dword ptr [_REGSTRQ+eax*4]
mov dword ptr [ebp-4], ebx
.Lt_03E4:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret

.section .data
.balign 4
_Lt_03E5:
.long 9999999

.section .text
.balign 16

.globl _SAVE_CALL@12
_SAVE_CALL@12:
push ebp
mov ebp, esp
sub esp, 40
push ebx
.Lt_13CA:
cmp dword ptr [ebp+12], 0
je .Lt_13CD
mov eax, dword ptr [ebp+16]
mov dword ptr [_REGHANDLE+eax*4], -2
.Lt_13CD:
call _REG_SAVE@0
cmp dword ptr [_CTX+212], 2
jne .Lt_13CE
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-4], eax
jmp .Lt_13DB
.Lt_13CE:
mov dword ptr [ebp-4], 0
.Lt_13DB:
cmp dword ptr [ebp-4], 0
je .Lt_13D1
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
push 5
push offset _Lt_13D3
push -1
push -1
push dword ptr [ebp+8]
push 6
push offset _Lt_13D2
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-40]
push eax
call _fb_StrAssign@20
lea eax, [ebp-40]
push eax
call _HWRITEASM64@8
lea eax, [ebp-40]
push eax
call _fb_StrDelete@4
jmp .Lt_13D0
.Lt_13D1:
push 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
push 0
push -1
push -1
push dword ptr [ebp+8]
push 6
push offset _Lt_13D2
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-28]
push eax
call _fb_StrAssign@20
lea eax, [ebp-28]
push eax
call _HWRITEASM64@8
lea eax, [ebp-28]
push eax
call _fb_StrDelete@4
.Lt_13D0:
cmp dword ptr [ebp+12], 0
je .Lt_13DA
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+16]
mov ecx, dword ptr [eax+12]
mov dword ptr [_REGHANDLE+ebx*4], ecx
.Lt_13DA:
.Lt_13CB:
pop ebx
mov esp, ebp
pop ebp
ret 12
.balign 16
_fb_ctor__irzgas64:
.Lt_0002:
.Lt_0003:
ret
.balign 16
__ZN11TSTRSETITEMaSERKS_:
push ebp
mov ebp, esp
push ebx
.Lt_0012:
push 0
push -1
mov eax, dword ptr [ebp+12]
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
lea eax, [ebx]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+12]
add eax, 12
mov ebx, dword ptr [ebp+8]
add ebx, 12
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
.Lt_0013:
pop ebx
mov esp, ebp
pop ebp
ret
.balign 16
__ZN13ASM64_CONTEXTC1Ev:
push ebp
mov ebp, esp
push ebx
mov eax, dword ptr [ebp+8]
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 4
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 8
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 20
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 32
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 44
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 56
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 68
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 80
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 84
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 88
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 92
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 96
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 100
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 104
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 108
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 112
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 116
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 120
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 124
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 128
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 132
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 136
mov byte ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 137
mov byte ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 140
lea ebx, [eax]
push edi
mov edi, ebx
xor eax, eax
mov ecx, 14
rep stosd
pop edi
mov ebx, dword ptr [ebp+8]
add ebx, 196
mov dword ptr [ebx], 0
mov ebx, dword ptr [ebp+8]
add ebx, 200
mov dword ptr [ebx], 0
mov ebx, dword ptr [ebp+8]
add ebx, 204
mov dword ptr [ebx], 0
mov ebx, dword ptr [ebp+8]
add ebx, 208
mov byte ptr [ebx], 0
mov ebx, dword ptr [ebp+8]
add ebx, 212
mov dword ptr [ebx], 0
mov ebx, dword ptr [ebp+8]
add ebx, 216
mov dword ptr [ebx], 0
mov ebx, dword ptr [ebp+8]
add ebx, 220
mov dword ptr [ebx], 0
.Lt_0069:
.Lt_006A:
pop ebx
mov esp, ebp
pop ebp
ret
.balign 16
__ZN13ASM64_CONTEXTaSERKS_:
push ebp
mov ebp, esp
push ebx
.Lt_006B:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 4
mov ebx, dword ptr [ebp+8]
add ebx, 4
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 8
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 8
lea eax, [ebx]
push eax
call _fb_StrAssign@20
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 20
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 20
lea eax, [ebx]
push eax
call _fb_StrAssign@20
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 32
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 32
lea eax, [ebx]
push eax
call _fb_StrAssign@20
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 44
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 44
lea eax, [ebx]
push eax
call _fb_StrAssign@20
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 56
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 56
lea eax, [ebx]
push eax
call _fb_StrAssign@20
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 68
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 68
lea eax, [ebx]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+12]
add eax, 80
mov ebx, dword ptr [ebp+8]
add ebx, 80
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 84
mov ebx, dword ptr [ebp+8]
add ebx, 84
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 88
mov ebx, dword ptr [ebp+8]
add ebx, 88
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 92
mov ebx, dword ptr [ebp+8]
add ebx, 92
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 96
mov ebx, dword ptr [ebp+8]
add ebx, 96
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 100
mov ebx, dword ptr [ebp+8]
add ebx, 100
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 104
mov ebx, dword ptr [ebp+8]
add ebx, 104
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 108
mov ebx, dword ptr [ebp+8]
add ebx, 108
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 112
mov ebx, dword ptr [ebp+8]
add ebx, 112
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 116
mov ebx, dword ptr [ebp+8]
add ebx, 116
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 120
mov ebx, dword ptr [ebp+8]
add ebx, 120
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 124
mov ebx, dword ptr [ebp+8]
add ebx, 124
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 128
mov ebx, dword ptr [ebp+8]
add ebx, 128
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 132
mov ebx, dword ptr [ebp+8]
add ebx, 132
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 136
mov ebx, dword ptr [ebp+8]
add ebx, 136
mov cl, byte ptr [eax]
mov byte ptr [ebx], cl
mov ecx, dword ptr [ebp+12]
add ecx, 137
mov ebx, dword ptr [ebp+8]
add ebx, 137
mov al, byte ptr [ecx]
mov byte ptr [ebx], al
mov eax, dword ptr [ebp+8]
add eax, 140
lea ebx, [eax]
mov eax, dword ptr [ebp+12]
add eax, 140
lea ecx, [eax]
push ecx
push edi
push esi
mov edi, ebx
mov esi, ecx
mov ecx, 14
rep movsd
pop esi
pop edi
pop ecx
mov ecx, dword ptr [ebp+12]
add ecx, 196
mov ebx, dword ptr [ebp+8]
add ebx, 196
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 200
mov ebx, dword ptr [ebp+8]
add ebx, 200
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 204
mov ebx, dword ptr [ebp+8]
add ebx, 204
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 208
mov ebx, dword ptr [ebp+8]
add ebx, 208
mov cl, byte ptr [eax]
mov byte ptr [ebx], cl
mov ecx, dword ptr [ebp+12]
add ecx, 212
mov ebx, dword ptr [ebp+8]
add ebx, 212
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 216
mov ebx, dword ptr [ebp+8]
add ebx, 216
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 220
mov ebx, dword ptr [ebp+8]
add ebx, 220
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
.Lt_006C:
pop ebx
mov esp, ebp
pop ebp
ret
.balign 16
__ZN13ASM64_CONTEXTD1Ev:
push ebp
mov ebp, esp
push ebx
.Lt_006F:
.Lt_0070:
mov eax, dword ptr [ebp+8]
add eax, 68
lea ebx, [eax]
push ebx
call _fb_StrDelete@4
mov ebx, dword ptr [ebp+8]
add ebx, 56
lea eax, [ebx]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp+8]
add eax, 44
lea ebx, [eax]
push ebx
call _fb_StrDelete@4
mov ebx, dword ptr [ebp+8]
add ebx, 32
lea eax, [ebx]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp+8]
add eax, 20
lea ebx, [eax]
push ebx
call _fb_StrDelete@4
mov ebx, dword ptr [ebp+8]
add ebx, 8
lea eax, [ebx]
push eax
call _fb_StrDelete@4
pop ebx
mov esp, ebp
pop ebp
ret
.balign 16
__ZN6DBGCTXC1Ev:
push ebp
mov ebp, esp
mov eax, dword ptr [ebp+8]
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 4
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 8
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 20
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
mov eax, dword ptr [ebp+8]
add eax, 32
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 36
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 40
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 44
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 48
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 52
mov dword ptr [eax], 0
.Lt_0071:
.Lt_0072:
mov esp, ebp
pop ebp
ret
.balign 16
__ZN6DBGCTXaSERKS_:
push ebp
mov ebp, esp
push ebx
.Lt_0073:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 4
mov ebx, dword ptr [ebp+8]
add ebx, 4
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 8
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 8
lea eax, [ebx]
push eax
call _fb_StrAssign@20
push 0
push -1
mov eax, dword ptr [ebp+12]
add eax, 20
lea ebx, [eax]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 20
lea eax, [ebx]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+12]
add eax, 32
mov ebx, dword ptr [ebp+8]
add ebx, 32
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 36
mov ebx, dword ptr [ebp+8]
add ebx, 36
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 40
mov ebx, dword ptr [ebp+8]
add ebx, 40
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 44
mov ebx, dword ptr [ebp+8]
add ebx, 44
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp+12]
add eax, 48
mov ebx, dword ptr [ebp+8]
add ebx, 48
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+12]
add ecx, 52
mov ebx, dword ptr [ebp+8]
add ebx, 52
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
.Lt_0074:
pop ebx
mov esp, ebp
pop ebp
ret
.balign 16
__ZN6DBGCTXD1Ev:
push ebp
mov ebp, esp
push ebx
.Lt_0077:
.Lt_0078:
mov eax, dword ptr [ebp+8]
add eax, 20
lea ebx, [eax]
push ebx
call _fb_StrDelete@4
mov ebx, dword ptr [ebp+8]
add ebx, 8
lea eax, [ebx]
push eax
call _fb_StrDelete@4
pop ebx
mov esp, ebp
pop ebp
ret
.balign 16
__ZN7TDBGSTRC1Ev:
push ebp
mov ebp, esp
mov eax, dword ptr [ebp+8]
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 4
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
.Lt_007A:
.Lt_007B:
mov esp, ebp
pop ebp
ret
.balign 16
__ZN7TDBGSTRaSERKS_:
push ebp
mov ebp, esp
push ebx
.Lt_007C:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
push 0
push -1
mov ecx, dword ptr [ebp+12]
add ecx, 4
lea ebx, [ecx]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 4
lea ecx, [ebx]
push ecx
call _fb_StrAssign@20
.Lt_007D:
pop ebx
mov esp, ebp
pop ebp
ret
.balign 16
__ZN7TDBGSTRD1Ev:
push ebp
mov ebp, esp
push ebx
.Lt_0080:
.Lt_0081:
mov eax, dword ptr [ebp+8]
add eax, 4
lea ebx, [eax]
push ebx
call _fb_StrDelete@4
pop ebx
mov esp, ebp
pop ebp
ret
.balign 16
__ZN8TDBGSTABC1Ev:
push ebp
mov ebp, esp
mov eax, dword ptr [ebp+8]
mov dword ptr [eax], 0
mov eax, dword ptr [ebp+8]
add eax, 4
mov dword ptr [eax], 0
mov dword ptr [eax+4], 0
mov dword ptr [eax+8], 0
.Lt_0082:
.Lt_0083:
mov esp, ebp
pop ebp
ret
.balign 16
__ZN8TDBGSTABaSERKS_:
push ebp
mov ebp, esp
push ebx
.Lt_0084:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
push 0
push -1
mov ecx, dword ptr [ebp+12]
add ecx, 4
lea ebx, [ecx]
push ebx
push -1
mov ebx, dword ptr [ebp+8]
add ebx, 4
lea ecx, [ebx]
push ecx
call _fb_StrAssign@20
.Lt_0085:
pop ebx
mov esp, ebp
pop ebp
ret
.balign 16
__ZN8TDBGSTABD1Ev:
push ebp
mov ebp, esp
push ebx
.Lt_0088:
.Lt_0089:
mov eax, dword ptr [ebp+8]
add eax, 4
lea ebx, [eax]
push ebx
call _fb_StrDelete@4
pop ebx
mov esp, ebp
pop ebp
ret
.balign 16
_CHECK_OPTIM@4:
push ebp
mov ebp, esp
sub esp, 216
push ebx
push esi
.Lt_00E9:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-60], 0
push -1
push dword ptr [ebp+8]
call _fb_StrLen@8
test eax, eax
jne .Lt_00EC
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACA
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACB
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACC
call _fb_StrAssign@20
mov dword ptr [_Lt_1ACD], 0
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_00EA
.Lt_00EC:
.Lt_00EB:
cmp dword ptr [_Lt_1ACD], 2
jne .Lt_00EE
push 2
push offset _Lt_00EF
push -1
push offset _Lt_1ACA
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_00F2
push 3
push offset _Lt_00F3
call _fb_StrAllocTempDescZEx@8
push eax
push -1
push dword ptr [_Lt_1ACE]
lea eax, [_CTX+56]
push eax
call _fb_StrAssignMid@16
.Lt_00F2:
.Lt_00F1:
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACA
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACB
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACC
call _fb_StrAssign@20
mov dword ptr [_Lt_1ACD], 0
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_00EA
.Lt_00EE:
.Lt_00ED:
push 4
push offset _Lt_00F4
push -1
push 3
push dword ptr [ebp+8]
call _fb_LEFT@8
push eax
call _fb_StrCompare@16
test eax, eax
setne al
shr eax, 1
sbb eax, eax
push 4
push offset _Lt_00F5
push -1
push 3
push dword ptr [ebp+8]
mov ebx, eax
call _fb_LEFT@8
push eax
call _fb_StrCompare@16
test eax, eax
setne al
shr eax, 1
sbb eax, eax
and ebx, eax
push 4
push offset _Lt_00F6
push -1
push 3
push dword ptr [ebp+8]
call _fb_LEFT@8
push eax
call _fb_StrCompare@16
test eax, eax
setne al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_00F8
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACA
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACB
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACC
call _fb_StrAssign@20
mov dword ptr [_Lt_1ACD], 0
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_00EA
.Lt_00F8:
.Lt_00F7:
push 7
push offset _Lt_00F9
push -1
push 6
push dword ptr [ebp+8]
call _fb_LEFT@8
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_00FB
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACA
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACB
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACC
call _fb_StrAssign@20
mov dword ptr [_Lt_1ACD], 0
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_00EA
.Lt_00FB:
push 6
push offset _Lt_00FC
push -1
push 5
push dword ptr [ebp+8]
call _fb_LEFT@8
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_00FE
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACA
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACB
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACC
call _fb_StrAssign@20
mov dword ptr [_Lt_1ACD], 0
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_00EA
.Lt_00FE:
push 6
push offset _Lt_00FF
push -1
push 5
push dword ptr [ebp+8]
call _fb_LEFT@8
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_0101
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACA
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACB
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACC
call _fb_StrAssign@20
mov dword ptr [_Lt_1ACD], 0
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_00EA
.Lt_0101:
push -1
lea eax, [_CTX+56]
push eax
call _fb_StrLen@8
inc eax
mov dword ptr [ebp-60], eax
push 1
push offset _Lt_0102
call _fb_StrAllocTempDescZEx@8
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
mov dword ptr [ebp-52], eax
push 0
push -1
mov eax, dword ptr [ebp-52]
dec eax
push eax
push dword ptr [ebp+8]
call _fb_LEFT@8
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
push 1
push offset _Lt_0103
call _fb_StrAllocTempDescZEx@8
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
mov dword ptr [ebp-56], eax
push 0
push -1
mov eax, dword ptr [ebp-56]
sub eax, dword ptr [ebp-52]
dec eax
push eax
mov eax, dword ptr [ebp-52]
inc eax
push eax
push dword ptr [ebp+8]
call _fb_StrMid@12
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 1
push offset _Lt_0104
call _fb_StrAllocTempDescZEx@8
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
mov dword ptr [ebp-52], eax
cmp dword ptr [ebp-52], 0
jne .Lt_0106
push -1
push dword ptr [ebp+8]
call _fb_StrLen@8
inc eax
mov dword ptr [ebp-52], eax
jmp .Lt_0105
.Lt_0106:
dec dword ptr [ebp-52]
.Lt_0105:
push 0
push -1
mov eax, dword ptr [ebp-52]
sub eax, dword ptr [ebp-56]
add eax, -2
push eax
mov eax, dword ptr [ebp-56]
add eax, 2
push eax
push dword ptr [ebp+8]
call _fb_StrMid@12
push eax
call _fb_RTRIM@4
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
push 4
push offset _Lt_00F4
push -1
lea eax, [ebp-36]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_0108
push -1
lea eax, [ebp-24]
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_010A
lea eax, [ebp-12]
push eax
push 53
push offset _Lt_010B
call _fb_StrAllocTempDescZEx@8
push eax
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_010D
push 0
push -1
push -1
push dword ptr [ebp+8]
push 4
push offset _Lt_010E
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+8]
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACA
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACB
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACC
call _fb_StrAssign@20
mov dword ptr [_Lt_1ACD], 0
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_00EA
.Lt_010D:
.Lt_010C:
.Lt_010A:
.Lt_0109:
.Lt_0108:
.Lt_0107:
push 4
push offset _Lt_00F5
push -1
lea eax, [ebp-36]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_0111
push 7
push offset _Lt_0112
call _fb_StrAllocTempDescZEx@8
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_0114
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACA
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACB
call _fb_StrAssign@20
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_00EA
.Lt_0114:
mov dword ptr [_Lt_1ACD], 1
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
push offset _Lt_1ACA
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-24]
push eax
push -1
push offset _Lt_1ACB
call _fb_StrAssign@20
mov eax, dword ptr [ebp-60]
mov dword ptr [_Lt_1ACE], eax
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_00EA
.Lt_0111:
.Lt_0110:
push 4
push offset _Lt_00F6
push -1
lea eax, [ebp-36]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_0116
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
push offset _Lt_1ACA
call _fb_StrAssign@20
mov dword ptr [_Lt_1ACD], 2
mov eax, dword ptr [ebp-60]
mov dword ptr [_Lt_1ACE], eax
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_00EA
.Lt_0116:
.Lt_0115:
cmp dword ptr [_Lt_1ACD], 1
jne .Lt_0118
push 2
push offset _Lt_011A
push -1
push -1
push offset _Lt_1ACA
push 2
push offset _Lt_0119
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
lea eax, [ebp-12]
push eax
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_011E
mov eax, dword ptr [ebp-24]
movzx ebx, byte ptr [eax]
cmp ebx, 114
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-24]
movzx ecx, byte ptr [ebx]
cmp ecx, 101
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
push 1
push 1
lea ebx, [ebp-24]
push ebx
mov ebx, eax
call _fb_RIGHT@8
push eax
call _fb_ASC@8
cmp eax, 48
setae cl
shr ecx, 1
sbb ecx, ecx
push 1
push 1
lea eax, [ebp-24]
push eax
mov esi, ecx
call _fb_RIGHT@8
push eax
call _fb_ASC@8
cmp eax, 57
setbe cl
shr ecx, 1
sbb ecx, ecx
and esi, ecx
or ebx, esi
je .Lt_0122
push 3
push offset _Lt_0123
call _fb_StrAllocTempDescZEx@8
push eax
push -1
push dword ptr [_Lt_1ACE]
lea eax, [_CTX+56]
push eax
call _fb_StrAssignMid@16
push 0
push -1
lea eax, [ebp-36]
push eax
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
push 0
push 2
push offset _Lt_0102
push -1
lea eax, [ebp-48]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 1
push offset _Lt_0119
call _fb_StrAllocTempDescZEx@8
push eax
lea eax, [ebp-12]
push eax
push 1
call _fb_StrInstr@12
dec eax
push eax
push 1
lea eax, [ebp-12]
push eax
call _fb_StrMid@12
push eax
push -1
lea eax, [ebp-48]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push offset _Lt_1ACB
push -1
lea eax, [ebp-48]
push eax
call _fb_StrConcatAssign@20
push 0
push 3
push offset _Lt_0124
push -1
lea eax, [ebp-48]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
lea eax, [ebp-24]
push eax
push -1
lea eax, [ebp-48]
push eax
call _fb_StrConcatAssign@20
push -1
lea eax, [_CTX+56]
push eax
call _fb_StrLen@8
push -1
push dword ptr [ebp+8]
mov ebx, eax
call _fb_StrLen@8
add ebx, eax
add ebx, 9
mov dword ptr [ebp-60], ebx
push 0
push -1
push 10
push offset _Lt_0126
push -1
push -1
lea ebx, [ebp-48]
push ebx
push -1
push -1
push 32
mov ebx, dword ptr [_CTX]
imul ebx, 3
push ebx
call _fb_StrFill1@8
push eax
push -1
push 3
push offset _Lt_0125
push -1
push -1
push dword ptr [ebp+8]
push 4
push offset _Lt_0123
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+8]
call _fb_StrAssign@20
.Lt_0122:
.Lt_0121:
jmp .Lt_011D
.Lt_011E:
push -1
push offset _Lt_1ACA
push -1
lea eax, [ebp-24]
push eax
call _fb_StrCompare@16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-12]
movzx esi, byte ptr [ebx]
cmp esi, 114
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_012D
push 3
push offset _Lt_012E
call _fb_StrAllocTempDescZEx@8
push eax
push -1
push dword ptr [_Lt_1ACE]
lea eax, [_CTX+56]
push eax
call _fb_StrAssignMid@16
push 0
push 5
push offset _Lt_012F
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [ebp-48]
push eax
call _fb_StrConcatAssign@20
push 0
push 3
push offset _Lt_0124
push -1
lea eax, [ebp-48]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push offset _Lt_1ACB
push -1
lea eax, [ebp-48]
push eax
call _fb_StrConcatAssign@20
push -1
lea eax, [_CTX+56]
push eax
call _fb_StrLen@8
push -1
push dword ptr [ebp+8]
mov ebx, eax
call _fb_StrLen@8
add ebx, eax
add ebx, 9
mov dword ptr [ebp-60], ebx
push 0
push -1
push 10
push offset _Lt_0130
push -1
push -1
lea ebx, [ebp-48]
push ebx
push -1
push -1
push 32
mov ebx, dword ptr [_CTX]
imul ebx, 3
push ebx
call _fb_StrFill1@8
push eax
push -1
push 3
push offset _Lt_0125
push -1
push -1
push dword ptr [ebp+8]
push 4
push offset _Lt_012E
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+8]
call _fb_StrAssign@20
jmp .Lt_012C
.Lt_012D:
mov eax, dword ptr [ebp-12]
movzx ebx, byte ptr [eax]
cmp ebx, 114
jne .Lt_0138
push -1
push 2
push offset _Lt_011A
push -1
push -1
push offset _Lt_1ACA
push 2
push offset _Lt_0119
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea ebx, [ebp-96]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrCompare@16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-112], eax
jmp .Lt_1AC9
.Lt_0138:
mov dword ptr [ebp-112], 0
.Lt_1AC9:
cmp dword ptr [ebp-112], 0
je .Lt_013B
push 3
push offset _Lt_013C
call _fb_StrAllocTempDescZEx@8
push eax
push -1
push dword ptr [_Lt_1ACE]
lea eax, [_CTX+56]
push eax
call _fb_StrAssignMid@16
push 0
push -1
lea eax, [ebp-36]
push eax
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
push 0
push 2
push offset _Lt_0102
push -1
lea eax, [ebp-48]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [ebp-48]
push eax
call _fb_StrConcatAssign@20
push 0
push 3
push offset _Lt_0124
push -1
lea eax, [ebp-48]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push offset _Lt_1ACB
push -1
lea eax, [ebp-48]
push eax
call _fb_StrConcatAssign@20
push -1
lea eax, [_CTX+56]
push eax
call _fb_StrLen@8
push -1
push dword ptr [ebp+8]
mov ebx, eax
call _fb_StrLen@8
add ebx, eax
add ebx, 9
mov dword ptr [ebp-60], ebx
push 0
push -1
push 10
push offset _Lt_013D
push -1
push -1
lea ebx, [ebp-48]
push ebx
push -1
push -1
push 32
mov ebx, dword ptr [_CTX]
imul ebx, 3
push ebx
call _fb_StrFill1@8
push eax
push -1
push 3
push offset _Lt_0125
push -1
push -1
push dword ptr [ebp+8]
push 4
push offset _Lt_013C
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+8]
call _fb_StrAssign@20
jmp .Lt_013A
.Lt_013B:
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACA
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACB
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACC
call _fb_StrAssign@20
.Lt_013A:
.Lt_012C:
.Lt_011D:
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
mov dword ptr [_Lt_1ACD], 0
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_00EA
.Lt_0118:
.Lt_0117:
push -1
push offset _Lt_1ACA
push -1
lea eax, [ebp-24]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_0144
push -1
push offset _Lt_1ACB
push -1
lea eax, [ebp-12]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_0146
push 0
push -1
push -1
push dword ptr [ebp+8]
push 5
push offset _Lt_0147
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+8]
call _fb_StrAssign@20
jmp .Lt_0145
.Lt_0146:
push 1
push offset _Lt_0000
push -1
push offset _Lt_1ACB
call _fb_StrCompare@16
test eax, eax
jne .Lt_014A
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 41
push offset _Lt_014E
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_00EA
.Lt_014A:
.Lt_0149:
mov eax, dword ptr [_Lt_1ACB]
movzx ebx, byte ptr [eax]
cmp ebx, 114
jne .Lt_0152
push 1
push offset _Lt_0119
call _fb_StrAllocTempDescZEx@8
push eax
push offset _Lt_1ACA
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_0154
mov eax, dword ptr [ebp-12]
movzx ebx, byte ptr [eax]
cmp ebx, 120
jne .Lt_0157
push 6
push offset _Lt_0158
push -1
lea ebx, [ebp-36]
push ebx
call _fb_StrCompare@16
test eax, eax
jne .Lt_015A
push 0
push 5
push offset _Lt_015B
push -1
push offset _Lt_1ACC
call _fb_StrAssign@20
jmp .Lt_0159
.Lt_015A:
push 0
push 5
push offset _Lt_015C
push -1
push offset _Lt_1ACC
call _fb_StrAssign@20
.Lt_0159:
.Lt_0157:
.Lt_0156:
jmp .Lt_0153
.Lt_0154:
push 3
push offset _Lt_015D
call _fb_StrAllocTempDescZEx@8
push eax
push -1
push dword ptr [_Lt_1ACE]
lea eax, [_CTX+56]
push eax
call _fb_StrAssignMid@16
push 5
push offset _Lt_015C
push -1
lea eax, [ebp-36]
push eax
call _fb_StrCompare@16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
push 5
push offset _Lt_015B
push -1
lea ebx, [ebp-36]
push ebx
mov ebx, eax
call _fb_StrCompare@16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
je .Lt_015F
push 0
push -1
lea eax, [ebp-36]
push eax
push -1
push offset _Lt_1ACC
call _fb_StrAssign@20
jmp .Lt_015E
.Lt_015F:
push 6
push offset _Lt_00FC
push -1
lea eax, [ebp-36]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_0160
push 0
push -1
lea eax, [ebp-36]
push eax
push -1
push offset _Lt_1ACC
call _fb_StrAssign@20
.Lt_0160:
.Lt_015E:
.Lt_0153:
push -1
lea eax, [_CTX+56]
push eax
call _fb_StrLen@8
push -1
push dword ptr [ebp+8]
mov ebx, eax
call _fb_StrLen@8
add ebx, eax
add ebx, 9
mov dword ptr [ebp-60], ebx
push 0
push -1
push 10
push offset _Lt_0161
push -1
push -1
push offset _Lt_1ACB
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea ebx, [ebp-12]
push ebx
push -1
push 2
push offset _Lt_0102
push -1
push -1
push offset _Lt_1ACC
push -1
push -1
push 32
mov ebx, dword ptr [_CTX]
imul ebx, 3
push ebx
call _fb_StrFill1@8
push eax
push -1
push 3
push offset _Lt_0125
push -1
push -1
push dword ptr [ebp+8]
push 4
push offset _Lt_015D
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+8]
call _fb_StrAssign@20
push 0
push -1
push offset _Lt_1ACB
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0151
.Lt_0152:
mov eax, dword ptr [_Lt_1ACB]
movzx ebx, byte ptr [eax]
cmp ebx, 120
jne .Lt_016B
push 1
push offset _Lt_0119
call _fb_StrAllocTempDescZEx@8
push eax
push offset _Lt_1ACA
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_016D
push 6
push offset _Lt_0158
push -1
push offset _Lt_1ACC
call _fb_StrCompare@16
test eax, eax
jne .Lt_016F
push 0
push 5
push offset _Lt_015B
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
jmp .Lt_016E
.Lt_016F:
push 0
push 5
push offset _Lt_015C
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
.Lt_016E:
jmp .Lt_016C
.Lt_016D:
push 3
push offset _Lt_0170
call _fb_StrAllocTempDescZEx@8
push eax
push -1
push dword ptr [_Lt_1ACE]
lea eax, [_CTX+56]
push eax
call _fb_StrAssignMid@16
push 5
push offset _Lt_015C
push -1
push offset _Lt_1ACC
call _fb_StrCompare@16
test eax, eax
jne .Lt_0172
push 1
push offset _Lt_0119
call _fb_StrAllocTempDescZEx@8
push eax
lea eax, [ebp-24]
push eax
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_0174
push 0
push 6
push offset _Lt_0175
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
jmp .Lt_0173
.Lt_0174:
push 0
push 5
push offset _Lt_015C
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
.Lt_0173:
jmp .Lt_0171
.Lt_0172:
push 5
push offset _Lt_015B
push -1
push offset _Lt_1ACC
call _fb_StrCompare@16
test eax, eax
jne .Lt_0176
mov eax, dword ptr [ebp-12]
movzx ebx, byte ptr [eax]
cmp ebx, 114
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-12]
movzx esi, byte ptr [ebx]
cmp esi, 101
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0178
push 0
push 5
push offset _Lt_015B
push -1
lea ebx, [ebp-36]
push ebx
call _fb_StrAssign@20
jmp .Lt_0177
.Lt_0178:
push 0
push 6
push offset _Lt_0158
push -1
lea ebx, [ebp-36]
push ebx
call _fb_StrAssign@20
.Lt_0177:
jmp .Lt_0171
.Lt_0176:
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push 1
push offset _Lt_0000
push -1
lea ebx, [ebp-180]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-180]
push ebx
call _HWRITEASM64@8
lea ebx, [ebp-180]
push ebx
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
push -1
lea ebx, [ebp-36]
push ebx
push 49
push offset _Lt_017B
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea ebx, [ebp-192]
push ebx
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
.Lt_0171:
.Lt_016C:
push -1
lea eax, [_CTX+56]
push eax
call _fb_StrLen@8
push -1
push dword ptr [ebp+8]
mov ebx, eax
call _fb_StrLen@8
add ebx, eax
add ebx, 9
mov dword ptr [ebp-60], ebx
push 0
push -1
push 10
push offset _Lt_017F
push -1
push -1
push offset _Lt_1ACB
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea ebx, [ebp-12]
push ebx
push -1
push 2
push offset _Lt_0102
push -1
push -1
lea ebx, [ebp-36]
push ebx
push -1
push -1
push 32
mov ebx, dword ptr [_CTX]
imul ebx, 3
push ebx
call _fb_StrFill1@8
push eax
push -1
push 3
push offset _Lt_0125
push -1
push -1
push dword ptr [ebp+8]
push 4
push offset _Lt_0170
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+8]
call _fb_StrAssign@20
push 0
push -1
push offset _Lt_1ACB
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0151
.Lt_016B:
mov eax, dword ptr [ebp-12]
movzx ebx, byte ptr [eax]
cmp ebx, 114
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-12]
movzx esi, byte ptr [ebx]
cmp esi, 101
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
push -1
lea ebx, [ebp-24]
push ebx
push -1
push offset _Lt_1ACA
mov ebx, eax
call _fb_StrCompare@16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
push 1
push offset _Lt_0119
call _fb_StrAllocTempDescZEx@8
push eax
push offset _Lt_1ACA
push 1
call _fb_StrInstr@12
test eax, eax
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_0189
push 3
push offset _Lt_018A
call _fb_StrAllocTempDescZEx@8
push eax
push -1
push dword ptr [_Lt_1ACE]
lea eax, [_CTX+56]
push eax
call _fb_StrAssignMid@16
push -1
lea eax, [_CTX+56]
push eax
call _fb_StrLen@8
push -1
push dword ptr [ebp+8]
mov ebx, eax
call _fb_StrLen@8
add ebx, eax
add ebx, 9
mov dword ptr [ebp-60], ebx
push 0
push -1
push 10
push offset _Lt_018B
push -1
push -1
push offset _Lt_1ACB
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea ebx, [ebp-12]
push ebx
push -1
push 2
push offset _Lt_0102
push -1
push -1
push offset _Lt_1ACC
push -1
push -1
push 32
mov ebx, dword ptr [_CTX]
imul ebx, 3
push ebx
call _fb_StrFill1@8
push eax
push -1
push 3
push offset _Lt_0125
push -1
push -1
push dword ptr [ebp+8]
push 4
push offset _Lt_018A
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+8]
call _fb_StrAssign@20
push 0
push -1
push offset _Lt_1ACB
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_0189:
.Lt_0151:
.Lt_0145:
.Lt_0144:
.Lt_0143:
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
push offset _Lt_1ACA
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-24]
push eax
push -1
push offset _Lt_1ACB
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-36]
push eax
push -1
push offset _Lt_1ACC
call _fb_StrAssign@20
mov eax, dword ptr [ebp-60]
mov dword ptr [_Lt_1ACE], eax
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_00EA:
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 4

.section .bss
.balign 4
	.lcomm	_Lt_1ACA,12
.balign 4
	.lcomm	_Lt_1ACB,12
.balign 4
	.lcomm	_Lt_1ACC,12
.balign 4
	.lcomm	_Lt_1ACE,4
.balign 4
	.lcomm	_Lt_1ACD,4

.section .text
.balign 16
_REG_FREEABLE@4:
push ebp
mov ebp, esp
sub esp, 116
push ebx
.Lt_0195:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
push 0
push -1
push 3
push dword ptr [ebp+8]
call _fb_TRIM@4
push eax
call _fb_LEFT@8
push eax
push -1
lea eax, [ebp-20]
push eax
call _fb_StrAssign@20
push 4
push offset _Lt_0197
push -1
lea eax, [ebp-20]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_0199
push 4
push offset _Lt_0198
push -1
lea eax, [ebp-20]
push eax
call _fb_StrCompare@16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-24], eax
jmp .Lt_1AE1
.Lt_0199:
mov dword ptr [ebp-24], -1
.Lt_1AE1:
cmp dword ptr [ebp-24], 0
jne .Lt_019C
push 4
push offset _Lt_019B
push -1
lea eax, [ebp-20]
push eax
call _fb_StrCompare@16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-28], eax
jmp .Lt_1AE2
.Lt_019C:
mov dword ptr [ebp-28], -1
.Lt_1AE2:
cmp dword ptr [ebp-28], 0
jne .Lt_019F
push 4
push offset _Lt_019E
push -1
lea eax, [ebp-20]
push eax
call _fb_StrCompare@16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-32], eax
jmp .Lt_1AE3
.Lt_019F:
mov dword ptr [ebp-32], -1
.Lt_1AE3:
cmp dword ptr [ebp-32], 0
je .Lt_01A2
push 1
push offset _Lt_0119
call _fb_StrAllocTempDescZEx@8
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
test eax, eax
jne .Lt_01A4
lea eax, [ebp-20]
push eax
call _fb_StrDelete@4
jmp .Lt_0196
.Lt_01A4:
.Lt_01A3:
jmp .Lt_01A1
.Lt_01A2:
lea eax, [ebp-20]
push eax
push 79
push offset _Lt_01A5
call _fb_StrAllocTempDescZEx@8
push eax
push 1
call _fb_StrInstr@12
test eax, eax
jne .Lt_01A7
lea eax, [ebp-20]
push eax
call _fb_StrDelete@4
jmp .Lt_0196
.Lt_01A7:
.Lt_01A1:
mov dword ptr [ebp-36], 1
.Lt_01AB:
mov eax, dword ptr [ebp-36]
cmp dword ptr [_REGHANDLE+eax*4], -3
jne .Lt_01AD
jmp .Lt_01A9
.Lt_01AD:
mov dword ptr [ebp-4], -1
mov dword ptr [ebp-8], -1
push 2
push offset _Lt_0103
push 0
mov eax, dword ptr [ebp-36]
push dword ptr [_REGSTRQ+eax*4]
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call _fb_StrConcat@20
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_01B0
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-4], eax
jmp .Lt_01AF
.Lt_01B0:
push 2
push offset _Lt_0103
push 0
mov eax, dword ptr [ebp-36]
push dword ptr [_REGSTRD+eax*4]
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_01B1
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-4], eax
jmp .Lt_01AF
.Lt_01B1:
push 2
push offset _Lt_0103
push 0
mov eax, dword ptr [ebp-36]
push dword ptr [_REGSTRW+eax*4]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_01B3
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-4], eax
jmp .Lt_01AF
.Lt_01B3:
push 2
push offset _Lt_0103
push 0
mov eax, dword ptr [ebp-36]
push dword ptr [_REGSTRB+eax*4]
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_01B5
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-4], eax
.Lt_01B5:
.Lt_01AF:
cmp dword ptr [ebp-4], -1
je .Lt_01B8
push 4
push offset _Lt_01B9
push -1
lea eax, [ebp-20]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_01BB
push 4
push offset _Lt_01BA
push -1
lea eax, [ebp-20]
push eax
call _fb_StrCompare@16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-88], eax
jmp .Lt_1AE4
.Lt_01BB:
mov dword ptr [ebp-88], -1
.Lt_1AE4:
cmp dword ptr [ebp-88], 0
jne .Lt_01BE
push 4
push offset _Lt_01BD
push -1
lea eax, [ebp-20]
push eax
call _fb_StrCompare@16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-92], eax
jmp .Lt_1AE5
.Lt_01BE:
mov dword ptr [ebp-92], -1
.Lt_1AE5:
cmp dword ptr [ebp-92], 0
je .Lt_01C1
jmp .Lt_01A9
jmp .Lt_01C0
.Lt_01C1:
push 4
push offset _Lt_01C3
push -1
lea eax, [ebp-20]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_01C2
mov eax, dword ptr [ebp-4]
mov dword ptr [_CTX+116], eax
mov eax, dword ptr [ebp-4]
mov ebx, dword ptr [_REGHANDLE+eax*4]
mov dword ptr [_CTX+120], ebx
mov dword ptr [_CTX+124], 2
mov ebx, dword ptr [ebp-4]
mov dword ptr [_REGHANDLE+ebx*4], -2
jmp .Lt_01A9
jmp .Lt_01C0
.Lt_01C2:
push 0
mov ebx, dword ptr [ebp-36]
push dword ptr [_REGSTRQ+ebx*4]
push -1
push 3
push offset _Lt_0124
push 0
mov ebx, dword ptr [ebp-36]
push dword ptr [_REGSTRQ+ebx*4]
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea ebx, [ebp-104]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_01C7
mov eax, dword ptr [ebp-4]
mov dword ptr [_REGHANDLE+eax*4], -2
lea eax, [ebp-20]
push eax
call _fb_StrDelete@4
jmp .Lt_0196
.Lt_01C7:
.Lt_01C6:
.Lt_01C0:
.Lt_01B8:
.Lt_01B7:
cmp dword ptr [ebp-4], -1
jne .Lt_01C9
mov eax, dword ptr [ebp-36]
push dword ptr [_REGSTRQ+eax*4]
call _fb_StrAllocTempDescZ@4
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_01CB
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-8], eax
jmp .Lt_01CA
.Lt_01CB:
mov eax, dword ptr [ebp-36]
push dword ptr [_REGSTRD+eax*4]
call _fb_StrAllocTempDescZ@4
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_01CC
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-8], eax
jmp .Lt_01CA
.Lt_01CC:
mov eax, dword ptr [ebp-36]
push dword ptr [_REGSTRW+eax*4]
call _fb_StrAllocTempDescZ@4
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_01CD
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-8], eax
jmp .Lt_01CA
.Lt_01CD:
mov eax, dword ptr [ebp-36]
push dword ptr [_REGSTRB+eax*4]
call _fb_StrAllocTempDescZ@4
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_01CE
mov eax, dword ptr [ebp-36]
mov dword ptr [ebp-8], eax
.Lt_01CE:
.Lt_01CA:
.Lt_01C9:
.Lt_01C8:
cmp dword ptr [ebp-8], -1
je .Lt_01D0
mov eax, dword ptr [ebp-8]
mov dword ptr [_REGHANDLE+eax*4], -2
.Lt_01D0:
.Lt_01CF:
.Lt_01A9:
inc dword ptr [ebp-36]
.Lt_01A8:
cmp dword ptr [ebp-36], 15
jle .Lt_01AB
.Lt_01AA:
lea eax, [ebp-20]
push eax
call _fb_StrDelete@4
.Lt_0196:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
_PW2@4:
push ebp
mov ebp, esp
sub esp, 12
mov dword ptr [ebp-4], 0
.Lt_01D1:
fild dword ptr [ebp+8]
fldln2
fxch
fyl2x
fdiv qword ptr [_Lt_1AEB]
fstp qword ptr [ebp-12]
fld qword ptr [ebp-12]
sub esp, 4
fnstcw [esp]
mov eax, [esp]
or eax, 0b0000110000000000
push eax
fldcw [esp]
add esp, 4
fld st(0)
frndint
fsubp
fldcw [esp]
add esp, 4
fcomp qword ptr [_Lt_1AEC]
fnstsw ax
test ah, 0b01000000
jz .Lt_01D4
push dword ptr [ebp-8]
push dword ptr [ebp-12]
push dword ptr [_Lt_1AED+4]
push dword ptr [_Lt_1AED]
call _pow
add esp, 16
fistp dword ptr [ebp-4]
jmp .Lt_01D2
jmp .Lt_01D3
.Lt_01D4:
fld qword ptr [ebp-12]
sub esp, 4
fnstcw [esp]
mov eax, [esp]
and eax, 0b1111001111111111
or eax, 0b0000010000000000
push eax
fldcw [esp]
add esp, 4
frndint
fldcw [esp]
add esp, 4
fadd qword ptr [_Lt_1AEE]
sub esp,8
fstp qword ptr [esp]
push dword ptr [_Lt_1AED+4]
push dword ptr [_Lt_1AED]
call _pow
add esp, 16
fistp dword ptr [ebp-4]
.Lt_01D3:
.Lt_01D2:
mov eax, dword ptr [ebp-4]
mov esp, ebp
pop ebp
ret 4
.balign 16
_ASM_SECTION@4:
push ebp
mov ebp, esp
sub esp, 24
.Lt_01D5:
push -1
push dword ptr [ebp+8]
push -1
push offset _Lt_1AEF
call _fb_StrCompare@16
test eax, eax
je .Lt_01D8
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push -1
push -1
push dword ptr [ebp+8]
push 10
push offset _Lt_01D9
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
lea eax, [ebp-24]
push eax
call _HWRITEASM64@8
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
push 0
push -1
push dword ptr [ebp+8]
push -1
push offset _Lt_1AEF
call _fb_StrAssign@20
.Lt_01D8:
.Lt_01D7:
.Lt_01D6:
mov esp, ebp
pop ebp
ret 4

.section .bss
.balign 4
	.lcomm	_Lt_1AEF,12

.section .text
.balign 16
_EMITOP3_OP4@4:
push ebp
mov ebp, esp
.Lt_01DC:
push 4
push offset _Lt_01DE
push -1
push 3
push dword ptr [ebp+8]
call _fb_RIGHT@8
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_01E0
push 3
push dword ptr [ebp+8]
call _HWRITEASM64@8
jmp .Lt_01DF
.Lt_01E0:
push 0
push dword ptr [ebp+8]
call _HWRITEASM64@8
.Lt_01DF:
.Lt_01DD:
mov esp, ebp
pop ebp
ret 4
.balign 16
_HWRITEASM64@8:
push ebp
mov ebp, esp
sub esp, 108
push ebx
.Lt_01E6:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push -1
push dword ptr [ebp+8]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
cmp dword ptr [_CTX+216], 0
je .Lt_01E9
cmp dword ptr [_CTX+220], 1
jne .Lt_01EB
mov dword ptr [_CTX+220], 2
jmp .Lt_01EA
.Lt_01EB:
mov dword ptr [_CTX+216], 0
.Lt_01EA:
.Lt_01E9:
.Lt_01E8:
cmp dword ptr [_CTX+124], 0
je .Lt_01ED
dec dword ptr [_CTX+124]
cmp dword ptr [_CTX+124], 0
jne .Lt_01EF
mov dword ptr [_CTX+120], -2
.Lt_01EF:
.Lt_01EE:
.Lt_01ED:
.Lt_01EC:
cmp dword ptr [_ENV+148], -1
jne .Lt_01F1
cmp dword ptr [_CTXDBG+4], -1
je .Lt_01F3
lea eax, [_CTXDBG+20]
push eax
call _DBG_FILENAME@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
push 0
push dword ptr [_CTXDBG+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 2
push offset _Lt_01F5
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
mov ax, word ptr [_CTXDBG+4]
push eax
push 68
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
lea eax, [ebp-48]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
mov dword ptr [_CTXDBG+4], -1
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
.Lt_01F3:
.Lt_01F2:
.Lt_01F1:
.Lt_01F0:
mov eax, dword ptr [ebp+12]
cmp eax, 2
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
cmp ebx, 1
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_01FC
lea ebx, [ebp-12]
push ebx
call _REG_FREEABLE@4
.Lt_01FC:
mov ebx, dword ptr [ebp+12]
cmp ebx, 3
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
cmp eax, 1
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
je .Lt_01FE
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
lea eax, [ebp-48]
push eax
call _CHECK_OPTIM@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
jmp .Lt_01FD
.Lt_01FE:
lea eax, [ebp-12]
push eax
call _CHECK_OPTIM@4
.Lt_01FD:
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 0
push 3
push offset _Lt_0125
push -1
lea eax, [ebp-12]
push eax
call _fb_StrConcatAssign@20
mov eax, dword ptr [_CTX+4]
mov dword ptr [ebp-40], eax
jmp .Lt_0202
.Lt_0204:
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [_CTX+56]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_0201
.Lt_0205:
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [_CTX+44]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_0201
.Lt_0206:
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [_CTX+68]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_0201
.Lt_0207:
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [_CTX+8]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_0201
.Lt_0208:
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [_CTX+32]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_0201
.Lt_0209:
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [_CTX+8]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_0201
.Lt_0202:
cmp dword ptr [ebp-40], 5
ja .Lt_0209
mov eax, dword ptr [ebp-40]
jmp dword ptr [_.LT_020A+eax*4]
_.LT_020A:
.int .Lt_0207
.int .Lt_0209
.int .Lt_0208
.int .Lt_0205
.int .Lt_0204
.int .Lt_0206
.Lt_0201:
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_01E7:
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16
_HFLOATTOHEX_ASM64@16:
push ebp
mov ebp, esp
sub esp, 44
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
.Lt_020B:
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
fld qword ptr [ebp+8]
fstp dword ptr [ebp-28]
mov eax, dword ptr [ebp+16]
and eax, 480
je .Lt_020D
mov dword ptr [ebp-32], 24
jmp .Lt_1AF4
.Lt_020D:
mov eax, dword ptr [ebp+16]
and eax, 31
mov dword ptr [ebp-32], eax
.Lt_1AF4:
cmp dword ptr [ebp-32], 16
jne .Lt_0210
push 0
push 3
push offset _Lt_0211
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
push 0
push -1
push 16
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call _fb_HEXEx_l@12
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrConcatAssign@20
push 0
push 8
push offset _Lt_0212
push -1
lea eax, [ebp-24]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call _fb_DoubleToStr@8
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrConcatAssign@20
movsx eax, byte ptr [ebp+20]
test eax, eax
je .Lt_0214
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 7
push offset _Lt_0215
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrInit@20
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_020C
jmp .Lt_0213
.Lt_0214:
push 0
push -1
lea eax, [ebp-24]
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrInit@20
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_020C
.Lt_0213:
jmp .Lt_020F
.Lt_0210:
push 0
push 3
push offset _Lt_0211
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
push 0
push -1
push 8
push dword ptr [ebp-28]
call _fb_HEXEx_i@8
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrConcatAssign@20
push 0
push 8
push offset _Lt_0217
push -1
lea eax, [ebp-24]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call _fb_DoubleToStr@8
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrConcatAssign@20
movsx eax, byte ptr [ebp+20]
test eax, eax
je .Lt_0219
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 7
push offset _Lt_021A
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrInit@20
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_020C
jmp .Lt_0218
.Lt_0219:
push 0
push -1
lea eax, [ebp-24]
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrInit@20
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_020C
.Lt_0218:
.Lt_020F:
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
.Lt_020C:
lea eax, [ebp-12]
push eax
call _fb_StrAllocTempResult@4
mov esp, ebp
pop ebp
ret 16
.balign 16
_DBG_ADDSTR@8:
push ebp
mov ebp, esp
sub esp, 12
push ebx
mov dword ptr [ebp-4], 0
.Lt_021C:
cmp dword ptr [ebp+12], 0
jne .Lt_021F
mov dword ptr [ebp-8], 0
mov eax, dword ptr [_CTXDBG+36]
mov dword ptr [ebp-12], eax
jmp .Lt_0221
.Lt_0224:
push -1
mov eax, dword ptr [ebp-8]
sal eax, 4
add eax, dword ptr [_DBGSTR]
lea ebx, [eax+4]
push ebx
push -1
push dword ptr [ebp+8]
call _fb_StrCompare@16
test eax, eax
jne .Lt_0226
mov eax, dword ptr [ebp-8]
sal eax, 4
add eax, dword ptr [_DBGSTR]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-4], ebx
jmp .Lt_021D
.Lt_0226:
.Lt_0225:
.Lt_0222:
inc dword ptr [ebp-8]
.Lt_0221:
mov ebx, dword ptr [ebp-12]
cmp dword ptr [ebp-8], ebx
jle .Lt_0224
.Lt_0223:
.Lt_021F:
.Lt_021E:
inc dword ptr [_CTXDBG+36]
mov ebx, dword ptr [_CTXDBG+40]
cmp dword ptr [_CTXDBG+36], ebx
jle .Lt_0228
fild dword ptr [_CTXDBG+40]
fmul qword ptr [_Lt_1AF5]
fistp dword ptr [_CTXDBG+40]
push dword ptr [_CTXDBG+40]
push 0
push 1
push offset __ZN7TDBGSTRD1Ev
push offset __ZN7TDBGSTRC1Ev
push 16
push offset _DBGSTR
call _fb_ArrayRedimPresvObj
add esp, 28
test eax, eax
je .Lt_022A
push 0
push 0
push offset _Lt_022B
push 808
call _fb_ErrorThrowAt
add esp, 16
jmp eax
.Lt_022A:
.Lt_0228:
.Lt_0227:
push 0
push -1
push dword ptr [ebp+8]
push -1
mov eax, dword ptr [_CTXDBG+36]
sal eax, 4
add eax, dword ptr [_DBGSTR]
lea ebx, [eax+4]
push ebx
call _fb_StrAssign@20
mov ebx, dword ptr [_CTXDBG+36]
sal ebx, 4
add ebx, dword ptr [_DBGSTR]
mov eax, dword ptr [_CTXDBG+52]
mov dword ptr [ebx], eax
mov eax, dword ptr [_CTXDBG+52]
mov dword ptr [ebp-4], eax
push -1
push dword ptr [ebp+8]
call _fb_StrLen@8
add eax, dword ptr [_CTXDBG+52]
inc eax
mov dword ptr [_CTXDBG+52], eax
.Lt_021D:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16
_DBG_ADDSTAB@16:
push ebp
mov ebp, esp
sub esp, 12
push ebx
.Lt_022C:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
push 1
push offset _Lt_0000
push -1
push dword ptr [ebp+8]
call _fb_StrCompare@16
test eax, eax
je .Lt_022F
movzx eax, byte ptr [ebp+12]
cmp eax, 100
sete al
shr eax, 1
sbb eax, eax
movzx ebx, byte ptr [ebp+12]
cmp ebx, 132
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0231
push 0
push dword ptr [ebp+8]
call _DBG_ADDSTR@8
mov dword ptr [ebp-4], eax
jmp .Lt_0230
.Lt_0231:
push 1
push dword ptr [ebp+8]
call _DBG_ADDSTR@8
mov dword ptr [ebp-4], eax
.Lt_0230:
.Lt_022F:
.Lt_022E:
inc dword ptr [_CTXDBG+44]
mov eax, dword ptr [_CTXDBG+48]
cmp dword ptr [_CTXDBG+44], eax
jle .Lt_0233
fild dword ptr [_CTXDBG+48]
fmul qword ptr [_Lt_1AF6]
fistp dword ptr [_CTXDBG+48]
push dword ptr [_CTXDBG+48]
push 0
push 1
push offset __ZN8TDBGSTABD1Ev
push offset __ZN8TDBGSTABC1Ev
push 16
push offset _DBGSTAB
call _fb_ArrayRedimPresvObj
add esp, 28
test eax, eax
je .Lt_0235
push 0
push 0
push offset _Lt_022B
push 828
call _fb_ErrorThrowAt
add esp, 16
jmp eax
.Lt_0235:
.Lt_0233:
.Lt_0232:
mov eax, dword ptr [ebp-4]
mov dword ptr [ebp-12], eax
movzx ax, byte ptr [ebp+12]
mov word ptr [ebp-8], ax
mov ax, word ptr [ebp+16]
mov word ptr [ebp-6], ax
mov eax, dword ptr [ebp-12]
mov ebx, dword ptr [_CTXDBG+44]
sal ebx, 4
add ebx, dword ptr [_DBGSTAB]
mov dword ptr [ebx], eax
push 0
push -1
push dword ptr [ebp+20]
push -1
mov eax, dword ptr [_CTXDBG+44]
sal eax, 4
add eax, dword ptr [_DBGSTAB]
lea ebx, [eax+4]
push ebx
call _fb_StrAssign@20
.Lt_022D:
pop ebx
mov esp, ebp
pop ebp
ret 16
.balign 16
_DBG_EMITSTR@0:
push ebp
mov ebp, esp
sub esp, 56
.Lt_0236:
cmp dword ptr [_CTX+212], 2
jne .Lt_0239
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push 12
push offset _Lt_023A
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
lea eax, [ebp-24]
push eax
call _ASM_SECTION@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_0238
.Lt_0239:
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push 13
push offset _Lt_023C
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
lea eax, [ebp-24]
push eax
call _ASM_SECTION@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
.Lt_0238:
push 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 8
push offset _Lt_023E
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _HWRITEASM64@8
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-16], 0
mov eax, dword ptr [_CTXDBG+36]
mov dword ptr [ebp-20], eax
jmp .Lt_0241
.Lt_0244:
push 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
push 0
push -1
push 4
push offset _Lt_0248
push -1
push -1
push offset _Lt_0247
push offset _Lt_0246
mov eax, dword ptr [ebp-16]
sal eax, 4
add eax, dword ptr [_DBGSTR]
push dword ptr [eax+4]
call _HREPLACE@12
push eax
push 9
push offset _Lt_0245
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-56]
push eax
call _fb_StrAssign@20
lea eax, [ebp-56]
push eax
call _HWRITEASM64@8
lea eax, [ebp-56]
push eax
call _fb_StrDelete@4
.Lt_0242:
inc dword ptr [ebp-16]
.Lt_0241:
mov eax, dword ptr [ebp-20]
cmp dword ptr [ebp-16], eax
jle .Lt_0244
.Lt_0243:
.Lt_0237:
mov esp, ebp
pop ebp
ret
.balign 16
_DBG_EMITSTAB@0:
push ebp
mov ebp, esp
sub esp, 136
push ebx
.Lt_024C:
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
cmp dword ptr [_CTX+212], 2
jne .Lt_024F
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
push 0
push 12
push offset _Lt_0250
push -1
lea eax, [ebp-20]
push eax
call _fb_StrAssign@20
lea eax, [ebp-20]
push eax
call _ASM_SECTION@4
lea eax, [ebp-20]
push eax
call _fb_StrDelete@4
jmp .Lt_024E
.Lt_024F:
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
push 0
push 13
push offset _Lt_0252
push -1
lea eax, [ebp-20]
push eax
call _fb_StrAssign@20
lea eax, [ebp-20]
push eax
call _ASM_SECTION@4
lea eax, [ebp-20]
push eax
call _fb_StrDelete@4
.Lt_024E:
mov dword ptr [ebp-12], 0
mov eax, dword ptr [_CTXDBG+44]
mov dword ptr [ebp-16], eax
jmp .Lt_0255
.Lt_0258:
mov eax, dword ptr [ebp-12]
sal eax, 4
add eax, dword ptr [_DBGSTAB]
mov ecx, dword ptr [eax]
mov ebx, ecx
sar ebx, 31
mov dword ptr [ebp-8], ecx
mov dword ptr [ebp-4], ebx
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
push -1
push dword ptr [ebp-8]
call _fb_IntToStr@4
push eax
push -1
push 2
push offset _Lt_0102
push -1
push -1
movsx eax, word ptr [ebp-2]
push eax
call _fb_IntToStr@4
push eax
push -1
push 2
push offset _Lt_0102
push -1
push -1
movsx eax, word ptr [ebp-4]
push eax
call _fb_IntToStr@4
push eax
push -1
push 4
push offset _Lt_025A
push -1
push -1
mov eax, dword ptr [ebp-12]
sal eax, 4
add eax, dword ptr [_DBGSTAB]
push dword ptr [eax]
call _fb_HEX_i@4
push eax
push 9
push offset _Lt_0259
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp-12]
sal eax, 4
add eax, dword ptr [_DBGSTAB]
lea ecx, [eax+4]
push ecx
push 7
push offset _Lt_0215
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea ecx, [ebp-124]
push ecx
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-136]
push eax
call _fb_StrAssign@20
lea eax, [ebp-136]
push eax
call _HWRITEASM64@8
lea eax, [ebp-136]
push eax
call _fb_StrDelete@4
.Lt_0256:
inc dword ptr [ebp-12]
.Lt_0255:
mov eax, dword ptr [ebp-16]
cmp dword ptr [ebp-12], eax
jle .Lt_0258
.Lt_0257:
.Lt_024D:
pop ebx
mov esp, ebp
pop ebp
ret
.balign 16
_HDECLPOINTER_ASM64@4:
push ebp
mov ebp, esp
sub esp, 12
push ebx
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
.Lt_02B4:
push 0
push 1
push offset _Lt_0000
push -1
push offset _Lt_1AF9
call _fb_StrAssign@20
.Lt_02B6:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
and ebx, 480
test ebx, ebx
je .Lt_02B7
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx]
and eax, 31
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx]
and ecx, 480
add ecx, -32
or eax, ecx
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ecx]
and ebx, 261632
sar ebx, 1
and ebx, 261632
or eax, ebx
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx]
and ecx, 32505856
or eax, ecx
mov ecx, dword ptr [ebp+8]
mov dword ptr [ecx], eax
push 0
push -1
push dword ptr [_CTXDBG]
call _fb_UIntToStr@4
push eax
push -1
push offset _Lt_1AF9
call _fb_StrConcatAssign@20
push 0
push 3
push offset _Lt_02B8
push -1
push offset _Lt_1AF9
call _fb_StrConcatAssign@20
inc dword ptr [_CTXDBG]
jmp .Lt_02B6
.Lt_02B7:
push 0
push -1
push offset _Lt_1AF9
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_02B5:
lea eax, [ebp-12]
push eax
call _fb_StrAllocTempResult@4
pop ebx
mov esp, ebp
pop ebp
ret 4

.section .bss
.balign 4
	.lcomm	_Lt_1AF9,12

.section .text
.balign 16
_HDECLUDT_ASM64@8:
push ebp
mov ebp, esp
sub esp, 180
push ebx
.Lt_02B9:
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [_CTXDBG]
mov dword ptr [eax+136], ebx
inc dword ptr [_CTXDBG]
push 0
push 0
push dword ptr [ebp+8]
call _SYMBGETDBGNAME@4
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
push 0
push -1
push -1
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 3
push offset _Lt_02BC
push -1
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+136]
call _fb_IntToStr@4
push eax
push 4
push offset _Lt_02BB
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
push dword ptr [ebp+8]
call _SYMBUDTGETFIRSTFIELD@4
mov dword ptr [ebp-4], eax
.Lt_02C1:
cmp dword ptr [ebp-4], 0
je .Lt_02C2
mov eax, dword ptr [ebp-4]
mov ebx, dword ptr [eax+4]
and ebx, 4
test ebx, ebx
jne .Lt_02C4
push 0
push -1
push -1
push -1
push dword ptr [ebp+12]
push dword ptr [ebp-4]
call _HGETDATATYPE_ASM64@8
push eax
push -1
push 2
push offset _Lt_00EF
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [eax+16]
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
push 0
push -1
push -1
push -1
mov eax, dword ptr [ebp-4]
mov ecx, dword ptr [eax+48]
mov ebx, dword ptr [eax+52]
shld ebx, ecx, 3
shl ecx, 3
mov dword ptr [ebp-180], ecx
mov dword ptr [ebp-176], ebx
mov ecx, dword ptr [ebp-4]
cmp dword ptr [ecx+116], 0
jle .Lt_02C8
mov ecx, dword ptr [ebp-4]
mov ebx, dword ptr [ecx+112]
mov dword ptr [ebp-116], ebx
jmp .Lt_1AFA
.Lt_02C8:
mov dword ptr [ebp-116], 0
.Lt_1AFA:
mov ecx, dword ptr [ebp-116]
mov ebx, ecx
sar ebx, 31
add ecx, dword ptr [ebp-180]
adc ebx, dword ptr [ebp-176]
push ebx
push ecx
call _fb_LongintToStr@8
push eax
push 2
push offset _Lt_0103
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
push 0
push -1
push -1
push -1
mov eax, dword ptr [ebp-4]
cmp dword ptr [eax+116], 0
jle .Lt_02CC
mov eax, dword ptr [ebp-4]
mov ebx, dword ptr [eax+116]
mov ecx, ebx
sar ecx, 31
mov dword ptr [ebp-148], ebx
mov dword ptr [ebp-144], ecx
jmp .Lt_1AFB
.Lt_02CC:
push dword ptr [ebp-4]
call _SYMBGETREALSIZE@4
shld edx, eax, 3
shl eax, 3
mov dword ptr [ebp-148], eax
mov dword ptr [ebp-144], edx
.Lt_1AFB:
push dword ptr [ebp-144]
push dword ptr [ebp-148]
call _fb_LongintToStr@8
push eax
push 2
push offset _Lt_0103
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
push 0
push 2
push offset _Lt_02D0
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
.Lt_02C4:
.Lt_02C3:
push dword ptr [ebp-4]
call _SYMBUDTGETNEXTFIELD@4
mov dword ptr [ebp-4], eax
jmp .Lt_02C1
.Lt_02C2:
push 0
push 2
push offset _Lt_02D0
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 2
push offset _Lt_0006
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
push 0
push 128
lea eax, [ebp-16]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
lea eax, [ebp-16]
push eax
call _fb_StrDelete@4
.Lt_02BA:
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16
_HDECLENUM_ASM64@4:
push ebp
mov ebp, esp
sub esp, 112
push ebx
.Lt_02D2:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [_CTXDBG]
mov dword ptr [eax+100], ebx
inc dword ptr [_CTXDBG]
push 0
push 0
push dword ptr [ebp+8]
call _SYMBGETDBGNAME@4
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
push 0
push -1
push -1
push 3
push offset _Lt_02D5
push -1
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+100]
call _fb_IntToStr@4
push eax
push 3
push offset _Lt_02D4
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
push dword ptr [ebp+8]
call _SYMBGETENUMFIRSTELM@4
mov dword ptr [ebp-4], eax
.Lt_02D9:
cmp dword ptr [ebp-4], 0
je .Lt_02DA
push 0
push -1
push -1
push 2
push offset _Lt_0103
push -1
push -1
mov eax, dword ptr [ebp-4]
push dword ptr [eax+60]
push dword ptr [eax+56]
call _fb_LongintToStr@8
push eax
push -1
push 2
push offset _Lt_00EF
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [eax+16]
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
push dword ptr [ebp-4]
call _SYMBGETENUMNEXTELM@4
mov dword ptr [ebp-4], eax
jmp .Lt_02D9
.Lt_02DA:
push 0
push 2
push offset _Lt_02D0
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 2
push offset _Lt_0006
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
push 0
push 128
lea eax, [ebp-16]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
lea eax, [ebp-16]
push eax
call _fb_StrDelete@4
.Lt_02D3:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
_HGETDATATYPE_ASM64@8:
push ebp
mov ebp, esp
sub esp, 92
push ebx
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
.Lt_02E0:
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
cmp dword ptr [ebp+8], 0
jne .Lt_02E3
push 0
push -1
push dword ptr [_REMAPTB]
call _fb_IntToStr@4
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrInit@20
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
jmp .Lt_02E1
.Lt_02E3:
.Lt_02E2:
mov dword ptr [ebp-20], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 16384
test ebx, ebx
je .Lt_02E5
mov dword ptr [ebp-16], 20
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+92]
mov dword ptr [ebp-24], eax
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+64]
mov dword ptr [ebp-20], ebx
jmp .Lt_02E4
.Lt_02E5:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+28]
and eax, 511
mov dword ptr [ebp-16], eax
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov dword ptr [ebp-24], ebx
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx]
cmp eax, 1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx]
cmp ecx, 12
sete cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
je .Lt_02E7
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ecx+4]
and eax, 262144
test eax, eax
je .Lt_02E9
mov eax, dword ptr [ebp-16]
and eax, 31
mov ecx, dword ptr [ebp-16]
and ecx, 480
add ecx, 32
or eax, ecx
mov ecx, dword ptr [ebp-16]
and ecx, 261632
sal ecx, 1
or eax, ecx
mov ecx, dword ptr [ebp-16]
and ecx, 32505856
or eax, ecx
mov dword ptr [ebp-16], eax
.Lt_02E9:
.Lt_02E8:
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+64], 0
jle .Lt_02EB
push 0
push -1
push dword ptr [_CTXDBG]
call _fb_UIntToStr@4
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrConcatAssign@20
push 0
push 2
push offset _Lt_02EC
push -1
lea eax, [ebp-36]
push eax
call _fb_StrConcatAssign@20
inc dword ptr [_CTXDBG]
cmp dword ptr [ebp+12], 0
jle .Lt_02EE
push 0
push 5
push offset _Lt_02EF
push -1
lea eax, [ebp-36]
push eax
call _fb_StrConcatAssign@20
push 0
push 3
push offset _Lt_02F0
push -1
lea eax, [ebp-36]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
mov eax, dword ptr [ebp+12]
dec eax
push eax
call _fb_IntToStr@4
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrConcatAssign@20
push 0
push 2
push offset _Lt_02D0
push -1
lea eax, [ebp-36]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_02ED
.Lt_02EE:
mov dword ptr [ebp-40], 0
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+64]
dec ecx
mov dword ptr [ebp-44], ecx
jmp .Lt_02F2
.Lt_02F5:
push 0
push 5
push offset _Lt_02EF
push -1
lea ecx, [ebp-36]
push ecx
call _fb_StrConcatAssign@20
push 0
push -1
push -1
push 2
push offset _Lt_02D0
push -1
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ebp-40]
sal eax, 4
mov ebx, dword ptr [ecx+68]
add ebx, eax
push dword ptr [ebx+4]
push dword ptr [ebx]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
push 0
push -1
push -1
push 2
push offset _Lt_02D0
push -1
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp-40]
sal ebx, 4
mov ecx, dword ptr [eax+68]
add ecx, ebx
push dword ptr [ecx+12]
push dword ptr [ecx+8]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
.Lt_02F3:
inc dword ptr [ebp-40]
.Lt_02F2:
mov eax, dword ptr [ebp-44]
cmp dword ptr [ebp-40], eax
jle .Lt_02F5
.Lt_02F4:
.Lt_02ED:
.Lt_02EB:
.Lt_02EA:
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
and ecx, 8192
test ecx, ecx
je .Lt_02FB
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ecx+96]
mov ecx, dword ptr [eax+64]
mov dword ptr [ebp-20], ecx
.Lt_02FB:
.Lt_02FA:
.Lt_02E7:
.Lt_02E6:
.Lt_02E4:
cmp dword ptr [ebp-20], 0
jge .Lt_02FD
mov dword ptr [ebp-20], 1
.Lt_02FD:
.Lt_02FC:
mov ecx, dword ptr [ebp-16]
and ecx, 480
test ecx, ecx
je .Lt_02FF
push 0
push -1
lea ecx, [ebp-16]
push ecx
call _HDECLPOINTER_ASM64@4
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrConcatAssign@20
.Lt_02FF:
.Lt_02FE:
and dword ptr [ebp-16], -513
mov eax, dword ptr [ebp-16]
mov dword ptr [ebp-40], eax
jmp .Lt_0301
.Lt_0303:
cmp dword ptr [ebp-24], 0
je .Lt_0305
mov eax, dword ptr [ebp-24]
cmp dword ptr [eax+136], -1
jne .Lt_0307
push dword ptr [ebp-20]
push dword ptr [ebp-24]
call _HDECLUDT_ASM64@8
.Lt_0307:
push 0
push -1
push -1
mov eax, dword ptr [ebp-24]
push dword ptr [eax+136]
call _fb_IntToStr@4
push eax
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
jmp .Lt_0304
.Lt_0305:
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+136], -1
jne .Lt_030A
push dword ptr [ebp-20]
push dword ptr [ebp+8]
call _HDECLUDT_ASM64@8
.Lt_030A:
push 0
push -1
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+136]
call _fb_IntToStr@4
push eax
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
.Lt_0304:
jmp .Lt_0300
.Lt_030C:
mov eax, dword ptr [ebp-24]
cmp dword ptr [eax+100], -1
jne .Lt_030E
push dword ptr [ebp-24]
call _HDECLENUM_ASM64@4
.Lt_030E:
.Lt_030D:
push 0
push -1
push -1
mov eax, dword ptr [ebp-24]
push dword ptr [eax+100]
call _fb_IntToStr@4
push eax
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
jmp .Lt_0300
.Lt_0310:
push 0
push -1
push dword ptr [_CTXDBG]
call _fb_UIntToStr@4
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrConcatAssign@20
push 0
push 3
push offset _Lt_0311
push -1
lea eax, [ebp-36]
push eax
call _fb_StrConcatAssign@20
inc dword ptr [_CTXDBG]
push 0
push -1
push 0
push dword ptr [ebp-24]
call _HGETDATATYPE_ASM64@8
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_0300
.Lt_0312:
push 0
push -1
push dword ptr [_REMAPTB]
call _fb_IntToStr@4
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_0300
.Lt_0313:
push 0
push -1
mov eax, dword ptr [ebp-16]
push dword ptr [_REMAPTB+eax*4]
call _fb_IntToStr@4
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_0300
.Lt_0301:
mov eax, dword ptr [ebp-40]
add eax, 4294967286
cmp eax, 13
ja .Lt_0313
mov eax, dword ptr [ebp-40]
jmp dword ptr [_.LT_0314+eax*4-40]
_.LT_0314:
.int .Lt_030C
.int .Lt_0313
.int .Lt_0313
.int .Lt_0313
.int .Lt_0313
.int .Lt_0313
.int .Lt_0313
.int .Lt_0313
.int .Lt_0313
.int .Lt_0313
.int .Lt_0303
.int .Lt_0313
.int .Lt_0310
.int .Lt_0312
.Lt_0300:
push 0
push -1
lea eax, [ebp-36]
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
.Lt_02E1:
lea eax, [ebp-12]
push eax
call _fb_StrAllocTempResult@4
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16
__EMITDBG@16:
push ebp
mov ebp, esp
sub esp, 72
.Lt_0315:
cmp dword ptr [ebp+8], 113
jne .Lt_0318
push 0
push 0
push dword ptr [ebp+20]
push -1
lea eax, [_CTXDBG+20]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+16]
mov dword ptr [_CTXDBG+4], eax
jmp .Lt_0317
.Lt_0318:
cmp dword ptr [ebp+8], 114
jne .Lt_031A
jmp .Lt_0319
.Lt_031A:
cmp dword ptr [ebp+8], 115
jne .Lt_031B
jmp .Lt_0319
.Lt_031B:
cmp dword ptr [ebp+8], 116
jne .Lt_031C
jmp .Lt_0319
.Lt_031C:
push 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _HWRITEASM64@8
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push -1
push 4
push offset _Lt_0321
push -1
push 28
push offset _Lt_0320
push -1
push -1
push dword ptr [ebp+8]
call _fb_IntToStr@4
push eax
push 44
push offset _Lt_031F
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
lea eax, [ebp-60]
push eax
call _HWRITEASM64@8
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
.Lt_0319:
.Lt_0317:
.Lt_0316:
mov esp, ebp
pop ebp
ret 16
.balign 16
_REG_MARK@4:
push ebp
mov ebp, esp
sub esp, 8
push ebx
.Lt_0327:
mov byte ptr [ebp-4], 0
mov dword ptr [ebp-8], 1
.Lt_032C:
mov eax, dword ptr [ebp-8]
mov ebx, dword ptr [_REGHANDLE+eax*4]
cmp ebx, -2
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp-8]
mov ecx, dword ptr [_REGHANDLE+eax*4]
cmp ecx, -3
setne cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
je .Lt_032E
mov ecx, dword ptr [ebp-8]
mov dword ptr [_REGROOM+ecx*8], -2
mov byte ptr [ebp-4], 1
.Lt_032E:
.Lt_032D:
.Lt_032A:
inc dword ptr [ebp-8]
.Lt_0329:
cmp dword ptr [ebp-8], 15
jle .Lt_032C
.Lt_032B:
cmp byte ptr [ebp-4], 0
je .Lt_0330
mov ecx, dword ptr [ebp+8]
mov dword ptr [_CTX+200], ecx
.Lt_0330:
.Lt_0328:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
_ASM64_SPILLREG@4:
push ebp
mov ebp, esp
sub esp, 44
push ebx
mov dword ptr [ebp-4], 0
.Lt_0331:
cmp dword ptr [_CTX+196], 0
jle .Lt_0334
lea eax, [_CTX+140]
push eax
call _FLISTGETHEAD@4
mov dword ptr [ebp-8], eax
.Lt_0335:
cmp dword ptr [ebp-8], 0
je .Lt_0336
mov eax, dword ptr [ebp-8]
cmp dword ptr [eax+4], -2
jne .Lt_0338
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp-8]
mov ecx, dword ptr [_REGHANDLE+eax*4]
mov dword ptr [ebx+4], ecx
mov ecx, dword ptr [ebp-8]
mov dword ptr [ebp-4], ecx
jmp .Lt_0332
.Lt_0338:
.Lt_0337:
push dword ptr [ebp-8]
call _FLISTGETNEXT@4
mov dword ptr [ebp-8], eax
jmp .Lt_0335
.Lt_0336:
.Lt_0334:
.Lt_0333:
add dword ptr [_CTX+96], 8
cmp dword ptr [_CTX+104], 0
je .Lt_033A
mov eax, dword ptr [_CTX+104]
cmp dword ptr [_CTX+96], eax
jne .Lt_033C
push 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-20]
push eax
call _fb_StrAssign@20
lea eax, [ebp-20]
push eax
call _HWRITEASM64@8
lea eax, [ebp-20]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
push 0
push 53
push offset _Lt_033F
push -1
lea eax, [ebp-32]
push eax
call _fb_StrAssign@20
lea eax, [ebp-32]
push eax
call _HWRITEASM64@8
lea eax, [ebp-32]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
lea eax, [ebp-44]
push eax
call _HWRITEASM64@8
lea eax, [ebp-44]
push eax
call _fb_StrDelete@4
.Lt_033C:
.Lt_033B:
.Lt_033A:
.Lt_0339:
lea eax, [_CTX+140]
push eax
call _FLISTNEWITEM@4
mov dword ptr [ebp-8], eax
inc dword ptr [_CTX+196]
mov eax, dword ptr [ebp-8]
mov ecx, dword ptr [_CTX+196]
mov dword ptr [eax], ecx
mov ecx, dword ptr [_CTX+96]
neg ecx
mov eax, dword ptr [ebp-8]
mov dword ptr [eax+8], ecx
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ebp-8]
mov ebx, dword ptr [_REGHANDLE+ecx*4]
mov dword ptr [eax+4], ebx
mov ebx, dword ptr [ebp-8]
mov dword ptr [ebp-4], ebx
.Lt_0332:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
_REG_SPILLING@4:
push ebp
mov ebp, esp
sub esp, 56
push ebx
.Lt_0342:
push dword ptr [ebp+8]
call _ASM64_SPILLREG@4
mov dword ptr [ebp-4], eax
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov eax, dword ptr [ebp-4]
push dword ptr [eax+8]
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp+8]
mov dword ptr [_REGHANDLE+eax*4], -2
mov eax, dword ptr [ebp+8]
cmp dword ptr [_REGROOM+eax*8], -2
jne .Lt_034B
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp-4]
mov dword ptr [_REGROOM+eax*8+4], ebx
mov ebx, dword ptr [ebp+8]
mov dword ptr [_REGROOM+ebx*8], -3
.Lt_034B:
.Lt_034A:
cmp dword ptr [_CTX+200], 0
je .Lt_034C
mov dword ptr [ebp-56], -1
jmp .Lt_1B01
.Lt_034C:
mov dword ptr [ebp-56], 0
.Lt_1B01:
mov ebx, dword ptr [ebp-4]
mov eax, dword ptr [ebp-56]
mov dword ptr [ebx+12], eax
.Lt_0343:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
_REG_SAVE@0:
push ebp
mov ebp, esp
sub esp, 8
push ebx
.Lt_034E:
mov dword ptr [ebp-4], 1
push 1
push offset _LISTREG
call _fb_ArrayUBound@8
mov dword ptr [ebp-8], eax
jmp .Lt_0351
.Lt_0354:
mov eax, dword ptr [ebp-4]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
cmp dword ptr [_REGHANDLE+ebx*4], -2
je .Lt_0356
mov ebx, dword ptr [ebp-4]
sal ebx, 2
add ebx, dword ptr [_LISTREG]
push dword ptr [ebx]
call _REG_SPILLING@4
.Lt_0356:
.Lt_0355:
.Lt_0352:
inc dword ptr [ebp-4]
.Lt_0351:
mov ebx, dword ptr [ebp-8]
cmp dword ptr [ebp-4], ebx
jle .Lt_0354
.Lt_0353:
.Lt_034F:
pop ebx
mov esp, ebp
pop ebp
ret
.balign 16
_REG_ALLOWED@4:
push ebp
mov ebp, esp
sub esp, 8
push ebx
.Lt_0357:
movzx eax, byte ptr [ebp+8]
neg eax
test eax, eax
jne .Lt_035A
mov dword ptr [ebp-4], 1
push 1
push offset _LISTREG
call _fb_ArrayUBound@8
add eax, -2
mov dword ptr [ebp-8], eax
jmp .Lt_035C
.Lt_035F:
mov eax, dword ptr [ebp-4]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
cmp dword ptr [_REGHANDLE+ebx*4], -2
jne .Lt_0361
mov ebx, dword ptr [ebp-4]
sal ebx, 2
add ebx, dword ptr [_LISTREG]
mov eax, dword ptr [ebx]
mov dword ptr [_REGHANDLE+eax*4], -4
.Lt_0361:
.Lt_0360:
.Lt_035D:
inc dword ptr [ebp-4]
.Lt_035C:
mov eax, dword ptr [ebp-8]
cmp dword ptr [ebp-4], eax
jle .Lt_035F
.Lt_035E:
jmp .Lt_0359
.Lt_035A:
mov dword ptr [ebp-4], 1
push 1
push offset _LISTREG
call _fb_ArrayUBound@8
add eax, -2
mov dword ptr [ebp-8], eax
jmp .Lt_0363
.Lt_0366:
mov eax, dword ptr [ebp-4]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
cmp dword ptr [_REGHANDLE+ebx*4], -4
jne .Lt_0368
mov ebx, dword ptr [ebp-4]
sal ebx, 2
add ebx, dword ptr [_LISTREG]
mov eax, dword ptr [ebx]
mov dword ptr [_REGHANDLE+eax*4], -2
.Lt_0368:
.Lt_0367:
.Lt_0364:
inc dword ptr [ebp-4]
.Lt_0363:
mov eax, dword ptr [ebp-8]
cmp dword ptr [ebp-4], eax
jle .Lt_0366
.Lt_0365:
.Lt_0359:
.Lt_0358:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
_REG_FINDFREE@8:
push ebp
mov ebp, esp
sub esp, 16
push ebx
mov dword ptr [ebp-4], 0
.Lt_0369:
mov dword ptr [ebp-8], -1
mov dword ptr [ebp-12], 0
cmp byte ptr [_CTX+137], 0
je .Lt_036C
push 0
call _REG_ALLOWED@4
.Lt_036C:
mov dword ptr [ebp-16], 0
.Lt_0370:
mov eax, dword ptr [ebp-16]
movsx ebx, byte ptr [_REG_PRIO+eax]
cmp dword ptr [_REGHANDLE+ebx*4], -2
jne .Lt_0372
mov ebx, dword ptr [ebp-16]
movsx eax, byte ptr [_REG_PRIO+ebx]
mov dword ptr [ebp-8], eax
jmp .Lt_036F
.Lt_0372:
.Lt_036E:
inc dword ptr [ebp-16]
.Lt_036D:
cmp dword ptr [ebp-16], 12
jle .Lt_0370
.Lt_036F:
cmp dword ptr [ebp-8], -1
jne .Lt_0374
cmp dword ptr [ebp+12], -1
jne .Lt_0376
inc dword ptr [_Lt_1B02]
cmp dword ptr [_Lt_1B02], 6
jne .Lt_0378
mov dword ptr [_Lt_1B02], 0
.Lt_0378:
.Lt_0379:
mov eax, dword ptr [_Lt_1B02]
cmp dword ptr [_REGHANDLE+eax*4], -4
jne .Lt_037A
inc dword ptr [_Lt_1B02]
cmp dword ptr [_Lt_1B02], 6
jne .Lt_037C
mov dword ptr [_Lt_1B02], 0
.Lt_037C:
jmp .Lt_0379
.Lt_037A:
mov eax, dword ptr [_Lt_1B02]
movsx ebx, byte ptr [_REG_PRIO+eax]
mov dword ptr [ebp-8], ebx
jmp .Lt_0375
.Lt_0376:
mov ebx, dword ptr [ebp+12]
mov dword ptr [ebp-8], ebx
.Lt_0375:
push dword ptr [ebp-8]
call _REG_SPILLING@4
.Lt_0374:
.Lt_0373:
mov ebx, dword ptr [ebp-8]
cmp dword ptr [ebp+12], ebx
je .Lt_037E
mov ebx, dword ptr [ebp-8]
mov eax, dword ptr [ebp+8]
mov dword ptr [_REGHANDLE+ebx*4], eax
mov eax, 1
mov cl, byte ptr [ebp-8]
sal eax, cl
or dword ptr [_CTX+112], eax
.Lt_037E:
.Lt_037D:
cmp byte ptr [_CTX+137], 0
je .Lt_0380
push 1
call _REG_ALLOWED@4
.Lt_0380:
mov eax, dword ptr [ebp-8]
mov dword ptr [ebp-4], eax
.Lt_036A:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret 8

.section .data
.balign 4
_Lt_1B02:
.long -1

.section .text
.balign 16
_REG_CALLPTR@8:
push ebp
mov ebp, esp
sub esp, 88
push ebx
.Lt_0381:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-12], 1
push 1
push offset _LISTREG
call _fb_ArrayUBound@8
add eax, -2
mov dword ptr [ebp-16], eax
jmp .Lt_0384
.Lt_0387:
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
call _fb_StrAllocTempDescZ@4
push eax
push dword ptr [ebp+8]
push 1
call _fb_StrInstr@12
mov dword ptr [ebp-8], eax
cmp dword ptr [ebp-8], 0
jne .Lt_0389
jmp .Lt_0385
.Lt_0389:
push -1
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGHANDLE+ebx*4]
call _REG_FINDFREE@8
mov dword ptr [ebp-4], eax
push 3
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov ebx, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea ebx, [ebp-28]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _HWRITEASM64@8
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
mov dword ptr [_REGHANDLE+ebx*4], -4
push 0
mov ebx, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+ebx*4]
call _fb_StrLen@8
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [_LISTREG]
mov ecx, dword ptr [ebx]
push dword ptr [_REGSTRQ+ecx*4]
mov ebx, eax
call _fb_StrLen@8
cmp ebx, eax
jne .Lt_0390
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
call _fb_StrAllocTempDescZ@4
push eax
push -1
push dword ptr [ebp-8]
push dword ptr [ebp+8]
call _fb_StrAssignMid@16
jmp .Lt_038F
.Lt_0390:
push 0
push -1
push -1
push -1
mov eax, dword ptr [ebp-8]
add eax, 2
push eax
push dword ptr [ebp+8]
call _fb_StrMid@12
push eax
push -1
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
push -1
mov eax, dword ptr [ebp-8]
dec eax
push eax
push dword ptr [ebp+8]
call _fb_LEFT@8
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+8]
call _fb_StrAssign@20
.Lt_038F:
.Lt_0385:
inc dword ptr [ebp-12]
.Lt_0384:
mov eax, dword ptr [ebp-16]
cmp dword ptr [ebp-12], eax
jle .Lt_0387
.Lt_0386:
push 1
push offset _Lt_0000
push -1
push dword ptr [ebp+12]
call _fb_StrCompare@16
test eax, eax
je .Lt_0394
mov dword ptr [ebp-12], 1
push 1
push offset _LISTREG
call _fb_ArrayUBound@8
add eax, -2
mov dword ptr [ebp-16], eax
jmp .Lt_0396
.Lt_0399:
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
call _fb_StrAllocTempDescZ@4
push eax
push dword ptr [ebp+12]
push 1
call _fb_StrInstr@12
mov dword ptr [ebp-8], eax
cmp dword ptr [ebp-8], 0
jne .Lt_039B
jmp .Lt_0397
.Lt_039B:
push -1
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGHANDLE+ebx*4]
call _REG_FINDFREE@8
mov dword ptr [ebp-4], eax
push 3
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov ebx, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea ebx, [ebp-28]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _HWRITEASM64@8
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
mov dword ptr [_REGHANDLE+ebx*4], -4
push 0
mov ebx, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+ebx*4]
call _fb_StrLen@8
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [_LISTREG]
mov ecx, dword ptr [ebx]
push dword ptr [_REGSTRQ+ecx*4]
mov ebx, eax
call _fb_StrLen@8
cmp ebx, eax
jne .Lt_03A1
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
call _fb_StrAllocTempDescZ@4
push eax
push -1
push dword ptr [ebp-8]
push dword ptr [ebp+12]
call _fb_StrAssignMid@16
jmp .Lt_03A0
.Lt_03A1:
push 0
push -1
push -1
push -1
mov eax, dword ptr [ebp-8]
add eax, 2
push eax
push dword ptr [ebp+12]
call _fb_StrMid@12
push eax
push -1
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
push -1
mov eax, dword ptr [ebp-8]
dec eax
push eax
push dword ptr [ebp+12]
call _fb_LEFT@8
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+12]
call _fb_StrAssign@20
.Lt_03A0:
.Lt_0397:
inc dword ptr [ebp-12]
.Lt_0396:
mov eax, dword ptr [ebp-16]
cmp dword ptr [ebp-12], eax
jle .Lt_0399
.Lt_0398:
.Lt_0394:
.Lt_0393:
.Lt_0382:
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16
_REG_BRANCH@4:
push ebp
mov ebp, esp
sub esp, 92
push ebx
.Lt_03A4:
mov dword ptr [ebp-4], 0
mov eax, dword ptr [_CTX+200]
cmp dword ptr [ebp+8], eax
jne .Lt_03A7
push 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
push 0
push -1
push 2
push offset _Lt_00EF
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-28]
push eax
call _fb_StrAssign@20
lea eax, [ebp-28]
push eax
call _HWRITEASM64@8
lea eax, [ebp-28]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-32], 1
.Lt_03AD:
mov eax, dword ptr [ebp-32]
cmp dword ptr [_REGROOM+eax*8], -3
jne .Lt_03AF
push 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
push 0
push -1
push 0
mov eax, dword ptr [ebp-32]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [_REGROOM+eax*8+4]
push dword ptr [ebx+8]
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-80]
push eax
call _fb_StrAssign@20
lea eax, [ebp-80]
push eax
call _HWRITEASM64@8
lea eax, [ebp-80]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp-32]
mov dword ptr [_REGHANDLE+eax*4], -2
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [_REGROOM+eax*8+4]
mov dword ptr [ebx+12], 0
.Lt_03AF:
.Lt_03AE:
mov ebx, dword ptr [ebp-32]
mov dword ptr [_REGROOM+ebx*8], -1
mov ebx, dword ptr [ebp-32]
mov dword ptr [_REGROOM+ebx*8+4], 0
.Lt_03AB:
inc dword ptr [ebp-32]
.Lt_03AA:
cmp dword ptr [ebp-32], 15
jle .Lt_03AD
.Lt_03AC:
cmp dword ptr [_CTX+204], 0
jne .Lt_03B5
mov dword ptr [_CTX+200], 0
.Lt_03B5:
.Lt_03B4:
jmp .Lt_03A6
.Lt_03A7:
mov ebx, dword ptr [_CTX+204]
cmp dword ptr [ebp+8], ebx
jne .Lt_03B6
cmp dword ptr [_CTX+196], 0
jle .Lt_03B8
lea ebx, [_CTX+140]
push ebx
call _FLISTGETHEAD@4
mov dword ptr [ebp-32], eax
.Lt_03B9:
cmp dword ptr [ebp-32], 0
je .Lt_03BA
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+12], 0
je .Lt_03BC
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+4]
call _REG_FINDFREE@8
mov dword ptr [ebp-4], eax
mov eax, dword ptr [ebp-32]
mov dword ptr [eax+4], -2
push 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+8]
call _fb_IntToStr@4
push eax
push -1
push 13
push offset _Lt_03BD
push -1
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-92]
push eax
call _fb_StrAssign@20
lea eax, [ebp-92]
push eax
call _HWRITEASM64@8
lea eax, [ebp-92]
push eax
call _fb_StrDelete@4
.Lt_03BC:
.Lt_03BB:
push dword ptr [ebp-32]
call _FLISTGETNEXT@4
mov dword ptr [ebp-32], eax
jmp .Lt_03B9
.Lt_03BA:
.Lt_03B8:
.Lt_03B7:
mov dword ptr [_CTX+204], 0
mov dword ptr [_CTX+200], 0
push 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
push 0
push -1
push 2
push offset _Lt_00EF
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-28]
push eax
call _fb_StrAssign@20
lea eax, [ebp-28]
push eax
call _HWRITEASM64@8
lea eax, [ebp-28]
push eax
call _fb_StrDelete@4
.Lt_03B6:
.Lt_03A6:
.Lt_03A5:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
_REG_TRANSFER@8:
push ebp
mov ebp, esp
sub esp, 52
push ebx
.Lt_03E6:
mov dword ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [_REGHANDLE+eax*4]
cmp ebx, -2
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [_REGHANDLE+eax*4]
cmp ecx, -4
sete cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_03E9
jmp .Lt_03E7
.Lt_03E9:
mov ecx, dword ptr [ebp+12]
cmp dword ptr [ebp+8], ecx
jne .Lt_03EB
mov ecx, dword ptr [ebp+8]
mov dword ptr [_REGHANDLE+ecx*4], -2
jmp .Lt_03E7
.Lt_03EB:
.Lt_03EA:
push dword ptr [ebp+8]
mov ecx, dword ptr [ebp+8]
push dword ptr [_REGHANDLE+ecx*4]
call _REG_FINDFREE@8
mov dword ptr [ebp-4], eax
mov eax, dword ptr [ebp+8]
cmp dword ptr [ebp-4], eax
je .Lt_03ED
push 3
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
.Lt_03ED:
.Lt_03EC:
.Lt_03E7:
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16
_MEMCLEAR@12:
push ebp
mov ebp, esp
sub esp, 196
push ebx
.Lt_03F2:
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-4], eax
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-40], 0
push dword ptr [ebp+12]
push 49
push offset _Lt_03F4
call _fb_StrAllocTempDescZEx@8
push eax
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_03F6
push 0
push -1
push dword ptr [ebp+12]
push -1
lea eax, [ebp-32]
push eax
call _fb_StrAssign@20
jmp .Lt_03F5
.Lt_03F6:
push -1
push 999997
call _REG_FINDFREE@8
mov dword ptr [ebp-40], eax
push 0
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-32]
push eax
call _fb_StrAssign@20
cmp dword ptr [ebp+16], 1
jne .Lt_03F8
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-32]
push eax
push 5
push offset _Lt_012F
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
jmp .Lt_03F7
.Lt_03F8:
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-32]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
.Lt_03F7:
mov eax, dword ptr [ebp-40]
mov dword ptr [_REGHANDLE+eax*4], -2
.Lt_03F5:
cmp dword ptr [ebp-4], 1
setne al
shr eax, 1
sbb eax, eax
cmp dword ptr [ebp-4], 2
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
cmp dword ptr [ebp-4], 4
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
cmp dword ptr [ebp-4], 8
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_0402
mov dword ptr [ebp-8], 3
jmp .Lt_0401
.Lt_0402:
mov dword ptr [ebp-8], 0
.Lt_0401:
cmp dword ptr [ebp-4], 7
jbe .Lt_0404
mov ebx, dword ptr [ebp-4]
shr ebx, 3
mov eax, ebx
mov dword ptr [ebp-36], eax
cmp dword ptr [ebp-36], 7
jle .Lt_0406
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push -1
push -1
push dword ptr [ebp-36]
call _fb_IntToStr@4
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _HWRITEASM64@8
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-20]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-20]
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
push 5
push offset _Lt_040D
push -1
push -1
lea eax, [ebp-32]
push eax
push 16
push offset _Lt_040C
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-124]
push eax
call _fb_StrAssign@20
lea eax, [ebp-124]
push eax
call _HWRITEASM64@8
lea eax, [ebp-124]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
push 4
push offset _Lt_0412
push -1
push -1
lea eax, [ebp-32]
push eax
push 5
push offset _Lt_0411
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
push 0
push 8
push offset _Lt_0416
push -1
lea eax, [ebp-172]
push eax
call _fb_StrAssign@20
lea eax, [ebp-172]
push eax
call _HWRITEASM64@8
lea eax, [ebp-172]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
push -1
lea eax, [ebp-20]
push eax
push 5
push offset _Lt_0418
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-196]
push eax
call _fb_StrAssign@20
lea eax, [ebp-196]
push eax
call _HWRITEASM64@8
lea eax, [ebp-196]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp-36]
sal eax, 3
mov ebx, eax
sub dword ptr [ebp-4], ebx
jmp .Lt_0405
.Lt_0406:
mov dword ptr [ebp-44], 0
mov ebx, dword ptr [ebp-36]
dec ebx
mov dword ptr [ebp-48], ebx
jmp .Lt_041C
.Lt_041F:
push dword ptr [ebp-8]
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
push 5
push offset _Lt_040D
push -1
push -1
lea ebx, [ebp-32]
push ebx
push -1
push 2
push offset _Lt_0119
push -1
push -1
mov ebx, dword ptr [ebp-44]
sal ebx, 3
push ebx
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
.Lt_041D:
inc dword ptr [ebp-44]
.Lt_041C:
mov eax, dword ptr [ebp-48]
cmp dword ptr [ebp-44], eax
jle .Lt_041F
.Lt_041E:
mov eax, dword ptr [ebp-36]
sal eax, 3
mov ebx, eax
sub dword ptr [ebp-4], ebx
cmp dword ptr [ebp-4], 0
je .Lt_0426
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push -1
mov ebx, dword ptr [ebp-36]
sal ebx, 3
push ebx
call _fb_IntToStr@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-32]
push eax
push 5
push offset _Lt_0411
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
.Lt_0426:
.Lt_0425:
.Lt_0405:
.Lt_0404:
.Lt_0403:
cmp dword ptr [ebp-4], 3
jbe .Lt_042C
push dword ptr [ebp-8]
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
push 5
push offset _Lt_040D
push -1
push -1
lea eax, [ebp-32]
push eax
push 16
push offset _Lt_042D
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
add dword ptr [ebp-4], 4294967292
cmp dword ptr [ebp-4], 1
jbe .Lt_0432
push dword ptr [ebp-8]
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
push 5
push offset _Lt_040D
push -1
push -1
lea eax, [ebp-32]
push eax
push 16
push offset _Lt_0433
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
add dword ptr [ebp-4], 4294967294
cmp dword ptr [ebp-4], 0
jbe .Lt_0438
push dword ptr [ebp-8]
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
push 5
push offset _Lt_040D
push -1
push -1
lea eax, [ebp-32]
push eax
push 16
push offset _Lt_0439
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-148]
push eax
call _fb_StrAssign@20
lea eax, [ebp-148]
push eax
call _HWRITEASM64@8
lea eax, [ebp-148]
push eax
call _fb_StrDelete@4
.Lt_0438:
.Lt_0437:
jmp .Lt_0431
.Lt_0432:
cmp dword ptr [ebp-4], 0
jbe .Lt_043D
push dword ptr [ebp-8]
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
push 5
push offset _Lt_040D
push -1
push -1
lea eax, [ebp-32]
push eax
push 16
push offset _Lt_043E
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_043D:
.Lt_0431:
jmp .Lt_042B
.Lt_042C:
cmp dword ptr [ebp-4], 1
jbe .Lt_0442
push dword ptr [ebp-8]
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
push 5
push offset _Lt_040D
push -1
push -1
lea eax, [ebp-32]
push eax
push 15
push offset _Lt_0443
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
add dword ptr [ebp-4], 4294967294
cmp dword ptr [ebp-4], 0
jbe .Lt_0448
push dword ptr [ebp-8]
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
push 5
push offset _Lt_040D
push -1
push -1
lea eax, [ebp-32]
push eax
push 16
push offset _Lt_0449
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_0448:
.Lt_0447:
jmp .Lt_042B
.Lt_0442:
cmp dword ptr [ebp-4], 0
jbe .Lt_044D
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
push 5
push offset _Lt_040D
push -1
push -1
lea eax, [ebp-32]
push eax
push 15
push offset _Lt_044E
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
.Lt_044D:
.Lt_042B:
lea eax, [ebp-32]
push eax
call _fb_StrDelete@4
lea eax, [ebp-20]
push eax
call _fb_StrDelete@4
.Lt_03F3:
pop ebx
mov esp, ebp
pop ebp
ret 12
.balign 16
_MEMCOPY@20:
push ebp
mov ebp, esp
sub esp, 332
push ebx
.Lt_0452:
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-4], eax
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-68], 0
cmp dword ptr [ebp+8], 0
jne .Lt_0455
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
lea eax, [ebp-40]
push eax
call _fb_StrDelete@4
lea eax, [ebp-28]
push eax
call _fb_StrDelete@4
lea eax, [ebp-16]
push eax
call _fb_StrDelete@4
jmp .Lt_0453
.Lt_0455:
.Lt_0454:
push dword ptr [ebp+12]
push 49
push offset _Lt_03F4
call _fb_StrAllocTempDescZEx@8
push eax
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_0457
push 0
push -1
push dword ptr [ebp+12]
push -1
lea eax, [ebp-28]
push eax
call _fb_StrAssign@20
jmp .Lt_0456
.Lt_0457:
push -1
push 999998
call _REG_FINDFREE@8
mov dword ptr [ebp-60], eax
push 0
push 0
mov eax, dword ptr [ebp-60]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-28]
push eax
call _fb_StrAssign@20
cmp dword ptr [ebp+20], 1
jne .Lt_0459
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-28]
push eax
push 5
push offset _Lt_012F
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-116]
push eax
call _fb_StrAssign@20
lea eax, [ebp-116]
push eax
call _HWRITEASM64@8
lea eax, [ebp-116]
push eax
call _fb_StrDelete@4
jmp .Lt_0458
.Lt_0459:
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-28]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-116]
push eax
call _fb_StrAssign@20
lea eax, [ebp-116]
push eax
call _HWRITEASM64@8
lea eax, [ebp-116]
push eax
call _fb_StrDelete@4
.Lt_0458:
.Lt_0456:
push dword ptr [ebp+16]
push 49
push offset _Lt_03F4
call _fb_StrAllocTempDescZEx@8
push eax
push 1
call _fb_StrInstr@12
test eax, eax
je .Lt_0463
push 0
push -1
push dword ptr [ebp+16]
push -1
lea eax, [ebp-40]
push eax
call _fb_StrAssign@20
jmp .Lt_0462
.Lt_0463:
push -1
push 999997
call _REG_FINDFREE@8
mov dword ptr [ebp-64], eax
push 0
push 0
mov eax, dword ptr [ebp-64]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-40]
push eax
call _fb_StrAssign@20
cmp dword ptr [ebp+24], 1
jne .Lt_0465
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
push -1
push dword ptr [ebp+16]
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-40]
push eax
push 5
push offset _Lt_012F
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-116]
push eax
call _fb_StrAssign@20
lea eax, [ebp-116]
push eax
call _HWRITEASM64@8
lea eax, [ebp-116]
push eax
call _fb_StrDelete@4
jmp .Lt_0464
.Lt_0465:
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
push -1
push dword ptr [ebp+16]
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-40]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-116]
push eax
call _fb_StrAssign@20
lea eax, [ebp-116]
push eax
call _HWRITEASM64@8
lea eax, [ebp-116]
push eax
call _fb_StrDelete@4
.Lt_0464:
.Lt_0462:
mov eax, dword ptr [ebp-4]
shr eax, 3
mov ebx, eax
mov dword ptr [ebp-56], ebx
cmp dword ptr [ebp-56], 7
jle .Lt_046F
push -1
push 999996
call _REG_FINDFREE@8
mov dword ptr [ebp-68], eax
push 0
push 0
mov eax, dword ptr [ebp-68]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp-68]
mov dword ptr [_REGHANDLE+eax*4], -2
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
push -1
push dword ptr [ebp-56]
call _fb_IntToStr@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-52]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-116]
push eax
call _fb_StrAssign@20
lea eax, [ebp-116]
push eax
call _HWRITEASM64@8
lea eax, [ebp-116]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-16]
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-140]
push eax
call _fb_StrAssign@20
lea eax, [ebp-140]
push eax
call _HWRITEASM64@8
lea eax, [ebp-140]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-28]
push eax
push 11
push offset _Lt_0476
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-176]
push eax
call _fb_StrAssign@20
lea eax, [ebp-176]
push eax
call _HWRITEASM64@8
lea eax, [ebp-176]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 7
push offset _Lt_047B
push -1
push -1
lea eax, [ebp-40]
push eax
push 6
push offset _Lt_047A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
push 4
push offset _Lt_0412
push -1
push -1
lea eax, [ebp-28]
push eax
push 5
push offset _Lt_0411
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-248]
push eax
call _fb_StrAssign@20
lea eax, [ebp-248]
push eax
call _HWRITEASM64@8
lea eax, [ebp-248]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push -1
push 4
push offset _Lt_0412
push -1
push -1
lea eax, [ebp-40]
push eax
push 5
push offset _Lt_0411
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-284]
push eax
call _fb_StrAssign@20
lea eax, [ebp-284]
push eax
call _HWRITEASM64@8
lea eax, [ebp-284]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
push -1
lea eax, [ebp-52]
push eax
push 5
push offset _Lt_0485
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-308]
push eax
call _fb_StrAssign@20
lea eax, [ebp-308]
push eax
call _HWRITEASM64@8
lea eax, [ebp-308]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
push 0
push -1
push -1
lea eax, [ebp-16]
push eax
push 5
push offset _Lt_0418
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-332]
push eax
call _fb_StrAssign@20
lea eax, [ebp-332]
push eax
call _HWRITEASM64@8
lea eax, [ebp-332]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp-56]
sal eax, 3
mov ebx, eax
sub dword ptr [ebp-4], ebx
jmp .Lt_046E
.Lt_046F:
cmp dword ptr [ebp-56], 0
jle .Lt_048A
mov dword ptr [ebp-72], 0
mov ebx, dword ptr [ebp-56]
dec ebx
mov dword ptr [ebp-76], ebx
jmp .Lt_048C
.Lt_048F:
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea ebx, [ebp-28]
push ebx
push -1
push 2
push offset _Lt_0119
push -1
push -1
mov ebx, dword ptr [ebp-72]
sal ebx, 3
push ebx
call _fb_IntToStr@4
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-136]
push eax
call _fb_StrAssign@20
lea eax, [ebp-136]
push eax
call _HWRITEASM64@8
lea eax, [ebp-136]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
push 7
push offset _Lt_047B
push -1
push -1
lea eax, [ebp-40]
push eax
push -1
push 2
push offset _Lt_0119
push -1
push -1
mov eax, dword ptr [ebp-72]
sal eax, 3
push eax
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-196]
push eax
call _fb_StrAssign@20
lea eax, [ebp-196]
push eax
call _HWRITEASM64@8
lea eax, [ebp-196]
push eax
call _fb_StrDelete@4
.Lt_048D:
inc dword ptr [ebp-72]
.Lt_048C:
mov eax, dword ptr [ebp-76]
cmp dword ptr [ebp-72], eax
jle .Lt_048F
.Lt_048E:
mov eax, dword ptr [ebp-56]
sal eax, 3
mov ebx, eax
sub dword ptr [ebp-4], ebx
cmp dword ptr [ebp-4], 0
je .Lt_049B
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
push -1
mov ebx, dword ptr [ebp-56]
sal ebx, 3
push ebx
call _fb_IntToStr@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-28]
push eax
push 5
push offset _Lt_0411
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-116]
push eax
call _fb_StrAssign@20
lea eax, [ebp-116]
push eax
call _HWRITEASM64@8
lea eax, [ebp-116]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp-56]
sal eax, 3
push eax
call _fb_IntToStr@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-40]
push eax
push 5
push offset _Lt_0411
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-164]
push eax
call _fb_StrAssign@20
lea eax, [ebp-164]
push eax
call _HWRITEASM64@8
lea eax, [ebp-164]
push eax
call _fb_StrDelete@4
.Lt_049B:
.Lt_049A:
.Lt_048A:
.Lt_046E:
cmp dword ptr [ebp-4], 3
jbe .Lt_04A5
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-28]
push eax
push 21
push offset _Lt_04A6
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-104]
push eax
call _fb_StrAssign@20
lea eax, [ebp-104]
push eax
call _HWRITEASM64@8
lea eax, [ebp-104]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push -1
push 7
push offset _Lt_04AA
push -1
push -1
lea eax, [ebp-40]
push eax
push 16
push offset _Lt_042D
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-140]
push eax
call _fb_StrAssign@20
lea eax, [ebp-140]
push eax
call _HWRITEASM64@8
lea eax, [ebp-140]
push eax
call _fb_StrDelete@4
add dword ptr [ebp-4], 4294967292
cmp dword ptr [ebp-4], 1
jbe .Lt_04AF
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-28]
push eax
push 20
push offset _Lt_04B0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-176]
push eax
call _fb_StrAssign@20
lea eax, [ebp-176]
push eax
call _HWRITEASM64@8
lea eax, [ebp-176]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 6
push offset _Lt_04B4
push -1
push -1
lea eax, [ebp-40]
push eax
push 16
push offset _Lt_0433
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
add dword ptr [ebp-4], 4294967294
cmp dword ptr [ebp-4], 0
jbe .Lt_04B9
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-28]
push eax
push 20
push offset _Lt_04BA
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-248]
push eax
call _fb_StrAssign@20
lea eax, [ebp-248]
push eax
call _HWRITEASM64@8
lea eax, [ebp-248]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push -1
push 6
push offset _Lt_04BE
push -1
push -1
lea eax, [ebp-40]
push eax
push 16
push offset _Lt_0439
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-284]
push eax
call _fb_StrAssign@20
lea eax, [ebp-284]
push eax
call _HWRITEASM64@8
lea eax, [ebp-284]
push eax
call _fb_StrDelete@4
.Lt_04B9:
.Lt_04B8:
jmp .Lt_04AE
.Lt_04AF:
cmp dword ptr [ebp-4], 0
jbe .Lt_04C2
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-28]
push eax
push 20
push offset _Lt_04C3
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-176]
push eax
call _fb_StrAssign@20
lea eax, [ebp-176]
push eax
call _HWRITEASM64@8
lea eax, [ebp-176]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 6
push offset _Lt_04BE
push -1
push -1
lea eax, [ebp-40]
push eax
push 16
push offset _Lt_043E
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
.Lt_04C2:
.Lt_04AE:
jmp .Lt_04A4
.Lt_04A5:
cmp dword ptr [ebp-4], 1
jbe .Lt_04CA
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-28]
push eax
push 19
push offset _Lt_04CB
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-104]
push eax
call _fb_StrAssign@20
lea eax, [ebp-104]
push eax
call _HWRITEASM64@8
lea eax, [ebp-104]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push -1
push 6
push offset _Lt_04B4
push -1
push -1
lea eax, [ebp-40]
push eax
push 15
push offset _Lt_0443
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-140]
push eax
call _fb_StrAssign@20
lea eax, [ebp-140]
push eax
call _HWRITEASM64@8
lea eax, [ebp-140]
push eax
call _fb_StrDelete@4
add dword ptr [ebp-4], 4294967294
cmp dword ptr [ebp-4], 0
jbe .Lt_04D3
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-28]
push eax
push 20
push offset _Lt_04D4
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-176]
push eax
call _fb_StrAssign@20
lea eax, [ebp-176]
push eax
call _HWRITEASM64@8
lea eax, [ebp-176]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 6
push offset _Lt_04BE
push -1
push -1
lea eax, [ebp-40]
push eax
push 16
push offset _Lt_0449
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
.Lt_04D3:
.Lt_04D2:
jmp .Lt_04A4
.Lt_04CA:
cmp dword ptr [ebp-4], 0
jbe .Lt_04DB
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-28]
push eax
push 19
push offset _Lt_04DC
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-104]
push eax
call _fb_StrAssign@20
lea eax, [ebp-104]
push eax
call _HWRITEASM64@8
lea eax, [ebp-104]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push -1
push 6
push offset _Lt_04BE
push -1
push -1
lea eax, [ebp-40]
push eax
push 15
push offset _Lt_044E
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-140]
push eax
call _fb_StrAssign@20
lea eax, [ebp-140]
push eax
call _HWRITEASM64@8
lea eax, [ebp-140]
push eax
call _fb_StrDelete@4
.Lt_04DB:
.Lt_04A4:
push -1
push dword ptr [ebp+12]
push -1
lea eax, [ebp-28]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_04E4
mov eax, dword ptr [ebp-60]
mov dword ptr [_REGHANDLE+eax*4], -2
.Lt_04E4:
push -1
push dword ptr [ebp+16]
push -1
lea eax, [ebp-40]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_04E6
mov eax, dword ptr [ebp-64]
mov dword ptr [_REGHANDLE+eax*4], -2
.Lt_04E6:
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
lea eax, [ebp-40]
push eax
call _fb_StrDelete@4
lea eax, [ebp-28]
push eax
call _fb_StrDelete@4
lea eax, [ebp-16]
push eax
call _fb_StrDelete@4
.Lt_0453:
pop ebx
mov esp, ebp
pop ebp
ret 20
.balign 16
__INIT@0:
.Lt_04E7:
push 16
push 256
lea eax, [_CTX+140]
push eax
call _FLISTINIT@12
call _IRHLINIT@0
or dword ptr [_IR+276], 131840
.Lt_04E8:
ret
.balign 16
__END@0:
.Lt_04E9:
call _IRHLEND@0
lea eax, [_CTX+140]
push eax
call _FLISTEND@4
.Lt_04EA:
ret
.balign 16
_HEMITVARIABLE@4:
push ebp
mov ebp, esp
sub esp, 168
push ebx
push esi
push edi
.Lt_04EB:
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-48], 0
push dword ptr [ebp+8]
call _SYMBISARRAY@4
test eax, eax
je .Lt_04EE
.Lt_04EE:
.Lt_04ED:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 1024
test ebx, ebx
je .Lt_04F0
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+12]
and eax, 2
test eax, eax
jne .Lt_04F2
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_04EC
.Lt_04F2:
.Lt_04F1:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
mov dword ptr [ebp-52], ebx
cmp dword ptr [ebp-52], 4
je .Lt_04F6
.Lt_04F7:
cmp dword ptr [ebp-52], 7
jne .Lt_04F5
.Lt_04F6:
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 6
push offset _Lt_04F8
push -1
lea ebx, [ebp-64]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-64]
push ebx
call _ASM_SECTION@4
lea ebx, [ebp-64]
push ebx
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 9
push offset _Lt_04FA
push -1
lea ebx, [ebp-76]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-76]
push ebx
call _HWRITEASM64@8
lea ebx, [ebp-76]
push ebx
call _fb_StrDelete@4
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+4]
and eax, 32
test eax, eax
je .Lt_04FD
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push 8
push offset _Lt_04FE
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-124]
push eax
call _fb_StrAssign@20
lea eax, [ebp-124]
push eax
call _HWRITEASM64@8
lea eax, [ebp-124]
push eax
call _fb_StrDelete@4
.Lt_04FD:
.Lt_04FC:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push 2
push offset _Lt_00EF
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
cmp ebx, 7
jne .Lt_0504
push 0
push 0
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+56]
call _HESCAPEW@4
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
push 2
push offset _Lt_0506
push -1
push -1
mov eax, dword ptr [_SYMB_DTYPETB+200]
sal eax, 1
push eax
push 8
push offset _Lt_0505
call _fb_StrAllocTempDescZEx@8
push eax
call _fb_LEFT@8
push eax
push -1
push -1
lea eax, [ebp-24]
push eax
push 9
push offset _Lt_0245
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-148]
push eax
call _fb_StrAssign@20
lea eax, [ebp-148]
push eax
call _HWRITEASM64@8
lea eax, [ebp-148]
push eax
call _fb_StrDelete@4
jmp .Lt_0503
.Lt_0504:
push 0
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+56]
call _HESCAPE@4
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
push 4
push offset _Lt_0248
push -1
push -1
lea eax, [ebp-24]
push eax
push 9
push offset _Lt_0245
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-136]
push eax
call _fb_StrAssign@20
lea eax, [ebp-136]
push eax
call _HWRITEASM64@8
lea eax, [ebp-136]
push eax
call _fb_StrDelete@4
.Lt_0503:
.Lt_04F5:
.Lt_04F3:
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_04EC
.Lt_04F0:
.Lt_04EF:
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+56], 0
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
and ecx, 128
test ecx, ecx
sete cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp+8]
mov esi, dword ptr [eax+4]
and esi, 2
test esi, esi
setne dl
mov esi, edx
shr esi, 1
sbb esi, esi
or ecx, esi
and ebx, ecx
je .Lt_050F
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ecx+12]
and ebx, 2
test ebx, ebx
jne .Lt_0511
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+4]
and ecx, 32
test ecx, ecx
jne .Lt_0513
lea ecx, [ebp-36]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-24]
push ecx
call _fb_StrDelete@4
jmp .Lt_04EC
.Lt_0513:
.Lt_0512:
.Lt_0511:
.Lt_0510:
push dword ptr [ebp+8]
call _IRHLFLUSHSTATICINITIALIZER@4
lea ecx, [ebp-36]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-24]
push ecx
call _fb_StrDelete@4
jmp .Lt_04EC
.Lt_050F:
.Lt_050E:
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ecx+4]
and ebx, 16388
test ebx, ebx
je .Lt_0515
lea ebx, [ebp-36]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-24]
push ebx
call _fb_StrDelete@4
jmp .Lt_04EC
.Lt_0515:
.Lt_0514:
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+4]
and ecx, 59
mov dword ptr [ebp-4], ecx
cmp dword ptr [ebp-4], 0
je .Lt_0517
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ecx+4]
and ebx, 16
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
mov ecx, dword ptr [ebp+8]
mov esi, dword ptr [ecx+4]
and esi, 4
test esi, esi
setne dl
mov esi, edx
shr esi, 1
sbb esi, esi
or ebx, esi
je .Lt_0519
mov esi, dword ptr [ebp+8]
mov ebx, dword ptr [esi+4]
and ebx, 16
test ebx, ebx
je .Lt_051B
lea ebx, [ebp-36]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-24]
push ebx
call _fb_StrDelete@4
jmp .Lt_04EC
.Lt_051B:
.Lt_051A:
jmp .Lt_0518
.Lt_0519:
cmp dword ptr [_ENV+148], -1
jne .Lt_051D
push 2
push dword ptr [ebp+8]
call _EDBGEMITGLOBALVAR_ASM64@8
.Lt_051D:
.Lt_0518:
jmp .Lt_0516
.Lt_0517:
mov ebx, dword ptr [ebp+8]
mov esi, dword ptr [ebx+4]
and esi, 262144
je .Lt_051F
mov esi, dword ptr [_SYMB_DTYPETB+368]
mov dword ptr [ebp-12], esi
jmp .Lt_051E
.Lt_051F:
mov esi, dword ptr [ebp+8]
mov ebx, dword ptr [esi+40]
mov dword ptr [ebp-12], ebx
.Lt_051E:
mov ebx, dword ptr [ebp+8]
mov esi, dword ptr [ebx]
mov dword ptr [ebp-52], esi
cmp dword ptr [ebp-52], 1
je .Lt_0523
.Lt_0524:
cmp dword ptr [ebp-52], 12
jne .Lt_0522
.Lt_0523:
mov dword ptr [ebp-56], 1
mov esi, dword ptr [ebp+8]
mov ebx, dword ptr [esi+64]
dec ebx
mov dword ptr [ebp-60], ebx
jmp .Lt_0525
.Lt_0528:
mov esi, dword ptr [ebp-56]
mov ebx, esi
sar ebx, 31
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ebp-60]
sal eax, 4
mov edi, dword ptr [ecx+68]
add edi, eax
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [ebp-60]
sal ecx, 4
mov edx, dword ptr [eax+68]
add edx, ecx
mov eax, dword ptr [edi+8]
mov ecx, dword ptr [edi+12]
sub eax, dword ptr [edx]
sbb ecx, dword ptr [edx+4]
add eax, 1
adc ecx, 0
push ecx
push eax
push ebx
push esi
push eax
mov eax, [esp+4]
mul dword ptr [esp+12]
xchg eax, [esp+4]
imul eax, [esp+16]
add eax, edx
mov edx, [esp+8]
imul edx, [esp+12]
add edx, eax
mov [esp+8], edx
pop eax
pop esi
pop ebx
add esp, 8
mov eax, esi
mov dword ptr [ebp-56], eax
.Lt_0526:
dec dword ptr [ebp-60]
.Lt_0525:
cmp dword ptr [ebp-60], 0
jge .Lt_0528
.Lt_0527:
mov eax, dword ptr [ebp-56]
imul eax, dword ptr [ebp-12]
mov dword ptr [ebp-8], eax
mov eax, dword ptr [ebp+8]
mov esi, dword ptr [eax+28]
and esi, 511
cmp esi, 20
jne .Lt_052A
mov esi, dword ptr [_CTX+96]
add esi, dword ptr [ebp-8]
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
add esi, dword ptr [ebx+104]
dec esi
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+104]
dec ebx
not ebx
and esi, ebx
mov dword ptr [_CTX+96], esi
jmp .Lt_0529
.Lt_052A:
mov esi, dword ptr [_CTX+96]
add esi, dword ptr [ebp-8]
add esi, dword ptr [ebp-12]
dec esi
mov ebx, dword ptr [ebp-12]
dec ebx
not ebx
and esi, ebx
mov dword ptr [_CTX+96], esi
.Lt_0529:
mov esi, dword ptr [_CTX+96]
neg esi
mov eax, esi
mov ebx, eax
sar ebx, 31
mov esi, dword ptr [ebp+8]
mov dword ptr [esi+48], eax
mov dword ptr [esi+52], ebx
.Lt_0522:
.Lt_0520:
cmp dword ptr [_ENV+148], -1
jne .Lt_052C
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 2
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
push ebx
push dword ptr [ebp+8]
call _EDBGEMITLOCALVAR_ASM64@8
.Lt_052C:
.Lt_0516:
cmp dword ptr [ebp-4], 0
je .Lt_052E
mov dword ptr [_CTX+4], 2
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 5
push offset _Lt_052F
push -1
lea ebx, [ebp-60]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-60]
push ebx
call _ASM_SECTION@4
lea ebx, [ebp-60]
push ebx
call _fb_StrDelete@4
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-72], 1
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+64]
dec eax
mov dword ptr [ebp-76], eax
jmp .Lt_0531
.Lt_0534:
mov ebx, dword ptr [ebp-72]
mov eax, ebx
sar eax, 31
mov esi, dword ptr [ebp+8]
mov ecx, dword ptr [ebp-76]
sal ecx, 4
mov edx, dword ptr [esi+68]
add edx, ecx
mov ecx, dword ptr [ebp+8]
mov esi, dword ptr [ebp-76]
sal esi, 4
mov edi, dword ptr [ecx+68]
add edi, esi
mov ecx, dword ptr [edx+8]
mov esi, dword ptr [edx+12]
sub ecx, dword ptr [edi]
sbb esi, dword ptr [edi+4]
add ecx, 1
adc esi, 0
push esi
push ecx
push eax
push ebx
mov eax, [esp+0]
mul dword ptr [esp+8]
xchg eax, [esp+0]
imul eax, [esp+12]
add eax, edx
mov edx, [esp+4]
imul edx, [esp+8]
add edx, eax
mov [esp+4], edx
pop ebx
pop eax
add esp, 8
mov ecx, ebx
mov dword ptr [ebp-72], ecx
.Lt_0532:
dec dword ptr [ebp-76]
.Lt_0531:
cmp dword ptr [ebp-76], 0
jge .Lt_0534
.Lt_0533:
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ebp-72]
mov ebx, eax
sar ebx, 31
push dword ptr [ecx+44]
push dword ptr [ecx+40]
push ebx
push eax
mov eax, [esp+0]
mul dword ptr [esp+8]
xchg eax, [esp+0]
imul eax, [esp+12]
add eax, edx
mov edx, [esp+4]
imul edx, [esp+8]
add edx, eax
mov [esp+4], edx
pop eax
pop ebx
add esp, 8
mov ecx, eax
mov dword ptr [ebp-8], ecx
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ecx+28]
and eax, 511
cmp eax, 20
jne .Lt_0536
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+104]
mov dword ptr [ebp-68], eax
jmp .Lt_0535
.Lt_0536:
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+40]
mov dword ptr [ebp-68], ecx
.Lt_0535:
push dword ptr [ebp-68]
call _PW2@4
mov dword ptr [ebp-68], eax
cmp dword ptr [ebp-68], 8
jle .Lt_0538
mov dword ptr [ebp-68], 8
.Lt_0538:
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
and ecx, 8
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 32
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or ecx, ebx
je .Lt_053A
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push -1
push -1
push dword ptr [ebp-68]
call _fb_IntToStr@4
push eax
push -1
push 2
push offset _Lt_0103
push -1
push -1
push dword ptr [ebp-8]
call _fb_IntToStr@4
push eax
push -1
push 2
push offset _Lt_0103
push -1
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push 7
push offset _Lt_053B
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
jmp .Lt_0539
.Lt_053A:
cmp dword ptr [_CTX+212], 2
jne .Lt_0543
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push 8
push offset _Lt_0544
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
push -1
push dword ptr [ebp-68]
call _fb_IntToStr@4
push eax
push -1
push 2
push offset _Lt_0103
push -1
push -1
push dword ptr [ebp-8]
call _fb_IntToStr@4
push eax
push -1
push 2
push offset _Lt_0103
push -1
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push 7
push offset _Lt_053B
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-168]
push eax
call _fb_StrAssign@20
lea eax, [ebp-168]
push eax
call _HWRITEASM64@8
lea eax, [ebp-168]
push eax
call _fb_StrDelete@4
jmp .Lt_0542
.Lt_0543:
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push -1
push -1
push dword ptr [ebp-68]
call _fb_IntToStr@4
push eax
push -1
push 2
push offset _Lt_0103
push -1
push -1
push dword ptr [ebp-8]
call _fb_IntToStr@4
push eax
push -1
push 2
push offset _Lt_0103
push -1
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push 8
push offset _Lt_054D
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
.Lt_0542:
.Lt_0539:
.Lt_052E:
.Lt_052D:
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
.Lt_04EC:
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
_HMAYBEEMITGLOBALVAR@4:
push ebp
mov ebp, esp
.Lt_0554:
inc dword ptr [_CTX]
push dword ptr [ebp+8]
call _SYMBISDATADESC@4
test eax, eax
jne .Lt_0557
push dword ptr [ebp+8]
call _HEMITVARIABLE@4
.Lt_0557:
.Lt_0556:
dec dword ptr [_CTX]
.Lt_0555:
mov esp, ebp
pop ebp
ret 4
.balign 16
_NO_ROUNDSD@4:
push ebp
mov ebp, esp
sub esp, 108
.Lt_0558:
push 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 20
push offset _Lt_055A
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _HWRITEASM64@8
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push 17
push offset _Lt_055C
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
lea eax, [ebp-24]
push eax
call _HWRITEASM64@8
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push 38
push offset _Lt_055E
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
lea eax, [ebp-36]
push eax
call _HWRITEASM64@8
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push 20
push offset _Lt_0560
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
lea eax, [ebp-48]
push eax
call _HWRITEASM64@8
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
push 14
push offset _Lt_0563
push -1
push 0
push dword ptr [ebp+8]
push 5
push offset _Lt_0562
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 16
push offset _Lt_0567
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 20
push offset _Lt_0560
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
.Lt_0559:
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITBEGIN@0:
push ebp
mov ebp, esp
sub esp, 32
mov dword ptr [ebp-4], 0
.Lt_056A:
lea eax, [_ENV+560]
push eax
call _HFILEEXISTS@4
test eax, eax
je .Lt_056D
lea eax, [_ENV+560]
push eax
call _fb_StrAllocTempDescZ@4
push eax
call _fb_FileKill@4
.Lt_056D:
.Lt_056C:
call _fb_FileFree@0
mov dword ptr [_ENV+556], eax
push 0
push dword ptr [_ENV+556]
push 0
push 3
push 0
lea eax, [_ENV+560]
push eax
call _fb_StrAllocTempDescZ@4
push eax
call _fb_FileOpen@24
test eax, eax
je .Lt_056F
mov dword ptr [ebp-4], 0
jmp .Lt_056B
.Lt_056F:
.Lt_056E:
mov dword ptr [_CTX], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [_CTX+8]
push eax
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [_CTX+20]
push eax
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [_CTX+32]
push eax
call _fb_StrAssign@20
mov dword ptr [_CTX+4], 0
mov dword ptr [_CTX+128], 0
mov dword ptr [_CTX+132], 0
mov byte ptr [_CTX+136], 0
push 3
call _FBGETOPTION@4
mov dword ptr [_CTX+212], eax
mov dword ptr [_CTX+216], 0
mov dword ptr [ebp-32], 0
.Lt_0573:
mov eax, dword ptr [ebp-32]
mov dword ptr [_REGHANDLE+eax*4], -2
mov eax, dword ptr [ebp-32]
mov dword ptr [_REGROOM+eax*8], -1
mov eax, dword ptr [ebp-32]
mov dword ptr [_REGROOM+eax*8+4], 0
.Lt_0571:
inc dword ptr [ebp-32]
.Lt_0570:
cmp dword ptr [ebp-32], 15
jle .Lt_0573
.Lt_0572:
mov dword ptr [_REGHANDLE+24], -3
mov dword ptr [_REGHANDLE+28], -3
cmp dword ptr [_CTX+212], 2
jne .Lt_0575
push 8
push 1
push 1
push 0
push -1
push 4
push offset _LISTREG
call _fb_ArrayRedimEx
add esp, 28
test eax, eax
je .Lt_0576
push 0
push 0
push offset _Lt_022B
push 2110
call _fb_ErrorThrowAt
add esp, 16
jmp eax
.Lt_0576:
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+4], 5
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+8], 4
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+12], 3
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+16], 2
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+20], 8
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+24], 9
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+28], 10
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+32], 11
jmp .Lt_0574
.Lt_0575:
push 6
push 1
push 1
push 0
push -1
push 4
push offset _LISTREG
call _fb_ArrayRedimEx
add esp, 28
test eax, eax
je .Lt_0577
push 0
push 0
push offset _Lt_022B
push 2113
call _fb_ErrorThrowAt
add esp, 16
jmp eax
.Lt_0577:
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+4], 2
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+8], 3
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+12], 8
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+16], 9
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+20], 10
mov eax, dword ptr [_LISTREG]
mov dword ptr [eax+24], 11
.Lt_0574:
inc dword ptr [_CTX]
cmp dword ptr [_ENV+148], -1
jne .Lt_0579
lea eax, [_ENV+280]
push eax
call _EDBGEMITHEADER_ASM64@4
.Lt_0579:
push 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
push 0
push 23
push offset _Lt_057A
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
lea eax, [ebp-16]
push eax
call _HWRITEASM64@8
lea eax, [ebp-16]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
push 0
push 6
push offset _Lt_057C
push -1
lea eax, [ebp-28]
push eax
call _fb_StrAssign@20
lea eax, [ebp-28]
push eax
call _ASM_SECTION@4
lea eax, [ebp-28]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-4], -1
.Lt_056B:
mov eax, dword ptr [ebp-4]
mov esp, ebp
pop ebp
ret
.balign 16
_HADDGLOBALCTORDTOR@4:
push ebp
mov ebp, esp
sub esp, 64
push ebx
.Lt_057E:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+12]
and ebx, 16384
test ebx, ebx
je .Lt_0581
jmp .Lt_057F
.Lt_0581:
.Lt_0580:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+12]
and eax, 65536
test eax, eax
je .Lt_0583
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+12]
and ebx, 16777216
test ebx, ebx
je .Lt_0585
inc dword ptr [_CTX+128]
cmp dword ptr [_CTX+212], 2
jne .Lt_0586
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-4], eax
jmp .Lt_1B11
.Lt_0586:
mov dword ptr [ebp-4], 0
.Lt_1B11:
cmp dword ptr [ebp-4], 0
je .Lt_0589
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 12
push offset _Lt_058A
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _ASM_SECTION@4
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
jmp .Lt_0588
.Lt_0589:
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 7
push offset _Lt_058C
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _ASM_SECTION@4
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
.Lt_0588:
push 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
push 0
push 9
push offset _Lt_04FA
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
lea eax, [ebp-16]
push eax
call _HWRITEASM64@8
lea eax, [ebp-16]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push 7
push offset _Lt_0215
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-40]
push eax
call _fb_StrAssign@20
lea eax, [ebp-40]
push eax
call _HWRITEASM64@8
lea eax, [ebp-40]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 6
push offset _Lt_057C
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _ASM_SECTION@4
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
.Lt_0585:
.Lt_0584:
jmp .Lt_0582
.Lt_0583:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+12]
and ebx, 131072
test ebx, ebx
je .Lt_0592
inc dword ptr [_CTX+132]
cmp dword ptr [_CTX+212], 2
jne .Lt_0593
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-4], eax
jmp .Lt_1B12
.Lt_0593:
mov dword ptr [ebp-4], 0
.Lt_1B12:
cmp dword ptr [ebp-4], 0
je .Lt_0596
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 12
push offset _Lt_0597
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _ASM_SECTION@4
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
jmp .Lt_0595
.Lt_0596:
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 7
push offset _Lt_0599
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _ASM_SECTION@4
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
.Lt_0595:
push 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
push 0
push 9
push offset _Lt_04FA
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
lea eax, [ebp-16]
push eax
call _HWRITEASM64@8
lea eax, [ebp-16]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push 7
push offset _Lt_0215
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-40]
push eax
call _fb_StrAssign@20
lea eax, [ebp-40]
push eax
call _HWRITEASM64@8
lea eax, [ebp-40]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 6
push offset _Lt_057C
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _ASM_SECTION@4
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
.Lt_0592:
.Lt_0582:
.Lt_057F:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITEND@0:
push ebp
mov ebp, esp
sub esp, 244
.Lt_059F:
inc dword ptr [_CTX]
mov dword ptr [_CTX+4], 2
dec dword ptr [_CTX]
push offset _HMAYBEEMITGLOBALVAR@4
push 1
call _SYMBFOREACHGLOBAL@8
inc dword ptr [_CTX]
push offset _HEMITVARIABLE@4
call _IRFOREACHDATASTMT@4
push offset _HADDGLOBALCTORDTOR@4
push 3
call _SYMBFOREACHGLOBAL@8
movzx eax, byte ptr [_CTX+136]
neg eax
cmp eax, -1
jne .Lt_05A2
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 5
push offset _Lt_052F
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _ASM_SECTION@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
cmp dword ptr [_CTX+212], 2
jne .Lt_05A5
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 14
push offset _Lt_05A6
push -1
lea eax, [ebp-208]
push eax
call _fb_StrAssign@20
lea eax, [ebp-208]
push eax
call _HWRITEASM64@8
lea eax, [ebp-208]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push 17
push offset _Lt_05A8
push -1
lea eax, [ebp-220]
push eax
call _fb_StrAssign@20
lea eax, [ebp-220]
push eax
call _HWRITEASM64@8
lea eax, [ebp-220]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push 14
push offset _Lt_05AA
push -1
lea eax, [ebp-232]
push eax
call _fb_StrAssign@20
lea eax, [ebp-232]
push eax
call _HWRITEASM64@8
lea eax, [ebp-232]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
push 0
push 17
push offset _Lt_05AC
push -1
lea eax, [ebp-244]
push eax
call _fb_StrAssign@20
lea eax, [ebp-244]
push eax
call _HWRITEASM64@8
lea eax, [ebp-244]
push eax
call _fb_StrDelete@4
jmp .Lt_05A4
.Lt_05A5:
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 18
push offset _Lt_05AE
push -1
lea eax, [ebp-208]
push eax
call _fb_StrAssign@20
lea eax, [ebp-208]
push eax
call _HWRITEASM64@8
lea eax, [ebp-208]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push 18
push offset _Lt_05B0
push -1
lea eax, [ebp-220]
push eax
call _fb_StrAssign@20
lea eax, [ebp-220]
push eax
call _HWRITEASM64@8
lea eax, [ebp-220]
push eax
call _fb_StrDelete@4
.Lt_05A4:
cmp dword ptr [_CTX+212], 2
jne .Lt_05B2
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-16], eax
jmp .Lt_1B15
.Lt_05B2:
mov dword ptr [ebp-16], 0
.Lt_1B15:
cmp dword ptr [ebp-16], 0
je .Lt_05B5
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 12
push offset _Lt_058A
push -1
lea eax, [ebp-208]
push eax
call _fb_StrAssign@20
lea eax, [ebp-208]
push eax
call _ASM_SECTION@4
lea eax, [ebp-208]
push eax
call _fb_StrDelete@4
jmp .Lt_05B4
.Lt_05B5:
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 7
push offset _Lt_058C
push -1
lea eax, [ebp-208]
push eax
call _fb_StrAssign@20
lea eax, [ebp-208]
push eax
call _ASM_SECTION@4
lea eax, [ebp-208]
push eax
call _fb_StrDelete@4
.Lt_05B4:
push 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
push 0
push 9
push offset _Lt_04FA
push -1
lea eax, [ebp-28]
push eax
call _fb_StrAssign@20
lea eax, [ebp-28]
push eax
call _HWRITEASM64@8
lea eax, [ebp-28]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push 18
push offset _Lt_05B9
push -1
lea eax, [ebp-40]
push eax
call _fb_StrAssign@20
lea eax, [ebp-40]
push eax
call _HWRITEASM64@8
lea eax, [ebp-40]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 6
push offset _Lt_057C
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _ASM_SECTION@4
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 13
push offset _Lt_05BC
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _HWRITEASM64@8
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 9
push offset _Lt_05BE
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 9
push offset _Lt_05C0
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 9
push offset _Lt_05C2
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 12
push offset _Lt_05C4
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push 6
push offset _Lt_05C6
push -1
lea eax, [ebp-124]
push eax
call _fb_StrAssign@20
lea eax, [ebp-124]
push eax
call _HWRITEASM64@8
lea eax, [ebp-124]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push 32
push offset _Lt_05C8
push -1
lea eax, [ebp-136]
push eax
call _fb_StrAssign@20
lea eax, [ebp-136]
push eax
call _HWRITEASM64@8
lea eax, [ebp-136]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push 21
push offset _Lt_05CA
push -1
lea eax, [ebp-148]
push eax
call _fb_StrAssign@20
lea eax, [ebp-148]
push eax
call _HWRITEASM64@8
lea eax, [ebp-148]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push 8
push offset _Lt_05CC
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
push 0
push 8
push offset _Lt_05CE
push -1
lea eax, [ebp-172]
push eax
call _fb_StrAssign@20
lea eax, [ebp-172]
push eax
call _HWRITEASM64@8
lea eax, [ebp-172]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 8
push offset _Lt_05D0
push -1
lea eax, [ebp-184]
push eax
call _fb_StrAssign@20
lea eax, [ebp-184]
push eax
call _HWRITEASM64@8
lea eax, [ebp-184]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push 4
push offset _Lt_05D2
push -1
lea eax, [ebp-196]
push eax
call _fb_StrAssign@20
lea eax, [ebp-196]
push eax
call _HWRITEASM64@8
lea eax, [ebp-196]
push eax
call _fb_StrDelete@4
.Lt_05A2:
.Lt_05A1:
cmp dword ptr [_ENV+148], -1
jne .Lt_05D5
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrInit@20
lea eax, [ebp-12]
push eax
push 0
push 100
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
lea eax, [ebp-24]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push 6
push offset _Lt_057C
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
lea eax, [ebp-36]
push eax
call _HWRITEASM64@8
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
lea eax, [ebp-60]
push eax
call _HWRITEASM64@8
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
call _DBG_EMITSTAB@0
call _DBG_EMITSTR@0
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_05D5:
.Lt_05D4:
push -1
lea eax, [_CTX+8]
push eax
push 0
push dword ptr [_ENV+556]
call _fb_FilePutStr@16
test eax, eax
je .Lt_05DB
.Lt_05DB:
.Lt_05DA:
push -1
lea eax, [_CTX+20]
push eax
push 0
push dword ptr [_ENV+556]
call _fb_FilePutStr@16
test eax, eax
je .Lt_05DD
.Lt_05DD:
.Lt_05DC:
push -1
lea eax, [_CTX+32]
push eax
push 0
push dword ptr [_ENV+556]
call _fb_FilePutStr@16
test eax, eax
je .Lt_05DF
.Lt_05DF:
.Lt_05DE:
push dword ptr [_ENV+556]
call _fb_FileClose@4
test eax, eax
je .Lt_05E1
.Lt_05E1:
.Lt_05E0:
mov dword ptr [_ENV+556], 0
.Lt_05A0:
mov esp, ebp
pop ebp
ret
.balign 16
__GETOPTIONVALUE@4:
push ebp
mov ebp, esp
sub esp, 4
mov dword ptr [ebp-4], 0
.Lt_05E2:
cmp dword ptr [ebp+8], 1
jne .Lt_05E5
.Lt_05E6:
mov dword ptr [ebp-4], 0
jmp .Lt_05E3
jmp .Lt_05E4
.Lt_05E5:
push 0
push 1
push 0
push offset _Lt_05E8
push 21
call _ERRREPORTEX@20
.Lt_05E7:
.Lt_05E4:
.Lt_05E3:
mov eax, dword ptr [ebp-4]
mov esp, ebp
pop ebp
ret 4
.balign 16
__SUPPORTSOP@8:
push ebp
mov ebp, esp
sub esp, 8
mov dword ptr [ebp-4], 0
.Lt_05E9:
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-8], eax
jmp .Lt_05EC
.Lt_05EE:
mov dword ptr [ebp-4], 0
jmp .Lt_05EA
jmp .Lt_05EB
.Lt_05EF:
mov dword ptr [ebp-4], -1
jmp .Lt_05EA
jmp .Lt_05EB
.Lt_05F0:
mov dword ptr [ebp-4], -1
jmp .Lt_05EB
.Lt_05EC:
mov eax, dword ptr [ebp-8]
add eax, 4294967244
cmp eax, 15
ja .Lt_05F0
mov eax, dword ptr [ebp-8]
jmp dword ptr [_.LT_05F1+eax*4-208]
_.LT_05F1:
.int .Lt_05EF
.int .Lt_05F0
.int .Lt_05EF
.int .Lt_05F0
.int .Lt_05EF
.int .Lt_05EE
.int .Lt_05F0
.int .Lt_05F0
.int .Lt_05F0
.int .Lt_05F0
.int .Lt_05F0
.int .Lt_05F0
.int .Lt_05F0
.int .Lt_05EF
.int .Lt_05EE
.int .Lt_05EE
.Lt_05EB:
.Lt_05EA:
mov eax, dword ptr [ebp-4]
mov esp, ebp
pop ebp
ret 8
.balign 16
__PROCBEGIN@4:
push ebp
mov ebp, esp
push ebx
.Lt_05F2:
mov eax, dword ptr [_LEX+422144]
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+112]
mov ebx, dword ptr [eax+8372]
mov dword ptr [ecx+16], ebx
.Lt_05F3:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
__PROCEND@4:
push ebp
mov ebp, esp
push ebx
.Lt_05F4:
mov eax, dword ptr [_LEX+422144]
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+112]
mov ebx, dword ptr [eax+8372]
mov dword ptr [ecx+20], ebx
.Lt_05F5:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
_PARAM_ANALYZE@20:
push ebp
mov ebp, esp
sub esp, 24
push ebx
mov dword ptr [ebp-4], 0
.Lt_05F6:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-20], 0
cmp dword ptr [_CTX+212], 2
jne .Lt_05F9
cmp dword ptr [ebp+8], 20
je .Lt_05FB
mov eax, dword ptr [ebp+8]
and eax, 480
je .Lt_05FC
mov dword ptr [ebp-24], 24
jmp .Lt_1B17
.Lt_05FC:
mov eax, dword ptr [ebp+8]
and eax, 31
mov dword ptr [ebp-24], eax
.Lt_1B17:
mov eax, dword ptr [ebp-24]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax], 1
jne .Lt_05FF
mov eax, dword ptr [ebp+24]
cmp dword ptr [eax], 8
jge .Lt_0601
mov eax, dword ptr [ebp+24]
inc dword ptr [eax]
mov dword ptr [ebp-4], 1
jmp .Lt_05F7
jmp .Lt_0600
.Lt_0601:
mov eax, dword ptr [ebp+16]
inc dword ptr [eax]
mov dword ptr [ebp-4], 10
jmp .Lt_05F7
.Lt_0600:
jmp .Lt_05FE
.Lt_05FF:
mov eax, dword ptr [ebp+20]
cmp dword ptr [eax], 6
jge .Lt_0603
mov eax, dword ptr [ebp+20]
inc dword ptr [eax]
mov dword ptr [ebp-4], 0
jmp .Lt_05F7
jmp .Lt_0602
.Lt_0603:
mov eax, dword ptr [ebp+16]
inc dword ptr [eax]
mov dword ptr [ebp-4], 10
jmp .Lt_05F7
.Lt_0602:
.Lt_05FE:
jmp .Lt_05FA
.Lt_05FB:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+40]
mov dword ptr [ebp-12], ebx
mov ebx, dword ptr [_SYMB_DTYPETB+368]
sal ebx, 1
cmp dword ptr [ebp-12], ebx
jg .Lt_0605
push dword ptr [ebp+12]
call _HGETMAGICSTRUCTNUMBER@4
mov dword ptr [ebp-24], eax
jmp .Lt_0607
.Lt_0609:
mov eax, dword ptr [ebp+20]
cmp dword ptr [eax], 6
jge .Lt_060B
mov eax, dword ptr [ebp+20]
inc dword ptr [eax]
mov dword ptr [ebp-4], 0
jmp .Lt_05F7
.Lt_060B:
.Lt_060A:
jmp .Lt_0606
.Lt_060C:
mov eax, dword ptr [ebp+24]
cmp dword ptr [eax], 8
jge .Lt_060E
mov eax, dword ptr [ebp+24]
inc dword ptr [eax]
mov dword ptr [ebp-4], 1
jmp .Lt_05F7
.Lt_060E:
.Lt_060D:
jmp .Lt_0606
.Lt_060F:
mov eax, dword ptr [ebp+20]
cmp dword ptr [eax], 5
jge .Lt_0611
mov eax, dword ptr [ebp+20]
add dword ptr [eax], 2
mov dword ptr [ebp-4], 2
jmp .Lt_05F7
.Lt_0611:
.Lt_0610:
jmp .Lt_0606
.Lt_0612:
mov eax, dword ptr [ebp+20]
mov ebx, dword ptr [eax]
cmp ebx, 6
setl bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+24]
mov ecx, dword ptr [eax]
cmp ecx, 8
setl cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
je .Lt_0614
mov ecx, dword ptr [ebp+20]
inc dword ptr [ecx]
mov ecx, dword ptr [ebp+24]
inc dword ptr [ecx]
mov dword ptr [ebp-4], 3
jmp .Lt_05F7
.Lt_0614:
.Lt_0613:
jmp .Lt_0606
.Lt_0615:
mov ecx, dword ptr [ebp+20]
mov ebx, dword ptr [ecx]
cmp ebx, 6
setl bl
shr ebx, 1
sbb ebx, ebx
mov ecx, dword ptr [ebp+24]
mov eax, dword ptr [ecx]
cmp eax, 8
setl al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_0617
mov eax, dword ptr [ebp+24]
inc dword ptr [eax]
mov eax, dword ptr [ebp+20]
inc dword ptr [eax]
mov dword ptr [ebp-4], 4
jmp .Lt_05F7
.Lt_0617:
.Lt_0616:
jmp .Lt_0606
.Lt_0618:
mov eax, dword ptr [ebp+24]
cmp dword ptr [eax], 7
jge .Lt_061A
mov eax, dword ptr [ebp+24]
add dword ptr [eax], 2
mov dword ptr [ebp-4], 5
jmp .Lt_05F7
.Lt_061A:
.Lt_0619:
jmp .Lt_0606
.Lt_0607:
mov eax, dword ptr [ebp-24]
add eax, 4294967295
cmp eax, 9
ja .Lt_0606
mov eax, dword ptr [ebp-24]
jmp dword ptr [_.LT_061B+eax*4-4]
_.LT_061B:
.int .Lt_0609
.int .Lt_060C
.int .Lt_0606
.int .Lt_0606
.int .Lt_060F
.int .Lt_0615
.int .Lt_0606
.int .Lt_0606
.int .Lt_0612
.int .Lt_0618
.Lt_0606:
.Lt_0605:
.Lt_0604:
mov dword ptr [ebp-4], 10
jmp .Lt_05F7
.Lt_05FA:
jmp .Lt_05F8
.Lt_05F9:
mov eax, dword ptr [ebp+16]
inc dword ptr [eax]
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [ebp+20]
mov ecx, dword ptr [eax]
mov dword ptr [ebx], ecx
mov ecx, dword ptr [ebp+16]
mov ebx, dword ptr [ebp+24]
mov eax, dword ptr [ecx]
mov dword ptr [ebx], eax
cmp dword ptr [ebp+8], 20
je .Lt_061D
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 4
jle .Lt_061F
mov dword ptr [ebp-4], 10
jmp .Lt_05F7
.Lt_061F:
mov eax, dword ptr [ebp+8]
and eax, 480
je .Lt_0620
mov dword ptr [ebp-24], 24
jmp .Lt_1B18
.Lt_0620:
mov eax, dword ptr [ebp+8]
and eax, 31
mov dword ptr [ebp-24], eax
.Lt_1B18:
mov eax, dword ptr [ebp-24]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax], 1
jne .Lt_0623
mov dword ptr [ebp-4], 1
jmp .Lt_05F7
jmp .Lt_0622
.Lt_0623:
mov dword ptr [ebp-4], 0
jmp .Lt_05F7
.Lt_0622:
jmp .Lt_061C
.Lt_061D:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+40]
mov dword ptr [ebp-12], ebx
mov ebx, dword ptr [ebp-12]
cmp ebx, dword ptr [_SYMB_DTYPETB+368]
setg bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp-12]
cmp eax, 3
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
mov eax, dword ptr [ebp-12]
cmp eax, 5
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
mov eax, dword ptr [ebp-12]
cmp eax, 6
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
mov eax, dword ptr [ebp-12]
cmp eax, 7
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
je .Lt_0625
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 4
jle .Lt_0627
mov dword ptr [ebp-4], 13
jmp .Lt_05F7
jmp .Lt_0626
.Lt_0627:
mov dword ptr [ebp-4], 12
jmp .Lt_05F7
.Lt_0626:
.Lt_0625:
.Lt_0624:
push dword ptr [ebp+12]
call _SYMBUDTGETFIRSTFIELD@4
mov dword ptr [ebp-8], eax
.Lt_0628:
cmp dword ptr [ebp-8], 0
je .Lt_0629
mov eax, dword ptr [ebp-8]
mov ebx, dword ptr [eax+28]
and ebx, 480
je .Lt_062A
mov dword ptr [ebp-24], 24
jmp .Lt_1B19
.Lt_062A:
mov ebx, dword ptr [ebp-8]
mov eax, dword ptr [ebx+28]
and eax, 31
mov dword ptr [ebp-24], eax
.Lt_1B19:
mov eax, dword ptr [ebp-24]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax], 1
jne .Lt_062D
inc dword ptr [ebp-20]
jmp .Lt_062C
.Lt_062D:
inc dword ptr [ebp-16]
.Lt_062C:
push dword ptr [ebp-8]
call _SYMBUDTGETNEXTFIELD@4
mov dword ptr [ebp-8], eax
jmp .Lt_0628
.Lt_0629:
mov eax, dword ptr [ebp-20]
cmp eax, 1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-16]
test ebx, ebx
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_062F
mov ebx, dword ptr [ebp+16]
cmp dword ptr [ebx], 4
jle .Lt_0631
mov dword ptr [ebp-4], 11
jmp .Lt_05F7
jmp .Lt_0630
.Lt_0631:
mov dword ptr [ebp-4], 1
jmp .Lt_05F7
.Lt_0630:
jmp .Lt_062E
.Lt_062F:
mov ebx, dword ptr [ebp+16]
cmp dword ptr [ebx], 4
jle .Lt_0633
mov dword ptr [ebp-4], 11
jmp .Lt_05F7
jmp .Lt_0632
.Lt_0633:
mov dword ptr [ebp-4], 0
.Lt_0632:
.Lt_062E:
.Lt_061C:
.Lt_05F8:
.Lt_05F7:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret 20
.balign 16
_REG_FILLM@20:
push ebp
mov ebp, esp
sub esp, 220
push ebx
.Lt_0634:
mov eax, dword ptr [ebp+16]
sub eax, dword ptr [ebp+24]
mov ebx, eax
mov dword ptr [ebp-4], ebx
jmp .Lt_0637
.Lt_0639:
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
push 0
mov ebx, dword ptr [_CTX+84]
sub ebx, dword ptr [ebp+20]
sal ebx, 2
mov eax, dword ptr [ebp+12]
add ebx, dword ptr [eax]
mov eax, dword ptr [ebx]
push dword ptr [_REGSTRB+eax*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov eax, dword ptr [ebp+24]
add eax, dword ptr [ebp+8]
push eax
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
jmp .Lt_0636
.Lt_063E:
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRW+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
jmp .Lt_0636
.Lt_0643:
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRW+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push 5
push offset _Lt_0649
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push 5
push offset _Lt_0648
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea ebx, [ebp-64]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRB+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
add ebx, 2
push ebx
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-136]
push eax
call _fb_StrAssign@20
lea eax, [ebp-136]
push eax
call _HWRITEASM64@8
lea eax, [ebp-136]
push eax
call _fb_StrDelete@4
jmp .Lt_0636
.Lt_0651:
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
jmp .Lt_0636
.Lt_0656:
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push 5
push offset _Lt_065B
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push 5
push offset _Lt_0648
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea ebx, [ebp-64]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRB+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
add ebx, 4
push ebx
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-136]
push eax
call _fb_StrAssign@20
lea eax, [ebp-136]
push eax
call _HWRITEASM64@8
lea eax, [ebp-136]
push eax
call _fb_StrDelete@4
jmp .Lt_0636
.Lt_0663:
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push 5
push offset _Lt_065B
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push 5
push offset _Lt_0648
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea ebx, [ebp-64]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRW+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
add ebx, 4
push ebx
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-136]
push eax
call _fb_StrAssign@20
lea eax, [ebp-136]
push eax
call _HWRITEASM64@8
lea eax, [ebp-136]
push eax
call _fb_StrDelete@4
jmp .Lt_0636
.Lt_066F:
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push 5
push offset _Lt_065B
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push 5
push offset _Lt_0648
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea ebx, [ebp-64]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRW+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
add ebx, 4
push ebx
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-136]
push eax
call _fb_StrAssign@20
lea eax, [ebp-136]
push eax
call _HWRITEASM64@8
lea eax, [ebp-136]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
push 0
push -1
push 5
push offset _Lt_0649
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push 5
push offset _Lt_0648
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea ebx, [ebp-148]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-172]
push eax
call _fb_StrAssign@20
lea eax, [ebp-172]
push eax
call _HWRITEASM64@8
lea eax, [ebp-172]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRB+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
add ebx, 6
push ebx
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
lea eax, [ebp-208]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-220]
push eax
call _fb_StrAssign@20
lea eax, [ebp-220]
push eax
call _HWRITEASM64@8
lea eax, [ebp-220]
push eax
call _fb_StrDelete@4
jmp .Lt_0636
.Lt_0682:
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sub eax, dword ptr [ebp+20]
sal eax, 2
mov ebx, dword ptr [ebp+12]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+24]
add ebx, dword ptr [ebp+8]
push ebx
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
jmp .Lt_0636
.Lt_0637:
mov eax, dword ptr [ebp-4]
add eax, 4294967295
cmp eax, 7
ja .Lt_0636
mov eax, dword ptr [ebp-4]
jmp dword ptr [_.LT_0687+eax*4-4]
_.LT_0687:
.int .Lt_0639
.int .Lt_063E
.int .Lt_0643
.int .Lt_0651
.int .Lt_0656
.int .Lt_0663
.int .Lt_066F
.int .Lt_0682
.Lt_0636:
.Lt_0635:
pop ebx
mov esp, ebp
pop ebp
ret 20
.balign 16
_REG_FILLR@20:
push ebp
mov ebp, esp
sub esp, 296
push ebx
.Lt_0688:
mov dword ptr [ebp-4], 0
push 0
push 0
mov eax, dword ptr [ebp+16]
sal eax, 2
mov ebx, dword ptr [ebp+20]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push -1
lea ebx, [ebp-16]
push ebx
call _fb_StrInit@20
cmp dword ptr [ebp+8], 8
jle .Lt_068B
add dword ptr [ebp+8], -8
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx]
movzx ebx, byte ptr [eax]
cmp ebx, 45
jne .Lt_068D
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push 5
push offset _Lt_03BE
call _fb_StrAllocTempDescZEx@8
push eax
push dword ptr [ebp+12]
push 1
call _fb_StrInstr@12
dec eax
push eax
push dword ptr [ebp+12]
call _fb_LEFT@8
push eax
call _fb_VALINT@4
add eax, 8
push eax
call _fb_IntToStr@4
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+12]
call _fb_StrAssign@20
jmp .Lt_068C
.Lt_068D:
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push 10
push offset _Lt_068F
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-40]
push eax
call _fb_StrAssign@20
lea eax, [ebp-40]
push eax
call _HWRITEASM64@8
lea eax, [ebp-40]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 11
push offset _Lt_0692
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
push 0
push 6
push offset _Lt_0694
push -1
push dword ptr [ebp+12]
call _fb_StrAssign@20
.Lt_068C:
.Lt_068B:
.Lt_068A:
mov eax, dword ptr [ebp+8]
cmp eax, 1
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
cmp ebx, 2
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
mov ebx, dword ptr [ebp+8]
cmp ebx, 4
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
mov ebx, dword ptr [ebp+8]
cmp ebx, 8
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_0696
call _REG_TEMPO@0
mov dword ptr [ebp-4], eax
.Lt_0696:
.Lt_0695:
push dword ptr [ebp+24]
mov eax, dword ptr [ebp+16]
sal eax, 2
mov ebx, dword ptr [ebp+20]
add eax, dword ptr [ebx]
push dword ptr [eax]
call _REG_TRANSFER@8
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-20], eax
jmp .Lt_0698
.Lt_069A:
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 12
push offset _Lt_069C
push -1
push -1
lea eax, [ebp-16]
push eax
push 7
push offset _Lt_069B
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
lea eax, [ebp-68]
push eax
call _HWRITEASM64@8
lea eax, [ebp-68]
push eax
call _fb_StrDelete@4
jmp .Lt_0697
.Lt_06A1:
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 12
push offset _Lt_06A2
push -1
push -1
lea eax, [ebp-16]
push eax
push 7
push offset _Lt_069B
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
lea eax, [ebp-68]
push eax
call _HWRITEASM64@8
lea eax, [ebp-68]
push eax
call _fb_StrDelete@4
jmp .Lt_0697
.Lt_06A7:
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [ebp-4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
lea eax, [ebp-68]
push eax
call _HWRITEASM64@8
lea eax, [ebp-68]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
push dword ptr [ebp-4]
push -1
push 13
push offset _Lt_06AC
push -1
push -1
lea eax, [ebp-16]
push eax
push 7
push offset _Lt_069B
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-128]
push eax
call _fb_StrAssign@20
lea eax, [ebp-128]
push eax
call _HWRITEASM64@8
lea eax, [ebp-128]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
push dword ptr [ebp-4]
push 23
push offset _Lt_06B2
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-164]
push eax
call _fb_StrAssign@20
lea eax, [ebp-164]
push eax
call _HWRITEASM64@8
lea eax, [ebp-164]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push 12
push offset _Lt_06B6
push -1
lea eax, [ebp-176]
push eax
call _fb_StrAssign@20
lea eax, [ebp-176]
push eax
call _HWRITEASM64@8
lea eax, [ebp-176]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-16]
push eax
push 4
push offset _Lt_06B8
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
jmp .Lt_0697
.Lt_06BD:
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 13
push offset _Lt_06BE
push -1
push 0
mov eax, dword ptr [ebp+16]
sal eax, 2
mov ebx, dword ptr [ebp+20]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea ebx, [ebp-32]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
lea eax, [ebp-68]
push eax
call _HWRITEASM64@8
lea eax, [ebp-68]
push eax
call _fb_StrDelete@4
jmp .Lt_0697
.Lt_06C3:
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [ebp-4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
lea eax, [ebp-68]
push eax
call _HWRITEASM64@8
lea eax, [ebp-68]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
push dword ptr [ebp-4]
push -1
push 14
push offset _Lt_06C8
push -1
push 0
mov eax, dword ptr [ebp+16]
sal eax, 2
mov ebx, dword ptr [ebp+20]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea ebx, [ebp-80]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-128]
push eax
call _fb_StrAssign@20
lea eax, [ebp-128]
push eax
call _HWRITEASM64@8
lea eax, [ebp-128]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
push dword ptr [ebp-4]
push 23
push offset _Lt_06CE
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-164]
push eax
call _fb_StrAssign@20
lea eax, [ebp-164]
push eax
call _HWRITEASM64@8
lea eax, [ebp-164]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push 12
push offset _Lt_06D2
push -1
lea eax, [ebp-176]
push eax
call _fb_StrAssign@20
lea eax, [ebp-176]
push eax
call _HWRITEASM64@8
lea eax, [ebp-176]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-16]
push eax
push 4
push offset _Lt_06B8
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
jmp .Lt_0697
.Lt_06D7:
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [ebp-4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
lea eax, [ebp-68]
push eax
call _HWRITEASM64@8
lea eax, [ebp-68]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
push dword ptr [ebp-4]
push -1
push 14
push offset _Lt_06C8
push -1
push 0
mov eax, dword ptr [ebp+16]
sal eax, 2
mov ebx, dword ptr [ebp+20]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea ebx, [ebp-80]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-128]
push eax
call _fb_StrAssign@20
lea eax, [ebp-128]
push eax
call _HWRITEASM64@8
lea eax, [ebp-128]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
push dword ptr [ebp-4]
push 23
push offset _Lt_06E1
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-164]
push eax
call _fb_StrAssign@20
lea eax, [ebp-164]
push eax
call _HWRITEASM64@8
lea eax, [ebp-164]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push 12
push offset _Lt_06D2
push -1
lea eax, [ebp-176]
push eax
call _fb_StrAssign@20
lea eax, [ebp-176]
push eax
call _HWRITEASM64@8
lea eax, [ebp-176]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-16]
push eax
push 4
push offset _Lt_06B8
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
jmp .Lt_0697
.Lt_06E9:
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [ebp-4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
lea eax, [ebp-68]
push eax
call _HWRITEASM64@8
lea eax, [ebp-68]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
push dword ptr [ebp-4]
push -1
push 14
push offset _Lt_06C8
push -1
push 0
mov eax, dword ptr [ebp+16]
sal eax, 2
mov ebx, dword ptr [ebp+20]
add eax, dword ptr [ebx]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea ebx, [ebp-80]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-128]
push eax
call _fb_StrAssign@20
lea eax, [ebp-128]
push eax
call _HWRITEASM64@8
lea eax, [ebp-128]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
push dword ptr [ebp-4]
push 23
push offset _Lt_06E1
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-164]
push eax
call _fb_StrAssign@20
lea eax, [ebp-164]
push eax
call _HWRITEASM64@8
lea eax, [ebp-164]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push 12
push offset _Lt_06D2
push -1
lea eax, [ebp-176]
push eax
call _fb_StrAssign@20
lea eax, [ebp-176]
push eax
call _HWRITEASM64@8
lea eax, [ebp-176]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-16]
push eax
push 4
push offset _Lt_06B8
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
push dword ptr [ebp-4]
push 23
push offset _Lt_06FA
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-248]
push eax
call _fb_StrAssign@20
lea eax, [ebp-248]
push eax
call _HWRITEASM64@8
lea eax, [ebp-248]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push 12
push offset _Lt_06FE
push -1
lea eax, [ebp-260]
push eax
call _fb_StrAssign@20
lea eax, [ebp-260]
push eax
call _HWRITEASM64@8
lea eax, [ebp-260]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-16]
push eax
push 4
push offset _Lt_06B8
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
lea eax, [ebp-284]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-296]
push eax
call _fb_StrAssign@20
lea eax, [ebp-296]
push eax
call _HWRITEASM64@8
lea eax, [ebp-296]
push eax
call _fb_StrDelete@4
jmp .Lt_0697
.Lt_0703:
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 13
push offset _Lt_03BD
push -1
push -1
lea eax, [ebp-16]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
lea eax, [ebp-68]
push eax
call _HWRITEASM64@8
lea eax, [ebp-68]
push eax
call _fb_StrDelete@4
jmp .Lt_0697
.Lt_0698:
mov eax, dword ptr [ebp-20]
add eax, 4294967295
cmp eax, 7
ja .Lt_0697
mov eax, dword ptr [ebp-20]
jmp dword ptr [_.LT_0708+eax*4-4]
_.LT_0708:
.int .Lt_069A
.int .Lt_06A1
.int .Lt_06A7
.int .Lt_06BD
.int .Lt_06C3
.int .Lt_06D7
.int .Lt_06E9
.int .Lt_0703
.Lt_0697:
lea eax, [ebp-16]
push eax
call _fb_StrDelete@4
.Lt_0689:
pop ebx
mov esp, ebp
pop ebp
ret 20
.balign 16
_REG_FILLX@12:
push ebp
mov ebp, esp
sub esp, 48
push ebx
.Lt_0709:
cmp dword ptr [ebp+8], 8
jle .Lt_070C
add dword ptr [ebp+8], -8
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
movzx eax, byte ptr [ebx]
cmp eax, 45
jne .Lt_070E
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push 5
push offset _Lt_03BE
call _fb_StrAllocTempDescZEx@8
push eax
push dword ptr [ebp+12]
push 1
call _fb_StrInstr@12
dec eax
push eax
push dword ptr [ebp+12]
call _fb_LEFT@8
push eax
call _fb_VALINT@4
add eax, 8
push eax
call _fb_IntToStr@4
push eax
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+12]
call _fb_StrAssign@20
jmp .Lt_070D
.Lt_070E:
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push 10
push offset _Lt_068F
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
lea eax, [ebp-24]
push eax
call _HWRITEASM64@8
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push 11
push offset _Lt_0692
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
lea eax, [ebp-36]
push eax
call _HWRITEASM64@8
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
push 0
push 6
push offset _Lt_0694
push -1
push dword ptr [ebp+12]
call _fb_StrAssign@20
.Lt_070D:
.Lt_070C:
.Lt_070B:
cmp dword ptr [ebp+8], 4
jne .Lt_0714
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 3
push offset _Lt_0124
push -1
push -1
mov eax, dword ptr [ebp+16]
dec eax
push eax
call _fb_IntToStr@4
push eax
push 9
push offset _Lt_0715
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
lea eax, [ebp-48]
push eax
call _HWRITEASM64@8
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
jmp .Lt_0713
.Lt_0714:
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push -1
push 3
push offset _Lt_0124
push -1
push -1
mov eax, dword ptr [ebp+16]
dec eax
push eax
call _fb_IntToStr@4
push eax
push 9
push offset _Lt_071A
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
lea eax, [ebp-48]
push eax
call _HWRITEASM64@8
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
.Lt_0713:
.Lt_070A:
pop ebx
mov esp, ebp
pop ebp
ret 12
.balign 16
__PROCALLOCARG@8:
push ebp
mov ebp, esp
sub esp, 148
push ebx
push esi
push edi
.Lt_071F:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-20]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+12]
call _SYMBGETREALTYPE@12
cmp dword ptr [_CTX+212], 2
jne .Lt_0722
mov eax, dword ptr [ebp-12]
and eax, 480
test eax, eax
sete al
shr eax, 1
sbb eax, eax
push dword ptr [ebp-20]
push dword ptr [ebp-12]
mov ebx, eax
call _SYMBGETVALISTTYPE@8
cmp eax, 3
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_0724
mov eax, dword ptr [ebp+12]
xor dword ptr [eax+4], 32768
mov eax, dword ptr [ebp+12]
or dword ptr [eax+4], 65536
.Lt_0724:
.Lt_0723:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 32768
test ebx, ebx
je .Lt_0726
mov ebx, dword ptr [ebp-12]
and ebx, 511
cmp ebx, 20
jne .Lt_0728
lea ebx, [_CTX+88]
push ebx
lea ebx, [_CTX+84]
push ebx
mov dword ptr [ebp-48], 0
lea ebx, [ebp-48]
push ebx
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+32]
push 20
call _PARAM_ANALYZE@20
mov dword ptr [ebp-16], eax
cmp dword ptr [ebp-16], 10
jne .Lt_072B
mov ebx, dword ptr [_CTX+92]
mov eax, ebx
sar eax, 31
mov ecx, dword ptr [ebp+12]
mov dword ptr [ecx+48], ebx
mov dword ptr [ecx+52], eax
mov eax, dword ptr [_CTX+92]
mov ebx, eax
sar ebx, 31
mov ecx, dword ptr [ebp+12]
add eax, dword ptr [ecx+40]
adc ebx, dword ptr [ecx+44]
mov ecx, eax
mov dword ptr [_CTX+92], ecx
jmp .Lt_072A
.Lt_072B:
mov ecx, dword ptr [ebp+12]
mov eax, dword ptr [ecx+40]
mov dword ptr [ebp-4], eax
mov eax, dword ptr [_CTX+96]
add eax, dword ptr [ebp-4]
add eax, dword ptr [ebp-4]
dec eax
mov ecx, dword ptr [ebp-4]
dec ecx
not ecx
and eax, ecx
mov dword ptr [_CTX+96], eax
mov eax, dword ptr [_CTX+96]
neg eax
mov ebx, eax
mov ecx, ebx
sar ecx, 31
mov eax, dword ptr [ebp+12]
mov dword ptr [eax+48], ebx
mov dword ptr [eax+52], ecx
mov ebx, dword ptr [ebp-16]
mov dword ptr [ebp-52], ebx
jmp .Lt_072D
.Lt_072F:
push 0
push 0
push dword ptr [ebp-4]
push offset _LISTREG
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+48]
push ecx
call _REG_FILLM@20
jmp .Lt_072C
.Lt_0730:
push 0
push 1
push 8
push offset _LISTREG
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+48]
push ebx
call _REG_FILLM@20
push 8
push 0
push dword ptr [ebp-4]
push offset _LISTREG
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+48]
push ecx
call _REG_FILLM@20
jmp .Lt_072C
.Lt_0731:
push 0
push 0
push 8
push offset _LISTREG
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+48]
push ebx
call _REG_FILLM@20
cmp dword ptr [ebp-4], 13
jge .Lt_0733
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push -1
mov ebx, dword ptr [_CTX+88]
dec ebx
push ebx
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+48]
mov ebx, dword ptr [eax+52]
add ecx, 8
adc ebx, 0
push ebx
push ecx
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_0734
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_0732
.Lt_0733:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push -1
mov eax, dword ptr [_CTX+88]
dec eax
push eax
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+48]
mov ecx, dword ptr [eax+52]
add ebx, 8
adc ecx, 0
push ecx
push ebx
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
.Lt_0732:
jmp .Lt_072C
.Lt_073F:
cmp dword ptr [ebp-4], 4
jne .Lt_0741
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push -1
mov eax, dword ptr [_CTX+88]
dec eax
push eax
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_0734
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_0740
.Lt_0741:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push -1
mov eax, dword ptr [_CTX+88]
dec eax
push eax
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
.Lt_0740:
push 8
push 0
push dword ptr [ebp-4]
push offset _LISTREG
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+48]
push ebx
call _REG_FILLM@20
jmp .Lt_072C
.Lt_074A:
cmp dword ptr [ebp-4], 4
jne .Lt_074C
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push -1
mov ebx, dword ptr [_CTX+88]
dec ebx
push ebx
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_0734
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_074B
.Lt_074C:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push -1
mov eax, dword ptr [_CTX+88]
dec eax
push eax
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
.Lt_074B:
jmp .Lt_072C
.Lt_0755:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push -1
mov eax, dword ptr [_CTX+88]
add eax, -2
push eax
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp-4], 13
jge .Lt_075B
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
push -1
mov eax, dword ptr [_CTX+88]
dec eax
push eax
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+48]
mov ebx, dword ptr [eax+52]
add ecx, 8
adc ebx, 0
push ebx
push ecx
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_0734
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-148]
push eax
call _fb_StrAssign@20
lea eax, [ebp-148]
push eax
call _HWRITEASM64@8
lea eax, [ebp-148]
push eax
call _fb_StrDelete@4
jmp .Lt_075A
.Lt_075B:
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
push -1
mov eax, dword ptr [_CTX+88]
dec eax
push eax
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+48]
mov ecx, dword ptr [eax+52]
add ebx, 8
adc ecx, 0
push ecx
push ebx
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-148]
push eax
call _fb_StrAssign@20
lea eax, [ebp-148]
push eax
call _HWRITEASM64@8
lea eax, [ebp-148]
push eax
call _fb_StrDelete@4
.Lt_075A:
jmp .Lt_072C
.Lt_072D:
cmp dword ptr [ebp-52], 5
ja .Lt_072C
mov eax, dword ptr [ebp-52]
jmp dword ptr [_.LT_0764+eax*4]
_.LT_0764:
.int .Lt_072F
.int .Lt_074A
.int .Lt_0730
.int .Lt_0731
.int .Lt_073F
.int .Lt_0755
.Lt_072C:
.Lt_072A:
jmp .Lt_0727
.Lt_0728:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+40]
mov dword ptr [ebp-4], ebx
mov ebx, dword ptr [ebp-12]
and ebx, 480
je .Lt_0765
mov dword ptr [ebp-48], 24
jmp .Lt_1B29
.Lt_0765:
mov ebx, dword ptr [ebp-12]
and ebx, 31
mov dword ptr [ebp-48], ebx
.Lt_1B29:
mov ebx, dword ptr [ebp-48]
imul ebx, 28
cmp dword ptr [_SYMB_DTYPETB+ebx], 1
jne .Lt_0768
inc dword ptr [_CTX+88]
cmp dword ptr [_CTX+88], 8
jg .Lt_076A
mov ebx, dword ptr [_CTX+96]
add ebx, dword ptr [ebp-4]
add ebx, dword ptr [ebp-4]
dec ebx
mov eax, dword ptr [ebp-4]
dec eax
not eax
and ebx, eax
mov dword ptr [_CTX+96], ebx
mov ebx, dword ptr [_CTX+96]
neg ebx
mov ecx, ebx
mov eax, ecx
sar eax, 31
mov ebx, dword ptr [ebp+12]
mov dword ptr [ebx+48], ecx
mov dword ptr [ebx+52], eax
cmp dword ptr [ebp-4], 4
jne .Lt_076C
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push -1
mov ecx, dword ptr [_CTX+88]
dec ecx
push ecx
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_0734
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
jmp .Lt_076B
.Lt_076C:
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push -1
mov eax, dword ptr [_CTX+88]
dec eax
push eax
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
.Lt_076B:
jmp .Lt_0769
.Lt_076A:
mov ecx, dword ptr [_CTX+92]
mov eax, ecx
sar eax, 31
mov ebx, dword ptr [ebp+12]
mov dword ptr [ebx+48], ecx
mov dword ptr [ebx+52], eax
add dword ptr [_CTX+92], 8
.Lt_0769:
jmp .Lt_0767
.Lt_0768:
inc dword ptr [_CTX+84]
cmp dword ptr [_CTX+84], 6
jg .Lt_0776
mov ecx, dword ptr [_CTX+96]
add ecx, dword ptr [ebp-4]
add ecx, dword ptr [ebp-4]
dec ecx
mov eax, dword ptr [ebp-4]
dec eax
not eax
and ecx, eax
mov dword ptr [_CTX+96], ecx
mov ecx, dword ptr [_CTX+96]
neg ecx
mov ebx, ecx
mov eax, ebx
sar eax, 31
mov ecx, dword ptr [ebp+12]
mov dword ptr [ecx+48], ebx
mov dword ptr [ecx+52], eax
mov ebx, dword ptr [ebp-4]
mov dword ptr [ebp-52], ebx
jmp .Lt_0778
.Lt_077A:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push 0
mov ebx, dword ptr [_CTX+84]
sal ebx, 2
add ebx, dword ptr [_LISTREG]
mov eax, dword ptr [ebx]
push dword ptr [_REGSTRB+eax*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call _fb_LongintToStr@8
push eax
push 14
push offset _Lt_077B
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_0777
.Lt_0780:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRW+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+52]
push dword ptr [ebx+48]
call _fb_LongintToStr@8
push eax
push 14
push offset _Lt_0781
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_0777
.Lt_0786:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+52]
push dword ptr [ebx+48]
call _fb_LongintToStr@8
push eax
push 15
push offset _Lt_0787
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_0777
.Lt_078C:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+52]
push dword ptr [ebx+48]
call _fb_LongintToStr@8
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_0777
.Lt_0778:
mov eax, dword ptr [ebp-52]
add eax, 4294967295
cmp eax, 7
ja .Lt_0777
mov eax, dword ptr [ebp-52]
jmp dword ptr [_.LT_0791+eax*4-4]
_.LT_0791:
.int .Lt_077A
.int .Lt_0780
.int .Lt_0777
.int .Lt_0786
.int .Lt_0777
.int .Lt_0777
.int .Lt_0777
.int .Lt_078C
.Lt_0777:
jmp .Lt_0775
.Lt_0776:
mov ebx, dword ptr [_CTX+92]
mov eax, ebx
sar eax, 31
mov ecx, dword ptr [ebp+12]
mov dword ptr [ecx+48], ebx
mov dword ptr [ecx+52], eax
add dword ptr [_CTX+92], 8
.Lt_0775:
.Lt_0767:
.Lt_0727:
jmp .Lt_0725
.Lt_0726:
inc dword ptr [_CTX+84]
mov dword ptr [ebp-4], 8
cmp dword ptr [_CTX+84], 6
jg .Lt_0793
mov ebx, dword ptr [_CTX+96]
add ebx, dword ptr [ebp-4]
add ebx, dword ptr [ebp-4]
dec ebx
mov eax, dword ptr [ebp-4]
dec eax
not eax
and ebx, eax
mov dword ptr [_CTX+96], ebx
mov ebx, dword ptr [_CTX+96]
neg ebx
mov ecx, ebx
mov eax, ecx
sar eax, 31
mov ebx, dword ptr [ebp+12]
mov dword ptr [ebx+48], ecx
mov dword ptr [ebx+52], eax
push 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
push 0
push -1
push 0
mov ecx, dword ptr [_CTX+84]
sal ecx, 2
add ecx, dword ptr [_LISTREG]
mov eax, dword ptr [ecx]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+52]
push dword ptr [eax+48]
call _fb_LongintToStr@8
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-92]
push eax
call _fb_StrAssign@20
lea eax, [ebp-92]
push eax
call _HWRITEASM64@8
lea eax, [ebp-92]
push eax
call _fb_StrDelete@4
jmp .Lt_0792
.Lt_0793:
mov ecx, dword ptr [_CTX+92]
mov eax, ecx
sar eax, 31
mov ebx, dword ptr [ebp+12]
mov dword ptr [ebx+48], ecx
mov dword ptr [ebx+52], eax
add dword ptr [_CTX+92], 8
.Lt_0792:
.Lt_0725:
jmp .Lt_0721
.Lt_0722:
add dword ptr [_CTX+92], 8
mov ecx, dword ptr [ebp+12]
mov eax, dword ptr [ecx+4]
and eax, 32768
test eax, eax
je .Lt_0799
mov eax, dword ptr [ebp-12]
and eax, 511
cmp eax, 20
jne .Lt_079B
mov dword ptr [ebp-52], 0
lea eax, [ebp-52]
push eax
mov dword ptr [ebp-48], 0
lea eax, [ebp-48]
push eax
lea eax, [_CTX+84]
push eax
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
push 20
call _PARAM_ANALYZE@20
mov dword ptr [ebp-16], eax
mov eax, dword ptr [ebp-16]
mov dword ptr [ebp-56], eax
jmp .Lt_079F
.Lt_07A1:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [_CTX+96]
mov ecx, ebx
sar ecx, 31
add ebx, dword ptr [eax+40]
adc ecx, dword ptr [eax+44]
mov eax, dword ptr [ebp+12]
add ebx, dword ptr [eax+40]
adc ecx, dword ptr [eax+44]
add ebx, 4294967295
adc ecx, 4294967295
mov eax, dword ptr [ebp+12]
mov edi, dword ptr [eax+40]
mov esi, dword ptr [eax+44]
add edi, 4294967295
adc esi, 4294967295
not edi
not esi
and ebx, edi
and ecx, esi
mov edi, ebx
mov dword ptr [_CTX+96], edi
mov edi, dword ptr [_CTX+96]
neg edi
mov ecx, edi
mov ebx, ecx
sar ebx, 31
mov edi, dword ptr [ebp+12]
mov dword ptr [edi+48], ecx
mov dword ptr [edi+52], ebx
cmp dword ptr [ebp-16], 12
jne .Lt_07A3
push 0
push 0
mov ecx, dword ptr [_CTX+84]
sal ecx, 2
add ecx, dword ptr [_LISTREG]
mov ebx, dword ptr [ecx]
push dword ptr [_REGSTRQ+ebx*4]
push -1
lea ebx, [ebp-32]
push ebx
call _fb_StrAssign@20
push 1
push 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+52]
push dword ptr [ebx+48]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-80]
push eax
call _fb_StrAssign@20
lea eax, [ebp-80]
push eax
lea eax, [ebp-32]
push eax
push dword ptr [ebp+12]
call _SYMBGETREALSIZE@4
mov ebx, eax
push ebx
call _MEMCOPY@20
lea ebx, [ebp-80]
push ebx
call _fb_StrDelete@4
jmp .Lt_07A2
.Lt_07A3:
push 1
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+52]
push dword ptr [ebx+48]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-104]
push eax
call _fb_StrAssign@20
lea eax, [ebp-104]
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-80]
push eax
call _fb_StrAssign@20
lea eax, [ebp-80]
push eax
push dword ptr [ebp+12]
call _SYMBGETREALSIZE@4
mov ebx, eax
push ebx
call _MEMCOPY@20
lea ebx, [ebp-104]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-80]
push ebx
call _fb_StrDelete@4
.Lt_07A2:
jmp .Lt_079E
.Lt_07AA:
mov eax, dword ptr [_CTX+92]
mov ebx, eax
sar ebx, 31
mov edx, dword ptr [ebp+12]
mov dword ptr [edx+48], eax
mov dword ptr [edx+52], ebx
movzx eax, byte ptr [_CTX+208]
neg eax
test eax, eax
jne .Lt_07AC
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+40]
mov dword ptr [ebp-4], ebx
cmp dword ptr [ebp-16], 1
jne .Lt_07AE
cmp dword ptr [ebp-4], 4
jne .Lt_07B0
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push -1
push -1
mov ebx, dword ptr [_CTX+84]
dec ebx
push ebx
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
push 6
push offset _Lt_0734
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-104]
push eax
call _fb_StrAssign@20
lea eax, [ebp-104]
push eax
call _HWRITEASM64@8
lea eax, [ebp-104]
push eax
call _fb_StrDelete@4
jmp .Lt_07AF
.Lt_07B0:
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push -1
push -1
mov eax, dword ptr [_CTX+84]
dec eax
push eax
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-104]
push eax
call _fb_StrAssign@20
lea eax, [ebp-104]
push eax
call _HWRITEASM64@8
lea eax, [ebp-104]
push eax
call _fb_StrDelete@4
.Lt_07AF:
jmp .Lt_07AD
.Lt_07AE:
mov eax, dword ptr [ebp-4]
mov dword ptr [ebp-60], eax
jmp .Lt_07BA
.Lt_07BC:
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRB+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
push 14
push offset _Lt_077B
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
jmp .Lt_07B9
.Lt_07C1:
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRW+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
push 14
push offset _Lt_0781
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
jmp .Lt_07B9
.Lt_07C6:
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0787
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
jmp .Lt_07B9
.Lt_07CB:
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
jmp .Lt_07B9
.Lt_07BA:
mov eax, dword ptr [ebp-60]
add eax, 4294967295
cmp eax, 7
ja .Lt_07B9
mov eax, dword ptr [ebp-60]
jmp dword ptr [_.LT_07D0+eax*4-4]
_.LT_07D0:
.int .Lt_07BC
.int .Lt_07C1
.int .Lt_07B9
.int .Lt_07C6
.int .Lt_07B9
.int .Lt_07B9
.int .Lt_07B9
.int .Lt_07CB
.Lt_07B9:
.Lt_07AD:
.Lt_07AC:
.Lt_07AB:
jmp .Lt_079E
.Lt_07D1:
mov ebx, dword ptr [_CTX+92]
mov eax, ebx
sar eax, 31
mov edx, dword ptr [ebp+12]
mov dword ptr [edx+48], ebx
mov dword ptr [edx+52], eax
jmp .Lt_079E
.Lt_079F:
cmp dword ptr [ebp-56], 13
ja .Lt_07D1
mov ebx, dword ptr [ebp-56]
jmp dword ptr [_.LT_07D2+ebx*4]
_.LT_07D2:
.int .Lt_07AA
.int .Lt_07AA
.int .Lt_07D1
.int .Lt_07D1
.int .Lt_07D1
.int .Lt_07D1
.int .Lt_07D1
.int .Lt_07D1
.int .Lt_07D1
.int .Lt_07D1
.int .Lt_07D1
.int .Lt_07D1
.int .Lt_07A1
.int .Lt_07A1
.Lt_079E:
jmp .Lt_079A
.Lt_079B:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+40]
mov dword ptr [ebp-4], eax
mov ebx, dword ptr [_CTX+92]
mov eax, ebx
sar eax, 31
mov edx, dword ptr [ebp+12]
mov dword ptr [edx+48], ebx
mov dword ptr [edx+52], eax
inc dword ptr [_CTX+84]
mov ebx, dword ptr [_CTX+84]
cmp ebx, 4
setle bl
shr ebx, 1
sbb ebx, ebx
movzx eax, byte ptr [_CTX+208]
neg eax
test eax, eax
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_07D4
mov eax, dword ptr [ebp-12]
and eax, 480
je .Lt_07D5
mov dword ptr [ebp-48], 24
jmp .Lt_1B2A
.Lt_07D5:
mov eax, dword ptr [ebp-12]
and eax, 31
mov dword ptr [ebp-48], eax
.Lt_1B2A:
mov eax, dword ptr [ebp-48]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax], 1
jne .Lt_07D8
cmp dword ptr [ebp-4], 4
jne .Lt_07DA
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push -1
mov eax, dword ptr [_CTX+84]
dec eax
push eax
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
push 6
push offset _Lt_0734
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
jmp .Lt_07D9
.Lt_07DA:
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push -1
mov eax, dword ptr [_CTX+84]
dec eax
push eax
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_0735
push -1
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
.Lt_07D9:
jmp .Lt_07D7
.Lt_07D8:
mov eax, dword ptr [ebp-4]
mov dword ptr [ebp-52], eax
jmp .Lt_07E4
.Lt_07E6:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRB+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
push 14
push offset _Lt_077B
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_07E3
.Lt_07EB:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRW+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
push 14
push offset _Lt_0781
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_07E3
.Lt_07F0:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0787
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_07E3
.Lt_07F5:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_07E3
.Lt_07E4:
mov eax, dword ptr [ebp-52]
add eax, 4294967295
cmp eax, 7
ja .Lt_07E3
mov eax, dword ptr [ebp-52]
jmp dword ptr [_.LT_07FA+eax*4-4]
_.LT_07FA:
.int .Lt_07E6
.int .Lt_07EB
.int .Lt_07E3
.int .Lt_07F0
.int .Lt_07E3
.int .Lt_07E3
.int .Lt_07E3
.int .Lt_07F5
.Lt_07E3:
.Lt_07D7:
.Lt_07D4:
.Lt_07D3:
.Lt_079A:
jmp .Lt_0798
.Lt_0799:
inc dword ptr [_CTX+84]
mov ebx, dword ptr [_CTX+92]
mov eax, ebx
sar eax, 31
mov edx, dword ptr [ebp+12]
mov dword ptr [edx+48], ebx
mov dword ptr [edx+52], eax
mov ebx, dword ptr [_CTX+84]
cmp ebx, 4
setle bl
shr ebx, 1
sbb ebx, ebx
movzx eax, byte ptr [_CTX+208]
neg eax
test eax, eax
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_07FC
push 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
push 0
push -1
push 0
mov eax, dword ptr [_CTX+84]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push -1
push 8
push offset _Lt_0345
push -1
push -1
push dword ptr [_CTX+92]
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-92]
push eax
call _fb_StrAssign@20
lea eax, [ebp-92]
push eax
call _HWRITEASM64@8
lea eax, [ebp-92]
push eax
call _fb_StrDelete@4
.Lt_07FC:
.Lt_07FB:
.Lt_0798:
.Lt_0721:
cmp dword ptr [_ENV+148], -1
jne .Lt_0802
push dword ptr [ebp+12]
call _EDBGEMITPROCARG_ASM64@4
.Lt_0802:
lea eax, [ebp-44]
push eax
call _fb_StrDelete@4
lea eax, [ebp-32]
push eax
call _fb_StrDelete@4
.Lt_0720:
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16
__PROCALLOCLOCAL@8:
push ebp
mov ebp, esp
.Lt_0803:
push dword ptr [ebp+12]
call _HEMITVARIABLE@4
.Lt_0804:
mov esp, ebp
pop ebp
ret 8
.balign 16
__PROCALLOCSTATICVARS@4:
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_0805:
mov dword ptr [_CTX+4], 2
.Lt_0807:
cmp dword ptr [ebp+8], 0
je .Lt_0808
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-4], ebx
cmp dword ptr [ebp-4], 15
jne .Lt_080B
.Lt_080C:
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+64]
call __PROCALLOCSTATICVARS@4
jmp .Lt_0809
.Lt_080B:
cmp dword ptr [ebp-4], 1
jne .Lt_080D
.Lt_080E:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
je .Lt_0810
push dword ptr [ebp+8]
call _HMAYBEEMITGLOBALVAR@4
.Lt_0810:
.Lt_080F:
.Lt_080D:
.Lt_0809:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+176]
mov dword ptr [ebp+8], ebx
jmp .Lt_0807
.Lt_0808:
.Lt_0806:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
__SETVREGDATATYPE@12:
push ebp
mov ebp, esp
sub esp, 4
push ebx
.Lt_0811:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp+12]
cmp ebx, dword ptr [eax+4]
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+8]
cmp ecx, dword ptr [ebp+16]
setne al
shr eax, 1
sbb eax, eax
or ebx, eax
je .Lt_0814
push dword ptr [ebp+16]
push dword ptr [ebp+12]
call _IRHLALLOCVREG@8
mov dword ptr [ebp-4], eax
push dword ptr [ebp+8]
push dword ptr [ebp-4]
call __EMITCONVERT@8
push edi
push esi
mov edi, dword ptr [ebp+8]
mov esi, dword ptr [ebp-4]
mov ecx, 18
rep movsd
pop esi
pop edi
.Lt_0814:
.Lt_0813:
.Lt_0812:
pop ebx
mov esp, ebp
pop ebp
ret 12
.balign 16
__EMITLABEL@4:
push ebp
mov ebp, esp
sub esp, 24
push ebx
.Lt_0815:
mov eax, dword ptr [_CTX+200]
cmp eax, dword ptr [ebp+8]
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [_CTX+204]
cmp eax, dword ptr [ebp+8]
sete cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_0818
push dword ptr [ebp+8]
call _REG_BRANCH@4
jmp .Lt_0817
.Lt_0818:
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push -1
push 2
push offset _Lt_00EF
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
lea eax, [ebp-24]
push eax
call _HWRITEASM64@8
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
.Lt_0817:
mov eax, dword ptr [ebp+8]
cmp byte ptr [eax+68], 0
je .Lt_081C
push 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 31
push offset _Lt_081D
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _HWRITEASM64@8
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_081C:
.Lt_081B:
.Lt_0816:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
_PREPARE_IDX@12:
push ebp
mov ebp, esp
sub esp, 252
push ebx
.Lt_081F:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+32], 0
jne .Lt_0822
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+52]
cmp dword ptr [ebx+32], 0
jne .Lt_0824
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+52]
cmp dword ptr [eax+12], -1
je .Lt_0826
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+12]
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_0820
jmp .Lt_0825
.Lt_0826:
push 0
push 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+52]
mov eax, dword ptr [ebx+52]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 2
push offset _Lt_0119
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+16]
call _fb_StrAssign@20
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+12]
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_0820
.Lt_0825:
jmp .Lt_0823
.Lt_0824:
push 0
push 0
call _REG_TEMPO@0
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+52]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+4]
and ebx, 2
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+52]
mov eax, dword ptr [ecx+32]
mov ecx, dword ptr [eax+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_0833
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ecx+52]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push -1
push 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_012F
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+16]
call _fb_StrAssign@20
push 0
push -1
push -1
push 6
push offset _Lt_083B
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 2
push offset _Lt_0119
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 5
push offset _Lt_038A
push -1
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push 3
push offset _Lt_0125
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+16]
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+16]
call _fb_StrAssign@20
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+12]
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_0820
jmp .Lt_0832
.Lt_0833:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push -1
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+16]
call _fb_StrAssign@20
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+12]
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_0820
.Lt_0832:
.Lt_0823:
jmp .Lt_0821
.Lt_0822:
push 0
push 0
call _REG_TEMPO@0
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_084F
push 0
push -1
push 6
push offset _Lt_083B
push -1
push -1
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push -1
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_012F
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+16]
call _fb_StrAssign@20
jmp .Lt_084E
.Lt_084F:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_012F
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+16]
call _fb_StrAssign@20
.Lt_084E:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+52]
cmp dword ptr [ebx], 4
jne .Lt_085B
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+52]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_085C
push -1
push -1
lea eax, [ebp-12]
push eax
push 2
push offset _Lt_0119
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+12]
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_0820
jmp .Lt_085A
.Lt_085B:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+52]
cmp dword ptr [ebx], 1
jne .Lt_0861
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+52]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+52]
mov ebx, dword ptr [ecx+32]
mov ecx, dword ptr [ebx+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
je .Lt_0863
push 0
push -1
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ecx+52]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push -1
push 0
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+52]
push dword ptr [ecx+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 5
push offset _Lt_0411
push -1
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push 3
push offset _Lt_0125
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+16]
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+16]
call _fb_StrAssign@20
jmp .Lt_0862
.Lt_0863:
push 0
push -1
push -1
push 6
push offset _Lt_03BE
push -1
push -1
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+52]
push dword ptr [ecx+44]
push dword ptr [ecx+40]
call _fb_LongintToStr@8
push eax
push -1
push 2
push offset _Lt_0103
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 5
push offset _Lt_0411
push -1
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push 3
push offset _Lt_0125
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+16]
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+16]
call _fb_StrAssign@20
.Lt_0862:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-12]
push eax
push 2
push offset _Lt_0119
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+12]
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_0820
.Lt_0861:
.Lt_085A:
.Lt_0821:
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
lea eax, [ebp-24]
push eax
call _HWRITEASM64@8
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push 49
push offset _Lt_0878
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
lea eax, [ebp-36]
push eax
call _HWRITEASM64@8
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
lea eax, [ebp-48]
push eax
call _HWRITEASM64@8
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
push 1
push offset _Lt_0000
push -1
push dword ptr [ebp+12]
call _fb_StrCompare@16
test eax, eax
jne .Lt_087C
push 0
push 4
push offset _Lt_087D
push -1
push dword ptr [ebp+12]
call _fb_StrAssign@20
.Lt_087C:
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_0820:
pop ebx
mov esp, ebp
pop ebp
ret 12
.balign 16
_HGETBOPCODE@4:
push ebp
mov ebp, esp
sub esp, 8
mov dword ptr [ebp-4], 0
.Lt_087E:
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-8], eax
jmp .Lt_0881
.Lt_0883:
mov eax, offset _Lt_01B9
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_0884:
mov eax, offset _Lt_01BA
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_0885:
mov eax, offset _Lt_0886
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_0887:
mov eax, offset _Lt_0888
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_0889:
mov eax, offset _Lt_088A
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_088B:
mov eax, offset _Lt_088C
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_088D:
mov eax, offset _Lt_088E
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_088F:
mov eax, offset _Lt_0890
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_0891:
mov eax, offset _Lt_0892
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_0893:
mov eax, offset _Lt_0894
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_0895:
mov eax, offset _Lt_0896
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_0897:
mov eax, offset _Lt_0898
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_0899:
mov eax, offset _Lt_089A
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_089B:
mov eax, offset _Lt_089C
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_089D:
mov eax, offset _Lt_089E
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_089F:
mov eax, offset _Lt_08A0
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_08A1:
mov eax, offset _Lt_08A2
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_08A3:
mov eax, offset _Lt_08A4
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_08A5:
mov eax, offset _Lt_08A6
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_08A7:
mov eax, offset _Lt_00F6
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_08A8:
mov eax, offset _Lt_08A9
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_08AA:
mov eax, offset _Lt_08AB
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_08AC:
mov eax, offset _Lt_08AD
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_08AE:
mov eax, offset _Lt_08AF
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_08B0:
mov eax, offset _Lt_08B1
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_08B2:
mov eax, offset _Lt_08B3
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_08B4:
mov eax, offset _Lt_08B5
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_08B6:
mov eax, offset _Lt_08B7
mov dword ptr [ebp-4], eax
jmp .Lt_0880
.Lt_0881:
mov eax, dword ptr [ebp-8]
add eax, 4294967268
cmp eax, 71
ja .Lt_08B6
mov eax, dword ptr [ebp-8]
jmp dword ptr [_.LT_08B8+eax*4-112]
_.LT_08B8:
.int .Lt_0883
.int .Lt_0884
.int .Lt_0885
.int .Lt_0887
.int .Lt_0889
.int .Lt_088B
.int .Lt_0891
.int .Lt_0893
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_0895
.int .Lt_08A3
.int .Lt_08A5
.int .Lt_088D
.int .Lt_088F
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_0897
.int .Lt_089B
.int .Lt_089D
.int .Lt_0899
.int .Lt_089F
.int .Lt_08A1
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08B6
.int .Lt_08A8
.int .Lt_08AA
.int .Lt_08AC
.int .Lt_08AE
.int .Lt_08B0
.int .Lt_08B2
.int .Lt_08A7
.int .Lt_08B4
.Lt_0880:
.Lt_087F:
mov eax, dword ptr [ebp-4]
mov esp, ebp
pop ebp
ret 4
.balign 16
_RESTORE_VRREG@8:
push ebp
mov ebp, esp
push ebx
.Lt_08B9:
mov eax, dword ptr [ebp+12]
mov dword ptr [_CTX+216], eax
mov dword ptr [_CTX+220], 1
mov eax, dword ptr [ebp+12]
cmp dword ptr [_REGHANDLE+eax*4], -2
jne .Lt_08BC
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [eax+12]
mov dword ptr [_REGHANDLE+ebx*4], ecx
.Lt_08BC:
.Lt_08BB:
.Lt_08BA:
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16
_BOP_FLOAT@40:
push ebp
mov ebp, esp
sub esp, 228
push ebx
.Lt_08BD:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-132], 0
cmp dword ptr [ebp+20], 0
je .Lt_08C0
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call _REG_FINDFREE@8
mov dword ptr [ebp-124], eax
.Lt_08C0:
.Lt_08BF:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 511
mov dword ptr [ebp-128], ebx
cmp dword ptr [ebp-128], 16
jne .Lt_08C2
push 0
push 6
push offset _Lt_073A
push -1
lea ebx, [ebp-36]
push ebx
call _fb_StrAssign@20
push 0
push 7
push offset _Lt_08C3
push -1
lea ebx, [ebp-48]
push ebx
call _fb_StrAssign@20
push 0
push 9
push offset _Lt_08C4
push -1
lea ebx, [ebp-60]
push ebx
call _fb_StrAssign@20
push 0
push 4
push offset _Lt_00A0
push -1
lea ebx, [ebp-72]
push ebx
call _fb_StrAssign@20
push 0
push 7
push offset _Lt_08C5
push -1
lea ebx, [ebp-84]
push ebx
call _fb_StrAssign@20
push 0
push 7
push offset _Lt_08C6
push -1
lea ebx, [ebp-96]
push ebx
call _fb_StrAssign@20
push 0
push 7
push offset _Lt_08C7
push -1
lea ebx, [ebp-108]
push ebx
call _fb_StrAssign@20
push 0
push 7
push offset _Lt_08C8
push -1
lea ebx, [ebp-120]
push ebx
call _fb_StrAssign@20
jmp .Lt_08C1
.Lt_08C2:
push 0
push 6
push offset _Lt_0734
push -1
lea ebx, [ebp-36]
push ebx
call _fb_StrAssign@20
push 0
push 7
push offset _Lt_08C9
push -1
lea ebx, [ebp-48]
push ebx
call _fb_StrAssign@20
push 0
push 9
push offset _Lt_08CA
push -1
lea ebx, [ebp-60]
push ebx
call _fb_StrAssign@20
push 0
push 4
push offset _Lt_00B3
push -1
lea ebx, [ebp-72]
push ebx
call _fb_StrAssign@20
push 0
push 7
push offset _Lt_08CB
push -1
lea ebx, [ebp-84]
push ebx
call _fb_StrAssign@20
push 0
push 7
push offset _Lt_08CC
push -1
lea ebx, [ebp-96]
push ebx
call _fb_StrAssign@20
push 0
push 7
push offset _Lt_08CD
push -1
lea ebx, [ebp-108]
push ebx
call _fb_StrAssign@20
push 0
push 7
push offset _Lt_08CE
push -1
lea ebx, [ebp-120]
push ebx
call _fb_StrAssign@20
.Lt_08C1:
mov ebx, dword ptr [ebp+12]
cmp dword ptr [ebx], 4
jne .Lt_08D0
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
push -1
push dword ptr [ebp+24]
push -1
push 7
push offset _Lt_08D1
push -1
lea ebx, [ebp-36]
push ebx
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea ebx, [ebp-144]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-168]
push eax
call _fb_StrAssign@20
lea eax, [ebp-168]
push eax
call _HWRITEASM64@8
lea eax, [ebp-168]
push eax
call _fb_StrDelete@4
jmp .Lt_08CF
.Lt_08D0:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 0
jne .Lt_08D5
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
push -1
push dword ptr [ebp+24]
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-72]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push 7
push offset _Lt_08D1
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
jmp .Lt_08CF
.Lt_08D5:
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
push -1
push dword ptr [ebp+24]
push -1
push 7
push offset _Lt_08D1
push -1
lea eax, [ebp-48]
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-168]
push eax
call _fb_StrAssign@20
lea eax, [ebp-168]
push eax
call _HWRITEASM64@8
lea eax, [ebp-168]
push eax
call _fb_StrDelete@4
.Lt_08CF:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 4
jne .Lt_08E1
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
push -1
push dword ptr [ebp+28]
push -1
push 7
push offset _Lt_08E2
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-168]
push eax
call _fb_StrAssign@20
lea eax, [ebp-168]
push eax
call _HWRITEASM64@8
lea eax, [ebp-168]
push eax
call _fb_StrDelete@4
jmp .Lt_08E0
.Lt_08E1:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 0
jne .Lt_08E6
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
push -1
push dword ptr [ebp+28]
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-72]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push 7
push offset _Lt_08E2
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
jmp .Lt_08E0
.Lt_08E6:
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
push -1
push dword ptr [ebp+28]
push -1
push 7
push offset _Lt_08E2
push -1
lea eax, [ebp-48]
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-168]
push eax
call _fb_StrAssign@20
lea eax, [ebp-168]
push eax
call _HWRITEASM64@8
lea eax, [ebp-168]
push eax
call _fb_StrDelete@4
.Lt_08E0:
cmp dword ptr [ebp+8], 45
je .Lt_08F3
.Lt_08F4:
cmp dword ptr [ebp+8], 48
je .Lt_08F3
.Lt_08F5:
cmp dword ptr [ebp+8], 47
je .Lt_08F3
.Lt_08F6:
cmp dword ptr [ebp+8], 50
je .Lt_08F3
.Lt_08F7:
cmp dword ptr [ebp+8], 46
je .Lt_08F3
.Lt_08F8:
cmp dword ptr [ebp+8], 49
jne .Lt_08F2
.Lt_08F3:
cmp dword ptr [ebp+44], 0
jne .Lt_08FA
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
push 5
push offset _Lt_08FB
push -1
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
.Lt_08FA:
.Lt_08F9:
push 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push -1
push 11
push offset _Lt_08FF
push -1
lea eax, [ebp-60]
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-156]
push eax
call _fb_StrAssign@20
lea eax, [ebp-156]
push eax
call _HWRITEASM64@8
lea eax, [ebp-156]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+8], 45
jne .Lt_0903
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 4
push offset _Lt_0904
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
jmp .Lt_0902
.Lt_0903:
cmp dword ptr [ebp+8], 48
jne .Lt_0907
cmp dword ptr [ebp+44], 0
jne .Lt_0909
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 4
push offset _Lt_0904
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
jmp .Lt_0908
.Lt_0909:
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
push 0
push dword ptr [ebp+44]
call _SYMBGETMANGLEDNAME@4
push eax
push 4
push offset _Lt_0904
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
.Lt_0908:
.Lt_0907:
.Lt_0902:
cmp dword ptr [ebp+8], 45
jne .Lt_090F
.Lt_0910:
mov eax, offset _Lt_0911
mov dword ptr [ebp-132], eax
jmp .Lt_090E
.Lt_090F:
cmp dword ptr [ebp+8], 48
jne .Lt_0912
.Lt_0913:
mov eax, offset _Lt_0914
mov dword ptr [ebp-132], eax
jmp .Lt_090E
.Lt_0912:
cmp dword ptr [ebp+8], 47
jne .Lt_0915
.Lt_0916:
mov eax, offset _Lt_0917
mov dword ptr [ebp-132], eax
jmp .Lt_090E
.Lt_0915:
cmp dword ptr [ebp+8], 50
jne .Lt_0918
.Lt_0919:
mov eax, offset _Lt_091A
mov dword ptr [ebp-132], eax
jmp .Lt_090E
.Lt_0918:
cmp dword ptr [ebp+8], 46
jne .Lt_091B
.Lt_091C:
mov eax, offset _Lt_091D
mov dword ptr [ebp-132], eax
jmp .Lt_090E
.Lt_091B:
cmp dword ptr [ebp+8], 49
jne .Lt_091E
.Lt_091F:
mov eax, offset _Lt_0920
mov dword ptr [ebp-132], eax
.Lt_091E:
.Lt_090E:
cmp dword ptr [ebp+44], 0
jne .Lt_0922
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 0
push dword ptr [ebp-132]
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
jmp .Lt_0921
.Lt_0922:
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
push 0
push dword ptr [ebp+44]
call _SYMBGETMANGLEDNAME@4
push eax
push 0
push dword ptr [ebp-132]
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
push dword ptr [ebp+44]
call _REG_MARK@4
.Lt_0921:
cmp dword ptr [ebp+8], 45
jne .Lt_0928
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
.Lt_0928:
cmp dword ptr [ebp+44], 0
jne .Lt_092C
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_092D
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
push dword ptr [ebp-124]
push dword ptr [ebp+20]
call _RESTORE_VRREG@8
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
.Lt_092C:
.Lt_092B:
jmp .Lt_08F1
.Lt_08F2:
cmp dword ptr [ebp+8], 28
je .Lt_0935
.Lt_0936:
cmp dword ptr [ebp+8], 29
je .Lt_0935
.Lt_0937:
cmp dword ptr [ebp+8], 30
je .Lt_0935
.Lt_0938:
cmp dword ptr [ebp+8], 31
jne .Lt_0934
.Lt_0935:
cmp dword ptr [ebp+8], 28
jne .Lt_093A
.Lt_093B:
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
push 11
push offset _Lt_08FF
push -1
lea eax, [ebp-84]
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
jmp .Lt_0939
.Lt_093A:
cmp dword ptr [ebp+8], 29
jne .Lt_093E
.Lt_093F:
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
push 11
push offset _Lt_08FF
push -1
lea eax, [ebp-96]
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
jmp .Lt_0939
.Lt_093E:
cmp dword ptr [ebp+8], 30
jne .Lt_0942
.Lt_0943:
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
push 11
push offset _Lt_08FF
push -1
lea eax, [ebp-108]
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
jmp .Lt_0939
.Lt_0942:
cmp dword ptr [ebp+8], 31
jne .Lt_0946
.Lt_0947:
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
push 11
push offset _Lt_08FF
push -1
lea eax, [ebp-120]
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
.Lt_0946:
.Lt_0939:
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [_REGSTRQ+eax*4]
push 6
push offset _Lt_073A
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-168]
push eax
call _fb_StrAssign@20
lea eax, [ebp-168]
push eax
call _HWRITEASM64@8
lea eax, [ebp-168]
push eax
call _fb_StrDelete@4
push dword ptr [ebp-124]
push dword ptr [ebp+20]
call _RESTORE_VRREG@8
jmp .Lt_08F1
.Lt_0934:
cmp dword ptr [ebp+8], 64
jne .Lt_094E
.Lt_094F:
cmp dword ptr [ebp-128], 16
jne .Lt_0951
push dword ptr [ebp-124]
push dword ptr [ebp+20]
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 6
push offset _Lt_0952
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _SAVE_CALL@12
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [_REGSTRQ+eax*4]
push 6
push offset _Lt_073A
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
jmp .Lt_0950
.Lt_0951:
push dword ptr [ebp-124]
push dword ptr [ebp+20]
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 7
push offset _Lt_0957
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _SAVE_CALL@12
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [_REGSTRQ+eax*4]
push 6
push offset _Lt_0734
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
.Lt_0950:
jmp .Lt_08F1
.Lt_094E:
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
push 0
push dword ptr [ebp+8]
call _HGETBOPCODE@4
push eax
push 51
push offset _Lt_095F
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-168]
push eax
call _fb_StrAssign@20
lea eax, [ebp-168]
push eax
call _HWRITEASM64@8
lea eax, [ebp-168]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
.Lt_095C:
.Lt_08F1:
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_08BE:
pop ebx
mov esp, ebp
pop ebp
ret 40
.balign 16
_HLOADOPERANDSANDWRITEBOP@20:
push ebp
mov ebp, esp
sub esp, 352
push ebx
.Lt_0963:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-144], 0
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 511
mov dword ptr [ebp-124], ebx
mov ebx, dword ptr [ebp-124]
and ebx, 480
test ebx, ebx
je .Lt_0966
mov dword ptr [ebp-124], 8
.Lt_0966:
cmp dword ptr [ebp-124], 8
je .Lt_0969
.Lt_096A:
cmp dword ptr [ebp-124], 9
je .Lt_0969
.Lt_096B:
cmp dword ptr [ebp-124], 13
je .Lt_0969
.Lt_096C:
cmp dword ptr [ebp-124], 14
je .Lt_0969
.Lt_096D:
cmp dword ptr [ebp-124], 10
je .Lt_0969
.Lt_096E:
cmp dword ptr [ebp-124], 16
jne .Lt_0968
.Lt_0969:
push 0
push 11
push offset _Lt_096F
push -1
lea ebx, [ebp-60]
push ebx
call _fb_StrAssign@20
jmp .Lt_0967
.Lt_0968:
cmp dword ptr [ebp-124], 11
je .Lt_0971
.Lt_0972:
cmp dword ptr [ebp-124], 12
je .Lt_0971
.Lt_0973:
cmp dword ptr [ebp-124], 15
jne .Lt_0970
.Lt_0971:
push 0
push 11
push offset _Lt_0974
push -1
lea ebx, [ebp-60]
push ebx
call _fb_StrAssign@20
jmp .Lt_0967
.Lt_0970:
cmp dword ptr [ebp-124], 5
je .Lt_0976
.Lt_0977:
cmp dword ptr [ebp-124], 6
jne .Lt_0975
.Lt_0976:
push 0
push 10
push offset _Lt_0978
push -1
lea ebx, [ebp-60]
push ebx
call _fb_StrAssign@20
jmp .Lt_0967
.Lt_0975:
cmp dword ptr [ebp-124], 2
je .Lt_097A
.Lt_097B:
cmp dword ptr [ebp-124], 3
je .Lt_097A
.Lt_097C:
cmp dword ptr [ebp-124], 1
je .Lt_097A
.Lt_097D:
cmp dword ptr [ebp-124], 4
jne .Lt_0979
.Lt_097A:
push 0
push 10
push offset _Lt_097E
push -1
lea ebx, [ebp-60]
push ebx
call _fb_StrAssign@20
jmp .Lt_0967
.Lt_0979:
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset _Lt_0000
push -1
lea ebx, [ebp-188]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-188]
push ebx
call _HWRITEASM64@8
lea ebx, [ebp-188]
push ebx
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+4]
call _fb_IntToStr@4
push eax
push 48
push offset _Lt_0983
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
.Lt_097F:
.Lt_0967:
push 0
push -1
lea eax, [ebp-60]
push eax
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-180], ebx
cmp dword ptr [ebp-180], 4
jne .Lt_0989
.Lt_098A:
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-132], eax
cmp dword ptr [ebp-124], 8
je .Lt_098D
.Lt_098E:
cmp dword ptr [ebp-124], 9
je .Lt_098D
.Lt_098F:
cmp dword ptr [ebp-124], 13
je .Lt_098D
.Lt_0990:
cmp dword ptr [ebp-124], 14
je .Lt_098D
.Lt_0991:
cmp dword ptr [ebp-124], 10
je .Lt_098D
.Lt_0992:
cmp dword ptr [ebp-124], 16
jne .Lt_098C
.Lt_098D:
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_098B
.Lt_098C:
cmp dword ptr [ebp-124], 11
je .Lt_0994
.Lt_0995:
cmp dword ptr [ebp-124], 12
je .Lt_0994
.Lt_0996:
cmp dword ptr [ebp-124], 15
jne .Lt_0993
.Lt_0994:
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRD+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_098B
.Lt_0993:
cmp dword ptr [ebp-124], 5
je .Lt_0998
.Lt_0999:
cmp dword ptr [ebp-124], 6
jne .Lt_0997
.Lt_0998:
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRW+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_098B
.Lt_0997:
cmp dword ptr [ebp-124], 2
je .Lt_099B
.Lt_099C:
cmp dword ptr [ebp-124], 3
je .Lt_099B
.Lt_099D:
cmp dword ptr [ebp-124], 1
je .Lt_099B
.Lt_099E:
cmp dword ptr [ebp-124], 4
jne .Lt_099A
.Lt_099B:
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRB+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_098B
.Lt_099A:
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 47
push offset _Lt_09A3
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
.Lt_099F:
.Lt_098B:
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
jmp .Lt_0987
.Lt_0989:
cmp dword ptr [ebp-180], 2
jne .Lt_09A7
.Lt_09A8:
lea eax, [ebp-36]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+12]
call _PREPARE_IDX@12
jmp .Lt_0987
.Lt_09A7:
cmp dword ptr [ebp-180], 3
jne .Lt_09A9
.Lt_09AA:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0987
.Lt_09A9:
cmp dword ptr [ebp-180], 5
jne .Lt_09AE
.Lt_09AF:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0987
.Lt_09AE:
cmp dword ptr [ebp-180], 0
jne .Lt_09B3
.Lt_09B4:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_09B5
mov dword ptr [ebp-184], 24
jmp .Lt_1B3B
.Lt_09B5:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-184], eax
.Lt_1B3B:
mov eax, dword ptr [ebp-184]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax], 1
jne .Lt_09B8
push 0
push -1
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
mov eax, dword ptr [ebp+12]
push dword ptr [eax+28]
push dword ptr [eax+24]
call _HFLOATTOHEX_ASM64@16
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_09B7
.Lt_09B8:
cmp dword ptr [ebp-124], 1
jne .Lt_09BA
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+28], 0
jne .Lt_1B44
cmp dword ptr [eax+24], 0
je .Lt_09BC
.Lt_1B44:
mov eax, dword ptr [ebp+12]
mov dword ptr [eax+24], 1
mov dword ptr [eax+28], 0
.Lt_09BC:
.Lt_09BB:
.Lt_09BA:
.Lt_09B9:
push 0
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+28]
push dword ptr [eax+24]
call _fb_LongintToStr@8
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_09B7:
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
jmp .Lt_0987
.Lt_09B3:
cmp dword ptr [ebp-180], 1
jne .Lt_09BD
.Lt_09BE:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_09C0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_09BF
.Lt_09C0:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_09BF:
jmp .Lt_0987
.Lt_09BD:
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push 51
push offset _Lt_09C8
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
.Lt_09C5:
.Lt_0987:
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-180], ebx
cmp dword ptr [ebp-180], 4
jne .Lt_09CD
.Lt_09CE:
mov ebx, dword ptr [ebp+16]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-140], eax
cmp dword ptr [ebp-124], 8
je .Lt_09D1
.Lt_09D2:
cmp dword ptr [ebp-124], 9
je .Lt_09D1
.Lt_09D3:
cmp dword ptr [ebp-124], 13
je .Lt_09D1
.Lt_09D4:
cmp dword ptr [ebp-124], 14
je .Lt_09D1
.Lt_09D5:
cmp dword ptr [ebp-124], 10
je .Lt_09D1
.Lt_09D6:
cmp dword ptr [ebp-124], 16
jne .Lt_09D0
.Lt_09D1:
push 0
push 0
mov eax, dword ptr [ebp-140]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_09CF
.Lt_09D0:
cmp dword ptr [ebp-124], 11
je .Lt_09D8
.Lt_09D9:
cmp dword ptr [ebp-124], 12
je .Lt_09D8
.Lt_09DA:
cmp dword ptr [ebp-124], 15
jne .Lt_09D7
.Lt_09D8:
push 0
push 0
mov eax, dword ptr [ebp-140]
push dword ptr [_REGSTRD+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_09CF
.Lt_09D7:
cmp dword ptr [ebp-124], 5
je .Lt_09DC
.Lt_09DD:
cmp dword ptr [ebp-124], 6
jne .Lt_09DB
.Lt_09DC:
push 0
push 0
mov eax, dword ptr [ebp-140]
push dword ptr [_REGSTRW+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_09CF
.Lt_09DB:
cmp dword ptr [ebp-124], 2
je .Lt_09DF
.Lt_09E0:
cmp dword ptr [ebp-124], 3
je .Lt_09DF
.Lt_09E1:
cmp dword ptr [ebp-124], 1
je .Lt_09DF
.Lt_09E2:
cmp dword ptr [ebp-124], 4
jne .Lt_09DE
.Lt_09DF:
push 0
push 0
mov eax, dword ptr [ebp-140]
push dword ptr [_REGSTRB+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_09CF
.Lt_09DE:
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 47
push offset _Lt_09E7
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
.Lt_09E3:
.Lt_09CF:
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
jmp .Lt_09CB
.Lt_09CD:
cmp dword ptr [ebp-180], 0
jne .Lt_09EB
.Lt_09EC:
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_09ED
mov dword ptr [ebp-184], 24
jmp .Lt_1B3C
.Lt_09ED:
mov ebx, dword ptr [ebp+16]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-184], eax
.Lt_1B3C:
mov eax, dword ptr [ebp-184]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax], 1
jne .Lt_09F0
push 0
push -1
push 0
mov eax, dword ptr [ebp+16]
push dword ptr [eax+4]
mov eax, dword ptr [ebp+16]
push dword ptr [eax+28]
push dword ptr [eax+24]
call _HFLOATTOHEX_ASM64@16
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_09EF
.Lt_09F0:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+4], 1
jne .Lt_09F2
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+28], 0
jne .Lt_1B47
cmp dword ptr [eax+24], 0
je .Lt_09F4
.Lt_1B47:
mov eax, dword ptr [ebp+16]
mov dword ptr [eax+24], 1
mov dword ptr [eax+28], 0
.Lt_09F4:
.Lt_09F3:
.Lt_09F2:
.Lt_09F1:
push 0
push -1
mov eax, dword ptr [ebp+16]
push dword ptr [eax+28]
push dword ptr [eax+24]
call _fb_LongintToStr@8
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_09EF:
jmp .Lt_09CB
.Lt_09EB:
cmp dword ptr [ebp-180], 3
jne .Lt_09F5
.Lt_09F6:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+16]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_09CB
.Lt_09F5:
cmp dword ptr [ebp-180], 5
jne .Lt_09FA
.Lt_09FB:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+16]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+16]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_09CB
.Lt_09FA:
cmp dword ptr [ebp-180], 2
jne .Lt_09FF
.Lt_0A00:
lea eax, [ebp-48]
push eax
lea eax, [ebp-24]
push eax
push dword ptr [ebp+16]
call _PREPARE_IDX@12
jmp .Lt_09CB
.Lt_09FF:
cmp dword ptr [ebp-180], 1
jne .Lt_0A01
.Lt_0A02:
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+16]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0A04
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ebx, dword ptr [ebp+16]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+16]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0A03
.Lt_0A04:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+16]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_0A03:
jmp .Lt_09CB
.Lt_0A01:
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push 51
push offset _Lt_0A0C
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
.Lt_0A09:
.Lt_09CB:
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-36]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_0A10
lea eax, [ebp-36]
push eax
call _EMITOP3_OP4@4
.Lt_0A10:
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-48]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_0A12
lea eax, [ebp-48]
push eax
call _EMITOP3_OP4@4
.Lt_0A12:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_0A13
mov dword ptr [ebp-148], 24
jmp .Lt_1B3D
.Lt_0A13:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-148], eax
.Lt_1B3D:
mov eax, dword ptr [ebp-148]
imul eax, 28
mov ebx, dword ptr [_SYMB_DTYPETB+eax]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-180], ebx
mov ebx, dword ptr [ebp+16]
mov eax, dword ptr [ebx+4]
and eax, 480
je .Lt_0A15
mov dword ptr [ebp-152], 24
jmp .Lt_1B3E
.Lt_0A15:
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+4]
and ebx, 31
mov dword ptr [ebp-152], ebx
.Lt_1B3E:
mov ebx, dword ptr [ebp-152]
imul ebx, 28
mov eax, dword ptr [_SYMB_DTYPETB+ebx]
cmp eax, 1
sete al
shr eax, 1
sbb eax, eax
or eax, dword ptr [ebp-180]
je .Lt_0A18
push dword ptr [ebp+24]
lea eax, [ebp-60]
push eax
lea eax, [ebp-48]
push eax
lea eax, [ebp-36]
push eax
lea eax, [ebp-24]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+20]
push dword ptr [ebp+16]
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call _BOP_FLOAT@40
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_0964
.Lt_0A18:
.Lt_0A17:
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [ebp-60]
push eax
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
lea eax, [ebp-176]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
cmp dword ptr [ebp+20], 0
je .Lt_0A1C
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_0A1E
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+20]
mov ecx, dword ptr [eax+12]
mov dword ptr [ebx+12], ecx
jmp .Lt_0A1D
.Lt_0A1E:
push -1
mov ecx, dword ptr [ebp+20]
push dword ptr [ecx+12]
call _REG_FINDFREE@8
mov dword ptr [ebp-132], eax
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 5
jne .Lt_0A20
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0A1F
.Lt_0A20:
cmp dword ptr [ebp-124], 8
je .Lt_0A27
.Lt_0A28:
cmp dword ptr [ebp-124], 9
je .Lt_0A27
.Lt_0A29:
cmp dword ptr [ebp-124], 13
je .Lt_0A27
.Lt_0A2A:
cmp dword ptr [ebp-124], 14
je .Lt_0A27
.Lt_0A2B:
cmp dword ptr [ebp-124], 10
jne .Lt_0A26
.Lt_0A27:
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0A25
.Lt_0A26:
cmp dword ptr [ebp-124], 11
je .Lt_0A31
.Lt_0A32:
cmp dword ptr [ebp-124], 12
jne .Lt_0A30
.Lt_0A31:
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRD+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRD+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0A25
.Lt_0A30:
cmp dword ptr [ebp-124], 5
je .Lt_0A38
.Lt_0A39:
cmp dword ptr [ebp-124], 6
jne .Lt_0A37
.Lt_0A38:
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRW+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRW+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0A25
.Lt_0A37:
cmp dword ptr [ebp-124], 2
je .Lt_0A3F
.Lt_0A40:
cmp dword ptr [ebp-124], 3
je .Lt_0A3F
.Lt_0A41:
cmp dword ptr [ebp-124], 1
je .Lt_0A3F
.Lt_0A42:
cmp dword ptr [ebp-124], 4
jne .Lt_0A3E
.Lt_0A3F:
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRB+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRB+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0A25
.Lt_0A3E:
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-188]
push eax
call _fb_StrAssign@20
lea eax, [ebp-188]
push eax
call _HWRITEASM64@8
lea eax, [ebp-188]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 49
push offset _Lt_0A4B
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
.Lt_0A47:
.Lt_0A25:
.Lt_0A1F:
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
.Lt_0A1D:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 5
jne .Lt_0A50
push -1
push 99999
call _REG_FINDFREE@8
mov dword ptr [ebp-136], eax
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-136]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-136]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_0A50:
.Lt_0A4F:
jmp .Lt_0A1B
.Lt_0A1C:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 5
jne .Lt_0A56
push -1
push 99999
call _REG_FINDFREE@8
mov dword ptr [ebp-136], eax
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-136]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-136]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_0A56:
.Lt_0A55:
cmp dword ptr [ebp+8], 30
jne .Lt_0A5C
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
je .Lt_0A5E
push 0
push 8
call _IRHLALLOCVREG@8
mov dword ptr [ebp+20], eax
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call _REG_FINDFREE@8
mov dword ptr [ebp-132], eax
push 0
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_0A5E:
.Lt_0A5D:
jmp .Lt_0A5B
.Lt_0A5C:
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax]
cmp ecx, 4
setne cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax]
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
and ecx, ebx
je .Lt_0A64
push 0
push dword ptr [ebp-124]
call _IRHLALLOCVREG@8
mov dword ptr [ebp-144], eax
push -1
mov eax, dword ptr [ebp-144]
push dword ptr [eax+12]
call _REG_FINDFREE@8
mov dword ptr [ebp-132], eax
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 5
jne .Lt_0A66
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0A65
.Lt_0A66:
cmp dword ptr [ebp-124], 8
je .Lt_0A6D
.Lt_0A6E:
cmp dword ptr [ebp-124], 9
je .Lt_0A6D
.Lt_0A6F:
cmp dword ptr [ebp-124], 13
je .Lt_0A6D
.Lt_0A70:
cmp dword ptr [ebp-124], 14
je .Lt_0A6D
.Lt_0A71:
cmp dword ptr [ebp-124], 10
jne .Lt_0A6C
.Lt_0A6D:
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0A6B
.Lt_0A6C:
cmp dword ptr [ebp-124], 11
je .Lt_0A77
.Lt_0A78:
cmp dword ptr [ebp-124], 12
jne .Lt_0A76
.Lt_0A77:
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRD+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRD+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0A6B
.Lt_0A76:
cmp dword ptr [ebp-124], 5
je .Lt_0A7E
.Lt_0A7F:
cmp dword ptr [ebp-124], 6
jne .Lt_0A7D
.Lt_0A7E:
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRW+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRW+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0A6B
.Lt_0A7D:
cmp dword ptr [ebp-124], 2
je .Lt_0A85
.Lt_0A86:
cmp dword ptr [ebp-124], 3
je .Lt_0A85
.Lt_0A87:
cmp dword ptr [ebp-124], 1
je .Lt_0A85
.Lt_0A88:
cmp dword ptr [ebp-124], 4
jne .Lt_0A84
.Lt_0A85:
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRB+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRB+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0A6B
.Lt_0A84:
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-188]
push eax
call _fb_StrAssign@20
lea eax, [ebp-188]
push eax
call _HWRITEASM64@8
lea eax, [ebp-188]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 49
push offset _Lt_0A91
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
.Lt_0A8D:
.Lt_0A6B:
.Lt_0A65:
.Lt_0A64:
.Lt_0A63:
.Lt_0A5B:
.Lt_0A1B:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 0
jne .Lt_0A96
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+28], 4294967295
mov ebx, -1
jl .Lt_1B4E
jg .Lt_1B4F
cmp dword ptr [eax+24], 2147483648
jb .Lt_1B4E
.Lt_1B4F:
xor ebx, ebx
.Lt_1B4E:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+28], 0
mov ecx, -1
jg .Lt_1B50
jl .Lt_1B51
cmp dword ptr [eax+24], 2147483648
jae .Lt_1B50
.Lt_1B51:
xor ecx, ecx
.Lt_1B50:
or ebx, ecx
je .Lt_0A98
mov ecx, dword ptr [ebp+16]
cmp dword ptr [ecx+28], 4294967295
mov ebx, -1
jl .Lt_1B52
jg .Lt_1B53
cmp dword ptr [ecx+24], 2147483648
jb .Lt_1B52
.Lt_1B53:
xor ebx, ebx
.Lt_1B52:
mov ecx, dword ptr [ebp+16]
cmp dword ptr [ecx+28], 0
mov eax, -1
jg .Lt_1B54
jl .Lt_1B55
cmp dword ptr [ecx+24], 4294967295
ja .Lt_1B54
.Lt_1B55:
xor eax, eax
.Lt_1B54:
or ebx, eax
je .Lt_0A9A
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+16]
push dword ptr [eax+28]
push dword ptr [eax+24]
call _fb_LongintToStr@8
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
jmp .Lt_0A99
.Lt_0A9A:
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+16]
push dword ptr [eax+28]
push dword ptr [eax+24]
call _fb_LongintToStr@8
push eax
push 10
push offset _Lt_0A9D
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
.Lt_0A99:
push 0
push 4
push offset _Lt_00A0
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
cmp dword ptr [ebp-124], 8
je .Lt_0AA2
.Lt_0AA3:
cmp dword ptr [ebp-124], 9
je .Lt_0AA2
.Lt_0AA4:
cmp dword ptr [ebp-124], 13
je .Lt_0AA2
.Lt_0AA5:
cmp dword ptr [ebp-124], 14
je .Lt_0AA2
.Lt_0AA6:
cmp dword ptr [ebp-124], 10
je .Lt_0AA2
.Lt_0AA7:
cmp dword ptr [ebp-124], 16
jne .Lt_0AA1
.Lt_0AA2:
jmp .Lt_0AA0
.Lt_0AA1:
cmp dword ptr [ebp-124], 11
je .Lt_0AA9
.Lt_0AAA:
cmp dword ptr [ebp-124], 12
je .Lt_0AA9
.Lt_0AAB:
cmp dword ptr [ebp-124], 15
jne .Lt_0AA8
.Lt_0AA9:
push 0
push 4
push offset _Lt_00B3
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0AA0
.Lt_0AA8:
cmp dword ptr [ebp-124], 5
je .Lt_0AAD
.Lt_0AAE:
cmp dword ptr [ebp-124], 6
jne .Lt_0AAC
.Lt_0AAD:
push 0
push 3
push offset _Lt_00C5
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0AA0
.Lt_0AAC:
cmp dword ptr [ebp-124], 2
je .Lt_0AB0
.Lt_0AB1:
cmp dword ptr [ebp-124], 3
je .Lt_0AB0
.Lt_0AB2:
cmp dword ptr [ebp-124], 1
je .Lt_0AB0
.Lt_0AB3:
cmp dword ptr [ebp-124], 4
jne .Lt_0AAF
.Lt_0AB0:
push 0
push 3
push offset _Lt_00D7
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0AA0
.Lt_0AAF:
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-188]
push eax
call _fb_StrAssign@20
lea eax, [ebp-188]
push eax
call _HWRITEASM64@8
lea eax, [ebp-188]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 50
push offset _Lt_0AB8
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
.Lt_0AB4:
.Lt_0AA0:
.Lt_0A98:
.Lt_0A97:
.Lt_0A96:
.Lt_0A95:
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-180], eax
jmp .Lt_0ABD
.Lt_0ABF:
push 2
push offset _Lt_0004
push -1
lea eax, [ebp-24]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_0AC1
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_0AC2
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
jmp .Lt_0AC0
.Lt_0AC1:
push 3
push offset _Lt_0AC6
push -1
lea eax, [ebp-24]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_0AC5
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_0485
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
jmp .Lt_0AC0
.Lt_0AC5:
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_0411
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
.Lt_0AC0:
cmp dword ptr [ebp+20], 0
je .Lt_0ACE
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call _RESTORE_VRREG@8
.Lt_0ACE:
jmp .Lt_0ABC
.Lt_0ACF:
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_0AD0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+20], 0
je .Lt_0AD6
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call _RESTORE_VRREG@8
.Lt_0AD6:
jmp .Lt_0ABC
.Lt_0AD7:
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 4
push offset _Lt_06B8
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+20], 0
je .Lt_0ADD
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call _RESTORE_VRREG@8
.Lt_0ADD:
jmp .Lt_0ABC
.Lt_0ADE:
cmp dword ptr [ebp+20], 0
je .Lt_0AE0
cmp dword ptr [ebp-124], 1
jne .Lt_0AE2
push 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
push 0
push -1
push 4
push offset _Lt_0AE3
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_092D
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-264]
push eax
call _fb_StrAssign@20
lea eax, [ebp-264]
push eax
call _HWRITEASM64@8
lea eax, [ebp-264]
push eax
call _fb_StrDelete@4
jmp .Lt_0AE1
.Lt_0AE2:
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_0AE7
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-252]
push eax
call _fb_StrAssign@20
lea eax, [ebp-252]
push eax
call _HWRITEASM64@8
lea eax, [ebp-252]
push eax
call _fb_StrDelete@4
.Lt_0AE1:
cmp dword ptr [ebp-124], 8
je .Lt_0AEC
.Lt_0AED:
cmp dword ptr [ebp-124], 9
je .Lt_0AEC
.Lt_0AEE:
cmp dword ptr [ebp-124], 13
je .Lt_0AEC
.Lt_0AEF:
cmp dword ptr [ebp-124], 14
je .Lt_0AEC
.Lt_0AF0:
cmp dword ptr [ebp-124], 10
jne .Lt_0AEB
.Lt_0AEC:
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRQ]
push 5
push offset _Lt_038A
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-276]
push eax
call _fb_StrAssign@20
lea eax, [ebp-276]
push eax
call _HWRITEASM64@8
lea eax, [ebp-276]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [_REGSTRQ]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0AEA
.Lt_0AEB:
cmp dword ptr [ebp-124], 11
je .Lt_0AF6
.Lt_0AF7:
cmp dword ptr [ebp-124], 12
jne .Lt_0AF5
.Lt_0AF6:
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRD]
push 5
push offset _Lt_038A
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-276]
push eax
call _fb_StrAssign@20
lea eax, [ebp-276]
push eax
call _HWRITEASM64@8
lea eax, [ebp-276]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [_REGSTRD]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0AEA
.Lt_0AF5:
cmp dword ptr [ebp-124], 5
je .Lt_0AFD
.Lt_0AFE:
cmp dword ptr [ebp-124], 6
jne .Lt_0AFC
.Lt_0AFD:
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRW]
push 5
push offset _Lt_038A
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-276]
push eax
call _fb_StrAssign@20
lea eax, [ebp-276]
push eax
call _HWRITEASM64@8
lea eax, [ebp-276]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [_REGSTRW]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0AEA
.Lt_0AFC:
cmp dword ptr [ebp-124], 2
je .Lt_0B04
.Lt_0B05:
cmp dword ptr [ebp-124], 3
je .Lt_0B04
.Lt_0B06:
cmp dword ptr [ebp-124], 1
je .Lt_0B04
.Lt_0B07:
cmp dword ptr [ebp-124], 4
jne .Lt_0B03
.Lt_0B04:
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRB]
push 5
push offset _Lt_038A
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-276]
push eax
call _fb_StrAssign@20
lea eax, [ebp-276]
push eax
call _HWRITEASM64@8
lea eax, [ebp-276]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [_REGSTRB]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0AEA
.Lt_0B03:
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-240]
push eax
call _fb_StrAssign@20
lea eax, [ebp-240]
push eax
call _HWRITEASM64@8
lea eax, [ebp-240]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 49
push offset _Lt_0A91
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-264]
push eax
call _fb_StrAssign@20
lea eax, [ebp-264]
push eax
call _HWRITEASM64@8
lea eax, [ebp-264]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-276]
push eax
call _fb_StrAssign@20
lea eax, [ebp-276]
push eax
call _HWRITEASM64@8
lea eax, [ebp-276]
push eax
call _fb_StrDelete@4
.Lt_0B0C:
.Lt_0AEA:
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 4
push offset _Lt_06B8
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
jmp .Lt_0ADF
.Lt_0AE0:
cmp dword ptr [ebp-124], 8
je .Lt_0B17
.Lt_0B18:
cmp dword ptr [ebp-124], 9
je .Lt_0B17
.Lt_0B19:
cmp dword ptr [ebp-124], 13
je .Lt_0B17
.Lt_0B1A:
cmp dword ptr [ebp-124], 14
je .Lt_0B17
.Lt_0B1B:
cmp dword ptr [ebp-124], 10
jne .Lt_0B16
.Lt_0B17:
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRQ]
push 5
push offset _Lt_038A
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-324]
push eax
call _fb_StrAssign@20
lea eax, [ebp-324]
push eax
call _HWRITEASM64@8
lea eax, [ebp-324]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [_REGSTRQ]
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
jmp .Lt_0B15
.Lt_0B16:
cmp dword ptr [ebp-124], 11
je .Lt_0B21
.Lt_0B22:
cmp dword ptr [ebp-124], 12
jne .Lt_0B20
.Lt_0B21:
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRD]
push 5
push offset _Lt_038A
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-324]
push eax
call _fb_StrAssign@20
lea eax, [ebp-324]
push eax
call _HWRITEASM64@8
lea eax, [ebp-324]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [_REGSTRD]
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
jmp .Lt_0B15
.Lt_0B20:
cmp dword ptr [ebp-124], 5
je .Lt_0B28
.Lt_0B29:
cmp dword ptr [ebp-124], 6
jne .Lt_0B27
.Lt_0B28:
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRW]
push 5
push offset _Lt_038A
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-324]
push eax
call _fb_StrAssign@20
lea eax, [ebp-324]
push eax
call _HWRITEASM64@8
lea eax, [ebp-324]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [_REGSTRW]
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
jmp .Lt_0B15
.Lt_0B27:
cmp dword ptr [ebp-124], 2
je .Lt_0B2F
.Lt_0B30:
cmp dword ptr [ebp-124], 3
je .Lt_0B2F
.Lt_0B31:
cmp dword ptr [ebp-124], 1
je .Lt_0B2F
.Lt_0B32:
cmp dword ptr [ebp-124], 4
jne .Lt_0B2E
.Lt_0B2F:
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRB]
push 5
push offset _Lt_038A
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-324]
push eax
call _fb_StrAssign@20
lea eax, [ebp-324]
push eax
call _HWRITEASM64@8
lea eax, [ebp-324]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [_REGSTRB]
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
jmp .Lt_0B15
.Lt_0B2E:
push 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-288]
push eax
call _fb_StrAssign@20
lea eax, [ebp-288]
push eax
call _HWRITEASM64@8
lea eax, [ebp-288]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 49
push offset _Lt_0A91
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-312]
push eax
call _fb_StrAssign@20
lea eax, [ebp-312]
push eax
call _HWRITEASM64@8
lea eax, [ebp-312]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-324]
push eax
call _fb_StrAssign@20
lea eax, [ebp-324]
push eax
call _HWRITEASM64@8
lea eax, [ebp-324]
push eax
call _fb_StrDelete@4
.Lt_0B37:
.Lt_0B15:
cmp dword ptr [ebp-124], 1
jne .Lt_0B3D
push 0
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
push 0
push -1
push 4
push offset _Lt_0AE3
push -1
push -1
lea eax, [ebp-120]
push eax
push 5
push offset _Lt_092D
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-312]
push eax
call _fb_StrAssign@20
lea eax, [ebp-312]
push eax
call _HWRITEASM64@8
lea eax, [ebp-312]
push eax
call _fb_StrDelete@4
jmp .Lt_0B3C
.Lt_0B3D:
push 0
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
push 0
push -1
push -1
lea eax, [ebp-120]
push eax
push 5
push offset _Lt_0AE7
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-300]
push eax
call _fb_StrAssign@20
lea eax, [ebp-300]
push eax
call _HWRITEASM64@8
lea eax, [ebp-300]
push eax
call _fb_StrDelete@4
.Lt_0B3C:
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-120]
push eax
push 4
push offset _Lt_06B8
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
push -1
lea eax, [ebp-120]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-276]
push eax
call _fb_StrAssign@20
lea eax, [ebp-276]
push eax
call _HWRITEASM64@8
lea eax, [ebp-276]
push eax
call _fb_StrDelete@4
.Lt_0ADF:
cmp dword ptr [ebp+20], 0
je .Lt_0B4C
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call _RESTORE_VRREG@8
.Lt_0B4C:
jmp .Lt_0ABC
.Lt_0B4D:
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_092D
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+20], 0
je .Lt_0B53
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call _RESTORE_VRREG@8
.Lt_0B53:
jmp .Lt_0ABC
.Lt_0B54:
cmp dword ptr [ebp-124], 8
je .Lt_0B57
.Lt_0B58:
cmp dword ptr [ebp-124], 9
je .Lt_0B57
.Lt_0B59:
cmp dword ptr [ebp-124], 13
je .Lt_0B57
.Lt_0B5A:
cmp dword ptr [ebp-124], 14
je .Lt_0B57
.Lt_0B5B:
cmp dword ptr [ebp-124], 10
jne .Lt_0B56
.Lt_0B57:
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRQ]
push 5
push offset _Lt_038A
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-324]
push eax
call _fb_StrAssign@20
lea eax, [ebp-324]
push eax
call _HWRITEASM64@8
lea eax, [ebp-324]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [_REGSTRQ]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0B55
.Lt_0B56:
cmp dword ptr [ebp-124], 11
je .Lt_0B61
.Lt_0B62:
cmp dword ptr [ebp-124], 12
jne .Lt_0B60
.Lt_0B61:
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRD]
push 5
push offset _Lt_038A
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-324]
push eax
call _fb_StrAssign@20
lea eax, [ebp-324]
push eax
call _HWRITEASM64@8
lea eax, [ebp-324]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [_REGSTRD]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0B55
.Lt_0B60:
cmp dword ptr [ebp-124], 5
je .Lt_0B68
.Lt_0B69:
cmp dword ptr [ebp-124], 6
jne .Lt_0B67
.Lt_0B68:
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRW]
push 5
push offset _Lt_038A
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-324]
push eax
call _fb_StrAssign@20
lea eax, [ebp-324]
push eax
call _HWRITEASM64@8
lea eax, [ebp-324]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [_REGSTRW]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0B55
.Lt_0B67:
cmp dword ptr [ebp-124], 2
je .Lt_0B6F
.Lt_0B70:
cmp dword ptr [ebp-124], 3
je .Lt_0B6F
.Lt_0B71:
cmp dword ptr [ebp-124], 1
je .Lt_0B6F
.Lt_0B72:
cmp dword ptr [ebp-124], 4
jne .Lt_0B6E
.Lt_0B6F:
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRB]
push 5
push offset _Lt_038A
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
lea eax, [ebp-312]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-324]
push eax
call _fb_StrAssign@20
lea eax, [ebp-324]
push eax
call _HWRITEASM64@8
lea eax, [ebp-324]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [_REGSTRB]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_0B55
.Lt_0B6E:
push 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-288]
push eax
call _fb_StrAssign@20
lea eax, [ebp-288]
push eax
call _HWRITEASM64@8
lea eax, [ebp-288]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 49
push offset _Lt_0A91
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-312]
push eax
call _fb_StrAssign@20
lea eax, [ebp-312]
push eax
call _HWRITEASM64@8
lea eax, [ebp-312]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-324]
push eax
call _fb_StrAssign@20
lea eax, [ebp-324]
push eax
call _HWRITEASM64@8
lea eax, [ebp-324]
push eax
call _fb_StrDelete@4
.Lt_0B77:
.Lt_0B55:
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-24]
push eax
push 5
push offset _Lt_092D
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp-124], 1
jne .Lt_0B81
push 0
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
push 0
push -1
push 4
push offset _Lt_0AE3
push -1
push -1
lea eax, [ebp-24]
push eax
push 5
push offset _Lt_092D
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
lea eax, [ebp-300]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-312]
push eax
call _fb_StrAssign@20
lea eax, [ebp-312]
push eax
call _HWRITEASM64@8
lea eax, [ebp-312]
push eax
call _fb_StrDelete@4
jmp .Lt_0B80
.Lt_0B81:
push 0
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 5
push offset _Lt_0AE7
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
lea eax, [ebp-288]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-300]
push eax
call _fb_StrAssign@20
lea eax, [ebp-300]
push eax
call _HWRITEASM64@8
lea eax, [ebp-300]
push eax
call _fb_StrDelete@4
.Lt_0B80:
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-276]
push eax
call _fb_StrAssign@20
lea eax, [ebp-276]
push eax
call _HWRITEASM64@8
lea eax, [ebp-276]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+20], 0
je .Lt_0B8C
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call _RESTORE_VRREG@8
.Lt_0B8C:
jmp .Lt_0ABC
.Lt_0B8D:
push 2
push offset _Lt_0004
push -1
lea eax, [ebp-24]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_0B8F
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_0485
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
jmp .Lt_0B8E
.Lt_0B8F:
push 3
push offset _Lt_0AC6
push -1
lea eax, [ebp-24]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_0B92
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_0AC2
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
jmp .Lt_0B8E
.Lt_0B92:
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_0B95
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
.Lt_0B8E:
cmp dword ptr [ebp+20], 0
je .Lt_0B9B
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call _RESTORE_VRREG@8
.Lt_0B9B:
jmp .Lt_0ABC
.Lt_0B9C:
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 6
push offset _Lt_0B9D
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-96]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_0BA3
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-96]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-276]
push eax
call _fb_StrAssign@20
lea eax, [ebp-276]
push eax
call _HWRITEASM64@8
lea eax, [ebp-276]
push eax
call _fb_StrDelete@4
.Lt_0BA3:
jmp .Lt_0ABC
.Lt_0BA8:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
cmp ebx, 9
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+4]
cmp ecx, 14
sete cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
mov ecx, dword ptr [ebp+16]
mov eax, dword ptr [ecx+4]
cmp eax, 9
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax+4]
cmp ecx, 14
sete cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_0BAA
mov ecx, dword ptr [ebp+8]
mov dword ptr [ebp-236], ecx
jmp .Lt_0BAC
.Lt_0BAE:
push 0
push 3
push offset _Lt_0BAF
push -1
lea ecx, [ebp-84]
push ecx
call _fb_StrAssign@20
jmp .Lt_0BAB
.Lt_0BB0:
push 0
push 2
push offset _Lt_0BB1
push -1
lea ecx, [ebp-84]
push ecx
call _fb_StrAssign@20
jmp .Lt_0BAB
.Lt_0BB2:
push 0
push 3
push offset _Lt_0BB3
push -1
lea ecx, [ebp-84]
push ecx
call _fb_StrAssign@20
jmp .Lt_0BAB
.Lt_0BB4:
push 0
push 3
push offset _Lt_0BB5
push -1
lea ecx, [ebp-84]
push ecx
call _fb_StrAssign@20
jmp .Lt_0BAB
.Lt_0BB6:
push 0
push 2
push offset _Lt_0BB7
push -1
lea ecx, [ebp-84]
push ecx
call _fb_StrAssign@20
jmp .Lt_0BAB
.Lt_0BB8:
push 0
push 2
push offset _Lt_0120
push -1
lea ecx, [ebp-84]
push ecx
call _fb_StrAssign@20
jmp .Lt_0BAB
.Lt_0BAC:
mov ecx, dword ptr [ebp-236]
add ecx, 4294967251
cmp ecx, 5
ja .Lt_0BAB
mov ecx, dword ptr [ebp-236]
jmp dword ptr [_.LT_0BB9+ecx*4-180]
_.LT_0BB9:
.int .Lt_0BB8
.int .Lt_0BB6
.int .Lt_0BB0
.int .Lt_0BB2
.int .Lt_0BB4
.int .Lt_0BAE
.Lt_0BAB:
jmp .Lt_0BA9
.Lt_0BAA:
mov ecx, dword ptr [ebp+8]
mov dword ptr [ebp-236], ecx
jmp .Lt_0BBB
.Lt_0BBD:
push 0
push 3
push offset _Lt_0BBE
push -1
lea ecx, [ebp-84]
push ecx
call _fb_StrAssign@20
jmp .Lt_0BBA
.Lt_0BBF:
push 0
push 2
push offset _Lt_0BC0
push -1
lea ecx, [ebp-84]
push ecx
call _fb_StrAssign@20
jmp .Lt_0BBA
.Lt_0BC1:
push 0
push 3
push offset _Lt_0BB3
push -1
lea ecx, [ebp-84]
push ecx
call _fb_StrAssign@20
jmp .Lt_0BBA
.Lt_0BC2:
push 0
push 3
push offset _Lt_0BC3
push -1
lea ecx, [ebp-84]
push ecx
call _fb_StrAssign@20
jmp .Lt_0BBA
.Lt_0BC4:
push 0
push 2
push offset _Lt_0BC5
push -1
lea ecx, [ebp-84]
push ecx
call _fb_StrAssign@20
jmp .Lt_0BBA
.Lt_0BC6:
push 0
push 2
push offset _Lt_0120
push -1
lea ecx, [ebp-84]
push ecx
call _fb_StrAssign@20
jmp .Lt_0BBA
.Lt_0BBB:
mov ecx, dword ptr [ebp-236]
add ecx, 4294967251
cmp ecx, 5
ja .Lt_0BBA
mov ecx, dword ptr [ebp-236]
jmp dword ptr [_.LT_0BC7+ecx*4-180]
_.LT_0BC7:
.int .Lt_0BC6
.int .Lt_0BC4
.int .Lt_0BBF
.int .Lt_0BC1
.int .Lt_0BC2
.int .Lt_0BBD
.Lt_0BBA:
.Lt_0BA9:
cmp dword ptr [_CTX+212], 2
jne .Lt_0BC8
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-184], eax
jmp .Lt_1B40
.Lt_0BC8:
mov dword ptr [ebp-184], 0
.Lt_1B40:
cmp dword ptr [ebp-184], 0
je .Lt_0BCB
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+32], 0
je .Lt_0BCC
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-236], eax
jmp .Lt_1B41
.Lt_0BCC:
mov dword ptr [ebp-236], 0
.Lt_1B41:
cmp dword ptr [ebp-236], 0
je .Lt_0BCF
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-276]
push eax
call _fb_StrAssign@20
lea eax, [ebp-276]
push eax
call _HWRITEASM64@8
lea eax, [ebp-276]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
push 0
push 15
push offset _Lt_0BD4
push -1
lea eax, [ebp-288]
push eax
call _fb_StrAssign@20
lea eax, [ebp-288]
push eax
call _HWRITEASM64@8
lea eax, [ebp-288]
push eax
call _fb_StrDelete@4
push 0
push 4
push offset _Lt_00A0
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+32], 0
je .Lt_0BD6
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-292], eax
jmp .Lt_1B42
.Lt_0BD6:
mov dword ptr [ebp-292], 0
.Lt_1B42:
cmp dword ptr [ebp-292], 0
je .Lt_0BD9
push -1
push 999999
call _REG_FINDFREE@8
mov dword ptr [ebp-140], eax
push 0
push 0
mov eax, dword ptr [ebp-140]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp-140]
mov dword ptr [_REGHANDLE+eax*4], -2
push 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
mov dword ptr [ebp-344], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push 0
mov eax, dword ptr [ebp+16]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-108]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
lea eax, [ebp-304]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
lea eax, [ebp-316]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
lea eax, [ebp-328]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
mov dword ptr [ebp-332], 0
lea eax, [ebp-340]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-352]
push eax
call _fb_StrAssign@20
lea eax, [ebp-352]
push eax
call _HWRITEASM64@8
lea eax, [ebp-352]
push eax
call _fb_StrDelete@4
push 0
push 2
push offset _Lt_0119
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-108]
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrConcatAssign@20
push 0
push 2
push offset _Lt_011A
push -1
lea eax, [ebp-24]
push eax
call _fb_StrConcatAssign@20
.Lt_0BD9:
.Lt_0BD8:
jmp .Lt_0BCE
.Lt_0BCF:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+32], 0
je .Lt_0BE0
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-240], eax
jmp .Lt_1B43
.Lt_0BE0:
mov dword ptr [ebp-240], 0
.Lt_1B43:
cmp dword ptr [ebp-240], 0
je .Lt_0BDF
push 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push 0
mov eax, dword ptr [ebp+16]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-276]
push eax
call _fb_StrAssign@20
lea eax, [ebp-276]
push eax
call _HWRITEASM64@8
lea eax, [ebp-276]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
push 0
push 15
push offset _Lt_0BD4
push -1
lea eax, [ebp-288]
push eax
call _fb_StrAssign@20
lea eax, [ebp-288]
push eax
call _HWRITEASM64@8
lea eax, [ebp-288]
push eax
call _fb_StrDelete@4
push 0
push 4
push offset _Lt_00A0
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_0BDF:
.Lt_0BCE:
.Lt_0BCB:
.Lt_0BCA:
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_0BE6
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
lea eax, [ebp-208]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
lea eax, [ebp-220]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-232]
push eax
call _fb_StrAssign@20
lea eax, [ebp-232]
push eax
call _HWRITEASM64@8
lea eax, [ebp-232]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+24], 0
jne .Lt_0BEC
push 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
push 0
push -1
push 4
push offset _Lt_0BEE
push -1
push -1
lea eax, [ebp-84]
push eax
push 4
push offset _Lt_0BED
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-268]
push eax
call _fb_StrAssign@20
lea eax, [ebp-268]
push eax
call _HWRITEASM64@8
lea eax, [ebp-268]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
push 0
push -1
push 5
push offset _Lt_0BF2
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push 7
push offset _Lt_069B
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
lea eax, [ebp-280]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
lea eax, [ebp-292]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-304]
push eax
call _fb_StrAssign@20
lea eax, [ebp-304]
push eax
call _HWRITEASM64@8
lea eax, [ebp-304]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp-124], 1
je .Lt_0BF7
push 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
mov dword ptr [ebp-320], 0
push 0
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_0BF8
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
mov dword ptr [ebp-308], 0
lea eax, [ebp-316]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-328]
push eax
call _fb_StrAssign@20
lea eax, [ebp-328]
push eax
call _HWRITEASM64@8
lea eax, [ebp-328]
push eax
call _fb_StrDelete@4
.Lt_0BF7:
.Lt_0BF6:
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call _RESTORE_VRREG@8
jmp .Lt_0BEB
.Lt_0BEC:
push 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
push 0
push -1
push 0
push dword ptr [ebp+24]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 2
push offset _Lt_0102
push -1
push -1
lea eax, [ebp-84]
push eax
push 2
push offset _Lt_0BFB
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
lea eax, [ebp-268]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-280]
push eax
call _fb_StrAssign@20
lea eax, [ebp-280]
push eax
call _HWRITEASM64@8
lea eax, [ebp-280]
push eax
call _fb_StrDelete@4
push dword ptr [ebp+24]
call _REG_MARK@4
.Lt_0BEB:
jmp .Lt_0ABC
.Lt_0C00:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 0
je .Lt_0C02
push 0
push dword ptr [_REGSTRQ+8]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_0C04
cmp dword ptr [_REGHANDLE+8], -2
je .Lt_0C06
mov eax, dword ptr [_REGHANDLE+8]
mov dword ptr [ebp-140], eax
push -1
push dword ptr [ebp-140]
call _REG_FINDFREE@8
mov dword ptr [_REGHANDLE+8], -2
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
push 0
push dword ptr [_REGSTRQ+8]
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [ebp-140]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-252]
push eax
call _fb_StrAssign@20
lea eax, [ebp-252]
push eax
call _HWRITEASM64@8
lea eax, [ebp-252]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp-132], 2
jne .Lt_0C0C
push dword ptr [ebp-140]
call _REG_FINDREAL@4
mov dword ptr [ebp-132], eax
.Lt_0C0C:
jmp .Lt_0C05
.Lt_0C06:
or dword ptr [_CTX+112], 4
.Lt_0C05:
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 10
push offset _Lt_0C0D
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
.Lt_0C04:
.Lt_0C03:
push 0
push 3
push offset _Lt_00D9
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_0C02:
.Lt_0C01:
cmp dword ptr [ebp+8], 41
jne .Lt_0C11
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_0C12
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
jmp .Lt_0C10
.Lt_0C11:
mov eax, dword ptr [ebp-124]
cmp eax, 8
sete al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp-124]
cmp ecx, 13
sete cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
je .Lt_0C18
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push -1
lea ecx, [ebp-24]
push ecx
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea ecx, [ebp-12]
push ecx
push 5
push offset _Lt_0C19
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea ecx, [ebp-192]
push ecx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
jmp .Lt_0C17
.Lt_0C18:
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_0648
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
.Lt_0C17:
.Lt_0C10:
jmp .Lt_0ABC
.Lt_0C22:
cmp dword ptr [_REGHANDLE+12], -2
je .Lt_0C24
push 0
push dword ptr [_REGSTRQ+12]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_0C26
mov eax, dword ptr [_REGHANDLE+12]
mov dword ptr [ebp-140], eax
push -1
push dword ptr [ebp-140]
call _REG_FINDFREE@8
mov dword ptr [_REGHANDLE+12], -2
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
push 0
push dword ptr [_REGSTRQ+12]
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [ebp-140]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-252]
push eax
call _fb_StrAssign@20
lea eax, [ebp-252]
push eax
call _HWRITEASM64@8
lea eax, [ebp-252]
push eax
call _fb_StrDelete@4
push 0
push dword ptr [_REGSTRQ+12]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_0C2C
push 0
push 0
push dword ptr [ebp-140]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_0C2C:
.Lt_0C2B:
cmp dword ptr [ebp-132], 3
jne .Lt_0C2E
push dword ptr [ebp-140]
call _REG_FINDREAL@4
mov dword ptr [ebp-132], eax
.Lt_0C2E:
.Lt_0C26:
.Lt_0C25:
jmp .Lt_0C23
.Lt_0C24:
or dword ptr [_CTX+112], 8
.Lt_0C23:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 0
jne .Lt_0C30
cmp dword ptr [_REGHANDLE+12], -2
jne .Lt_0C32
mov dword ptr [_REGHANDLE+12], -3
.Lt_0C32:
push 0
push 0
call _REG_TEMPO@0
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
cmp dword ptr [_REGHANDLE+12], -3
jne .Lt_0C34
mov dword ptr [_REGHANDLE+12], -2
.Lt_0C34:
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-108]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-252]
push eax
call _fb_StrAssign@20
lea eax, [ebp-252]
push eax
call _HWRITEASM64@8
lea eax, [ebp-252]
push eax
call _fb_StrDelete@4
push 0
push -1
lea eax, [ebp-108]
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_0C30:
.Lt_0C2F:
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax+4]
mov dword ptr [ebp-128], ecx
mov ecx, dword ptr [ebp-128]
and ecx, 480
test ecx, ecx
je .Lt_0C3C
mov dword ptr [ebp-128], 8
.Lt_0C3C:
mov ecx, dword ptr [ebp-124]
cmp ecx, 9
sete cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp-124]
cmp eax, 14
sete al
shr eax, 1
sbb eax, eax
or ecx, eax
mov eax, dword ptr [ebp-128]
cmp eax, 9
sete al
shr eax, 1
sbb eax, eax
or ecx, eax
mov eax, dword ptr [ebp-128]
cmp eax, 14
sete al
shr eax, 1
sbb eax, eax
or ecx, eax
je .Lt_0C3E
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 11
push offset _Lt_0C3F
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 5
push offset _Lt_0C41
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-240]
push eax
call _fb_StrAssign@20
lea eax, [ebp-240]
push eax
call _HWRITEASM64@8
lea eax, [ebp-240]
push eax
call _fb_StrDelete@4
jmp .Lt_0C3D
.Lt_0C3E:
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 4
push offset _Lt_0C44
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 6
push offset _Lt_0C46
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-240]
push eax
call _fb_StrAssign@20
lea eax, [ebp-240]
push eax
call _HWRITEASM64@8
lea eax, [ebp-240]
push eax
call _fb_StrDelete@4
.Lt_0C3D:
cmp dword ptr [ebp+20], 0
jne .Lt_0C4A
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-240]
push eax
call _fb_StrAssign@20
lea eax, [ebp-240]
push eax
call _HWRITEASM64@8
lea eax, [ebp-240]
push eax
call _fb_StrDelete@4
jmp .Lt_0C49
.Lt_0C4A:
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-240]
push eax
call _fb_StrAssign@20
lea eax, [ebp-240]
push eax
call _HWRITEASM64@8
lea eax, [ebp-240]
push eax
call _fb_StrDelete@4
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call _RESTORE_VRREG@8
.Lt_0C49:
jmp .Lt_0ABC
.Lt_0C51:
cmp dword ptr [_REGHANDLE+12], -2
je .Lt_0C53
push 0
push dword ptr [_REGSTRQ+12]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_0C55
mov eax, dword ptr [_REGHANDLE+12]
mov dword ptr [ebp-140], eax
push -1
push dword ptr [ebp-140]
call _REG_FINDFREE@8
mov dword ptr [_REGHANDLE+12], -2
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
push 0
push dword ptr [_REGSTRQ+12]
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [ebp-140]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-252]
push eax
call _fb_StrAssign@20
lea eax, [ebp-252]
push eax
call _HWRITEASM64@8
lea eax, [ebp-252]
push eax
call _fb_StrDelete@4
push 0
push dword ptr [_REGSTRQ+12]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_0C5B
push 0
push 0
push dword ptr [ebp-140]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_0C5B:
.Lt_0C5A:
cmp dword ptr [ebp-132], 3
jne .Lt_0C5D
push dword ptr [ebp-140]
call _REG_FINDREAL@4
mov dword ptr [ebp-132], eax
.Lt_0C5D:
.Lt_0C55:
.Lt_0C54:
jmp .Lt_0C52
.Lt_0C53:
or dword ptr [_CTX+112], 8
.Lt_0C52:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 0
jne .Lt_0C5F
cmp dword ptr [_REGHANDLE+12], -2
jne .Lt_0C61
mov dword ptr [_REGHANDLE+12], -3
.Lt_0C61:
push 0
push 0
call _REG_TEMPO@0
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
cmp dword ptr [_REGHANDLE+12], -3
jne .Lt_0C63
mov dword ptr [_REGHANDLE+12], -2
.Lt_0C63:
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-108]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-252]
push eax
call _fb_StrAssign@20
lea eax, [ebp-252]
push eax
call _HWRITEASM64@8
lea eax, [ebp-252]
push eax
call _fb_StrDelete@4
push 0
push -1
lea eax, [ebp-108]
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_0C5F:
.Lt_0C5E:
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax+4]
mov dword ptr [ebp-128], ecx
mov ecx, dword ptr [ebp-128]
and ecx, 480
test ecx, ecx
je .Lt_0C6B
mov dword ptr [ebp-128], 8
.Lt_0C6B:
mov ecx, dword ptr [ebp-124]
cmp ecx, 9
sete cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp-124]
cmp eax, 14
sete al
shr eax, 1
sbb eax, eax
or ecx, eax
mov eax, dword ptr [ebp-128]
cmp eax, 9
sete al
shr eax, 1
sbb eax, eax
or ecx, eax
mov eax, dword ptr [ebp-128]
cmp eax, 14
sete al
shr eax, 1
sbb eax, eax
or ecx, eax
je .Lt_0C6D
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 11
push offset _Lt_0C3F
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 5
push offset _Lt_0C41
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-240]
push eax
call _fb_StrAssign@20
lea eax, [ebp-240]
push eax
call _HWRITEASM64@8
lea eax, [ebp-240]
push eax
call _fb_StrDelete@4
jmp .Lt_0C6C
.Lt_0C6D:
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 4
push offset _Lt_0C44
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 6
push offset _Lt_0C46
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-240]
push eax
call _fb_StrAssign@20
lea eax, [ebp-240]
push eax
call _HWRITEASM64@8
lea eax, [ebp-240]
push eax
call _fb_StrDelete@4
.Lt_0C6C:
cmp dword ptr [ebp+20], 0
jne .Lt_0C75
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
push 6
push offset _Lt_0C76
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-240]
push eax
call _fb_StrAssign@20
lea eax, [ebp-240]
push eax
call _HWRITEASM64@8
lea eax, [ebp-240]
push eax
call _fb_StrDelete@4
jmp .Lt_0C74
.Lt_0C75:
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
push 6
push offset _Lt_0C76
push -1
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-240]
push eax
call _fb_StrAssign@20
lea eax, [ebp-240]
push eax
call _HWRITEASM64@8
lea eax, [ebp-240]
push eax
call _fb_StrDelete@4
push dword ptr [ebp-132]
push dword ptr [ebp+20]
call _RESTORE_VRREG@8
.Lt_0C74:
jmp .Lt_0ABC
.Lt_0C7D:
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push -1
push 0
push dword ptr [ebp+8]
call _HGETBOPCODE@4
push eax
push 45
push offset _Lt_0C80
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
jmp .Lt_0ABC
.Lt_0ABD:
mov eax, dword ptr [ebp-180]
add eax, 4294967268
cmp eax, 22
ja .Lt_0C7D
mov eax, dword ptr [ebp-180]
jmp dword ptr [_.LT_0C84+eax*4-112]
_.LT_0C84:
.int .Lt_0ABF
.int .Lt_0B8D
.int .Lt_0B9C
.int .Lt_0C7D
.int .Lt_0C22
.int .Lt_0C51
.int .Lt_0ACF
.int .Lt_0AD7
.int .Lt_0C7D
.int .Lt_0C7D
.int .Lt_0B4D
.int .Lt_0B54
.int .Lt_0ADE
.int .Lt_0C00
.int .Lt_0C00
.int .Lt_0C7D
.int .Lt_0C7D
.int .Lt_0BA8
.int .Lt_0BA8
.int .Lt_0BA8
.int .Lt_0BA8
.int .Lt_0BA8
.int .Lt_0BA8
.Lt_0ABC:
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_0964:
pop ebx
mov esp, ebp
pop ebp
ret 20
.balign 16
__EMITBOP@20:
push ebp
mov ebp, esp
sub esp, 32
push ebx
.Lt_0C85:
mov dword ptr [ebp-4], 0
cmp dword ptr [ebp+24], 0
je .Lt_0C88
jmp .Lt_0C87
.Lt_0C88:
cmp dword ptr [ebp+20], 0
jne .Lt_0C89
.Lt_0C89:
.Lt_0C87:
cmp dword ptr [ebp+20], 0
jne .Lt_0C8B
.Lt_0C8B:
.Lt_0C8A:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+32], 0
je .Lt_0C92
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+28]
cmp ebx, dword ptr [eax+4]
setne bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-24], ebx
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+28]
and ebx, 480
je .Lt_0C8C
mov dword ptr [ebp-8], 24
jmp .Lt_1B69
.Lt_0C8C:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+28]
and ebx, 31
mov dword ptr [ebp-8], ebx
.Lt_1B69:
mov ebx, dword ptr [ebp-8]
imul ebx, 28
mov eax, dword ptr [_SYMB_DTYPETB+ebx]
test eax, eax
sete al
shr eax, 1
sbb eax, eax
and eax, dword ptr [ebp-24]
mov dword ptr [ebp-28], eax
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_0C8E
mov dword ptr [ebp-12], 24
jmp .Lt_1B6A
.Lt_0C8E:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-12], eax
.Lt_1B6A:
mov eax, dword ptr [ebp-12]
imul eax, 28
mov dword ptr [ebp-32], eax
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+28]
and eax, 480
je .Lt_0C90
mov dword ptr [ebp-16], 24
jmp .Lt_1B6B
.Lt_0C90:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+28]
and eax, 31
mov dword ptr [ebp-16], eax
.Lt_1B6B:
mov eax, dword ptr [ebp-16]
imul eax, 28
mov ebx, dword ptr [ebp-32]
mov ecx, dword ptr [_SYMB_DTYPETB+eax+4]
cmp ecx, dword ptr [_SYMB_DTYPETB+ebx+4]
setne cl
shr ecx, 1
sbb ecx, ecx
and ecx, dword ptr [ebp-28]
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
mov dword ptr [ebp-20], ecx
jmp .Lt_1B68
.Lt_0C92:
mov dword ptr [ebp-20], 0
.Lt_1B68:
cmp dword ptr [ebp-20], 0
je .Lt_0C95
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+4]
mov dword ptr [ebp-4], ebx
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ecx+28]
mov dword ptr [ebx+4], eax
push 0
push dword ptr [ebp-4]
push dword ptr [ebp+12]
call __SETVREGDATATYPE@12
.Lt_0C95:
.Lt_0C94:
push dword ptr [ebp+24]
push dword ptr [ebp+20]
push dword ptr [ebp+16]
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call _HLOADOPERANDSANDWRITEBOP@20
.Lt_0C86:
pop ebx
mov esp, ebp
pop ebp
ret 20
.balign 16
__EMITUOP@12:
push ebp
mov ebp, esp
sub esp, 168
push ebx
.Lt_0C96:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-48], 0
cmp dword ptr [ebp+16], 0
jne .Lt_0C99
.Lt_0C99:
.Lt_0C98:
cmp dword ptr [ebp+16], 0
je .Lt_0C9B
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
je .Lt_0C9D
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-64], ebx
cmp dword ptr [ebp-64], 4
jne .Lt_0CA0
.Lt_0CA1:
push -1
mov ebx, dword ptr [ebp+16]
push dword ptr [ebx+12]
call _REG_FINDFREE@8
mov dword ptr [ebp-40], eax
jmp .Lt_0C9E
.Lt_0CA0:
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 47
push offset _Lt_0CA5
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
.Lt_0CA2:
.Lt_0C9E:
jmp .Lt_0C9C
.Lt_0C9D:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp+16]
mov ecx, dword ptr [eax+12]
mov dword ptr [ebx+12], ecx
mov ecx, dword ptr [ebp+12]
push dword ptr [ecx+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-40], eax
.Lt_0C9C:
.Lt_0C9B:
.Lt_0C9A:
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+4]
mov dword ptr [ebp-48], ecx
mov ecx, dword ptr [ebp-48]
and ecx, 480
test ecx, ecx
je .Lt_0CA9
mov dword ptr [ebp-48], 8
.Lt_0CA9:
cmp dword ptr [ebp-48], 8
je .Lt_0CAC
.Lt_0CAD:
cmp dword ptr [ebp-48], 9
je .Lt_0CAC
.Lt_0CAE:
cmp dword ptr [ebp-48], 13
je .Lt_0CAC
.Lt_0CAF:
cmp dword ptr [ebp-48], 14
je .Lt_0CAC
.Lt_0CB0:
cmp dword ptr [ebp-48], 16
je .Lt_0CAC
.Lt_0CB1:
cmp dword ptr [ebp-48], 10
jne .Lt_0CAB
.Lt_0CAC:
push 0
push 11
push offset _Lt_096F
push -1
lea ecx, [ebp-36]
push ecx
call _fb_StrAssign@20
jmp .Lt_0CAA
.Lt_0CAB:
cmp dword ptr [ebp-48], 11
je .Lt_0CB3
.Lt_0CB4:
cmp dword ptr [ebp-48], 12
je .Lt_0CB3
.Lt_0CB5:
cmp dword ptr [ebp-48], 15
jne .Lt_0CB2
.Lt_0CB3:
push 0
push 11
push offset _Lt_0974
push -1
lea ecx, [ebp-36]
push ecx
call _fb_StrAssign@20
jmp .Lt_0CAA
.Lt_0CB2:
cmp dword ptr [ebp-48], 5
je .Lt_0CB7
.Lt_0CB8:
cmp dword ptr [ebp-48], 6
jne .Lt_0CB6
.Lt_0CB7:
push 0
push 10
push offset _Lt_0978
push -1
lea ecx, [ebp-36]
push ecx
call _fb_StrAssign@20
jmp .Lt_0CAA
.Lt_0CB6:
cmp dword ptr [ebp-48], 2
je .Lt_0CBA
.Lt_0CBB:
cmp dword ptr [ebp-48], 3
je .Lt_0CBA
.Lt_0CBC:
cmp dword ptr [ebp-48], 1
je .Lt_0CBA
.Lt_0CBD:
cmp dword ptr [ebp-48], 4
jne .Lt_0CB9
.Lt_0CBA:
push 0
push 10
push offset _Lt_097E
push -1
lea ecx, [ebp-36]
push ecx
call _fb_StrAssign@20
jmp .Lt_0CAA
.Lt_0CB9:
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset _Lt_0000
push -1
lea ecx, [ebp-72]
push ecx
call _fb_StrAssign@20
lea ecx, [ebp-72]
push ecx
call _HWRITEASM64@8
lea ecx, [ebp-72]
push ecx
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push -1
mov ecx, dword ptr [ebp+12]
push dword ptr [ecx+4]
call _fb_IntToStr@4
push eax
push 48
push offset _Lt_0983
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
.Lt_0CBE:
.Lt_0CAA:
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
mov dword ptr [ebp-64], ecx
cmp dword ptr [ebp-64], 4
jne .Lt_0CC5
.Lt_0CC6:
cmp dword ptr [ebp-48], 1
jne .Lt_0CC8
push 0
push 0
mov ecx, dword ptr [ebp+12]
push dword ptr [ecx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRB+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0CC7
.Lt_0CC8:
push 0
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_0CC7:
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
jmp .Lt_0CC3
.Lt_0CC5:
cmp dword ptr [ebp-64], 2
jne .Lt_0CC9
.Lt_0CCA:
lea eax, [ebp-24]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+12]
call _PREPARE_IDX@12
jmp .Lt_0CC3
.Lt_0CC9:
cmp dword ptr [ebp-64], 3
jne .Lt_0CCB
.Lt_0CCC:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+52]
push dword ptr [ecx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0CC3
.Lt_0CCB:
cmp dword ptr [ebp-64], 5
jne .Lt_0CD0
.Lt_0CD1:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0CC3
.Lt_0CD0:
cmp dword ptr [ebp-64], 0
jne .Lt_0CD5
.Lt_0CD6:
jmp .Lt_0CC3
.Lt_0CD5:
cmp dword ptr [ebp-64], 1
jne .Lt_0CD7
.Lt_0CD8:
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+32]
mov ecx, dword ptr [ebx+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
je .Lt_0CDA
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ecx, dword ptr [ebp+12]
push dword ptr [ecx+44]
push dword ptr [ecx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0CD9
.Lt_0CDA:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_0CD9:
jmp .Lt_0CC3
.Lt_0CD7:
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 43
push offset _Lt_0CE2
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
.Lt_0CDF:
.Lt_0CC3:
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-24]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_0CE6
lea eax, [ebp-24]
push eax
call _EMITOP3_OP4@4
.Lt_0CE6:
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
cmp dword ptr [ebp+8], 52
jne .Lt_0CE9
cmp dword ptr [ebp+16], 0
setne al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx]
cmp ebx, 4
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_0CEB
cmp dword ptr [ebp-48], 8
je .Lt_0CEE
.Lt_0CEF:
cmp dword ptr [ebp-48], 9
je .Lt_0CEE
.Lt_0CF0:
cmp dword ptr [ebp-48], 13
je .Lt_0CEE
.Lt_0CF1:
cmp dword ptr [ebp-48], 14
je .Lt_0CEE
.Lt_0CF2:
cmp dword ptr [ebp-48], 10
jne .Lt_0CED
.Lt_0CEE:
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
push -1
lea ebx, [ebp-12]
push ebx
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov ebx, dword ptr [ebp-40]
push dword ptr [_REGSTRQ+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea ebx, [ebp-72]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0CEC
.Lt_0CED:
cmp dword ptr [ebp-48], 11
je .Lt_0CF8
.Lt_0CF9:
cmp dword ptr [ebp-48], 12
jne .Lt_0CF7
.Lt_0CF8:
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRD+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRD+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0CEC
.Lt_0CF7:
cmp dword ptr [ebp-48], 5
je .Lt_0CFF
.Lt_0D00:
cmp dword ptr [ebp-48], 6
jne .Lt_0CFE
.Lt_0CFF:
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRW+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRW+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0CEC
.Lt_0CFE:
cmp dword ptr [ebp-48], 2
je .Lt_0D06
.Lt_0D07:
cmp dword ptr [ebp-48], 3
je .Lt_0D06
.Lt_0D08:
cmp dword ptr [ebp-48], 1
je .Lt_0D06
.Lt_0D09:
cmp dword ptr [ebp-48], 4
jne .Lt_0D05
.Lt_0D06:
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRB+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRB+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_0CEC
.Lt_0D05:
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 49
push offset _Lt_0A4B
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
.Lt_0D0E:
.Lt_0CEC:
.Lt_0CEB:
.Lt_0CEA:
cmp dword ptr [ebp-48], 1
jne .Lt_0D14
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 6
push offset _Lt_0D15
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 6
push offset _Lt_0D1A
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-132]
push eax
call _fb_StrAssign@20
lea eax, [ebp-132]
push eax
call _HWRITEASM64@8
lea eax, [ebp-132]
push eax
call _fb_StrDelete@4
jmp .Lt_0D13
.Lt_0D14:
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_0AE7
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
.Lt_0D13:
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_0C97
.Lt_0CE9:
.Lt_0CE8:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+4], 15
jne .Lt_0D20
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_0D22
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 12
push offset _Lt_0D23
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
jmp .Lt_0D21
.Lt_0D22:
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 13
push offset _Lt_0D26
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
.Lt_0D21:
cmp dword ptr [ebp+8], 60
jne .Lt_0D2A
.Lt_0D2B:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset _Lt_0D2C
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0D29
.Lt_0D2A:
cmp dword ptr [ebp+8], 58
jne .Lt_0D2E
.Lt_0D2F:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset _Lt_0D30
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0D29
.Lt_0D2E:
cmp dword ptr [ebp+8], 69
jne .Lt_0D32
.Lt_0D33:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset _Lt_0D34
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0D29
.Lt_0D32:
cmp dword ptr [ebp+8], 68
jne .Lt_0D36
.Lt_0D37:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset _Lt_0D38
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0D29
.Lt_0D36:
cmp dword ptr [ebp+8], 61
jne .Lt_0D3A
.Lt_0D3B:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 6
push offset _Lt_0D3C
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0D29
.Lt_0D3A:
cmp dword ptr [ebp+8], 59
jne .Lt_0D3E
.Lt_0D3F:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 6
push offset _Lt_0D40
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0D29
.Lt_0D3E:
cmp dword ptr [ebp+8], 62
jne .Lt_0D42
.Lt_0D43:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset _Lt_0D44
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0D29
.Lt_0D42:
cmp dword ptr [ebp+8], 63
jne .Lt_0D46
.Lt_0D47:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 6
push offset _Lt_0D48
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0D29
.Lt_0D46:
cmp dword ptr [ebp+8], 65
jne .Lt_0D4A
.Lt_0D4B:
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 18
push offset _Lt_0D4C
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0D29
.Lt_0D4A:
cmp dword ptr [ebp+8], 56
jne .Lt_0D4E
.Lt_0D4F:
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 20
push offset _Lt_0D50
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 15
push offset _Lt_0D52
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 17
push offset _Lt_0D54
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 16
push offset _Lt_0D56
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call _RESTORE_VRREG@8
jmp .Lt_0D29
.Lt_0D4E:
cmp dword ptr [ebp+8], 57
jne .Lt_0D58
.Lt_0D59:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 13
push offset _Lt_0D5A
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0D29
.Lt_0D58:
cmp dword ptr [ebp+8], 72
jne .Lt_0D5C
.Lt_0D5D:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 9
push offset _Lt_0D5E
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0D29
.Lt_0D5C:
cmp dword ptr [ebp+8], 71
jne .Lt_0D60
.Lt_0D61:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 13
push offset _Lt_0D62
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0D29
.Lt_0D60:
cmp dword ptr [ebp+8], 70
jne .Lt_0D64
.Lt_0D65:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 7
push offset _Lt_0D66
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0D29
.Lt_0D64:
cmp dword ptr [ebp+8], 54
jne .Lt_0D68
.Lt_0D69:
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 20
push offset _Lt_0D6B
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 15
push offset _Lt_0D52
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 17
push offset _Lt_0D6E
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call _RESTORE_VRREG@8
jmp .Lt_0D29
.Lt_0D68:
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 47
push offset _Lt_0D73
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
.Lt_0D70:
.Lt_0D29:
cmp dword ptr [ebp+8], 57
jne .Lt_0D77
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push 6
push offset _Lt_0D78
push -1
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRD+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
jmp .Lt_0D76
.Lt_0D77:
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRD+eax*4]
push 6
push offset _Lt_0734
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
.Lt_0D76:
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_0C97
.Lt_0D20:
.Lt_0D1F:
mov eax, dword ptr [ebp+8]
cmp eax, 56
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+4]
cmp ecx, 16
setne cl
shr ecx, 1
sbb ecx, ecx
and eax, ecx
je .Lt_0D80
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
push -1
lea ecx, [ebp-12]
push ecx
push 10
push offset _Lt_0407
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea ecx, [ebp-72]
push ecx
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
cmp dword ptr [_REGHANDLE+12], -2
je .Lt_0D84
mov eax, dword ptr [_REGHANDLE+12]
mov dword ptr [ebp-44], eax
push -1
push dword ptr [ebp-44]
call _REG_FINDFREE@8
mov dword ptr [_REGHANDLE+12], -2
push 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
push 0
push -1
push 0
push dword ptr [_REGSTRQ+12]
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [ebp-44]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-168]
push eax
call _fb_StrAssign@20
lea eax, [ebp-168]
push eax
call _HWRITEASM64@8
lea eax, [ebp-168]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp-40], 3
jne .Lt_0D8A
push dword ptr [ebp-44]
call _REG_FINDREAL@4
mov dword ptr [ebp-40], eax
.Lt_0D8A:
jmp .Lt_0D83
.Lt_0D84:
or dword ptr [_CTX+112], 8
.Lt_0D83:
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 4
push offset _Lt_0C44
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 13
push offset _Lt_0D8C
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
push 0
push 13
push offset _Lt_0D8E
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
lea eax, [ebp-120]
push eax
call _HWRITEASM64@8
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+16], 0
jne .Lt_0D91
push 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-156]
push eax
call _fb_StrAssign@20
lea eax, [ebp-156]
push eax
call _HWRITEASM64@8
lea eax, [ebp-156]
push eax
call _fb_StrDelete@4
jmp .Lt_0D90
.Lt_0D91:
push 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-156]
push eax
call _fb_StrAssign@20
lea eax, [ebp-156]
push eax
call _HWRITEASM64@8
lea eax, [ebp-156]
push eax
call _fb_StrDelete@4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call _RESTORE_VRREG@8
.Lt_0D90:
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_0C97
.Lt_0D80:
.Lt_0D7F:
mov eax, dword ptr [ebp+8]
cmp eax, 54
sete al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+4]
cmp ebx, 16
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_0D99
cmp dword ptr [ebp+16], 0
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
cmp ecx, 4
setne cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
je .Lt_0D9B
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
push -1
lea ecx, [ebp-12]
push ecx
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov ecx, dword ptr [ebp-40]
push dword ptr [_REGSTRQ+ecx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea ecx, [ebp-96]
push ecx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-132]
push eax
call _fb_StrAssign@20
lea eax, [ebp-132]
push eax
call _HWRITEASM64@8
lea eax, [ebp-132]
push eax
call _fb_StrDelete@4
push 0
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_0D9B:
.Lt_0D9A:
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_0BF8
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+16], 0
je .Lt_0DA3
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call _RESTORE_VRREG@8
.Lt_0DA3:
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_0C97
.Lt_0D99:
.Lt_0D98:
mov eax, dword ptr [ebp+8]
cmp eax, 57
sete al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+4]
cmp ebx, 16
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_0DA5
push 0
push dword ptr [_REGSTRQ+8]
push -1
lea ebx, [ebp-12]
push ebx
call _fb_StrCompare@16
test eax, eax
je .Lt_0DA7
cmp dword ptr [_REGHANDLE+8], -2
je .Lt_0DA9
mov eax, dword ptr [_REGHANDLE+8]
mov dword ptr [ebp-44], eax
push -1
push dword ptr [ebp-44]
call _REG_FINDFREE@8
mov dword ptr [_REGHANDLE+8], -2
push 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push -1
push 0
push dword ptr [_REGSTRQ+8]
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [ebp-44]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-156]
push eax
call _fb_StrAssign@20
lea eax, [ebp-156]
push eax
call _HWRITEASM64@8
lea eax, [ebp-156]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [ebp-44]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
cmp dword ptr [ebp-40], 2
jne .Lt_0DAF
push dword ptr [ebp-44]
call _REG_FINDREAL@4
mov dword ptr [ebp-40], eax
.Lt_0DAF:
jmp .Lt_0DA8
.Lt_0DA9:
or dword ptr [_CTX+112], 4
.Lt_0DA8:
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 10
push offset _Lt_0C0D
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
.Lt_0DA7:
.Lt_0DA6:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 8
push offset _Lt_0DB2
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 16
push offset _Lt_0DB4
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+16], 0
jne .Lt_0DB7
push 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
lea eax, [ebp-120]
push eax
call _HWRITEASM64@8
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
jmp .Lt_0DB6
.Lt_0DB7:
push 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
lea eax, [ebp-120]
push eax
call _HWRITEASM64@8
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
.Lt_0DB6:
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_0C97
.Lt_0DA5:
.Lt_0DA4:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_0DBF
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 12
push offset _Lt_0DC0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
jmp .Lt_0DBE
.Lt_0DBF:
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 13
push offset _Lt_0DC3
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
.Lt_0DBE:
cmp dword ptr [ebp+8], 60
jne .Lt_0DC7
.Lt_0DC8:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 4
push offset _Lt_0DC9
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0DC6
.Lt_0DC7:
cmp dword ptr [ebp+8], 58
jne .Lt_0DCB
.Lt_0DCC:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 4
push offset _Lt_0DCD
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0DC6
.Lt_0DCB:
cmp dword ptr [ebp+8], 69
jne .Lt_0DCF
.Lt_0DD0:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 4
push offset _Lt_0DD1
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0DC6
.Lt_0DCF:
cmp dword ptr [ebp+8], 68
jne .Lt_0DD3
.Lt_0DD4:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 4
push offset _Lt_0DD5
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0DC6
.Lt_0DD3:
cmp dword ptr [ebp+8], 61
jne .Lt_0DD7
.Lt_0DD8:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset _Lt_0DD9
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0DC6
.Lt_0DD7:
cmp dword ptr [ebp+8], 59
jne .Lt_0DDB
.Lt_0DDC:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset _Lt_0DDD
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0DC6
.Lt_0DDB:
cmp dword ptr [ebp+8], 62
jne .Lt_0DDF
.Lt_0DE0:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 4
push offset _Lt_0DE1
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0DC6
.Lt_0DDF:
cmp dword ptr [ebp+8], 63
jne .Lt_0DE3
.Lt_0DE4:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 5
push offset _Lt_0DE5
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0DC6
.Lt_0DE3:
cmp dword ptr [ebp+8], 56
jne .Lt_0DE7
.Lt_0DE8:
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 28
push offset _Lt_0DE9
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 15
push offset _Lt_0DEB
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 17
push offset _Lt_0DED
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 16
push offset _Lt_0DEF
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call _RESTORE_VRREG@8
jmp .Lt_0DC6
.Lt_0DE7:
cmp dword ptr [ebp+8], 65
jne .Lt_0DF1
.Lt_0DF2:
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 18
push offset _Lt_0DF3
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call _RESTORE_VRREG@8
jmp .Lt_0DC6
.Lt_0DF1:
cmp dword ptr [ebp+8], 57
jne .Lt_0DF5
.Lt_0DF6:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 13
push offset _Lt_0DF7
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0DC6
.Lt_0DF5:
cmp dword ptr [ebp+8], 72
jne .Lt_0DF9
.Lt_0DFA:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 9
push offset _Lt_0DFB
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0DC6
.Lt_0DF9:
cmp dword ptr [ebp+8], 71
jne .Lt_0DFD
.Lt_0DFE:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 13
push offset _Lt_0DFF
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0DC6
.Lt_0DFD:
cmp dword ptr [ebp+8], 70
jne .Lt_0E01
.Lt_0E02:
push dword ptr [ebp-40]
push dword ptr [ebp+16]
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 6
push offset _Lt_0E03
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _SAVE_CALL@12
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_0DC6
.Lt_0E01:
cmp dword ptr [ebp+8], 54
jne .Lt_0E05
.Lt_0E06:
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 28
push offset _Lt_0E08
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 15
push offset _Lt_0DEB
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 17
push offset _Lt_0E0B
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
push dword ptr [ebp-40]
push dword ptr [ebp+16]
call _RESTORE_VRREG@8
jmp .Lt_0DC6
.Lt_0E05:
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 47
push offset _Lt_0E10
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
.Lt_0E0D:
.Lt_0DC6:
cmp dword ptr [ebp+8], 57
jne .Lt_0E14
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push 6
push offset _Lt_0D78
push -1
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRQ+eax*4]
push 8
push offset _Lt_0E15
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
jmp .Lt_0E13
.Lt_0E14:
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push 0
mov eax, dword ptr [ebp-40]
push dword ptr [_REGSTRQ+eax*4]
push 6
push offset _Lt_073A
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
.Lt_0E13:
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_0C97:
pop ebx
mov esp, ebp
pop ebp
ret 12
.balign 16
_HEMITROUNDFLOAT@8:
push ebp
mov ebp, esp
sub esp, 156
.Lt_0E1C:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov byte ptr [_CTX+136], 1
push 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push 51
push offset _Lt_0E1E
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
lea eax, [ebp-36]
push eax
call _HWRITEASM64@8
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 4
push offset _Lt_0911
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
lea eax, [ebp-60]
push eax
call _HWRITEASM64@8
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+8], 16
jne .Lt_0E23
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 20
push offset _Lt_0E24
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+12], 14
je .Lt_0E27
push 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push 20
push offset _Lt_0E28
push -1
lea eax, [ebp-156]
push eax
call _fb_StrAssign@20
lea eax, [ebp-156]
push eax
call _HWRITEASM64@8
lea eax, [ebp-156]
push eax
call _fb_StrDelete@4
.Lt_0E27:
.Lt_0E26:
jmp .Lt_0E22
.Lt_0E23:
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 20
push offset _Lt_0E2A
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+12], 14
je .Lt_0E2D
push 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
push 0
push 20
push offset _Lt_0E2E
push -1
lea eax, [ebp-156]
push eax
call _fb_StrAssign@20
lea eax, [ebp-156]
push eax
call _HWRITEASM64@8
lea eax, [ebp-156]
push eax
call _fb_StrDelete@4
.Lt_0E2D:
.Lt_0E2C:
.Lt_0E22:
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 5
push offset _Lt_0E30
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+8], 16
jne .Lt_0E36
cmp dword ptr [ebp+12], 14
je .Lt_0E38
push offset _Lt_0E39
call _NO_ROUNDSD@4
jmp .Lt_0E37
.Lt_0E38:
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 15
push offset _Lt_0E3A
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
.Lt_0E37:
jmp .Lt_0E35
.Lt_0E36:
cmp dword ptr [ebp+12], 14
je .Lt_0E3D
push offset _Lt_0E3E
call _NO_ROUNDSD@4
jmp .Lt_0E3C
.Lt_0E3D:
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 16
push offset _Lt_0E3F
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
.Lt_0E3C:
.Lt_0E35:
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-132]
push eax
call _fb_StrAssign@20
lea eax, [ebp-132]
push eax
call _HWRITEASM64@8
lea eax, [ebp-132]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_0E1D:
mov esp, ebp
pop ebp
ret 8
.balign 16
__EMITCONVERT@8:
push ebp
mov ebp, esp
sub esp, 512
push ebx
.Lt_0E43:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-132], 0
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax], 4
je .Lt_0E46
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-184]
push eax
call _fb_StrAssign@20
lea eax, [ebp-184]
push eax
call _HWRITEASM64@8
lea eax, [ebp-184]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push 44
push offset _Lt_0E49
push -1
lea eax, [ebp-196]
push eax
call _fb_StrAssign@20
lea eax, [ebp-196]
push eax
call _HWRITEASM64@8
lea eax, [ebp-196]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-208]
push eax
call _fb_StrAssign@20
lea eax, [ebp-208]
push eax
call _HWRITEASM64@8
lea eax, [ebp-208]
push eax
call _fb_StrDelete@4
.Lt_0E46:
.Lt_0E45:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 511
mov dword ptr [ebp-4], ebx
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+4]
and eax, 511
mov dword ptr [ebp-8], eax
mov eax, dword ptr [ebp-4]
and eax, 480
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-8]
and ebx, 480
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_0E4D
push edi
push esi
mov edi, dword ptr [ebp+8]
mov esi, dword ptr [ebp+12]
mov ecx, 18
rep movsd
pop esi
pop edi
lea ebx, [ebp-120]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-108]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-96]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-84]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-72]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-60]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-48]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-36]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-24]
push ebx
call _fb_StrDelete@4
jmp .Lt_0E44
.Lt_0E4D:
.Lt_0E4C:
mov ebx, dword ptr [ebp-4]
and ebx, 480
test ebx, ebx
je .Lt_0E4F
mov dword ptr [ebp-4], 13
.Lt_0E4F:
mov ebx, dword ptr [ebp-8]
and ebx, 480
test ebx, ebx
je .Lt_0E51
mov dword ptr [ebp-8], 13
.Lt_0E51:
cmp dword ptr [ebp-4], 8
jne .Lt_0E53
mov dword ptr [ebp-4], 13
jmp .Lt_0E52
.Lt_0E53:
cmp dword ptr [ebp-4], 10
jne .Lt_0E54
mov dword ptr [ebp-4], 13
jmp .Lt_0E52
.Lt_0E54:
cmp dword ptr [ebp-4], 9
jne .Lt_0E55
mov dword ptr [ebp-4], 14
.Lt_0E55:
.Lt_0E52:
cmp dword ptr [ebp-8], 8
jne .Lt_0E57
mov dword ptr [ebp-8], 13
jmp .Lt_0E56
.Lt_0E57:
cmp dword ptr [ebp-8], 10
jne .Lt_0E58
mov dword ptr [ebp-8], 13
jmp .Lt_0E56
.Lt_0E58:
cmp dword ptr [ebp-8], 9
jne .Lt_0E59
mov dword ptr [ebp-8], 14
.Lt_0E59:
.Lt_0E56:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx]
cmp eax, 4
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx]
cmp ecx, 4
sete cl
shr ecx, 1
sbb ecx, ecx
and eax, ecx
mov dword ptr [ebp-176], eax
mov eax, dword ptr [ebp-4]
and eax, 480
je .Lt_0E5A
mov dword ptr [ebp-136], 24
jmp .Lt_1B7F
.Lt_0E5A:
mov eax, dword ptr [ebp-4]
and eax, 31
mov dword ptr [ebp-136], eax
.Lt_1B7F:
mov eax, dword ptr [ebp-136]
imul eax, 28
mov dword ptr [ebp-180], eax
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_0E5C
mov dword ptr [ebp-140], 24
jmp .Lt_1B80
.Lt_0E5C:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-140], eax
.Lt_1B80:
mov eax, dword ptr [ebp-140]
imul eax, 28
mov ecx, dword ptr [ebp-180]
mov ebx, dword ptr [_SYMB_DTYPETB+eax+4]
cmp ebx, dword ptr [_SYMB_DTYPETB+ecx+4]
sete bl
shr ebx, 1
sbb ebx, ebx
and ebx, dword ptr [ebp-176]
mov dword ptr [ebp-184], ebx
mov ebx, dword ptr [ebp-4]
and ebx, 480
je .Lt_0E5E
mov dword ptr [ebp-144], 24
jmp .Lt_1B81
.Lt_0E5E:
mov ebx, dword ptr [ebp-4]
and ebx, 31
mov dword ptr [ebp-144], ebx
.Lt_1B81:
mov ebx, dword ptr [ebp-144]
imul ebx, 28
mov dword ptr [ebp-188], ebx
mov ebx, dword ptr [ebp-8]
and ebx, 480
je .Lt_0E60
mov dword ptr [ebp-148], 24
jmp .Lt_1B82
.Lt_0E60:
mov ebx, dword ptr [ebp-8]
and ebx, 31
mov dword ptr [ebp-148], ebx
.Lt_1B82:
mov ebx, dword ptr [ebp-148]
imul ebx, 28
mov ecx, dword ptr [ebp-188]
mov eax, dword ptr [_SYMB_DTYPETB+ebx]
cmp eax, dword ptr [_SYMB_DTYPETB+ecx]
sete al
shr eax, 1
sbb eax, eax
and eax, dword ptr [ebp-184]
je .Lt_0E63
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [eax+12]
mov dword ptr [ecx+12], ebx
lea ebx, [ebp-120]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-108]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-96]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-84]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-72]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-60]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-48]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-36]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-24]
push ebx
call _fb_StrDelete@4
jmp .Lt_0E44
.Lt_0E63:
.Lt_0E62:
mov ebx, dword ptr [ebp-4]
cmp ebx, 13
sete bl
shr ebx, 1
sbb ebx, ebx
mov ecx, dword ptr [ebp-8]
cmp ecx, 13
sete cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
mov ecx, dword ptr [ebp-4]
cmp ecx, 14
sete cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp-8]
cmp eax, 14
sete al
shr eax, 1
sbb eax, eax
and ecx, eax
or ebx, ecx
je .Lt_0E65
push edi
push esi
mov edi, dword ptr [ebp+8]
mov esi, dword ptr [ebp+12]
mov ecx, 18
rep movsd
pop esi
pop edi
lea ecx, [ebp-120]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-108]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-96]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-84]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-72]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-60]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-48]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-36]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-24]
push ecx
call _fb_StrDelete@4
jmp .Lt_0E44
.Lt_0E65:
.Lt_0E64:
mov ecx, dword ptr [ebp-4]
cmp ecx, 13
sete cl
shr ecx, 1
sbb ecx, ecx
mov ebx, dword ptr [ebp-8]
cmp ebx, 14
sete bl
shr ebx, 1
sbb ebx, ebx
and ecx, ebx
mov ebx, dword ptr [ebp-8]
cmp ebx, 13
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp-4]
cmp eax, 14
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
or ecx, ebx
je .Lt_0E67
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+4]
mov dword ptr [ebp-12], ecx
push edi
push esi
mov edi, dword ptr [ebp+8]
mov esi, dword ptr [ebp+12]
mov ecx, 18
rep movsd
pop esi
pop edi
mov ecx, dword ptr [ebp+8]
mov ebx, dword ptr [ebp-12]
mov dword ptr [ecx+4], ebx
lea ebx, [ebp-120]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-108]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-96]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-84]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-72]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-60]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-48]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-36]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-24]
push ebx
call _fb_StrDelete@4
jmp .Lt_0E44
.Lt_0E67:
.Lt_0E66:
mov ebx, dword ptr [ebp-4]
cmp ebx, 17
sete bl
shr ebx, 1
sbb ebx, ebx
mov ecx, dword ptr [ebp-8]
cmp ecx, 20
sete cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
je .Lt_0E69
push edi
push esi
mov edi, dword ptr [ebp+8]
mov esi, dword ptr [ebp+12]
mov ecx, 18
rep movsd
pop esi
pop edi
lea ecx, [ebp-120]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-108]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-96]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-84]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-72]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-60]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-48]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-36]
push ecx
call _fb_StrDelete@4
lea ecx, [ebp-24]
push ecx
call _fb_StrDelete@4
jmp .Lt_0E44
.Lt_0E69:
.Lt_0E68:
mov ecx, dword ptr [ebp-4]
cmp ecx, 20
sete cl
shr ecx, 1
sbb ecx, ecx
mov ebx, dword ptr [ebp-8]
cmp ebx, 20
sete bl
shr ebx, 1
sbb ebx, ebx
and ecx, ebx
je .Lt_0E6B
push edi
push esi
mov edi, dword ptr [ebp+8]
mov esi, dword ptr [ebp+12]
mov ecx, 18
rep movsd
pop esi
pop edi
lea ebx, [ebp-120]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-108]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-96]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-84]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-72]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-60]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-48]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-36]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-24]
push ebx
call _fb_StrDelete@4
jmp .Lt_0E44
.Lt_0E6B:
.Lt_0E6A:
push -1
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+12]
call _REG_FINDFREE@8
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-124], eax
cmp dword ptr [ebp-4], 17
jne .Lt_0E6D
mov dword ptr [ebp-4], 13
.Lt_0E6D:
cmp dword ptr [ebp-4], 13
je .Lt_0E70
.Lt_0E71:
cmp dword ptr [ebp-4], 14
je .Lt_0E70
.Lt_0E72:
cmp dword ptr [ebp-4], 16
je .Lt_0E70
.Lt_0E73:
cmp dword ptr [ebp-4], 20
jne .Lt_0E6F
.Lt_0E70:
push 0
push 11
push offset _Lt_096F
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
push 0
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
jmp .Lt_0E6E
.Lt_0E6F:
cmp dword ptr [ebp-4], 11
je .Lt_0E75
.Lt_0E76:
cmp dword ptr [ebp-4], 12
je .Lt_0E75
.Lt_0E77:
cmp dword ptr [ebp-4], 15
jne .Lt_0E74
.Lt_0E75:
push 0
push 11
push offset _Lt_0974
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
push 0
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [_REGSTRD+eax*4]
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
jmp .Lt_0E6E
.Lt_0E74:
cmp dword ptr [ebp-4], 5
je .Lt_0E79
.Lt_0E7A:
cmp dword ptr [ebp-4], 6
jne .Lt_0E78
.Lt_0E79:
push 0
push 10
push offset _Lt_0978
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
push 0
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [_REGSTRW+eax*4]
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
jmp .Lt_0E6E
.Lt_0E78:
cmp dword ptr [ebp-4], 2
je .Lt_0E7C
.Lt_0E7D:
cmp dword ptr [ebp-4], 3
je .Lt_0E7C
.Lt_0E7E:
cmp dword ptr [ebp-4], 1
je .Lt_0E7C
.Lt_0E7F:
cmp dword ptr [ebp-4], 4
jne .Lt_0E7B
.Lt_0E7C:
push 0
push 10
push offset _Lt_097E
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
push 0
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [_REGSTRB+eax*4]
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
jmp .Lt_0E6E
.Lt_0E7B:
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-184]
push eax
call _fb_StrAssign@20
lea eax, [ebp-184]
push eax
call _HWRITEASM64@8
lea eax, [ebp-184]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 55
push offset _Lt_0E84
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-208]
push eax
call _fb_StrAssign@20
lea eax, [ebp-208]
push eax
call _HWRITEASM64@8
lea eax, [ebp-208]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-220]
push eax
call _fb_StrAssign@20
lea eax, [ebp-220]
push eax
call _HWRITEASM64@8
lea eax, [ebp-220]
push eax
call _fb_StrDelete@4
.Lt_0E80:
.Lt_0E6E:
cmp dword ptr [ebp-8], 13
je .Lt_0E8A
.Lt_0E8B:
cmp dword ptr [ebp-8], 14
je .Lt_0E8A
.Lt_0E8C:
cmp dword ptr [ebp-8], 16
je .Lt_0E8A
.Lt_0E8D:
cmp dword ptr [ebp-8], 20
jne .Lt_0E89
.Lt_0E8A:
push 0
push 11
push offset _Lt_096F
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
jmp .Lt_0E88
.Lt_0E89:
cmp dword ptr [ebp-8], 11
je .Lt_0E8F
.Lt_0E90:
cmp dword ptr [ebp-8], 12
je .Lt_0E8F
.Lt_0E91:
cmp dword ptr [ebp-8], 15
jne .Lt_0E8E
.Lt_0E8F:
push 0
push 11
push offset _Lt_0974
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
jmp .Lt_0E88
.Lt_0E8E:
cmp dword ptr [ebp-8], 5
je .Lt_0E93
.Lt_0E94:
cmp dword ptr [ebp-8], 6
jne .Lt_0E92
.Lt_0E93:
push 0
push 10
push offset _Lt_0978
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
jmp .Lt_0E88
.Lt_0E92:
cmp dword ptr [ebp-8], 2
je .Lt_0E96
.Lt_0E97:
cmp dword ptr [ebp-8], 3
je .Lt_0E96
.Lt_0E98:
cmp dword ptr [ebp-8], 1
je .Lt_0E96
.Lt_0E99:
cmp dword ptr [ebp-8], 4
jne .Lt_0E95
.Lt_0E96:
push 0
push 10
push offset _Lt_097E
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
jmp .Lt_0E88
.Lt_0E95:
cmp dword ptr [ebp-8], 7
jne .Lt_0E9A
.Lt_0E9B:
cmp dword ptr [_SYMB_DTYPETB+200], 2
jne .Lt_0E9D
push 0
push 10
push offset _Lt_0978
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
mov dword ptr [ebp-8], 6
jmp .Lt_0E9C
.Lt_0E9D:
cmp dword ptr [_SYMB_DTYPETB+200], 4
jne .Lt_0E9E
push 0
push 11
push offset _Lt_0974
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
mov dword ptr [ebp-8], 12
jmp .Lt_0E9C
.Lt_0E9E:
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-184]
push eax
call _fb_StrAssign@20
lea eax, [ebp-184]
push eax
call _HWRITEASM64@8
lea eax, [ebp-184]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push 55
push offset _Lt_0EA1
push -1
lea eax, [ebp-196]
push eax
call _fb_StrAssign@20
lea eax, [ebp-196]
push eax
call _HWRITEASM64@8
lea eax, [ebp-196]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-208]
push eax
call _fb_StrAssign@20
lea eax, [ebp-208]
push eax
call _HWRITEASM64@8
lea eax, [ebp-208]
push eax
call _fb_StrDelete@4
.Lt_0E9C:
jmp .Lt_0E88
.Lt_0E9A:
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-184]
push eax
call _fb_StrAssign@20
lea eax, [ebp-184]
push eax
call _HWRITEASM64@8
lea eax, [ebp-184]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 55
push offset _Lt_0EA8
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-208]
push eax
call _fb_StrAssign@20
lea eax, [ebp-208]
push eax
call _HWRITEASM64@8
lea eax, [ebp-208]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-220]
push eax
call _fb_StrAssign@20
lea eax, [ebp-220]
push eax
call _HWRITEASM64@8
lea eax, [ebp-220]
push eax
call _fb_StrDelete@4
.Lt_0EA4:
.Lt_0E88:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-176], ebx
cmp dword ptr [ebp-176], 2
jne .Lt_0EAE
.Lt_0EAF:
lea ebx, [ebp-96]
push ebx
lea ebx, [ebp-72]
push ebx
push dword ptr [ebp+12]
call _PREPARE_IDX@12
jmp .Lt_0EAC
.Lt_0EAE:
cmp dword ptr [ebp-176], 4
jne .Lt_0EB0
.Lt_0EB1:
push 0
push 1
push offset _Lt_0000
push -1
lea ebx, [ebp-120]
push ebx
call _fb_StrAssign@20
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-128], eax
mov eax, dword ptr [ebp-8]
and eax, 480
test eax, eax
je .Lt_0EB3
mov dword ptr [ebp-8], 13
.Lt_0EB3:
cmp dword ptr [ebp-8], 13
je .Lt_0EB6
.Lt_0EB7:
cmp dword ptr [ebp-8], 14
je .Lt_0EB6
.Lt_0EB8:
cmp dword ptr [ebp-8], 16
jne .Lt_0EB5
.Lt_0EB6:
push 0
push 0
mov eax, dword ptr [ebp-128]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
jmp .Lt_0EB4
.Lt_0EB5:
cmp dword ptr [ebp-8], 11
je .Lt_0EBA
.Lt_0EBB:
cmp dword ptr [ebp-8], 12
je .Lt_0EBA
.Lt_0EBC:
cmp dword ptr [ebp-8], 15
jne .Lt_0EB9
.Lt_0EBA:
push 0
push 0
mov eax, dword ptr [ebp-128]
push dword ptr [_REGSTRD+eax*4]
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
jmp .Lt_0EB4
.Lt_0EB9:
cmp dword ptr [ebp-8], 5
je .Lt_0EBE
.Lt_0EBF:
cmp dword ptr [ebp-8], 6
jne .Lt_0EBD
.Lt_0EBE:
push 0
push 0
mov eax, dword ptr [ebp-128]
push dword ptr [_REGSTRW+eax*4]
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
jmp .Lt_0EB4
.Lt_0EBD:
cmp dword ptr [ebp-8], 2
je .Lt_0EC1
.Lt_0EC2:
cmp dword ptr [ebp-8], 3
je .Lt_0EC1
.Lt_0EC3:
cmp dword ptr [ebp-8], 1
je .Lt_0EC1
.Lt_0EC4:
cmp dword ptr [ebp-8], 4
jne .Lt_0EC0
.Lt_0EC1:
push 0
push 0
mov eax, dword ptr [ebp-128]
push dword ptr [_REGSTRB+eax*4]
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
jmp .Lt_0EB4
.Lt_0EC0:
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-188]
push eax
call _fb_StrAssign@20
lea eax, [ebp-188]
push eax
call _HWRITEASM64@8
lea eax, [ebp-188]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 55
push offset _Lt_0EC9
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
.Lt_0EC5:
.Lt_0EB4:
jmp .Lt_0EAC
.Lt_0EB0:
cmp dword ptr [ebp-176], 1
jne .Lt_0ECD
.Lt_0ECE:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0ED0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
jmp .Lt_0ECF
.Lt_0ED0:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
.Lt_0ECF:
jmp .Lt_0EAC
.Lt_0ECD:
cmp dword ptr [ebp-176], 3
jne .Lt_0ED5
.Lt_0ED6:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
jmp .Lt_0EAC
.Lt_0ED5:
cmp dword ptr [ebp-176], 5
jne .Lt_0EDA
.Lt_0EDB:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 31
cmp ebx, 22
jne .Lt_0EDF
mov ebx, dword ptr [_CTX+212]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-216], ebx
jmp .Lt_1B87
.Lt_0EDF:
mov dword ptr [ebp-216], 0
.Lt_1B87:
cmp dword ptr [ebp-216], 0
je .Lt_0EE1
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-220], eax
jmp .Lt_1B88
.Lt_0EE1:
mov dword ptr [ebp-220], 0
.Lt_1B88:
cmp dword ptr [ebp-220], 0
je .Lt_0EE4
push 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push -1
push 1
push offset _Lt_0119
call _fb_StrAllocTempDescZEx@8
push eax
lea eax, [ebp-72]
push eax
push 1
call _fb_StrInstr@12
dec eax
push eax
lea eax, [ebp-72]
push eax
call _fb_LEFT@8
push eax
push 20
push offset _Lt_0EE5
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-256]
push eax
call _fb_StrAssign@20
lea eax, [ebp-256]
push eax
call _HWRITEASM64@8
lea eax, [ebp-256]
push eax
call _fb_StrDelete@4
push 3
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
lea eax, [ebp-268]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
lea eax, [ebp-280]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-292]
push eax
call _fb_StrAssign@20
lea eax, [ebp-292]
push eax
call _HWRITEASM64@8
lea eax, [ebp-292]
push eax
call _fb_StrDelete@4
jmp .Lt_0EE3
.Lt_0EE4:
push 3
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_012F
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-268]
push eax
call _fb_StrAssign@20
lea eax, [ebp-268]
push eax
call _HWRITEASM64@8
lea eax, [ebp-268]
push eax
call _fb_StrDelete@4
.Lt_0EE3:
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_0E44
jmp .Lt_0EAC
.Lt_0EDA:
cmp dword ptr [ebp-176], 0
jne .Lt_0EF0
.Lt_0EF1:
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_0EF2
mov dword ptr [ebp-180], 24
jmp .Lt_1B89
.Lt_0EF2:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-180], eax
.Lt_1B89:
mov eax, dword ptr [ebp-180]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax], 1
jne .Lt_0EF5
push 0
push -1
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
mov eax, dword ptr [ebp+12]
push dword ptr [eax+28]
push dword ptr [eax+24]
call _HFLOATTOHEX_ASM64@16
push eax
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
jmp .Lt_0EF4
.Lt_0EF5:
push 0
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+28]
push dword ptr [eax+24]
call _fb_LongintToStr@8
push eax
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
.Lt_0EF4:
jmp .Lt_0EAC
.Lt_0EF0:
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-188]
push eax
call _fb_StrAssign@20
lea eax, [ebp-188]
push eax
call _HWRITEASM64@8
lea eax, [ebp-188]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 29
push offset _Lt_0EF9
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
.Lt_0EF6:
.Lt_0EAC:
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-96]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_0EFD
lea eax, [ebp-96]
push eax
call _EMITOP3_OP4@4
.Lt_0EFD:
mov eax, dword ptr [ebp-4]
and eax, 480
je .Lt_0EFE
mov dword ptr [ebp-152], 24
jmp .Lt_1B8A
.Lt_0EFE:
mov eax, dword ptr [ebp-4]
and eax, 31
mov dword ptr [ebp-152], eax
.Lt_1B8A:
mov eax, dword ptr [ebp-152]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax], 1
jne .Lt_0F01
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_0F02
mov dword ptr [ebp-176], 24
jmp .Lt_1B8B
.Lt_0F02:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-176], eax
.Lt_1B8B:
mov eax, dword ptr [ebp-176]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax], 1
jne .Lt_0F05
cmp dword ptr [ebp-4], 16
jne .Lt_0F07
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_0F09
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push 12
push offset _Lt_0D23
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
lea eax, [ebp-248]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-260]
push eax
call _fb_StrAssign@20
lea eax, [ebp-260]
push eax
call _HWRITEASM64@8
lea eax, [ebp-260]
push eax
call _fb_StrDelete@4
push 0
push 5
push offset _Lt_0F0C
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
.Lt_0F09:
.Lt_0F08:
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push 16
push offset _Lt_0F0D
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push -1
lea eax, [ebp-60]
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-236]
push eax
call _fb_StrAssign@20
lea eax, [ebp-236]
push eax
call _HWRITEASM64@8
lea eax, [ebp-236]
push eax
call _fb_StrDelete@4
jmp .Lt_0F06
.Lt_0F07:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_0F14
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push 12
push offset _Lt_0F15
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
lea eax, [ebp-248]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-260]
push eax
call _fb_StrAssign@20
lea eax, [ebp-260]
push eax
call _HWRITEASM64@8
lea eax, [ebp-260]
push eax
call _fb_StrDelete@4
push 0
push 5
push offset _Lt_0F18
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
.Lt_0F14:
.Lt_0F13:
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push 16
push offset _Lt_0F19
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push -1
lea eax, [ebp-60]
push eax
push 6
push offset _Lt_0734
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-236]
push eax
call _fb_StrAssign@20
lea eax, [ebp-236]
push eax
call _HWRITEASM64@8
lea eax, [ebp-236]
push eax
call _fb_StrDelete@4
.Lt_0F06:
jmp .Lt_0F04
.Lt_0F05:
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 15
push offset _Lt_0F1F
push -1
lea eax, [ebp-188]
push eax
call _fb_StrAssign@20
lea eax, [ebp-188]
push eax
call _HWRITEASM64@8
lea eax, [ebp-188]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp-8], 14
jne .Lt_0F22
.Lt_0F23:
cmp dword ptr [ebp-4], 16
jne .Lt_0F25
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 14
push offset _Lt_0F28
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 4
push offset _Lt_0F2A
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-248]
push eax
call _fb_StrAssign@20
lea eax, [ebp-248]
push eax
call _HWRITEASM64@8
lea eax, [ebp-248]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push 19
push offset _Lt_0F2D
push -1
lea eax, [ebp-260]
push eax
call _fb_StrAssign@20
lea eax, [ebp-260]
push eax
call _HWRITEASM64@8
lea eax, [ebp-260]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push -1
push -1
lea eax, [ebp-36]
push eax
push 5
push offset _Lt_0E30
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-284]
push eax
call _fb_StrAssign@20
lea eax, [ebp-284]
push eax
call _HWRITEASM64@8
lea eax, [ebp-284]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-308]
push eax
call _fb_StrAssign@20
lea eax, [ebp-308]
push eax
call _HWRITEASM64@8
lea eax, [ebp-308]
push eax
call _fb_StrDelete@4
push -1
push 999999
call _REG_FINDFREE@8
mov dword ptr [ebp-132], eax
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp-132]
mov dword ptr [_REGHANDLE+eax*4], -2
push 0
mov dword ptr [ebp-344], 0
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-48]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
lea eax, [ebp-332]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-344]
push eax
call _fb_StrAssign@20
lea eax, [ebp-344]
push eax
call _HWRITEASM64@8
lea eax, [ebp-344]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-368], 0
mov dword ptr [ebp-364], 0
mov dword ptr [ebp-360], 0
push 0
push -1
push -1
lea eax, [ebp-48]
push eax
push 5
push offset _Lt_0648
mov dword ptr [ebp-356], 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
lea eax, [ebp-356]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-368]
push eax
call _fb_StrAssign@20
lea eax, [ebp-368]
push eax
call _HWRITEASM64@8
lea eax, [ebp-368]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-380], 0
mov dword ptr [ebp-376], 0
mov dword ptr [ebp-372], 0
push 0
push 11
push offset _Lt_0F38
push -1
lea eax, [ebp-380]
push eax
call _fb_StrAssign@20
lea eax, [ebp-380]
push eax
call _HWRITEASM64@8
lea eax, [ebp-380]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-416], 0
mov dword ptr [ebp-412], 0
mov dword ptr [ebp-408], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-48]
push eax
push 4
push offset _Lt_06B8
mov dword ptr [ebp-392], 0
mov dword ptr [ebp-388], 0
mov dword ptr [ebp-384], 0
lea eax, [ebp-392]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-404], 0
mov dword ptr [ebp-400], 0
mov dword ptr [ebp-396], 0
lea eax, [ebp-404]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-416]
push eax
call _fb_StrAssign@20
lea eax, [ebp-416]
push eax
call _HWRITEASM64@8
lea eax, [ebp-416]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-440], 0
mov dword ptr [ebp-436], 0
mov dword ptr [ebp-432], 0
push 0
push -1
push -1
lea eax, [ebp-48]
push eax
push 16
push offset _Lt_0F3D
mov dword ptr [ebp-428], 0
mov dword ptr [ebp-424], 0
mov dword ptr [ebp-420], 0
lea eax, [ebp-428]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-440]
push eax
call _fb_StrAssign@20
lea eax, [ebp-440]
push eax
call _HWRITEASM64@8
lea eax, [ebp-440]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-452], 0
mov dword ptr [ebp-448], 0
mov dword ptr [ebp-444], 0
push 0
push 17
push offset _Lt_0F40
push -1
lea eax, [ebp-452]
push eax
call _fb_StrAssign@20
lea eax, [ebp-452]
push eax
call _HWRITEASM64@8
lea eax, [ebp-452]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-476], 0
mov dword ptr [ebp-472], 0
mov dword ptr [ebp-468], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-464], 0
mov dword ptr [ebp-460], 0
mov dword ptr [ebp-456], 0
lea eax, [ebp-464]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-476]
push eax
call _fb_StrAssign@20
lea eax, [ebp-476]
push eax
call _HWRITEASM64@8
lea eax, [ebp-476]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-512], 0
mov dword ptr [ebp-508], 0
mov dword ptr [ebp-504], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push -1
lea eax, [ebp-60]
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-488], 0
mov dword ptr [ebp-484], 0
mov dword ptr [ebp-480], 0
lea eax, [ebp-488]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-500], 0
mov dword ptr [ebp-496], 0
mov dword ptr [ebp-492], 0
lea eax, [ebp-500]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-512]
push eax
call _fb_StrAssign@20
lea eax, [ebp-512]
push eax
call _HWRITEASM64@8
lea eax, [ebp-512]
push eax
call _fb_StrDelete@4
jmp .Lt_0F24
.Lt_0F25:
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 14
push offset _Lt_0F49
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 4
push offset _Lt_0F2A
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-248]
push eax
call _fb_StrAssign@20
lea eax, [ebp-248]
push eax
call _HWRITEASM64@8
lea eax, [ebp-248]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push 19
push offset _Lt_0F4D
push -1
lea eax, [ebp-260]
push eax
call _fb_StrAssign@20
lea eax, [ebp-260]
push eax
call _HWRITEASM64@8
lea eax, [ebp-260]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push -1
push -1
lea eax, [ebp-36]
push eax
push 5
push offset _Lt_0E30
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-284]
push eax
call _fb_StrAssign@20
lea eax, [ebp-284]
push eax
call _HWRITEASM64@8
lea eax, [ebp-284]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-308]
push eax
call _fb_StrAssign@20
lea eax, [ebp-308]
push eax
call _HWRITEASM64@8
lea eax, [ebp-308]
push eax
call _fb_StrDelete@4
push -1
push 999999
call _REG_FINDFREE@8
mov dword ptr [ebp-132], eax
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp-132]
mov dword ptr [_REGHANDLE+eax*4], -2
push 0
mov dword ptr [ebp-344], 0
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-48]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
lea eax, [ebp-332]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-344]
push eax
call _fb_StrAssign@20
lea eax, [ebp-344]
push eax
call _HWRITEASM64@8
lea eax, [ebp-344]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-368], 0
mov dword ptr [ebp-364], 0
mov dword ptr [ebp-360], 0
push 0
push -1
push -1
lea eax, [ebp-48]
push eax
push 5
push offset _Lt_0648
mov dword ptr [ebp-356], 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
lea eax, [ebp-356]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-368]
push eax
call _fb_StrAssign@20
lea eax, [ebp-368]
push eax
call _HWRITEASM64@8
lea eax, [ebp-368]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-380], 0
mov dword ptr [ebp-376], 0
mov dword ptr [ebp-372], 0
push 0
push 11
push offset _Lt_0F38
push -1
lea eax, [ebp-380]
push eax
call _fb_StrAssign@20
lea eax, [ebp-380]
push eax
call _HWRITEASM64@8
lea eax, [ebp-380]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-416], 0
mov dword ptr [ebp-412], 0
mov dword ptr [ebp-408], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-48]
push eax
push 4
push offset _Lt_06B8
mov dword ptr [ebp-392], 0
mov dword ptr [ebp-388], 0
mov dword ptr [ebp-384], 0
lea eax, [ebp-392]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-404], 0
mov dword ptr [ebp-400], 0
mov dword ptr [ebp-396], 0
lea eax, [ebp-404]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-416]
push eax
call _fb_StrAssign@20
lea eax, [ebp-416]
push eax
call _HWRITEASM64@8
lea eax, [ebp-416]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-440], 0
mov dword ptr [ebp-436], 0
mov dword ptr [ebp-432], 0
push 0
push -1
push -1
lea eax, [ebp-48]
push eax
push 16
push offset _Lt_0F5C
mov dword ptr [ebp-428], 0
mov dword ptr [ebp-424], 0
mov dword ptr [ebp-420], 0
lea eax, [ebp-428]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-440]
push eax
call _fb_StrAssign@20
lea eax, [ebp-440]
push eax
call _HWRITEASM64@8
lea eax, [ebp-440]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-452], 0
mov dword ptr [ebp-448], 0
mov dword ptr [ebp-444], 0
push 0
push 17
push offset _Lt_0F5F
push -1
lea eax, [ebp-452]
push eax
call _fb_StrAssign@20
lea eax, [ebp-452]
push eax
call _HWRITEASM64@8
lea eax, [ebp-452]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-476], 0
mov dword ptr [ebp-472], 0
mov dword ptr [ebp-468], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-464], 0
mov dword ptr [ebp-460], 0
mov dword ptr [ebp-456], 0
lea eax, [ebp-464]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-476]
push eax
call _fb_StrAssign@20
lea eax, [ebp-476]
push eax
call _HWRITEASM64@8
lea eax, [ebp-476]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-512], 0
mov dword ptr [ebp-508], 0
mov dword ptr [ebp-504], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push -1
lea eax, [ebp-60]
push eax
push 6
push offset _Lt_0734
mov dword ptr [ebp-488], 0
mov dword ptr [ebp-484], 0
mov dword ptr [ebp-480], 0
lea eax, [ebp-488]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-500], 0
mov dword ptr [ebp-496], 0
mov dword ptr [ebp-492], 0
lea eax, [ebp-500]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-512]
push eax
call _fb_StrAssign@20
lea eax, [ebp-512]
push eax
call _HWRITEASM64@8
lea eax, [ebp-512]
push eax
call _fb_StrDelete@4
.Lt_0F24:
jmp .Lt_0F21
.Lt_0F22:
cmp dword ptr [ebp-8], 13
jne .Lt_0F66
.Lt_0F67:
cmp dword ptr [ebp-4], 16
jne .Lt_0F69
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push -1
lea eax, [ebp-120]
push eax
push 16
push offset _Lt_0F3D
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push -1
lea eax, [ebp-60]
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
lea eax, [ebp-248]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-260]
push eax
call _fb_StrAssign@20
lea eax, [ebp-260]
push eax
call _HWRITEASM64@8
lea eax, [ebp-260]
push eax
call _fb_StrDelete@4
jmp .Lt_0F68
.Lt_0F69:
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push -1
lea eax, [ebp-120]
push eax
push 16
push offset _Lt_0F5C
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push -1
lea eax, [ebp-60]
push eax
push 6
push offset _Lt_0734
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
lea eax, [ebp-248]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-260]
push eax
call _fb_StrAssign@20
lea eax, [ebp-260]
push eax
call _HWRITEASM64@8
lea eax, [ebp-260]
push eax
call _fb_StrDelete@4
.Lt_0F68:
jmp .Lt_0F21
.Lt_0F66:
cmp dword ptr [ebp-8], 11
je .Lt_0F77
.Lt_0F78:
cmp dword ptr [ebp-8], 12
jne .Lt_0F76
.Lt_0F77:
cmp dword ptr [ebp-4], 16
jne .Lt_0F7A
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push -1
lea eax, [ebp-120]
push eax
push 16
push offset _Lt_0F3D
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push -1
lea eax, [ebp-60]
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
lea eax, [ebp-248]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-260]
push eax
call _fb_StrAssign@20
lea eax, [ebp-260]
push eax
call _HWRITEASM64@8
lea eax, [ebp-260]
push eax
call _fb_StrDelete@4
jmp .Lt_0F79
.Lt_0F7A:
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push -1
lea eax, [ebp-120]
push eax
push 16
push offset _Lt_0F5C
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push -1
lea eax, [ebp-60]
push eax
push 6
push offset _Lt_0734
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
lea eax, [ebp-248]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-260]
push eax
call _fb_StrAssign@20
lea eax, [ebp-260]
push eax
call _HWRITEASM64@8
lea eax, [ebp-260]
push eax
call _fb_StrDelete@4
.Lt_0F79:
jmp .Lt_0F21
.Lt_0F76:
cmp dword ptr [ebp-8], 2
je .Lt_0F88
.Lt_0F89:
cmp dword ptr [ebp-8], 5
je .Lt_0F88
.Lt_0F8A:
cmp dword ptr [ebp-8], 3
je .Lt_0F88
.Lt_0F8B:
cmp dword ptr [ebp-8], 6
je .Lt_0F88
.Lt_0F8C:
cmp dword ptr [ebp-8], 1
je .Lt_0F88
.Lt_0F8D:
cmp dword ptr [ebp-8], 4
jne .Lt_0F87
.Lt_0F88:
mov eax, dword ptr [ebp-8]
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-8]
cmp ebx, 5
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0F8F
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea ebx, [ebp-72]
push ebx
push -1
push -1
lea ebx, [ebp-120]
push ebx
push 12
push offset _Lt_0F90
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea ebx, [ebp-200]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
jmp .Lt_0F8E
.Lt_0F8F:
cmp dword ptr [ebp-8], 1
jne .Lt_0F94
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push -1
push 4
push offset _Lt_0F95
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push -1
lea eax, [ebp-120]
push eax
push 5
push offset _Lt_0BE6
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-236]
push eax
call _fb_StrAssign@20
lea eax, [ebp-236]
push eax
call _HWRITEASM64@8
lea eax, [ebp-236]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push 9
push offset _Lt_0F9A
push -1
lea eax, [ebp-248]
push eax
call _fb_StrAssign@20
lea eax, [ebp-248]
push eax
call _HWRITEASM64@8
lea eax, [ebp-248]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
push 0
push 7
push offset _Lt_0F9C
push -1
lea eax, [ebp-260]
push eax
call _fb_StrAssign@20
lea eax, [ebp-260]
push eax
call _HWRITEASM64@8
lea eax, [ebp-260]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
push 0
push 14
push offset _Lt_0F9E
push -1
lea eax, [ebp-272]
push eax
call _fb_StrAssign@20
lea eax, [ebp-272]
push eax
call _HWRITEASM64@8
lea eax, [ebp-272]
push eax
call _fb_StrDelete@4
jmp .Lt_0F8E
.Lt_0F94:
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push -1
lea eax, [ebp-120]
push eax
push 12
push offset _Lt_0FA0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
.Lt_0F8E:
cmp dword ptr [ebp-4], 16
jne .Lt_0FA5
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 19
push offset _Lt_0FA6
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push -1
lea eax, [ebp-60]
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-236]
push eax
call _fb_StrAssign@20
lea eax, [ebp-236]
push eax
call _HWRITEASM64@8
lea eax, [ebp-236]
push eax
call _fb_StrDelete@4
jmp .Lt_0FA4
.Lt_0FA5:
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 19
push offset _Lt_0FAB
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push -1
lea eax, [ebp-60]
push eax
push 6
push offset _Lt_0734
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-236]
push eax
call _fb_StrAssign@20
lea eax, [ebp-236]
push eax
call _HWRITEASM64@8
lea eax, [ebp-236]
push eax
call _fb_StrDelete@4
.Lt_0FA4:
jmp .Lt_0F21
.Lt_0F87:
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push 52
push offset _Lt_0FB3
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
.Lt_0FB0:
.Lt_0F21:
.Lt_0F04:
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_0E44
.Lt_0F01:
.Lt_0F00:
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_0FB6
mov dword ptr [ebp-156], 24
jmp .Lt_1B8C
.Lt_0FB6:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-156], eax
.Lt_1B8C:
mov eax, dword ptr [ebp-156]
imul eax, 28
mov ebx, dword ptr [_SYMB_DTYPETB+eax]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-176], ebx
mov ebx, dword ptr [ebp-4]
and ebx, 480
je .Lt_0FB8
mov dword ptr [ebp-160], 24
jmp .Lt_1B8D
.Lt_0FB8:
mov ebx, dword ptr [ebp-4]
and ebx, 31
mov dword ptr [ebp-160], ebx
.Lt_1B8D:
mov ebx, dword ptr [ebp-160]
imul ebx, 28
mov eax, dword ptr [_SYMB_DTYPETB+ebx]
test eax, eax
sete al
shr eax, 1
sbb eax, eax
and eax, dword ptr [ebp-176]
je .Lt_0FBB
cmp dword ptr [ebp-8], 16
jne .Lt_0FBD
cmp dword ptr [ebp-4], 14
jne .Lt_0FBF
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 29
push offset _Lt_0FC0
push -1
lea eax, [ebp-188]
push eax
call _fb_StrAssign@20
lea eax, [ebp-188]
push eax
call _HWRITEASM64@8
lea eax, [ebp-188]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 15
push offset _Lt_0FC2
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push 15
push offset _Lt_0FC6
push -1
lea eax, [ebp-236]
push eax
call _fb_StrAssign@20
lea eax, [ebp-236]
push eax
call _HWRITEASM64@8
lea eax, [ebp-236]
push eax
call _fb_StrDelete@4
push 14
push 16
call _HEMITROUNDFLOAT@8
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push 19
push offset _Lt_0FC8
push -1
lea eax, [ebp-248]
push eax
call _fb_StrAssign@20
lea eax, [ebp-248]
push eax
call _HWRITEASM64@8
lea eax, [ebp-248]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 5
push offset _Lt_0FCA
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-272]
push eax
call _fb_StrAssign@20
lea eax, [ebp-272]
push eax
call _HWRITEASM64@8
lea eax, [ebp-272]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push 20
push offset _Lt_0E28
push -1
lea eax, [ebp-284]
push eax
call _fb_StrAssign@20
lea eax, [ebp-284]
push eax
call _HWRITEASM64@8
lea eax, [ebp-284]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
push -1
lea eax, [ebp-36]
push eax
push 5
push offset _Lt_0E30
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-308]
push eax
call _fb_StrAssign@20
lea eax, [ebp-308]
push eax
call _HWRITEASM64@8
lea eax, [ebp-308]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-332]
push eax
call _fb_StrAssign@20
lea eax, [ebp-332]
push eax
call _HWRITEASM64@8
lea eax, [ebp-332]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-344], 0
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
push 0
push 17
push offset _Lt_0FD2
push -1
lea eax, [ebp-344]
push eax
call _fb_StrAssign@20
lea eax, [ebp-344]
push eax
call _HWRITEASM64@8
lea eax, [ebp-344]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-356], 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
push 0
push 17
push offset _Lt_0FD4
push -1
lea eax, [ebp-356]
push eax
call _fb_StrAssign@20
lea eax, [ebp-356]
push eax
call _HWRITEASM64@8
lea eax, [ebp-356]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-368], 0
mov dword ptr [ebp-364], 0
mov dword ptr [ebp-360], 0
push 0
push 20
push offset _Lt_0E28
push -1
lea eax, [ebp-368]
push eax
call _fb_StrAssign@20
lea eax, [ebp-368]
push eax
call _HWRITEASM64@8
lea eax, [ebp-368]
push eax
call _fb_StrDelete@4
push -1
push 999999
call _REG_FINDFREE@8
mov dword ptr [ebp-132], eax
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp-132]
mov dword ptr [_REGHANDLE+eax*4], -2
push 0
mov dword ptr [ebp-404], 0
mov dword ptr [ebp-400], 0
mov dword ptr [ebp-396], 0
push 0
push -1
push 23
push offset _Lt_0FD8
push -1
push -1
lea eax, [ebp-48]
push eax
push 8
push offset _Lt_0FD7
mov dword ptr [ebp-380], 0
mov dword ptr [ebp-376], 0
mov dword ptr [ebp-372], 0
lea eax, [ebp-380]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-392], 0
mov dword ptr [ebp-388], 0
mov dword ptr [ebp-384], 0
lea eax, [ebp-392]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-404]
push eax
call _fb_StrAssign@20
lea eax, [ebp-404]
push eax
call _HWRITEASM64@8
lea eax, [ebp-404]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-428], 0
mov dword ptr [ebp-424], 0
mov dword ptr [ebp-420], 0
push 0
push -1
push -1
lea eax, [ebp-48]
push eax
push 9
push offset _Lt_0FDC
mov dword ptr [ebp-416], 0
mov dword ptr [ebp-412], 0
mov dword ptr [ebp-408], 0
lea eax, [ebp-416]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-428]
push eax
call _fb_StrAssign@20
lea eax, [ebp-428]
push eax
call _HWRITEASM64@8
lea eax, [ebp-428]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-452], 0
mov dword ptr [ebp-448], 0
mov dword ptr [ebp-444], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-440], 0
mov dword ptr [ebp-436], 0
mov dword ptr [ebp-432], 0
lea eax, [ebp-440]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-452]
push eax
call _fb_StrAssign@20
lea eax, [ebp-452]
push eax
call _HWRITEASM64@8
lea eax, [ebp-452]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-488], 0
mov dword ptr [ebp-484], 0
mov dword ptr [ebp-480], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-464], 0
mov dword ptr [ebp-460], 0
mov dword ptr [ebp-456], 0
lea eax, [ebp-464]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-476], 0
mov dword ptr [ebp-472], 0
mov dword ptr [ebp-468], 0
lea eax, [ebp-476]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-488]
push eax
call _fb_StrAssign@20
lea eax, [ebp-488]
push eax
call _HWRITEASM64@8
lea eax, [ebp-488]
push eax
call _fb_StrDelete@4
jmp .Lt_0FBE
.Lt_0FBF:
mov eax, dword ptr [ebp-4]
cmp eax, 13
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-4]
cmp ebx, 11
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 12
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 5
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 6
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 3
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 4
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0FE4
mov ebx, dword ptr [ebp+12]
cmp dword ptr [ebx], 4
jne .Lt_0FE6
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
push -1
lea ebx, [ebp-72]
push ebx
push 12
push offset _Lt_0DC0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea ebx, [ebp-188]
push ebx
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
jmp .Lt_0FE5
.Lt_0FE6:
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push 13
push offset _Lt_0DC3
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
.Lt_0FE5:
push -2147483648
push 16
call _HEMITROUNDFLOAT@8
cmp dword ptr [ebp-4], 13
jne .Lt_0FEC
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
jmp .Lt_0FEB
.Lt_0FEC:
mov eax, dword ptr [ebp-4]
cmp eax, 11
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-4]
cmp ebx, 12
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0FF0
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 6
push offset _Lt_0D78
push -1
push -1
lea ebx, [ebp-60]
push ebx
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea ebx, [ebp-188]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
jmp .Lt_0FEB
.Lt_0FF0:
mov eax, dword ptr [ebp-4]
cmp eax, 5
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-4]
cmp ebx, 6
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_0FF4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 5
push offset _Lt_0FF5
push -1
push -1
lea ebx, [ebp-60]
push ebx
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea ebx, [ebp-188]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
jmp .Lt_0FEB
.Lt_0FF4:
cmp dword ptr [ebp-4], 1
jne .Lt_0FFA
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 11
push offset _Lt_0FFB
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push 9
push offset _Lt_0F9A
push -1
lea eax, [ebp-236]
push eax
call _fb_StrAssign@20
lea eax, [ebp-236]
push eax
call _HWRITEASM64@8
lea eax, [ebp-236]
push eax
call _fb_StrDelete@4
.Lt_0FFA:
.Lt_0FF9:
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 5
push offset _Lt_0BF2
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
.Lt_0FEB:
jmp .Lt_0FBE
.Lt_0FE4:
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-188]
push eax
call _fb_StrAssign@20
lea eax, [ebp-188]
push eax
call _HWRITEASM64@8
lea eax, [ebp-188]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 44
push offset _Lt_1003
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
.Lt_0FBE:
jmp .Lt_0FBC
.Lt_0FBD:
cmp dword ptr [ebp-4], 14
jne .Lt_1007
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 20
push offset _Lt_1008
push -1
lea eax, [ebp-188]
push eax
call _fb_StrAssign@20
lea eax, [ebp-188]
push eax
call _HWRITEASM64@8
lea eax, [ebp-188]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 15
push offset _Lt_0FC2
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push 10
push offset _Lt_0A9D
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push 15
push offset _Lt_100D
push -1
lea eax, [ebp-236]
push eax
call _fb_StrAssign@20
lea eax, [ebp-236]
push eax
call _HWRITEASM64@8
lea eax, [ebp-236]
push eax
call _fb_StrDelete@4
push 14
push 15
call _HEMITROUNDFLOAT@8
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push 19
push offset _Lt_100F
push -1
lea eax, [ebp-248]
push eax
call _fb_StrAssign@20
lea eax, [ebp-248]
push eax
call _HWRITEASM64@8
lea eax, [ebp-248]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 5
push offset _Lt_0FCA
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-272]
push eax
call _fb_StrAssign@20
lea eax, [ebp-272]
push eax
call _HWRITEASM64@8
lea eax, [ebp-272]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push 20
push offset _Lt_0E2E
push -1
lea eax, [ebp-284]
push eax
call _fb_StrAssign@20
lea eax, [ebp-284]
push eax
call _HWRITEASM64@8
lea eax, [ebp-284]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
push -1
lea eax, [ebp-36]
push eax
push 5
push offset _Lt_0E30
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-308]
push eax
call _fb_StrAssign@20
lea eax, [ebp-308]
push eax
call _HWRITEASM64@8
lea eax, [ebp-308]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-24]
push eax
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-332]
push eax
call _fb_StrAssign@20
lea eax, [ebp-332]
push eax
call _HWRITEASM64@8
lea eax, [ebp-332]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-344], 0
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
push 0
push 17
push offset _Lt_1018
push -1
lea eax, [ebp-344]
push eax
call _fb_StrAssign@20
lea eax, [ebp-344]
push eax
call _HWRITEASM64@8
lea eax, [ebp-344]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-356], 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
push 0
push 17
push offset _Lt_101A
push -1
lea eax, [ebp-356]
push eax
call _fb_StrAssign@20
lea eax, [ebp-356]
push eax
call _HWRITEASM64@8
lea eax, [ebp-356]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-368], 0
mov dword ptr [ebp-364], 0
mov dword ptr [ebp-360], 0
push 0
push 20
push offset _Lt_0E2E
push -1
lea eax, [ebp-368]
push eax
call _fb_StrAssign@20
lea eax, [ebp-368]
push eax
call _HWRITEASM64@8
lea eax, [ebp-368]
push eax
call _fb_StrDelete@4
push -1
push 999999
call _REG_FINDFREE@8
mov dword ptr [ebp-132], eax
push 0
push 0
mov eax, dword ptr [ebp-132]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp-132]
mov dword ptr [_REGHANDLE+eax*4], -2
push 0
mov dword ptr [ebp-404], 0
mov dword ptr [ebp-400], 0
mov dword ptr [ebp-396], 0
push 0
push -1
push 23
push offset _Lt_0FD8
push -1
push -1
lea eax, [ebp-48]
push eax
push 8
push offset _Lt_0FD7
mov dword ptr [ebp-380], 0
mov dword ptr [ebp-376], 0
mov dword ptr [ebp-372], 0
lea eax, [ebp-380]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-392], 0
mov dword ptr [ebp-388], 0
mov dword ptr [ebp-384], 0
lea eax, [ebp-392]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-404]
push eax
call _fb_StrAssign@20
lea eax, [ebp-404]
push eax
call _HWRITEASM64@8
lea eax, [ebp-404]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-428], 0
mov dword ptr [ebp-424], 0
mov dword ptr [ebp-420], 0
push 0
push -1
push -1
lea eax, [ebp-48]
push eax
push 9
push offset _Lt_0FDC
mov dword ptr [ebp-416], 0
mov dword ptr [ebp-412], 0
mov dword ptr [ebp-408], 0
lea eax, [ebp-416]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-428]
push eax
call _fb_StrAssign@20
lea eax, [ebp-428]
push eax
call _HWRITEASM64@8
lea eax, [ebp-428]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-452], 0
mov dword ptr [ebp-448], 0
mov dword ptr [ebp-444], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-36]
push eax
mov dword ptr [ebp-440], 0
mov dword ptr [ebp-436], 0
mov dword ptr [ebp-432], 0
lea eax, [ebp-440]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-452]
push eax
call _fb_StrAssign@20
lea eax, [ebp-452]
push eax
call _HWRITEASM64@8
lea eax, [ebp-452]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-488], 0
mov dword ptr [ebp-484], 0
mov dword ptr [ebp-480], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-464], 0
mov dword ptr [ebp-460], 0
mov dword ptr [ebp-456], 0
lea eax, [ebp-464]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-476], 0
mov dword ptr [ebp-472], 0
mov dword ptr [ebp-468], 0
lea eax, [ebp-476]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-488]
push eax
call _fb_StrAssign@20
lea eax, [ebp-488]
push eax
call _HWRITEASM64@8
lea eax, [ebp-488]
push eax
call _fb_StrDelete@4
jmp .Lt_1006
.Lt_1007:
mov eax, dword ptr [ebp-4]
cmp eax, 13
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-4]
cmp ebx, 11
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 12
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 5
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 6
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 3
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
mov ebx, dword ptr [ebp-4]
cmp ebx, 4
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1027
mov ebx, dword ptr [ebp+12]
cmp dword ptr [ebx], 4
jne .Lt_1029
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
push -1
lea ebx, [ebp-72]
push ebx
push 12
push offset _Lt_0D23
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea ebx, [ebp-188]
push ebx
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
jmp .Lt_1028
.Lt_1029:
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push 13
push offset _Lt_0D26
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
.Lt_1028:
push -2147483648
push 15
call _HEMITROUNDFLOAT@8
cmp dword ptr [ebp-4], 13
jne .Lt_102F
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
jmp .Lt_102E
.Lt_102F:
mov eax, dword ptr [ebp-4]
cmp eax, 11
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-4]
cmp ebx, 12
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1033
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 6
push offset _Lt_0D78
push -1
push -1
lea ebx, [ebp-60]
push ebx
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea ebx, [ebp-188]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
jmp .Lt_102E
.Lt_1033:
mov eax, dword ptr [ebp-4]
cmp eax, 5
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-4]
cmp ebx, 6
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1037
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 5
push offset _Lt_0FF5
push -1
push -1
lea ebx, [ebp-60]
push ebx
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea ebx, [ebp-188]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
jmp .Lt_102E
.Lt_1037:
cmp dword ptr [ebp-4], 1
jne .Lt_103C
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push 11
push offset _Lt_0FFB
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push 9
push offset _Lt_0F9A
push -1
lea eax, [ebp-236]
push eax
call _fb_StrAssign@20
lea eax, [ebp-236]
push eax
call _HWRITEASM64@8
lea eax, [ebp-236]
push eax
call _fb_StrDelete@4
.Lt_103C:
.Lt_103B:
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push -1
push 5
push offset _Lt_0BF2
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
.Lt_102E:
jmp .Lt_1006
.Lt_1027:
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-188]
push eax
call _fb_StrAssign@20
lea eax, [ebp-188]
push eax
call _HWRITEASM64@8
lea eax, [ebp-188]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push 44
push offset _Lt_1044
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-212]
push eax
call _fb_StrAssign@20
lea eax, [ebp-212]
push eax
call _HWRITEASM64@8
lea eax, [ebp-212]
push eax
call _fb_StrDelete@4
.Lt_1006:
.Lt_0FBC:
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_0E44
.Lt_0FBB:
.Lt_0FBA:
mov eax, dword ptr [ebp-4]
cmp eax, 20
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-8]
cmp ebx, 20
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1048
cmp dword ptr [ebp-8], 20
jne .Lt_104A
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push -1
push -1
lea ebx, [ebp-72]
push ebx
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea ebx, [ebp-60]
push ebx
push 5
push offset _Lt_012F
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea ebx, [ebp-184]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
lea eax, [ebp-208]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-220]
push eax
call _fb_StrAssign@20
lea eax, [ebp-220]
push eax
call _HWRITEASM64@8
lea eax, [ebp-220]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp-4], 13
jne .Lt_1050
push 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-60]
push eax
push -1
push 14
push offset _Lt_1051
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
lea eax, [ebp-268]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-280]
push eax
call _fb_StrAssign@20
lea eax, [ebp-280]
push eax
call _HWRITEASM64@8
lea eax, [ebp-280]
push eax
call _fb_StrDelete@4
jmp .Lt_104F
.Lt_1050:
cmp dword ptr [ebp-4], 20
je .Lt_1057
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-232]
push eax
call _fb_StrAssign@20
lea eax, [ebp-232]
push eax
call _HWRITEASM64@8
lea eax, [ebp-232]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
push 0
push 62
push offset _Lt_105A
push -1
lea eax, [ebp-244]
push eax
call _fb_StrAssign@20
lea eax, [ebp-244]
push eax
call _HWRITEASM64@8
lea eax, [ebp-244]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-256]
push eax
call _fb_StrAssign@20
lea eax, [ebp-256]
push eax
call _HWRITEASM64@8
lea eax, [ebp-256]
push eax
call _fb_StrDelete@4
.Lt_1057:
.Lt_104F:
jmp .Lt_1049
.Lt_104A:
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-184]
push eax
call _fb_StrAssign@20
lea eax, [ebp-184]
push eax
call _HWRITEASM64@8
lea eax, [ebp-184]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push 53
push offset _Lt_105F
push -1
lea eax, [ebp-196]
push eax
call _fb_StrAssign@20
lea eax, [ebp-196]
push eax
call _HWRITEASM64@8
lea eax, [ebp-196]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-208]
push eax
call _fb_StrAssign@20
lea eax, [ebp-208]
push eax
call _HWRITEASM64@8
lea eax, [ebp-208]
push eax
call _fb_StrDelete@4
.Lt_1049:
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_0E44
.Lt_1048:
.Lt_1047:
cmp dword ptr [ebp-4], 1
jne .Lt_1063
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 0
jne .Lt_1065
push 2
push offset _Lt_0006
push -1
lea eax, [ebp-72]
push eax
call _fb_StrCompare@16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
push 19
push offset _Lt_1066
push -1
lea ebx, [ebp-72]
push ebx
mov ebx, eax
call _fb_StrCompare@16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
push 11
push offset _Lt_1067
push -1
lea eax, [ebp-72]
push eax
call _fb_StrCompare@16
test eax, eax
sete al
shr eax, 1
sbb eax, eax
or ebx, eax
je .Lt_1069
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push -1
push 4
push offset _Lt_0F95
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-208]
push eax
call _fb_StrAssign@20
lea eax, [ebp-208]
push eax
call _HWRITEASM64@8
lea eax, [ebp-208]
push eax
call _fb_StrDelete@4
jmp .Lt_1068
.Lt_1069:
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push -1
push 4
push offset _Lt_0AE3
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-208]
push eax
call _fb_StrAssign@20
lea eax, [ebp-208]
push eax
call _HWRITEASM64@8
lea eax, [ebp-208]
push eax
call _fb_StrDelete@4
.Lt_1068:
jmp .Lt_1064
.Lt_1065:
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push -1
push 4
push offset _Lt_0F95
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push -1
lea eax, [ebp-120]
push eax
push 5
push offset _Lt_0BE6
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
lea eax, [ebp-208]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-220]
push eax
call _fb_StrAssign@20
lea eax, [ebp-220]
push eax
call _HWRITEASM64@8
lea eax, [ebp-220]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push 9
push offset _Lt_0F9A
push -1
lea eax, [ebp-232]
push eax
call _fb_StrAssign@20
lea eax, [ebp-232]
push eax
call _HWRITEASM64@8
lea eax, [ebp-232]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
push 0
push -1
push 5
push offset _Lt_0BF2
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-268]
push eax
call _fb_StrAssign@20
lea eax, [ebp-268]
push eax
call _HWRITEASM64@8
lea eax, [ebp-268]
push eax
call _fb_StrDelete@4
.Lt_1064:
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_0E44
.Lt_1063:
.Lt_1062:
cmp dword ptr [ebp-8], 1
jne .Lt_1079
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push -1
push 4
push offset _Lt_0F95
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push -1
lea eax, [ebp-120]
push eax
push 5
push offset _Lt_0BE6
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
lea eax, [ebp-208]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-220]
push eax
call _fb_StrAssign@20
lea eax, [ebp-220]
push eax
call _HWRITEASM64@8
lea eax, [ebp-220]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push 9
push offset _Lt_0F9A
push -1
lea eax, [ebp-232]
push eax
call _fb_StrAssign@20
lea eax, [ebp-232]
push eax
call _HWRITEASM64@8
lea eax, [ebp-232]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
push 0
push 7
push offset _Lt_0F9C
push -1
lea eax, [ebp-244]
push eax
call _fb_StrAssign@20
lea eax, [ebp-244]
push eax
call _HWRITEASM64@8
lea eax, [ebp-244]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp-4]
and eax, 480
je .Lt_1080
mov dword ptr [ebp-248], 24
jmp .Lt_1B8F
.Lt_1080:
mov eax, dword ptr [ebp-4]
and eax, 31
mov dword ptr [ebp-248], eax
.Lt_1B8F:
mov eax, dword ptr [ebp-248]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax+4], 1
jne .Lt_1083
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push -1
push 5
push offset _Lt_0BF2
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-284]
push eax
call _fb_StrAssign@20
lea eax, [ebp-284]
push eax
call _HWRITEASM64@8
lea eax, [ebp-284]
push eax
call _fb_StrDelete@4
jmp .Lt_1082
.Lt_1083:
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push -1
push 5
push offset _Lt_0BF2
push -1
push -1
lea eax, [ebp-60]
push eax
push 7
push offset _Lt_1087
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
lea eax, [ebp-272]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-284]
push eax
call _fb_StrAssign@20
lea eax, [ebp-284]
push eax
call _HWRITEASM64@8
lea eax, [ebp-284]
push eax
call _fb_StrDelete@4
.Lt_1082:
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_0E44
.Lt_1079:
.Lt_1078:
mov eax, dword ptr [ebp-4]
and eax, 480
je .Lt_108B
mov dword ptr [ebp-164], 24
jmp .Lt_1B90
.Lt_108B:
mov eax, dword ptr [ebp-4]
and eax, 31
mov dword ptr [ebp-164], eax
.Lt_1B90:
mov eax, dword ptr [ebp-164]
imul eax, 28
mov dword ptr [ebp-176], eax
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_108D
mov dword ptr [ebp-168], 24
jmp .Lt_1B91
.Lt_108D:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-168], eax
.Lt_1B91:
mov eax, dword ptr [ebp-168]
imul eax, 28
mov ebx, dword ptr [ebp-176]
mov ecx, dword ptr [_SYMB_DTYPETB+eax+4]
cmp dword ptr [_SYMB_DTYPETB+ebx+4], ecx
jg .Lt_1090
mov ecx, dword ptr [ebp+12]
cmp dword ptr [ecx], 4
jne .Lt_1092
push 0
push 1
push offset _Lt_0000
push -1
lea ecx, [ebp-108]
push ecx
call _fb_StrAssign@20
cmp dword ptr [ebp-4], 11
je .Lt_1095
.Lt_1096:
cmp dword ptr [ebp-4], 12
je .Lt_1095
.Lt_1097:
cmp dword ptr [ebp-4], 15
jne .Lt_1094
.Lt_1095:
push 0
push 0
mov ecx, dword ptr [ebp-128]
push dword ptr [_REGSTRD+ecx*4]
push -1
lea ecx, [ebp-72]
push ecx
call _fb_StrAssign@20
jmp .Lt_1093
.Lt_1094:
cmp dword ptr [ebp-4], 5
je .Lt_1099
.Lt_109A:
cmp dword ptr [ebp-4], 6
jne .Lt_1098
.Lt_1099:
push 0
push 0
mov ecx, dword ptr [ebp-128]
push dword ptr [_REGSTRW+ecx*4]
push -1
lea ecx, [ebp-72]
push ecx
call _fb_StrAssign@20
jmp .Lt_1093
.Lt_1098:
cmp dword ptr [ebp-4], 2
je .Lt_109C
.Lt_109D:
cmp dword ptr [ebp-4], 3
je .Lt_109C
.Lt_109E:
cmp dword ptr [ebp-4], 4
jne .Lt_109B
.Lt_109C:
push 0
push 0
mov ecx, dword ptr [ebp-128]
push dword ptr [_REGSTRB+ecx*4]
push -1
lea ecx, [ebp-72]
push ecx
call _fb_StrAssign@20
jmp .Lt_1093
.Lt_109B:
cmp dword ptr [ebp-4], 1
jne .Lt_109F
.Lt_10A0:
jmp .Lt_1093
.Lt_109F:
cmp dword ptr [ebp-4], 13
je .Lt_10A2
.Lt_10A3:
cmp dword ptr [ebp-4], 14
je .Lt_10A2
.Lt_10A4:
cmp dword ptr [ebp-4], 16
jne .Lt_10A1
.Lt_10A2:
push 0
push 0
mov ecx, dword ptr [ebp-128]
push dword ptr [_REGSTRQ+ecx*4]
push -1
lea ecx, [ebp-72]
push ecx
call _fb_StrAssign@20
jmp .Lt_1093
.Lt_10A1:
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push 1
push offset _Lt_0000
push -1
lea ecx, [ebp-248]
push ecx
call _fb_StrAssign@20
lea ecx, [ebp-248]
push ecx
call _HWRITEASM64@8
lea ecx, [ebp-248]
push ecx
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
push 0
push -1
push -1
mov ecx, dword ptr [ebp+12]
push dword ptr [ecx+4]
call _fb_IntToStr@4
push eax
push 55
push offset _Lt_0EC9
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-272]
push eax
call _fb_StrAssign@20
lea eax, [ebp-272]
push eax
call _HWRITEASM64@8
lea eax, [ebp-272]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-284]
push eax
call _fb_StrAssign@20
lea eax, [ebp-284]
push eax
call _HWRITEASM64@8
lea eax, [ebp-284]
push eax
call _fb_StrDelete@4
.Lt_10A5:
.Lt_1093:
.Lt_1092:
.Lt_1091:
push 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push -1
lea eax, [ebp-108]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
lea eax, [ebp-224]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-236]
push eax
call _fb_StrAssign@20
lea eax, [ebp-236]
push eax
call _HWRITEASM64@8
lea eax, [ebp-236]
push eax
call _fb_StrDelete@4
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
jmp .Lt_0E44
.Lt_1090:
.Lt_108F:
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_10AF
mov dword ptr [ebp-172], 24
jmp .Lt_1B93
.Lt_10AF:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-172], eax
.Lt_1B93:
mov eax, dword ptr [ebp-172]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax+8], 0
je .Lt_10B2
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_10B3
mov dword ptr [ebp-176], 24
jmp .Lt_1B94
.Lt_10B3:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-176], eax
.Lt_1B94:
mov eax, dword ptr [ebp-176]
imul eax, 28
mov ecx, dword ptr [_SYMB_DTYPETB+eax+4]
mov dword ptr [ebp-180], ecx
cmp dword ptr [ebp-180], 1
je .Lt_10B8
.Lt_10B9:
cmp dword ptr [ebp-180], 2
jne .Lt_10B7
.Lt_10B8:
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
push -1
lea ecx, [ebp-72]
push ecx
push -1
push -1
lea ecx, [ebp-120]
push ecx
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea ecx, [ebp-60]
push ecx
push 7
push offset _Lt_1087
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea ecx, [ebp-192]
push ecx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-240]
push eax
call _fb_StrAssign@20
lea eax, [ebp-240]
push eax
call _HWRITEASM64@8
lea eax, [ebp-240]
push eax
call _fb_StrDelete@4
jmp .Lt_10B5
.Lt_10B7:
cmp dword ptr [ebp-180], 4
jne .Lt_10BF
.Lt_10C0:
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push -1
lea eax, [ebp-120]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-60]
push eax
push 8
push offset _Lt_0E15
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-240]
push eax
call _fb_StrAssign@20
lea eax, [ebp-240]
push eax
call _HWRITEASM64@8
lea eax, [ebp-240]
push eax
call _fb_StrDelete@4
jmp .Lt_10B5
.Lt_10BF:
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push 46
push offset _Lt_10C9
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
.Lt_10C6:
.Lt_10B5:
jmp .Lt_10B1
.Lt_10B2:
mov eax, dword ptr [ebp-8]
and eax, 480
je .Lt_10CC
mov dword ptr [ebp-176], 24
jmp .Lt_1B95
.Lt_10CC:
mov eax, dword ptr [ebp-8]
and eax, 31
mov dword ptr [ebp-176], eax
.Lt_1B95:
mov eax, dword ptr [ebp-176]
imul eax, 28
mov ecx, dword ptr [_SYMB_DTYPETB+eax+4]
mov dword ptr [ebp-180], ecx
cmp dword ptr [ebp-180], 1
je .Lt_10D1
.Lt_10D2:
cmp dword ptr [ebp-180], 2
jne .Lt_10D0
.Lt_10D1:
push 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
push 0
push -1
push -1
lea ecx, [ebp-72]
push ecx
push -1
push -1
lea ecx, [ebp-120]
push ecx
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea ecx, [ebp-60]
push ecx
push 7
push offset _Lt_069B
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea ecx, [ebp-192]
push ecx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
lea eax, [ebp-228]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-240]
push eax
call _fb_StrAssign@20
lea eax, [ebp-240]
push eax
call _HWRITEASM64@8
lea eax, [ebp-240]
push eax
call _fb_StrDelete@4
jmp .Lt_10CE
.Lt_10D0:
cmp dword ptr [ebp-180], 4
jne .Lt_10D8
.Lt_10D9:
push 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
push 0
push -1
push -1
lea eax, [ebp-72]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [_REGSTRD+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
lea eax, [ebp-204]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
lea eax, [ebp-216]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-228]
push eax
call _fb_StrAssign@20
lea eax, [ebp-228]
push eax
call _HWRITEASM64@8
lea eax, [ebp-228]
push eax
call _fb_StrDelete@4
push 3
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
push 0
push -1
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [_REGSTRD+eax*4]
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-124]
push dword ptr [_REGSTRD+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
lea eax, [ebp-252]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
lea eax, [ebp-264]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-276]
push eax
call _fb_StrAssign@20
lea eax, [ebp-276]
push eax
call _HWRITEASM64@8
lea eax, [ebp-276]
push eax
call _fb_StrDelete@4
jmp .Lt_10CE
.Lt_10D8:
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push 46
push offset _Lt_10E5
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-216]
push eax
call _fb_StrAssign@20
lea eax, [ebp-216]
push eax
call _HWRITEASM64@8
lea eax, [ebp-216]
push eax
call _fb_StrDelete@4
.Lt_10E2:
.Lt_10CE:
.Lt_10B1:
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
.Lt_0E44:
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16
_EMITSTORESTRUCT@16:
push ebp
mov ebp, esp
sub esp, 124
push ebx
.Lt_10E8:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+40]
mov dword ptr [ebp-16], eax
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+40]
mov dword ptr [ebp-20], ebx
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+8]
mov ebx, dword ptr [eax+132]
mov dword ptr [ebp-24], ebx
push 1
push offset _Lt_0000
push -1
push dword ptr [ebp+20]
call _fb_StrCompare@16
test eax, eax
je .Lt_10EB
push dword ptr [ebp+20]
call _EMITOP3_OP4@4
.Lt_10EB:
mov eax, dword ptr [ebp-24]
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-24]
cmp ebx, 3
sete bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_10ED
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
push dword ptr [ebp+16]
push 5
push offset _Lt_038A
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea ebx, [ebp-72]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
jmp .Lt_10EC
.Lt_10ED:
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push 7
push offset _Lt_094A
push -1
push -1
push dword ptr [ebp+16]
push 6
push offset _Lt_073A
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 15
push offset _Lt_10F4
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
.Lt_10EC:
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax]
movzx eax, byte ptr [ebx]
cmp eax, 45
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp-16]
cmp eax, 9
sete al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp-16]
cmp ecx, 10
sete cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
mov ecx, dword ptr [ebp-16]
cmp ecx, 12
sete cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
mov ecx, dword ptr [ebp-16]
cmp ecx, 16
sete cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
and ebx, eax
je .Lt_10F7
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push 5
push offset _Lt_03BE
call _fb_StrAllocTempDescZEx@8
push eax
push dword ptr [ebp+16]
push 1
call _fb_StrInstr@12
dec eax
push eax
push dword ptr [ebp+16]
call _fb_LEFT@8
push eax
call _fb_VALINT@4
add eax, 8
push eax
call _fb_IntToStr@4
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
push dword ptr [ebp+16]
call _fb_StrAssign@20
mov eax, dword ptr [ebp-16]
mov dword ptr [ebp-124], eax
jmp .Lt_10FA
.Lt_10FC:
push 0
push 3
push offset _Lt_00DA
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_10F9
.Lt_10FD:
push 0
push 3
push offset _Lt_00C8
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_10F9
.Lt_10FE:
push 0
push 4
push offset _Lt_00B6
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_10F9
.Lt_10FF:
push 0
push 4
push offset _Lt_00A3
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_10F9
.Lt_10FA:
mov eax, dword ptr [ebp-124]
add eax, 4294967287
cmp eax, 7
ja .Lt_10F9
mov eax, dword ptr [ebp-124]
jmp dword ptr [_.LT_1100+eax*4-36]
_.LT_1100:
.int .Lt_10FC
.int .Lt_10FD
.int .Lt_10F9
.int .Lt_10FE
.int .Lt_10F9
.int .Lt_10F9
.int .Lt_10F9
.int .Lt_10FF
.Lt_10F9:
push 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
push dword ptr [ebp+16]
push 5
push offset _Lt_038A
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
lea eax, [ebp-96]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
lea eax, [ebp-120]
push eax
call _HWRITEASM64@8
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_10E9
.Lt_10F7:
.Lt_10F6:
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push -1
push -1
push dword ptr [ebp+16]
push 10
push offset _Lt_068F
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
lea eax, [ebp-48]
push eax
call _HWRITEASM64@8
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 11
push offset _Lt_0692
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
lea eax, [ebp-60]
push eax
call _HWRITEASM64@8
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp-16]
mov dword ptr [ebp-64], eax
jmp .Lt_1109
.Lt_110B:
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 14
push offset _Lt_110C
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
jmp .Lt_1108
.Lt_110E:
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 14
push offset _Lt_110F
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
jmp .Lt_1108
.Lt_1111:
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 14
push offset _Lt_110F
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 11
push offset _Lt_1113
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 16
push offset _Lt_1115
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_1108
.Lt_1117:
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 15
push offset _Lt_1118
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
jmp .Lt_1108
.Lt_111A:
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 15
push offset _Lt_1118
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 11
push offset _Lt_111C
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 16
push offset _Lt_111E
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_1108
.Lt_1120:
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 15
push offset _Lt_1118
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 11
push offset _Lt_111C
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 16
push offset _Lt_1123
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
jmp .Lt_1108
.Lt_1125:
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 15
push offset _Lt_1118
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push 11
push offset _Lt_111C
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 16
push offset _Lt_1123
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 11
push offset _Lt_1113
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push 16
push offset _Lt_112A
push -1
lea eax, [ebp-124]
push eax
call _fb_StrAssign@20
lea eax, [ebp-124]
push eax
call _HWRITEASM64@8
lea eax, [ebp-124]
push eax
call _fb_StrDelete@4
jmp .Lt_1108
.Lt_112C:
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push 15
push offset _Lt_112D
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
jmp .Lt_1108
.Lt_1109:
mov eax, dword ptr [ebp-64]
add eax, 4294967287
cmp eax, 7
ja .Lt_1108
mov eax, dword ptr [ebp-64]
jmp dword ptr [_.LT_112F+eax*4-36]
_.LT_112F:
.int .Lt_110B
.int .Lt_110E
.int .Lt_1111
.int .Lt_1117
.int .Lt_111A
.int .Lt_1120
.int .Lt_1125
.int .Lt_112C
.Lt_1108:
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_10E9:
pop ebx
mov esp, ebp
pop ebp
ret 16
.balign 16
_HISSTRUCTIN2REGS@4:
push ebp
mov ebp, esp
sub esp, 4
push ebx
mov dword ptr [ebp-4], 0
.Lt_1130:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 511
cmp ebx, 20
jne .Lt_1133
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+8]
mov ebx, dword ptr [eax+132]
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-4], ebx
jmp .Lt_1131
.Lt_1133:
.Lt_1132:
mov dword ptr [ebp-4], 0
.Lt_1131:
mov eax, dword ptr [ebp-4]
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITSTORE@8:
push ebp
mov ebp, esp
sub esp, 268
push ebx
push esi
.Lt_1134:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-104], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_1136
mov dword ptr [ebp-108], 24
jmp .Lt_1BD7
.Lt_1136:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-108], eax
.Lt_1BD7:
mov eax, dword ptr [ebp-108]
imul eax, 28
mov dword ptr [ebp-116], eax
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 480
je .Lt_1138
mov dword ptr [ebp-112], 24
jmp .Lt_1BD8
.Lt_1138:
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+4]
and eax, 31
mov dword ptr [ebp-112], eax
.Lt_1BD8:
mov eax, dword ptr [ebp-112]
imul eax, 28
mov ebx, dword ptr [ebp-116]
mov ecx, dword ptr [_SYMB_DTYPETB+eax+4]
cmp dword ptr [_SYMB_DTYPETB+ebx+4], ecx
jge .Lt_113B
push 0
mov ecx, dword ptr [ebp+8]
push dword ptr [ecx+4]
call _IRHLALLOCVREG@8
mov dword ptr [ebp-120], eax
push dword ptr [ebp+12]
push dword ptr [ebp-120]
call __EMITCONVERT@8
push edi
mov edi, dword ptr [ebp+12]
mov esi, dword ptr [ebp-120]
mov ecx, 18
rep movsd
pop edi
.Lt_113B:
.Lt_113A:
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax]
mov dword ptr [ebp-116], ecx
cmp dword ptr [ebp-116], 2
jne .Lt_113E
.Lt_113F:
lea ecx, [ebp-36]
push ecx
lea ecx, [ebp-12]
push ecx
push dword ptr [ebp+8]
call _PREPARE_IDX@12
jmp .Lt_113C
.Lt_113E:
cmp dword ptr [ebp-116], 4
jne .Lt_1140
.Lt_1141:
mov ecx, dword ptr [ebp+12]
cmp dword ptr [ecx], 0
jne .Lt_1143
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset _Lt_0000
push -1
lea ecx, [ebp-128]
push ecx
call _fb_StrAssign@20
lea ecx, [ebp-128]
push ecx
call _HWRITEASM64@8
lea ecx, [ebp-128]
push ecx
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push 96
push offset _Lt_1146
push -1
lea ecx, [ebp-140]
push ecx
call _fb_StrAssign@20
lea ecx, [ebp-140]
push ecx
call _HWRITEASM64@8
lea ecx, [ebp-140]
push ecx
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push 1
push offset _Lt_0000
push -1
lea ecx, [ebp-152]
push ecx
call _fb_StrAssign@20
lea ecx, [ebp-152]
push ecx
call _HWRITEASM64@8
lea ecx, [ebp-152]
push ecx
call _fb_StrDelete@4
mov ecx, dword ptr [ebp+12]
cmp dword ptr [ecx+28], 0
mov eax, -1
jg .Lt_1BE7
jl .Lt_1BE8
cmp dword ptr [ecx+24], 0
jae .Lt_1BE7
.Lt_1BE8:
xor eax, eax
.Lt_1BE7:
mov ecx, dword ptr [ebp+12]
cmp dword ptr [ecx+28], 0
mov ebx, -1
jl .Lt_1BE9
jg .Lt_1BEA
cmp dword ptr [ecx+24], 2147483647
jbe .Lt_1BE9
.Lt_1BEA:
xor ebx, ebx
.Lt_1BE9:
and eax, ebx
je .Lt_114A
push 0
push 0
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRD+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_1149
.Lt_114A:
push 0
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_1149:
jmp .Lt_1142
.Lt_1143:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
mov dword ptr [ebp-104], ebx
mov ebx, dword ptr [ebp-104]
and ebx, 480
test ebx, ebx
je .Lt_114C
mov dword ptr [ebp-104], 8
.Lt_114C:
cmp dword ptr [ebp-104], 8
je .Lt_114F
.Lt_1150:
cmp dword ptr [ebp-104], 9
je .Lt_114F
.Lt_1151:
cmp dword ptr [ebp-104], 13
je .Lt_114F
.Lt_1152:
cmp dword ptr [ebp-104], 14
je .Lt_114F
.Lt_1153:
cmp dword ptr [ebp-104], 16
je .Lt_114F
.Lt_1154:
cmp dword ptr [ebp-104], 10
jne .Lt_114E
.Lt_114F:
push 0
push 0
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_114D
.Lt_114E:
cmp dword ptr [ebp-104], 11
je .Lt_1156
.Lt_1157:
cmp dword ptr [ebp-104], 12
je .Lt_1156
.Lt_1158:
cmp dword ptr [ebp-104], 15
jne .Lt_1155
.Lt_1156:
push 0
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRD+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_114D
.Lt_1155:
cmp dword ptr [ebp-104], 5
je .Lt_115A
.Lt_115B:
cmp dword ptr [ebp-104], 6
jne .Lt_1159
.Lt_115A:
push 0
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRW+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_114D
.Lt_1159:
cmp dword ptr [ebp-104], 2
je .Lt_115D
.Lt_115E:
cmp dword ptr [ebp-104], 3
je .Lt_115D
.Lt_115F:
cmp dword ptr [ebp-104], 1
je .Lt_115D
.Lt_1160:
cmp dword ptr [ebp-104], 4
jne .Lt_115C
.Lt_115D:
push 0
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRB+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_114D
.Lt_115C:
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-128]
push eax
call _fb_StrAssign@20
lea eax, [ebp-128]
push eax
call _HWRITEASM64@8
lea eax, [ebp-128]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 52
push offset _Lt_1165
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-152]
push eax
call _fb_StrAssign@20
lea eax, [ebp-152]
push eax
call _HWRITEASM64@8
lea eax, [ebp-152]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-164]
push eax
call _fb_StrAssign@20
lea eax, [ebp-164]
push eax
call _HWRITEASM64@8
lea eax, [ebp-164]
push eax
call _fb_StrDelete@4
.Lt_1161:
.Lt_114D:
.Lt_1142:
jmp .Lt_113C
.Lt_1140:
cmp dword ptr [ebp-116], 1
jne .Lt_1169
.Lt_116A:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_116C
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_116B
.Lt_116C:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_116B:
jmp .Lt_113C
.Lt_1169:
cmp dword ptr [ebp-116], 3
jne .Lt_1171
.Lt_1172:
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+44], 0
jne .Lt_1BED
cmp dword ptr [eax+40], 0
je .Lt_1174
.Lt_1BED:
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+52], 0
jne .Lt_1176
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+44], 4294967295
mov ebx, -1
jl .Lt_1BEE
jg .Lt_1BEF
cmp dword ptr [eax+40], 2147483648
jb .Lt_1BEE
.Lt_1BEF:
xor ebx, ebx
.Lt_1BEE:
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+44], 0
mov ecx, -1
jg .Lt_1BF0
jl .Lt_1BF1
cmp dword ptr [eax+40], 4294967295
ja .Lt_1BF0
.Lt_1BF1:
xor ecx, ecx
.Lt_1BF0:
or ebx, ecx
je .Lt_1178
push 0
push -1
push -1
mov ecx, dword ptr [ebp+8]
push dword ptr [ecx+44]
push dword ptr [ecx+40]
call _fb_LongintToStr@8
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
jmp .Lt_1177
.Lt_1178:
push 0
push -1
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push 10
push offset _Lt_0A9D
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
.Lt_1177:
push 0
push 6
push offset _Lt_0694
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_1175
.Lt_1176:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+52]
push dword ptr [ecx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_1175:
jmp .Lt_1173
.Lt_1174:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+52]
push dword ptr [ecx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 2
push offset _Lt_0119
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_1173:
jmp .Lt_113C
.Lt_1171:
cmp dword ptr [ebp-116], 5
jne .Lt_1180
.Lt_1181:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_113C
.Lt_1180:
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-128]
push eax
call _fb_StrAssign@20
lea eax, [ebp-128]
push eax
call _HWRITEASM64@8
lea eax, [ebp-128]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push 26
push offset _Lt_1188
push -1
lea eax, [ebp-140]
push eax
call _fb_StrAssign@20
lea eax, [ebp-140]
push eax
call _HWRITEASM64@8
lea eax, [ebp-140]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-152]
push eax
call _fb_StrAssign@20
lea eax, [ebp-152]
push eax
call _HWRITEASM64@8
lea eax, [ebp-152]
push eax
call _fb_StrDelete@4
.Lt_1185:
.Lt_113C:
push dword ptr [ebp+12]
call _HISSTRUCTIN2REGS@4
test eax, eax
je .Lt_118C
lea eax, [ebp-36]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call _EMITSTORESTRUCT@16
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_1135
.Lt_118C:
.Lt_118B:
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
mov dword ptr [ebp-116], ecx
cmp dword ptr [ebp-116], 2
jne .Lt_118F
.Lt_1190:
lea ecx, [ebp-48]
push ecx
lea ecx, [ebp-24]
push ecx
push dword ptr [ebp+12]
call _PREPARE_IDX@12
jmp .Lt_118D
.Lt_118F:
cmp dword ptr [ebp-116], 4
jne .Lt_1191
.Lt_1192:
mov ecx, dword ptr [ebp+12]
mov eax, dword ptr [ecx+4]
mov dword ptr [ebp-104], eax
mov eax, dword ptr [ebp-104]
and eax, 480
test eax, eax
je .Lt_1194
mov dword ptr [ebp-104], 8
.Lt_1194:
cmp dword ptr [ebp-104], 8
je .Lt_1197
.Lt_1198:
cmp dword ptr [ebp-104], 9
je .Lt_1197
.Lt_1199:
cmp dword ptr [ebp-104], 13
je .Lt_1197
.Lt_119A:
cmp dword ptr [ebp-104], 14
je .Lt_1197
.Lt_119B:
cmp dword ptr [ebp-104], 16
je .Lt_1197
.Lt_119C:
cmp dword ptr [ebp-104], 10
jne .Lt_1196
.Lt_1197:
push 0
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_1195
.Lt_1196:
cmp dword ptr [ebp-104], 11
je .Lt_119E
.Lt_119F:
cmp dword ptr [ebp-104], 12
je .Lt_119E
.Lt_11A0:
cmp dword ptr [ebp-104], 15
jne .Lt_119D
.Lt_119E:
push 0
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRD+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_1195
.Lt_119D:
cmp dword ptr [ebp-104], 5
je .Lt_11A2
.Lt_11A3:
cmp dword ptr [ebp-104], 6
jne .Lt_11A1
.Lt_11A2:
push 0
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRW+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_1195
.Lt_11A1:
cmp dword ptr [ebp-104], 2
je .Lt_11A5
.Lt_11A6:
cmp dword ptr [ebp-104], 3
je .Lt_11A5
.Lt_11A7:
cmp dword ptr [ebp-104], 1
je .Lt_11A5
.Lt_11A8:
cmp dword ptr [ebp-104], 4
jne .Lt_11A4
.Lt_11A5:
push 0
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRB+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_1195
.Lt_11A4:
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-128]
push eax
call _fb_StrAssign@20
lea eax, [ebp-128]
push eax
call _HWRITEASM64@8
lea eax, [ebp-128]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 52
push offset _Lt_11AD
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-152]
push eax
call _fb_StrAssign@20
lea eax, [ebp-152]
push eax
call _HWRITEASM64@8
lea eax, [ebp-152]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-164]
push eax
call _fb_StrAssign@20
lea eax, [ebp-164]
push eax
call _HWRITEASM64@8
lea eax, [ebp-164]
push eax
call _fb_StrDelete@4
.Lt_11A9:
.Lt_1195:
jmp .Lt_118D
.Lt_1191:
cmp dword ptr [ebp-116], 1
jne .Lt_11B1
.Lt_11B2:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+32], 0
je .Lt_11B3
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+32]
mov ecx, dword ptr [ebx+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-120], eax
jmp .Lt_1BDA
.Lt_11B3:
mov dword ptr [ebp-120], 0
.Lt_1BDA:
cmp dword ptr [ebp-120], 0
je .Lt_11B6
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_11B5
.Lt_11B6:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_11B5:
jmp .Lt_118D
.Lt_11B1:
cmp dword ptr [ebp-116], 3
jne .Lt_11BB
.Lt_11BC:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+52], 0
je .Lt_11BE
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+52]
push dword ptr [ecx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_11BD
.Lt_11BE:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push 2
push offset _Lt_0119
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_11BD:
jmp .Lt_118D
.Lt_11BB:
cmp dword ptr [ebp-116], 5
jne .Lt_11C4
.Lt_11C5:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_118D
.Lt_11C4:
cmp dword ptr [ebp-116], 0
jne .Lt_11C9
.Lt_11CA:
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
cmp ecx, 1
sete cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+28], 0
mov ebx, -1
jne .Lt_1BF6
cmp dword ptr [eax+24], 0
jne .Lt_1BF6
.Lt_1BF7:
xor ebx, ebx
.Lt_1BF6:
and ecx, ebx
je .Lt_11CC
mov ebx, dword ptr [ebp+12]
mov dword ptr [ebx+24], 1
mov dword ptr [ebx+28], 0
.Lt_11CC:
.Lt_11CB:
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+4]
and ecx, 480
je .Lt_11CD
mov dword ptr [ebp-120], 24
jmp .Lt_1BDB
.Lt_11CD:
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+4]
and ebx, 31
mov dword ptr [ebp-120], ebx
.Lt_1BDB:
mov ebx, dword ptr [ebp-120]
imul ebx, 28
cmp dword ptr [_SYMB_DTYPETB+ebx], 1
jne .Lt_11D0
push 0
push -1
push 0
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+4]
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+28]
push dword ptr [ebx+24]
call _HFLOATTOHEX_ASM64@16
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_11CF
.Lt_11D0:
push 0
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+28]
push dword ptr [eax+24]
call _fb_LongintToStr@8
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_11CF:
jmp .Lt_118D
.Lt_11C9:
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-128]
push eax
call _fb_StrAssign@20
lea eax, [ebp-128]
push eax
call _HWRITEASM64@8
lea eax, [ebp-128]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push 29
push offset _Lt_0EF9
push -1
lea eax, [ebp-140]
push eax
call _fb_StrAssign@20
lea eax, [ebp-140]
push eax
call _HWRITEASM64@8
lea eax, [ebp-140]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-152]
push eax
call _fb_StrAssign@20
lea eax, [ebp-152]
push eax
call _HWRITEASM64@8
lea eax, [ebp-152]
push eax
call _fb_StrDelete@4
.Lt_11D1:
.Lt_118D:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 511
mov dword ptr [ebp-104], ebx
mov ebx, dword ptr [ebp-104]
and ebx, 480
test ebx, ebx
je .Lt_11D6
mov dword ptr [ebp-104], 8
.Lt_11D6:
cmp dword ptr [ebp-104], 8
je .Lt_11D9
.Lt_11DA:
cmp dword ptr [ebp-104], 9
je .Lt_11D9
.Lt_11DB:
cmp dword ptr [ebp-104], 13
je .Lt_11D9
.Lt_11DC:
cmp dword ptr [ebp-104], 14
je .Lt_11D9
.Lt_11DD:
cmp dword ptr [ebp-104], 16
je .Lt_11D9
.Lt_11DE:
cmp dword ptr [ebp-104], 10
jne .Lt_11D8
.Lt_11D9:
push 0
push 11
push offset _Lt_096F
push -1
lea ebx, [ebp-60]
push ebx
call _fb_StrAssign@20
push 0
push 10
push offset _Lt_0407
push -1
lea ebx, [ebp-72]
push ebx
call _fb_StrAssign@20
push 0
push 6
push offset _Lt_06B9
push -1
lea ebx, [ebp-84]
push ebx
call _fb_StrAssign@20
jmp .Lt_11D7
.Lt_11D8:
cmp dword ptr [ebp-104], 11
je .Lt_11E0
.Lt_11E1:
cmp dword ptr [ebp-104], 12
je .Lt_11E0
.Lt_11E2:
cmp dword ptr [ebp-104], 15
jne .Lt_11DF
.Lt_11E0:
push 0
push 11
push offset _Lt_0974
push -1
lea ebx, [ebp-60]
push ebx
call _fb_StrAssign@20
push 0
push 10
push offset _Lt_0A9D
push -1
lea ebx, [ebp-72]
push ebx
call _fb_StrAssign@20
push 0
push 6
push offset _Lt_0D78
push -1
lea ebx, [ebp-84]
push ebx
call _fb_StrAssign@20
jmp .Lt_11D7
.Lt_11DF:
cmp dword ptr [ebp-104], 5
je .Lt_11E4
.Lt_11E5:
cmp dword ptr [ebp-104], 6
jne .Lt_11E3
.Lt_11E4:
push 0
push 10
push offset _Lt_0978
push -1
lea ebx, [ebp-60]
push ebx
call _fb_StrAssign@20
push 0
push 12
push offset _Lt_0FA0
push -1
lea ebx, [ebp-72]
push ebx
call _fb_StrAssign@20
push 0
push 5
push offset _Lt_0FF5
push -1
lea ebx, [ebp-84]
push ebx
call _fb_StrAssign@20
jmp .Lt_11D7
.Lt_11E3:
cmp dword ptr [ebp-104], 2
je .Lt_11E7
.Lt_11E8:
cmp dword ptr [ebp-104], 3
je .Lt_11E7
.Lt_11E9:
cmp dword ptr [ebp-104], 1
je .Lt_11E7
.Lt_11EA:
cmp dword ptr [ebp-104], 4
jne .Lt_11E6
.Lt_11E7:
push 0
push 10
push offset _Lt_097E
push -1
lea ebx, [ebp-60]
push ebx
call _fb_StrAssign@20
push 0
push 9
push offset _Lt_11EB
push -1
lea ebx, [ebp-72]
push ebx
call _fb_StrAssign@20
push 0
push 5
push offset _Lt_0BF2
push -1
lea ebx, [ebp-84]
push ebx
call _fb_StrAssign@20
jmp .Lt_11D7
.Lt_11E6:
cmp dword ptr [ebp-104], 7
jne .Lt_11EC
.Lt_11ED:
cmp dword ptr [_SYMB_DTYPETB+200], 2
jne .Lt_11EF
push 0
push 10
push offset _Lt_0978
push -1
lea ebx, [ebp-60]
push ebx
call _fb_StrAssign@20
push 0
push 12
push offset _Lt_0FA0
push -1
lea ebx, [ebp-72]
push ebx
call _fb_StrAssign@20
push 0
push 5
push offset _Lt_0FF5
push -1
lea ebx, [ebp-84]
push ebx
call _fb_StrAssign@20
jmp .Lt_11EE
.Lt_11EF:
cmp dword ptr [_SYMB_DTYPETB+200], 4
jne .Lt_11F0
push 0
push 11
push offset _Lt_0974
push -1
lea ebx, [ebp-60]
push ebx
call _fb_StrAssign@20
push 0
push 10
push offset _Lt_0A9D
push -1
lea ebx, [ebp-72]
push ebx
call _fb_StrAssign@20
push 0
push 6
push offset _Lt_0D78
push -1
lea ebx, [ebp-84]
push ebx
call _fb_StrAssign@20
jmp .Lt_11EE
.Lt_11F0:
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push 1
push offset _Lt_0000
push -1
lea ebx, [ebp-124]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-124]
push ebx
call _HWRITEASM64@8
lea ebx, [ebp-124]
push ebx
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push 54
push offset _Lt_11F3
push -1
lea ebx, [ebp-136]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-136]
push ebx
call _HWRITEASM64@8
lea ebx, [ebp-136]
push ebx
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push 1
push offset _Lt_0000
push -1
lea ebx, [ebp-148]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-148]
push ebx
call _HWRITEASM64@8
lea ebx, [ebp-148]
push ebx
call _fb_StrDelete@4
.Lt_11EE:
jmp .Lt_11D7
.Lt_11EC:
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push 1
push offset _Lt_0000
push -1
lea ebx, [ebp-124]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-124]
push ebx
call _HWRITEASM64@8
lea ebx, [ebp-124]
push ebx
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
push -1
push dword ptr [ebp-104]
call _fb_IntToStr@4
push eax
push 53
push offset _Lt_11FA
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-148]
push eax
call _fb_StrAssign@20
lea eax, [ebp-148]
push eax
call _HWRITEASM64@8
lea eax, [ebp-148]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
.Lt_11F6:
.Lt_11D7:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
cmp ecx, 1
sete cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
je .Lt_11FF
cmp dword ptr [_CTX+212], 2
jne .Lt_1200
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-116], eax
jmp .Lt_1BDC
.Lt_1200:
mov dword ptr [ebp-116], 0
.Lt_1BDC:
cmp dword ptr [ebp-116], 0
je .Lt_1203
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+32], 0
je .Lt_1204
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-204], eax
jmp .Lt_1BDD
.Lt_1204:
mov dword ptr [ebp-204], 0
.Lt_1BDD:
cmp dword ptr [ebp-204], 0
je .Lt_1207
push -1
push 999998
call _REG_FINDFREE@8
mov dword ptr [ebp-100], eax
push 0
push 0
mov eax, dword ptr [ebp-100]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp-100]
mov dword ptr [_REGHANDLE+eax*4], -2
push 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-96]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
lea eax, [ebp-220]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-268]
push eax
call _fb_StrAssign@20
lea eax, [ebp-268]
push eax
call _HWRITEASM64@8
lea eax, [ebp-268]
push eax
call _fb_StrDelete@4
push 0
push 2
push offset _Lt_0119
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-96]
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrConcatAssign@20
push 0
push 2
push offset _Lt_011A
push -1
lea eax, [ebp-12]
push eax
call _fb_StrConcatAssign@20
.Lt_1207:
.Lt_1206:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+32], 0
je .Lt_120D
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-208], eax
jmp .Lt_1BDE
.Lt_120D:
mov dword ptr [ebp-208], 0
.Lt_1BDE:
cmp dword ptr [ebp-208], 0
je .Lt_1210
push 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
lea eax, [ebp-220]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-244]
push eax
call _fb_StrAssign@20
lea eax, [ebp-244]
push eax
call _HWRITEASM64@8
lea eax, [ebp-244]
push eax
call _fb_StrDelete@4
push 0
push 6
push offset _Lt_0694
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_1210:
.Lt_120F:
.Lt_1203:
.Lt_1202:
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-152]
push eax
call _fb_StrAssign@20
lea eax, [ebp-152]
push eax
call _HWRITEASM64@8
lea eax, [ebp-152]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
push 0
push -1
push -1
lea eax, [ebp-84]
push eax
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
lea eax, [ebp-176]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-200]
push eax
call _fb_StrAssign@20
lea eax, [ebp-200]
push eax
call _HWRITEASM64@8
lea eax, [ebp-200]
push eax
call _fb_StrDelete@4
jmp .Lt_11FE
.Lt_11FF:
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax]
cmp ecx, 2
sete cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
and ecx, ebx
je .Lt_121B
push 1
push offset _Lt_0000
push -1
lea ebx, [ebp-48]
push ebx
call _fb_StrCompare@16
test eax, eax
je .Lt_121D
lea eax, [ebp-48]
push eax
call _EMITOP3_OP4@4
.Lt_121D:
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-148]
push eax
call _fb_StrAssign@20
lea eax, [ebp-148]
push eax
call _HWRITEASM64@8
lea eax, [ebp-148]
push eax
call _fb_StrDelete@4
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-36]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_1222
lea eax, [ebp-36]
push eax
call _EMITOP3_OP4@4
.Lt_1222:
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
push -1
lea eax, [ebp-84]
push eax
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-196]
push eax
call _fb_StrAssign@20
lea eax, [ebp-196]
push eax
call _HWRITEASM64@8
lea eax, [ebp-196]
push eax
call _fb_StrDelete@4
jmp .Lt_11FE
.Lt_121B:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
cmp ecx, 3
sete cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ecx]
cmp eax, 3
sete al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov esi, dword ptr [ecx]
cmp esi, 1
sete dl
mov esi, edx
shr esi, 1
sbb esi, esi
and eax, esi
or ebx, eax
je .Lt_1227
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-148]
push eax
call _fb_StrAssign@20
lea eax, [ebp-148]
push eax
call _HWRITEASM64@8
lea eax, [ebp-148]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
push -1
lea eax, [ebp-84]
push eax
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-196]
push eax
call _fb_StrAssign@20
lea eax, [ebp-196]
push eax
call _HWRITEASM64@8
lea eax, [ebp-196]
push eax
call _fb_StrDelete@4
jmp .Lt_11FE
.Lt_1227:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov esi, dword ptr [eax]
cmp esi, 2
sete dl
mov esi, edx
shr esi, 1
sbb esi, esi
and ebx, esi
mov esi, dword ptr [ebp+8]
mov eax, dword ptr [esi]
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov esi, dword ptr [ebp+12]
mov ecx, dword ptr [esi]
cmp ecx, 1
sete cl
shr ecx, 1
sbb ecx, ecx
and eax, ecx
or ebx, eax
je .Lt_122F
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-48]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_1231
lea eax, [ebp-48]
push eax
call _EMITOP3_OP4@4
.Lt_1231:
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-148]
push eax
call _fb_StrAssign@20
lea eax, [ebp-148]
push eax
call _HWRITEASM64@8
lea eax, [ebp-148]
push eax
call _fb_StrDelete@4
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-36]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_1236
lea eax, [ebp-36]
push eax
call _EMITOP3_OP4@4
.Lt_1236:
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
push -1
lea eax, [ebp-84]
push eax
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-196]
push eax
call _fb_StrAssign@20
lea eax, [ebp-196]
push eax
call _HWRITEASM64@8
lea eax, [ebp-196]
push eax
call _fb_StrDelete@4
jmp .Lt_11FE
.Lt_122F:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
cmp ebx, 3
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
cmp ecx, 2
sete cl
shr ecx, 1
sbb ecx, ecx
and ebx, ecx
mov ecx, dword ptr [ebp+8]
mov eax, dword ptr [ecx]
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp+12]
mov esi, dword ptr [ecx]
cmp esi, 3
sete dl
mov esi, edx
shr esi, 1
sbb esi, esi
and eax, esi
or ebx, eax
je .Lt_123B
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-48]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_123D
lea eax, [ebp-48]
push eax
call _EMITOP3_OP4@4
.Lt_123D:
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-148]
push eax
call _fb_StrAssign@20
lea eax, [ebp-148]
push eax
call _HWRITEASM64@8
lea eax, [ebp-148]
push eax
call _fb_StrDelete@4
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-36]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_1242
lea eax, [ebp-36]
push eax
call _EMITOP3_OP4@4
.Lt_1242:
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
push -1
lea eax, [ebp-84]
push eax
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-196]
push eax
call _fb_StrAssign@20
lea eax, [ebp-196]
push eax
call _HWRITEASM64@8
lea eax, [ebp-196]
push eax
call _fb_StrDelete@4
jmp .Lt_11FE
.Lt_123B:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax]
cmp ebx, 3
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+12]
mov esi, dword ptr [eax]
cmp esi, 3
sete dl
mov esi, edx
shr esi, 1
sbb esi, esi
and ebx, esi
je .Lt_1247
push 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
push 0
push -1
push -1
lea esi, [ebp-24]
push esi
push -1
push -1
lea esi, [ebp-60]
push esi
push -1
lea esi, [ebp-72]
push esi
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea esi, [ebp-124]
push esi
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-148]
push eax
call _fb_StrAssign@20
lea eax, [ebp-148]
push eax
call _HWRITEASM64@8
lea eax, [ebp-148]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
push -1
lea eax, [ebp-84]
push eax
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-196]
push eax
call _fb_StrAssign@20
lea eax, [ebp-196]
push eax
call _HWRITEASM64@8
lea eax, [ebp-196]
push eax
call _fb_StrDelete@4
jmp .Lt_11FE
.Lt_1247:
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-36]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_1250
lea eax, [ebp-36]
push eax
call _EMITOP3_OP4@4
.Lt_1250:
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-48]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_1252
lea eax, [ebp-48]
push eax
call _EMITOP3_OP4@4
.Lt_1252:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 0
jne .Lt_1254
mov eax, dword ptr [ebp+8]
mov esi, dword ptr [eax]
mov dword ptr [ebp-116], esi
cmp dword ptr [ebp-116], 4
jne .Lt_1257
.Lt_1258:
push 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
push 0
push -1
push -1
lea esi, [ebp-24]
push esi
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea esi, [ebp-12]
push esi
push -1
push -1
lea esi, [ebp-60]
push esi
push 13
push offset _Lt_1259
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea esi, [ebp-128]
push esi
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-176]
push eax
call _fb_StrAssign@20
lea eax, [ebp-176]
push eax
call _HWRITEASM64@8
lea eax, [ebp-176]
push eax
call _fb_StrDelete@4
jmp .Lt_1255
.Lt_1257:
cmp dword ptr [ebp-116], 1
je .Lt_1260
.Lt_1261:
cmp dword ptr [ebp-116], 2
je .Lt_1260
.Lt_1262:
cmp dword ptr [ebp-116], 3
jne .Lt_125F
.Lt_1260:
cmp dword ptr [_CTX+212], 2
jne .Lt_1263
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-120], eax
jmp .Lt_1BDF
.Lt_1263:
mov dword ptr [ebp-120], 0
.Lt_1BDF:
cmp dword ptr [ebp-120], 0
je .Lt_1266
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+32], 0
je .Lt_1267
mov eax, dword ptr [ebp+8]
mov esi, dword ptr [eax+32]
mov eax, dword ptr [esi+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-124], eax
jmp .Lt_1BE0
.Lt_1267:
mov dword ptr [ebp-124], 0
.Lt_1BE0:
cmp dword ptr [ebp-124], 0
je .Lt_126A
push -1
push 999998
call _REG_FINDFREE@8
mov dword ptr [ebp-100], eax
push 0
push 0
mov eax, dword ptr [ebp-100]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp-100]
mov dword ptr [_REGHANDLE+eax*4], -2
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-96]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-184]
push eax
call _fb_StrAssign@20
lea eax, [ebp-184]
push eax
call _HWRITEASM64@8
lea eax, [ebp-184]
push eax
call _fb_StrDelete@4
push 0
push 2
push offset _Lt_0119
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-96]
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrConcatAssign@20
push 0
push 2
push offset _Lt_011A
push -1
lea eax, [ebp-12]
push eax
call _fb_StrConcatAssign@20
.Lt_126A:
.Lt_1269:
.Lt_1266:
.Lt_1265:
cmp dword ptr [ebp-104], 15
jne .Lt_1271
.Lt_1272:
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
jmp .Lt_1270
.Lt_1271:
cmp dword ptr [ebp-104], 16
jne .Lt_1278
.Lt_1279:
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
jmp .Lt_1270
.Lt_1278:
cmp dword ptr [ebp-104], 8
je .Lt_1281
.Lt_1282:
cmp dword ptr [ebp-104], 9
je .Lt_1281
.Lt_1283:
cmp dword ptr [ebp-104], 13
je .Lt_1281
.Lt_1284:
cmp dword ptr [ebp-104], 14
je .Lt_1281
.Lt_1285:
cmp dword ptr [ebp-104], 10
jne .Lt_1280
.Lt_1281:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+28], 4294967295
mov esi, -1
jl .Lt_1C0F
jg .Lt_1C10
cmp dword ptr [eax+24], 2147483648
jb .Lt_1C0F
.Lt_1C10:
xor esi, esi
.Lt_1C0F:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+28], 0
mov ebx, -1
jg .Lt_1C11
jl .Lt_1C12
cmp dword ptr [eax+24], 4294967295
ja .Lt_1C11
.Lt_1C12:
xor ebx, ebx
.Lt_1C11:
or esi, ebx
je .Lt_1287
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push -1
push -1
lea ebx, [ebp-24]
push ebx
push 10
push offset _Lt_0407
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea ebx, [ebp-132]
push ebx
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
jmp .Lt_1286
.Lt_1287:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+28], 0
jl .Lt_128E
jg .Lt_1C13
cmp dword ptr [eax+24], 2147483648
jb .Lt_128E
.Lt_1C13:
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 10
push offset _Lt_0A9D
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-192]
push eax
call _fb_StrAssign@20
lea eax, [ebp-192]
push eax
call _HWRITEASM64@8
lea eax, [ebp-192]
push eax
call _fb_StrDelete@4
jmp .Lt_1286
.Lt_128E:
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
.Lt_1286:
jmp .Lt_1270
.Lt_1280:
push 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push -1
lea eax, [ebp-60]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
lea eax, [ebp-132]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
lea eax, [ebp-144]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
lea eax, [ebp-156]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
lea eax, [ebp-168]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-180]
push eax
call _fb_StrAssign@20
lea eax, [ebp-180]
push eax
call _HWRITEASM64@8
lea eax, [ebp-180]
push eax
call _fb_StrDelete@4
.Lt_129A:
.Lt_1270:
jmp .Lt_1255
.Lt_125F:
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-128]
push eax
call _fb_StrAssign@20
lea eax, [ebp-128]
push eax
call _HWRITEASM64@8
lea eax, [ebp-128]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push 50
push offset _Lt_12A3
push -1
lea eax, [ebp-140]
push eax
call _fb_StrAssign@20
lea eax, [ebp-140]
push eax
call _HWRITEASM64@8
lea eax, [ebp-140]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-152]
push eax
call _fb_StrAssign@20
lea eax, [ebp-152]
push eax
call _HWRITEASM64@8
lea eax, [ebp-152]
push eax
call _fb_StrDelete@4
.Lt_12A0:
.Lt_1255:
jmp .Lt_1253
.Lt_1254:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 5
jne .Lt_12A6
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 31
cmp ebx, 22
jne .Lt_12A7
mov ebx, dword ptr [_CTX+212]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-116], ebx
jmp .Lt_1BE1
.Lt_12A7:
mov dword ptr [ebp-116], 0
.Lt_1BE1:
cmp dword ptr [ebp-116], 0
je .Lt_12A9
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-120], eax
jmp .Lt_1BE2
.Lt_12A9:
mov dword ptr [ebp-120], 0
.Lt_1BE2:
cmp dword ptr [ebp-120], 0
je .Lt_12AC
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push -1
push 1
push offset _Lt_0119
call _fb_StrAllocTempDescZEx@8
push eax
lea eax, [ebp-24]
push eax
push 1
call _fb_StrInstr@12
dec eax
push eax
lea eax, [ebp-24]
push eax
call _fb_LEFT@8
push eax
push 20
push offset _Lt_0EE5
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-196]
push eax
call _fb_StrAssign@20
lea eax, [ebp-196]
push eax
call _HWRITEASM64@8
lea eax, [ebp-196]
push eax
call _fb_StrDelete@4
jmp .Lt_12AB
.Lt_12AC:
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 10
push offset _Lt_068F
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-184]
push eax
call _fb_StrAssign@20
lea eax, [ebp-184]
push eax
call _HWRITEASM64@8
lea eax, [ebp-184]
push eax
call _fb_StrDelete@4
.Lt_12AB:
cmp dword ptr [_CTX+212], 2
jne .Lt_12B2
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-124], eax
jmp .Lt_1BE3
.Lt_12B2:
mov dword ptr [ebp-124], 0
.Lt_1BE3:
cmp dword ptr [ebp-124], 0
je .Lt_12B5
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+32], 0
je .Lt_12B6
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-164], eax
jmp .Lt_1BE4
.Lt_12B6:
mov dword ptr [ebp-164], 0
.Lt_1BE4:
cmp dword ptr [ebp-164], 0
je .Lt_12B9
push -1
push 999998
call _REG_FINDFREE@8
mov dword ptr [ebp-100], eax
push 0
push 0
mov eax, dword ptr [ebp-100]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp-100]
mov dword ptr [_REGHANDLE+eax*4], -2
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-96]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
lea eax, [ebp-176]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
lea eax, [ebp-188]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
push 2
push offset _Lt_0119
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-96]
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrConcatAssign@20
push 0
push 2
push offset _Lt_011A
push -1
lea eax, [ebp-12]
push eax
call _fb_StrConcatAssign@20
.Lt_12B9:
.Lt_12B8:
.Lt_12B5:
.Lt_12B4:
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
jmp .Lt_1253
.Lt_12A6:
cmp dword ptr [_CTX+212], 2
jne .Lt_12C2
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-116], eax
jmp .Lt_1BE5
.Lt_12C2:
mov dword ptr [ebp-116], 0
.Lt_1BE5:
cmp dword ptr [ebp-116], 0
je .Lt_12C5
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax+32], 0
je .Lt_12C6
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-168], eax
jmp .Lt_1BE6
.Lt_12C6:
mov dword ptr [ebp-168], 0
.Lt_1BE6:
cmp dword ptr [ebp-168], 0
je .Lt_12C9
push 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
lea eax, [ebp-180]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
lea eax, [ebp-192]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-204]
push eax
call _fb_StrAssign@20
lea eax, [ebp-204]
push eax
call _HWRITEASM64@8
lea eax, [ebp-204]
push eax
call _fb_StrDelete@4
push 0
push 6
push offset _Lt_0694
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_12C9:
.Lt_12C8:
.Lt_12C5:
.Lt_12C4:
push 0
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
lea eax, [ebp-152]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-164]
push eax
call _fb_StrAssign@20
lea eax, [ebp-164]
push eax
call _HWRITEASM64@8
lea eax, [ebp-164]
push eax
call _fb_StrDelete@4
.Lt_1253:
.Lt_11FE:
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_1135:
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16
__EMITLOADRES@8:
push ebp
mov ebp, esp
sub esp, 136
push ebx
.Lt_12D1:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 511
mov dword ptr [ebp-40], ebx
mov dword ptr [ebp-44], 0
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx]
mov dword ptr [ebp-48], eax
cmp dword ptr [ebp-48], 2
jne .Lt_12D5
.Lt_12D6:
lea eax, [ebp-36]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+8]
call _PREPARE_IDX@12
jmp .Lt_12D3
.Lt_12D5:
cmp dword ptr [ebp-48], 1
jne .Lt_12D7
.Lt_12D8:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_12DA
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_12D9
.Lt_12DA:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_12D9:
jmp .Lt_12D3
.Lt_12D7:
cmp dword ptr [ebp-48], 3
jne .Lt_12DF
.Lt_12E0:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
push 0
push 44
push offset _Lt_12E6
push -1
lea eax, [ebp-108]
push eax
call _fb_StrAssign@20
lea eax, [ebp-108]
push eax
call _HWRITEASM64@8
lea eax, [ebp-108]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-120]
push eax
call _fb_StrAssign@20
lea eax, [ebp-120]
push eax
call _HWRITEASM64@8
lea eax, [ebp-120]
push eax
call _fb_StrDelete@4
jmp .Lt_12D3
.Lt_12DF:
cmp dword ptr [ebp-48], 4
jne .Lt_12E9
.Lt_12EA:
push 0
push 0
mov eax, dword ptr [ebp+8]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_12D3
.Lt_12E9:
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
lea eax, [ebp-60]
push eax
call _HWRITEASM64@8
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 44
push offset _Lt_12EE
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
.Lt_12EB:
.Lt_12D3:
push dword ptr [ebp+8]
call _HISSTRUCTIN2REGS@4
test eax, eax
je .Lt_12F2
mov eax, dword ptr [ebp+8]
cmp dword ptr [eax], 1
jne .Lt_12F3
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+8]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-48], eax
jmp .Lt_1C1A
.Lt_12F3:
mov dword ptr [ebp-48], -1
.Lt_1C1A:
cmp dword ptr [ebp-48], 0
je .Lt_12F6
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push 64
push offset _Lt_12F9
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
.Lt_12F6:
.Lt_12F5:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+40]
mov dword ptr [ebp-44], eax
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+40]
mov ebx, dword ptr [eax+44]
add ecx, 8
adc ebx, 0
push ebx
push ecx
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+32]
mov ecx, dword ptr [eax+132]
mov dword ptr [ebp-64], ecx
jmp .Lt_12FE
.Lt_1300:
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push -1
lea ecx, [ebp-12]
push ecx
push 10
push offset _Lt_0407
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea ecx, [ebp-76]
push ecx
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 10
push offset _Lt_1303
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
jmp .Lt_12FD
.Lt_1306:
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp-44], 12
jne .Lt_130A
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 13
push offset _Lt_0D26
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
jmp .Lt_1309
.Lt_130A:
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 13
push offset _Lt_0DC3
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_1309:
jmp .Lt_12FD
.Lt_130F:
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 13
push offset _Lt_0DC3
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRQ]
push 5
push offset _Lt_038A
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-136]
push eax
call _fb_StrAssign@20
lea eax, [ebp-136]
push eax
call _HWRITEASM64@8
lea eax, [ebp-136]
push eax
call _fb_StrDelete@4
jmp .Lt_12FD
.Lt_1316:
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 13
push offset _Lt_0DC3
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp-44], 12
jne .Lt_131A
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 13
push offset _Lt_131B
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
jmp .Lt_1319
.Lt_131A:
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 13
push offset _Lt_131E
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_1319:
jmp .Lt_12FD
.Lt_12FE:
mov eax, dword ptr [ebp-64]
add eax, 4294967294
cmp eax, 4
ja .Lt_12FD
mov eax, dword ptr [ebp-64]
jmp dword ptr [_.LT_1321+eax*4-8]
_.LT_1321:
.int .Lt_1300
.int .Lt_1306
.int .Lt_12FD
.int .Lt_130F
.int .Lt_1316
.Lt_12FD:
jmp .Lt_12F1
.Lt_12F2:
mov eax, dword ptr [ebp-40]
and eax, 480
je .Lt_1322
mov dword ptr [ebp-48], 24
jmp .Lt_1C1B
.Lt_1322:
mov eax, dword ptr [ebp-40]
and eax, 31
mov dword ptr [ebp-48], eax
.Lt_1C1B:
cmp dword ptr [ebp-48], 24
jne .Lt_1325
mov dword ptr [ebp-40], 8
.Lt_1325:
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-36]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_1327
lea eax, [ebp-36]
push eax
call _EMITOP3_OP4@4
.Lt_1327:
cmp dword ptr [ebp-40], 16
jne .Lt_1329
.Lt_132A:
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 12
push offset _Lt_0DC0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_1328
.Lt_1329:
cmp dword ptr [ebp-40], 15
jne .Lt_132D
.Lt_132E:
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 12
push offset _Lt_0D23
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_1328
.Lt_132D:
cmp dword ptr [ebp-40], 8
je .Lt_1332
.Lt_1333:
cmp dword ptr [ebp-40], 9
je .Lt_1332
.Lt_1334:
cmp dword ptr [ebp-40], 13
je .Lt_1332
.Lt_1335:
cmp dword ptr [ebp-40], 14
je .Lt_1332
.Lt_1336:
cmp dword ptr [ebp-40], 10
jne .Lt_1331
.Lt_1332:
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [_REGSTRQ]
push 5
push offset _Lt_038A
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
jmp .Lt_1328
.Lt_1331:
cmp dword ptr [ebp-40], 11
je .Lt_133C
.Lt_133D:
cmp dword ptr [ebp-40], 12
jne .Lt_133B
.Lt_133C:
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 13
push offset _Lt_06BE
push -1
push 0
push dword ptr [_REGSTRD]
push 5
push offset _Lt_038A
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
jmp .Lt_1328
.Lt_133B:
cmp dword ptr [ebp-40], 5
je .Lt_1343
.Lt_1344:
cmp dword ptr [ebp-40], 6
jne .Lt_1342
.Lt_1343:
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 12
push offset _Lt_06A2
push -1
push 0
push dword ptr [_REGSTRQ]
push 7
push offset _Lt_069B
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
jmp .Lt_1328
.Lt_1342:
cmp dword ptr [ebp-40], 2
je .Lt_134A
.Lt_134B:
cmp dword ptr [ebp-40], 3
je .Lt_134A
.Lt_134C:
cmp dword ptr [ebp-40], 1
je .Lt_134A
.Lt_134D:
cmp dword ptr [ebp-40], 4
jne .Lt_1349
.Lt_134A:
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 12
push offset _Lt_069C
push -1
push 0
push dword ptr [_REGSTRQ]
push 7
push offset _Lt_069B
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
lea eax, [ebp-84]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
jmp .Lt_1328
.Lt_1349:
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
lea eax, [ebp-60]
push eax
call _HWRITEASM64@8
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+4]
call _fb_IntToStr@4
push eax
push 52
push offset _Lt_1356
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-84]
push eax
call _fb_StrAssign@20
lea eax, [ebp-84]
push eax
call _HWRITEASM64@8
lea eax, [ebp-84]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-96]
push eax
call _fb_StrAssign@20
lea eax, [ebp-96]
push eax
call _HWRITEASM64@8
lea eax, [ebp-96]
push eax
call _fb_StrDelete@4
.Lt_1352:
.Lt_1328:
.Lt_12F1:
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_12D2:
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16
__EMITADDR@12:
push ebp
mov ebp, esp
sub esp, 152
push ebx
.Lt_135A:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 4
je .Lt_135D
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-40]
push eax
call _fb_StrAssign@20
lea eax, [ebp-40]
push eax
call _HWRITEASM64@8
lea eax, [ebp-40]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 46
push offset _Lt_1360
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _HWRITEASM64@8
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_135B
.Lt_135D:
.Lt_135C:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax+32], 0
je .Lt_1363
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
push dword ptr [ebx+32]
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+32]
push dword ptr [eax+28]
call _SYMBGETVALISTTYPE@8
cmp eax, 3
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 65536
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
mov ecx, eax
test ecx, ecx
setne bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-28], ebx
jmp .Lt_1C21
.Lt_1363:
mov dword ptr [ebp-28], 0
.Lt_1C21:
cmp dword ptr [ebp-28], 0
je .Lt_1366
cmp dword ptr [ebp+8], 22
jne .Lt_1368
mov dword ptr [ebp+8], 76
.Lt_1368:
.Lt_1367:
.Lt_1366:
.Lt_1365:
push -1
mov ebx, dword ptr [ebp+16]
push dword ptr [ebx+12]
call _REG_FINDFREE@8
cmp dword ptr [ebp+8], 22
jne .Lt_136A
.Lt_136B:
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx]
mov dword ptr [ebp-80], ecx
cmp dword ptr [ebp-80], 2
jne .Lt_136E
.Lt_136F:
lea ecx, [ebp-24]
push ecx
lea ecx, [ebp-12]
push ecx
push dword ptr [ebp+12]
call _PREPARE_IDX@12
jmp .Lt_136C
.Lt_136E:
cmp dword ptr [ebp-80], 1
jne .Lt_1370
.Lt_1371:
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+32]
mov ecx, dword ptr [ebx+4]
and ecx, 2
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or ecx, ebx
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax]
cmp ebx, 7
sete bl
shr ebx, 1
sbb ebx, ebx
or ecx, ebx
je .Lt_1373
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_1372
.Lt_1373:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_1372:
jmp .Lt_136C
.Lt_1370:
cmp dword ptr [ebp-80], 3
jne .Lt_1378
.Lt_1379:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_136C
.Lt_1378:
cmp dword ptr [ebp-80], 5
jne .Lt_137D
.Lt_137E:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-128]
push eax
call _fb_StrAssign@20
lea eax, [ebp-128]
push eax
call _HWRITEASM64@8
lea eax, [ebp-128]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
push 0
push 45
push offset _Lt_1384
push -1
lea eax, [ebp-140]
push eax
call _fb_StrAssign@20
lea eax, [ebp-140]
push eax
call _HWRITEASM64@8
lea eax, [ebp-140]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-152]
push eax
call _fb_StrAssign@20
lea eax, [ebp-152]
push eax
call _HWRITEASM64@8
lea eax, [ebp-152]
push eax
call _fb_StrDelete@4
jmp .Lt_136C
.Lt_137D:
push 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-92]
push eax
call _fb_StrAssign@20
lea eax, [ebp-92]
push eax
call _HWRITEASM64@8
lea eax, [ebp-92]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push 43
push offset _Lt_138A
push -1
lea eax, [ebp-104]
push eax
call _fb_StrAssign@20
lea eax, [ebp-104]
push eax
call _HWRITEASM64@8
lea eax, [ebp-104]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-116]
push eax
call _fb_StrAssign@20
lea eax, [ebp-116]
push eax
call _HWRITEASM64@8
lea eax, [ebp-116]
push eax
call _fb_StrDelete@4
.Lt_1387:
.Lt_136C:
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-24]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_138E
lea eax, [ebp-24]
push eax
call _EMITOP3_OP4@4
.Lt_138E:
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp+16]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
jmp .Lt_1369
.Lt_136A:
cmp dword ptr [ebp+8], 76
jne .Lt_1393
.Lt_1394:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-32], ebx
cmp dword ptr [ebp-32], 2
jne .Lt_1397
.Lt_1398:
lea ebx, [ebp-24]
push ebx
lea ebx, [ebp-12]
push ebx
push dword ptr [ebp+12]
call _PREPARE_IDX@12
push 1
push offset _Lt_0000
push -1
lea ebx, [ebp-24]
push ebx
call _fb_StrCompare@16
test eax, eax
je .Lt_139A
lea eax, [ebp-24]
push eax
call _EMITOP3_OP4@4
.Lt_139A:
jmp .Lt_1395
.Lt_1397:
cmp dword ptr [ebp-32], 1
jne .Lt_139B
.Lt_139C:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_139E
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+4]
and ebx, 8
test ebx, ebx
je .Lt_139F
mov ebx, dword ptr [_CTX+212]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-36], ebx
jmp .Lt_1C22
.Lt_139F:
mov dword ptr [ebp-36], 0
.Lt_1C22:
cmp dword ptr [ebp-36], 0
je .Lt_13A1
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-40], eax
jmp .Lt_1C23
.Lt_13A1:
mov dword ptr [ebp-40], 0
.Lt_1C23:
cmp dword ptr [ebp-40], 0
je .Lt_13A4
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
push 0
push 6
push offset _Lt_0694
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_13A3
.Lt_13A4:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_13A3:
jmp .Lt_139D
.Lt_139E:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_139D:
jmp .Lt_1395
.Lt_139B:
cmp dword ptr [ebp-32], 3
jne .Lt_13AC
.Lt_13AD:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_1395
.Lt_13AC:
cmp dword ptr [ebp-32], 5
jne .Lt_13B1
.Lt_13B2:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_1395
.Lt_13B1:
cmp dword ptr [ebp-32], 4
jne .Lt_13B6
.Lt_13B7:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 2
push offset _Lt_0119
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_1395
.Lt_13B6:
push 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
lea eax, [ebp-44]
push eax
call _HWRITEASM64@8
lea eax, [ebp-44]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
push 0
push 42
push offset _Lt_13BD
push -1
lea eax, [ebp-56]
push eax
call _fb_StrAssign@20
lea eax, [ebp-56]
push eax
call _HWRITEASM64@8
lea eax, [ebp-56]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
lea eax, [ebp-68]
push eax
call _HWRITEASM64@8
lea eax, [ebp-68]
push eax
call _fb_StrDelete@4
.Lt_13BA:
.Lt_1395:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 5
jne .Lt_13C1
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp+16]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
jmp .Lt_13C0
.Lt_13C1:
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp+16]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
.Lt_13C0:
.Lt_1393:
.Lt_1369:
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_135B:
pop ebx
mov esp, ebp
pop ebp
ret 12
.balign 16
_HDOCALL@28:
push ebp
mov ebp, esp
sub esp, 3940
push ebx
push esi
push edi
.Lt_13DD:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov byte ptr [ebp-72], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-3696]
push eax
mov edi, eax
xor eax, eax
mov ecx, 903
rep stosd
pop eax
lea eax, [ebp-3696]
mov dword ptr [ebp-3732], eax
lea eax, [ebp-3696]
mov dword ptr [ebp-3728], eax
mov dword ptr [ebp-3724], 3612
mov dword ptr [ebp-3720], 12
mov dword ptr [ebp-3716], 1
mov dword ptr [ebp-3712], 49
mov dword ptr [ebp-3708], 301
mov dword ptr [ebp-3704], 0
mov dword ptr [ebp-3700], 300
mov dword ptr [ebp-3736], 0
mov dword ptr [ebp-3740], 0
mov dword ptr [ebp-3744], 0
mov dword ptr [ebp-3748], 0
mov byte ptr [_CTX+137], 1
cmp byte ptr [ebp+32], 0
je .Lt_13E1
push dword ptr [ebp+16]
push dword ptr [ebp+12]
call _REG_CALLPTR@8
.Lt_13E1:
mov eax, dword ptr [_CTX+96]
add eax, 104
mov dword ptr [_CTX+108], eax
mov eax, dword ptr [_CTX+108]
mov dword ptr [_CTX+104], eax
lea eax, [_IRHL+60]
push eax
call _LISTGETTAIL@4
mov dword ptr [ebp-24], eax
.Lt_13E2:
cmp dword ptr [ebp-24], 0
je .Lt_13E4
mov eax, dword ptr [ebp-24]
mov ebx, dword ptr [eax+8]
cmp ebx, dword ptr [ebp+24]
sete al
shr eax, 1
sbb eax, eax
test eax, eax
setne bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-3752], ebx
jmp .Lt_1C2E
.Lt_13E4:
mov dword ptr [ebp-3752], 0
.Lt_1C2E:
cmp dword ptr [ebp-3752], 0
je .Lt_13E3
push dword ptr [ebp-24]
call _LISTGETPREV@4
mov dword ptr [ebp-28], eax
mov eax, dword ptr [ebp-24]
mov ebx, dword ptr [eax+4]
mov dword ptr [ebp-32], ebx
push 0
push 1
push offset _Lt_0000
push -1
lea ebx, [ebp-56]
push ebx
call _fb_StrAssign@20
mov dword ptr [ebp-4], -1
mov ebx, dword ptr [ebp-32]
mov eax, dword ptr [ebx+4]
and eax, 480
test eax, eax
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-32]
push dword ptr [ebx+8]
mov ebx, dword ptr [ebp-32]
push dword ptr [ebx+4]
mov ebx, eax
call _SYMBGETVALISTTYPE@8
cmp eax, 3
sete al
shr eax, 1
sbb eax, eax
and ebx, eax
je .Lt_13E7
push 0
push 8
call _IRHLALLOCVREG@8
mov dword ptr [ebp-3744], eax
push dword ptr [ebp-3744]
push dword ptr [ebp-32]
push 22
call __EMITADDR@12
mov edi, dword ptr [ebp-32]
mov esi, dword ptr [ebp-3744]
mov ecx, 18
rep movsd
.Lt_13E7:
.Lt_13E6:
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+4]
and ebx, 511
mov dword ptr [ebp-20], ebx
mov ebx, dword ptr [ebp-32]
mov eax, dword ptr [ebx]
mov dword ptr [ebp-3764], eax
cmp dword ptr [ebp-3764], 2
jne .Lt_13EA
.Lt_13EB:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+32], 0
jne .Lt_13ED
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+52]
cmp dword ptr [ebx+32], 0
jne .Lt_13EF
mov ebx, dword ptr [ebp-32]
mov eax, dword ptr [ebx+52]
cmp dword ptr [eax+12], -1
je .Lt_13F1
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-4], eax
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_13F0
.Lt_13F1:
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+52]
mov eax, dword ptr [ebx+52]
push dword ptr [eax+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-4], eax
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea eax, [ebp-3824]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-56]
push eax
call _fb_StrAssign@20
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3848], 0
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
lea eax, [ebp-3848]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3860], 0
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
lea eax, [ebp-3860]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
.Lt_13F0:
jmp .Lt_13EE
.Lt_13EF:
push 0
push 0
call _REG_TEMPO@0
push eax
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+52]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+4]
and ebx, 2
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp-32]
mov ecx, dword ptr [eax+52]
mov eax, dword ptr [ecx+32]
mov ecx, dword ptr [eax+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_13FE
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ecx, dword ptr [ebp-32]
mov ebx, dword ptr [ecx+52]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push -1
push 0
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-68]
push eax
push 5
push offset _Lt_012F
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea eax, [ebp-3824]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-56]
push eax
call _fb_StrAssign@20
push 0
push 3
push offset _Lt_0125
push -1
lea eax, [ebp-56]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push -1
lea eax, [ebp-56]
push eax
call _fb_StrConcatAssign@20
push 0
push 5
push offset _Lt_038A
push -1
lea eax, [ebp-56]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
lea eax, [ebp-68]
push eax
push -1
lea eax, [ebp-56]
push eax
call _fb_StrConcatAssign@20
push 0
push 3
push offset _Lt_0124
push -1
lea eax, [ebp-56]
push eax
call _fb_StrConcatAssign@20
push 0
push 2
push offset _Lt_0119
push -1
lea eax, [ebp-56]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
lea eax, [ebp-68]
push eax
push -1
lea eax, [ebp-56]
push eax
call _fb_StrConcatAssign@20
push 0
push 2
push offset _Lt_011A
push -1
lea eax, [ebp-56]
push eax
call _fb_StrConcatAssign@20
push 0
push 5
push offset _Lt_1405
push -1
lea eax, [ebp-56]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-68]
push eax
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-3848], 0
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
lea eax, [ebp-3848]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3860], 0
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
lea eax, [ebp-3860]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3872], 0
mov dword ptr [ebp-3868], 0
mov dword ptr [ebp-3864], 0
lea eax, [ebp-3872]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_13FD
.Lt_13FE:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push -1
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-68]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-56]
push eax
call _fb_StrAssign@20
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-68]
push eax
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea eax, [ebp-3824]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3848], 0
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
lea eax, [ebp-3848]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
.Lt_13FD:
.Lt_13EE:
jmp .Lt_13EC
.Lt_13ED:
push 0
push 0
call _REG_TEMPO@0
push eax
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-32]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1411
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ebx, dword ptr [ebp-32]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push -1
push 0
mov eax, dword ptr [ebp-32]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-68]
push eax
push 5
push offset _Lt_012F
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea eax, [ebp-3824]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-56]
push eax
call _fb_StrAssign@20
jmp .Lt_1410
.Lt_1411:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-68]
push eax
push 5
push offset _Lt_012F
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-56]
push eax
call _fb_StrAssign@20
.Lt_1410:
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+52]
cmp dword ptr [ebx], 4
jne .Lt_141D
mov ebx, dword ptr [ebp-32]
mov eax, dword ptr [ebx+52]
push dword ptr [eax+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-4], eax
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_085C
push -1
push -1
lea eax, [ebp-68]
push eax
push 2
push offset _Lt_0119
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_141C
.Lt_141D:
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+52]
cmp dword ptr [ebx], 1
jne .Lt_1422
mov ebx, dword ptr [ebp-32]
mov eax, dword ptr [ebx+52]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp-32]
mov ecx, dword ptr [ebx+52]
mov ebx, dword ptr [ecx+32]
mov ecx, dword ptr [ebx+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
je .Lt_1424
push 0
push -1
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ecx, dword ptr [ebp-32]
mov eax, dword ptr [ecx+52]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push -1
push 0
mov eax, dword ptr [ebp-32]
mov ecx, dword ptr [eax+52]
push dword ptr [ecx+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-68]
push eax
push -1
push 5
push offset _Lt_0411
push -1
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push 3
push offset _Lt_0125
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea eax, [ebp-3824]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3848], 0
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
lea eax, [ebp-3848]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3860], 0
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
lea eax, [ebp-3860]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-56]
push eax
mov dword ptr [ebp-3872], 0
mov dword ptr [ebp-3868], 0
mov dword ptr [ebp-3864], 0
lea eax, [ebp-3872]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-56]
push eax
call _fb_StrAssign@20
jmp .Lt_1423
.Lt_1424:
push 0
push -1
push -1
push 6
push offset _Lt_03BE
push -1
push -1
mov eax, dword ptr [ebp-32]
mov ecx, dword ptr [eax+52]
push dword ptr [ecx+44]
push dword ptr [ecx+40]
call _fb_LongintToStr@8
push eax
push -1
push 2
push offset _Lt_0103
push -1
push -1
lea eax, [ebp-68]
push eax
push -1
push 5
push offset _Lt_0411
push -1
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push 3
push offset _Lt_0125
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea eax, [ebp-3824]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-56]
push eax
mov dword ptr [ebp-3848], 0
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
lea eax, [ebp-3848]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-56]
push eax
call _fb_StrAssign@20
.Lt_1423:
push 0
push 2
push offset _Lt_0119
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-68]
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrConcatAssign@20
push 0
push 2
push offset _Lt_011A
push -1
lea eax, [ebp-44]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_141C
.Lt_1422:
push 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3776]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3776]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3776]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push 40
push offset _Lt_1437
push -1
lea eax, [ebp-3788]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3788]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3788]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3800]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3800]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3800]
push eax
call _fb_StrDelete@4
.Lt_141C:
.Lt_13EC:
jmp .Lt_13E8
.Lt_13EA:
cmp dword ptr [ebp-3764], 4
jne .Lt_143A
.Lt_143B:
mov eax, dword ptr [ebp-20]
and eax, 480
je .Lt_143C
mov dword ptr [ebp-3768], 24
jmp .Lt_1C2F
.Lt_143C:
mov eax, dword ptr [ebp-20]
and eax, 31
mov dword ptr [ebp-3768], eax
.Lt_1C2F:
cmp dword ptr [ebp-3768], 24
jne .Lt_143F
mov dword ptr [ebp-20], 8
.Lt_143F:
mov eax, dword ptr [ebp-32]
push dword ptr [eax+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-4], eax
cmp dword ptr [ebp-20], 8
je .Lt_1442
.Lt_1443:
cmp dword ptr [ebp-20], 9
je .Lt_1442
.Lt_1444:
cmp dword ptr [ebp-20], 13
je .Lt_1442
.Lt_1445:
cmp dword ptr [ebp-20], 14
je .Lt_1442
.Lt_1446:
cmp dword ptr [ebp-20], 16
je .Lt_1442
.Lt_1447:
cmp dword ptr [ebp-20], 10
je .Lt_1442
.Lt_1448:
cmp dword ptr [ebp-20], 20
jne .Lt_1441
.Lt_1442:
push 0
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_1440
.Lt_1441:
cmp dword ptr [ebp-20], 11
je .Lt_144A
.Lt_144B:
cmp dword ptr [ebp-20], 12
je .Lt_144A
.Lt_144C:
cmp dword ptr [ebp-20], 15
jne .Lt_1449
.Lt_144A:
push 0
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRD+eax*4]
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_1440
.Lt_1449:
cmp dword ptr [ebp-20], 5
je .Lt_144E
.Lt_144F:
cmp dword ptr [ebp-20], 6
jne .Lt_144D
.Lt_144E:
push 0
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRW+eax*4]
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_1440
.Lt_144D:
cmp dword ptr [ebp-20], 2
je .Lt_1451
.Lt_1452:
cmp dword ptr [ebp-20], 3
je .Lt_1451
.Lt_1453:
cmp dword ptr [ebp-20], 1
je .Lt_1451
.Lt_1454:
cmp dword ptr [ebp-20], 4
jne .Lt_1450
.Lt_1451:
push 0
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRB+eax*4]
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_1440
.Lt_1450:
push 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3780]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3780]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3780]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
push 0
push -1
push -1
push dword ptr [ebp-20]
call _fb_IntToStr@4
push eax
push 55
push offset _Lt_1459
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3804]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3804]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3804]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3816]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3816]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3816]
push eax
call _fb_StrDelete@4
.Lt_1455:
.Lt_1440:
jmp .Lt_13E8
.Lt_143A:
cmp dword ptr [ebp-3764], 1
jne .Lt_145D
.Lt_145E:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+32], 0
je .Lt_145F
mov eax, dword ptr [ebp-32]
mov ecx, dword ptr [eax+32]
mov eax, dword ptr [ecx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ecx, dword ptr [ebp-32]
mov ebx, dword ptr [ecx+32]
mov ecx, dword ptr [ebx+4]
and ecx, 1
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or eax, ecx
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3768], eax
jmp .Lt_1C30
.Lt_145F:
mov dword ptr [ebp-3768], 0
.Lt_1C30:
cmp dword ptr [ebp-3768], 0
je .Lt_1462
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp-32]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_1461
.Lt_1462:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
.Lt_1461:
jmp .Lt_13E8
.Lt_145D:
cmp dword ptr [ebp-3764], 3
jne .Lt_1467
.Lt_1468:
mov eax, dword ptr [ebp-32]
mov ecx, dword ptr [eax+52]
push dword ptr [ecx+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-4], eax
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_13E8
.Lt_1467:
cmp dword ptr [ebp-3764], 5
jne .Lt_146C
.Lt_146D:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp-32]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_13E8
.Lt_146C:
cmp dword ptr [ebp-3764], 0
jne .Lt_1471
.Lt_1472:
mov eax, dword ptr [ebp-20]
and eax, 480
je .Lt_1473
mov dword ptr [ebp-3768], 24
jmp .Lt_1C31
.Lt_1473:
mov eax, dword ptr [ebp-20]
and eax, 31
mov dword ptr [ebp-3768], eax
.Lt_1C31:
mov eax, dword ptr [ebp-3768]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax], 1
jne .Lt_1476
push 0
push -1
push 0
push dword ptr [ebp-20]
mov eax, dword ptr [ebp-32]
push dword ptr [eax+28]
push dword ptr [eax+24]
call _HFLOATTOHEX_ASM64@16
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_1475
.Lt_1476:
cmp dword ptr [ebp-20], 1
jne .Lt_1478
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 0
jne .Lt_1C4C
cmp dword ptr [eax+24], 0
je .Lt_147A
.Lt_1C4C:
mov eax, dword ptr [ebp-32]
mov dword ptr [eax+24], 1
mov dword ptr [eax+28], 0
.Lt_147A:
.Lt_1479:
.Lt_1478:
.Lt_1477:
push 0
push -1
mov eax, dword ptr [ebp-32]
push dword ptr [eax+28]
push dword ptr [eax+24]
call _fb_LongintToStr@8
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
.Lt_1475:
jmp .Lt_13E8
.Lt_1471:
push 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3776]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3776]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3776]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push 45
push offset _Lt_147E
push -1
lea eax, [ebp-3788]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3788]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3788]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3800]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3800]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3800]
push eax
call _fb_StrDelete@4
.Lt_147B:
.Lt_13E8:
mov eax, dword ptr [ebp-20]
and eax, 480
je .Lt_1481
mov dword ptr [ebp-3760], 24
jmp .Lt_1C32
.Lt_1481:
mov eax, dword ptr [ebp-20]
and eax, 31
mov dword ptr [ebp-3760], eax
.Lt_1C32:
cmp dword ptr [ebp-3760], 24
jne .Lt_1484
mov dword ptr [ebp-20], 8
.Lt_1484:
lea eax, [ebp-16]
push eax
lea eax, [ebp-12]
push eax
lea eax, [ebp-8]
push eax
mov eax, dword ptr [ebp-32]
push dword ptr [eax+8]
push dword ptr [ebp-20]
call _PARAM_ANALYZE@20
mov dword ptr [ebp-76], eax
cmp dword ptr [ebp-76], 10
jl .Lt_1486
cmp dword ptr [_CTX+212], 2
jne .Lt_1488
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 0
jne .Lt_148A
add dword ptr [ebp-3740], 8
mov eax, dword ptr [ebp-20]
and eax, 480
je .Lt_148B
mov dword ptr [ebp-3764], 24
jmp .Lt_1C33
.Lt_148B:
mov eax, dword ptr [ebp-20]
and eax, 31
mov dword ptr [ebp-3764], eax
.Lt_1C33:
mov eax, dword ptr [ebp-3764]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax], 1
jne .Lt_148E
cmp dword ptr [ebp-20], 15
jne .Lt_1490
inc dword ptr [ebp-3736]
push 0
push 6
push offset _Lt_1491
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea ecx, [ebp+eax-3696]
push ecx
call _fb_StrAssign@20
push 0
push -1
lea ecx, [ebp-44]
push ecx
push -1
mov ecx, dword ptr [ebp-3736]
imul ecx, 12
lea eax, [ebp+ecx-3696]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_148F
.Lt_1490:
inc dword ptr [ebp-3736]
push 0
push 9
push offset _Lt_1492
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea ecx, [ebp+eax-3696]
push ecx
call _fb_StrAssign@20
inc dword ptr [ebp-3736]
push 0
push 10
push offset _Lt_0407
push -1
mov ecx, dword ptr [ebp-3736]
imul ecx, 12
lea eax, [ebp+ecx-3696]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea ecx, [ebp+eax-3696]
push ecx
call _fb_StrConcatAssign@20
.Lt_148F:
jmp .Lt_148D
.Lt_148E:
mov ecx, dword ptr [ebp-32]
cmp dword ptr [ecx+28], 4294967295
mov eax, -1
jg .Lt_1C4D
jl .Lt_1C4E
cmp dword ptr [ecx+24], 2147483648
jae .Lt_1C4D
.Lt_1C4E:
xor eax, eax
.Lt_1C4D:
mov ecx, dword ptr [ebp-32]
cmp dword ptr [ecx+28], 0
mov ebx, -1
jl .Lt_1C4F
jg .Lt_1C50
cmp dword ptr [ecx+24], 2147483648
jb .Lt_1C4F
.Lt_1C50:
xor ebx, ebx
.Lt_1C4F:
and eax, ebx
je .Lt_1493
inc dword ptr [ebp-3736]
push 0
push 6
push offset _Lt_1491
push -1
mov ebx, dword ptr [ebp-3736]
imul ebx, 12
lea eax, [ebp+ebx-3696]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea ebx, [ebp+eax-3696]
push ebx
call _fb_StrConcatAssign@20
jmp .Lt_148D
.Lt_1493:
inc dword ptr [ebp-3736]
push 0
push 9
push offset _Lt_1492
push -1
mov ebx, dword ptr [ebp-3736]
imul ebx, 12
lea eax, [ebp+ebx-3696]
push eax
call _fb_StrAssign@20
inc dword ptr [ebp-3736]
push 0
push 10
push offset _Lt_0407
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea ebx, [ebp+eax-3696]
push ebx
call _fb_StrAssign@20
push 0
push -1
lea ebx, [ebp-44]
push ebx
push -1
mov ebx, dword ptr [ebp-3736]
imul ebx, 12
lea eax, [ebp+ebx-3696]
push eax
call _fb_StrConcatAssign@20
.Lt_148D:
jmp .Lt_1489
.Lt_148A:
cmp dword ptr [ebp-20], 20
jne .Lt_1495
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+8]
mov eax, dword ptr [ebx+40]
mov dword ptr [ebp-80], eax
mov eax, dword ptr [ebp-80]
add dword ptr [ebp-3740], eax
cmp dword ptr [ebp-80], 8
jle .Lt_1497
mov eax, dword ptr [ebp-80]
mov ecx, 8
cdq
idiv ecx
mov eax, edx
mov dword ptr [ebp-84], eax
cmp dword ptr [ebp-84], 0
jne .Lt_1499
mov dword ptr [ebp-84], 8
.Lt_1499:
.Lt_149A:
cmp dword ptr [ebp-80], 0
jle .Lt_149B
inc dword ptr [ebp-3736]
push 0
push 11
push offset _Lt_149C
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea ebx, [ebp+eax-3696]
push ebx
call _fb_StrAssign@20
cmp dword ptr [ebp-80], 8
jle .Lt_149E
inc dword ptr [ebp-3736]
push 0
push 11
push offset _Lt_149F
push -1
mov ebx, dword ptr [ebp-3736]
imul ebx, 12
lea eax, [ebp+ebx-3696]
push eax
call _fb_StrAssign@20
.Lt_149E:
.Lt_149D:
add dword ptr [ebp-80], -8
jmp .Lt_149A
.Lt_149B:
inc dword ptr [ebp-3736]
push 0
push -1
push -1
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+8]
mov ecx, dword ptr [ebp-84]
mov eax, ecx
sar eax, 31
mov edi, dword ptr [ebx+40]
mov esi, dword ptr [ebx+44]
sub edi, ecx
sbb esi, eax
push esi
push edi
call _fb_LongintToStr@8
push eax
push 10
push offset _Lt_14A0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call _fb_StrAssign@20
mov edi, dword ptr [ebp-32]
cmp dword ptr [edi], 4
jne .Lt_14A3
inc dword ptr [ebp-3736]
push 0
push 10
push offset _Lt_0407
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call _fb_StrConcatAssign@20
jmp .Lt_14A2
.Lt_14A3:
inc dword ptr [ebp-3736]
push 0
push 10
push offset _Lt_068F
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call _fb_StrConcatAssign@20
.Lt_14A2:
jmp .Lt_1496
.Lt_1497:
inc dword ptr [ebp-3736]
push 0
push 6
push offset _Lt_1491
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call _fb_StrConcatAssign@20
.Lt_1496:
jmp .Lt_1494
.Lt_1495:
add dword ptr [ebp-3740], 8
mov edi, dword ptr [ebp-32]
cmp dword ptr [edi], 5
jne .Lt_14A5
mov edi, dword ptr [ebp-32]
mov eax, dword ptr [edi+4]
and eax, 31
cmp eax, 22
jne .Lt_14A6
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3764], eax
jmp .Lt_1C34
.Lt_14A6:
mov dword ptr [ebp-3764], 0
.Lt_1C34:
cmp dword ptr [ebp-3764], 0
je .Lt_14A9
inc dword ptr [ebp-3736]
push 0
push 9
push offset _Lt_1492
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call _fb_StrAssign@20
inc dword ptr [ebp-3736]
push 0
push 20
push offset _Lt_0EE5
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call _fb_StrAssign@20
push 0
push -1
push 1
push offset _Lt_0119
call _fb_StrAllocTempDescZEx@8
push eax
lea eax, [ebp-44]
push eax
push 1
call _fb_StrInstr@12
dec eax
push eax
lea eax, [ebp-44]
push eax
call _fb_LEFT@8
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call _fb_StrConcatAssign@20
push 0
push 15
push offset _Lt_0BD0
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_14A8
.Lt_14A9:
inc dword ptr [ebp-3736]
push 0
push 9
push offset _Lt_1492
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call _fb_StrAssign@20
inc dword ptr [ebp-3736]
push 0
push 10
push offset _Lt_068F
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call _fb_StrConcatAssign@20
.Lt_14A8:
jmp .Lt_14A4
.Lt_14A5:
mov edi, dword ptr [ebp-32]
cmp dword ptr [edi], 4
jne .Lt_14AB
push 0
push 0
mov edi, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+edi*4]
push -1
lea edi, [ebp-44]
push edi
call _fb_StrAssign@20
inc dword ptr [ebp-3736]
push 0
push 6
push offset _Lt_1491
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call _fb_StrConcatAssign@20
jmp .Lt_14AA
.Lt_14AB:
inc dword ptr [ebp-3736]
push 0
push 6
push offset _Lt_1491
push -1
mov edi, dword ptr [ebp-3736]
imul edi, 12
lea eax, [ebp+edi-3696]
push eax
call _fb_StrAssign@20
push 0
push -1
lea eax, [ebp-44]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call _fb_StrConcatAssign@20
.Lt_14AA:
.Lt_14A4:
.Lt_1494:
push 1
push offset _Lt_0000
push -1
lea edi, [ebp-56]
push edi
call _fb_StrCompare@16
test eax, eax
je .Lt_14AD
inc dword ptr [ebp-3736]
push 0
push -1
lea eax, [ebp-56]
push eax
push -1
mov eax, dword ptr [ebp-3736]
imul eax, 12
lea edi, [ebp+eax-3696]
push edi
call _fb_StrAssign@20
.Lt_14AD:
.Lt_14AC:
.Lt_1489:
jmp .Lt_1487
.Lt_1488:
push 1
push offset _Lt_0000
push -1
lea edi, [ebp-56]
push edi
call _fb_StrCompare@16
test eax, eax
je .Lt_14AF
lea eax, [ebp-56]
push eax
call _EMITOP3_OP4@4
.Lt_14AF:
cmp dword ptr [ebp-76], 11
jne .Lt_14B1
cmp dword ptr [ebp-20], 20
jne .Lt_14B3
mov eax, dword ptr [ebp-32]
mov edi, dword ptr [eax+8]
mov eax, dword ptr [edi+40]
mov dword ptr [ebp-80], eax
jmp .Lt_14B2
.Lt_14B3:
mov eax, dword ptr [ebp-20]
imul eax, 28
mov edi, dword ptr [_SYMB_DTYPETB+eax+4]
mov dword ptr [ebp-80], edi
.Lt_14B2:
mov edi, dword ptr [ebp-32]
cmp dword ptr [edi], 4
jne .Lt_14B5
mov edi, dword ptr [ebp-80]
mov dword ptr [ebp-3764], edi
jmp .Lt_14B7
.Lt_14B9:
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
push -1
lea edi, [ebp-44]
push edi
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov edi, dword ptr [ebp-8]
sal edi, 3
add edi, -8
push edi
call _fb_IntToStr@4
push eax
push 14
push offset _Lt_14BA
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
jmp .Lt_14B6
.Lt_14C0:
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 14
push offset _Lt_0781
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
jmp .Lt_14B6
.Lt_14C5:
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0787
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
jmp .Lt_14B6
.Lt_14CA:
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
jmp .Lt_14B6
.Lt_14B7:
mov eax, dword ptr [ebp-3764]
add eax, 4294967295
cmp eax, 7
ja .Lt_14B6
mov eax, dword ptr [ebp-3764]
jmp dword ptr [_.LT_14CF+eax*4-4]
_.LT_14CF:
.int .Lt_14B9
.int .Lt_14C0
.int .Lt_14B6
.int .Lt_14C5
.int .Lt_14B6
.int .Lt_14B6
.int .Lt_14B6
.int .Lt_14CA
.Lt_14B6:
jmp .Lt_14B4
.Lt_14B5:
mov eax, dword ptr [ebp-80]
mov dword ptr [ebp-3764], eax
jmp .Lt_14D1
.Lt_14D3:
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 9
push offset _Lt_11EB
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3788]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3788]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3788]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
push 10
push offset _Lt_14D6
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 14
push offset _Lt_14BA
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3824]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3824]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3824]
push eax
call _fb_StrDelete@4
jmp .Lt_14D0
.Lt_14DA:
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 9
push offset _Lt_14DB
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3788]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3788]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3788]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
push 10
push offset _Lt_14DE
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 14
push offset _Lt_0781
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3824]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3824]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3824]
push eax
call _fb_StrDelete@4
jmp .Lt_14D0
.Lt_14E2:
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 10
push offset _Lt_0A9D
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3788]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3788]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3788]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
push 11
push offset _Lt_14E5
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0787
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3824]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3824]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3824]
push eax
call _fb_StrDelete@4
jmp .Lt_14D0
.Lt_14E9:
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3788]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3788]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3788]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
push 11
push offset _Lt_14EC
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3824]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3824]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3824]
push eax
call _fb_StrDelete@4
jmp .Lt_14D0
.Lt_14D1:
mov eax, dword ptr [ebp-3764]
add eax, 4294967295
cmp eax, 7
ja .Lt_14D0
mov eax, dword ptr [ebp-3764]
jmp dword ptr [_.LT_14F0+eax*4-4]
_.LT_14F0:
.int .Lt_14D3
.int .Lt_14DA
.int .Lt_14D0
.int .Lt_14E2
.int .Lt_14D0
.int .Lt_14D0
.int .Lt_14D0
.int .Lt_14E9
.Lt_14D0:
.Lt_14B4:
jmp .Lt_14B0
.Lt_14B1:
cmp dword ptr [ebp-76], 12
jne .Lt_14F1
push dword ptr [ebp-4]
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
push dword ptr [eax]
call _REG_TRANSFER@8
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov edi, dword ptr [eax]
push dword ptr [_REGSTRQ+edi*4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea edi, [ebp-3772]
push edi
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp-32]
mov edi, dword ptr [eax+8]
mov esi, dword ptr [_CTX+108]
mov eax, esi
sar eax, 31
add esi, dword ptr [edi+40]
adc eax, dword ptr [edi+44]
mov edi, dword ptr [ebp-32]
mov ecx, dword ptr [edi+8]
add esi, dword ptr [ecx+40]
adc eax, dword ptr [ecx+44]
add esi, 4294967295
adc eax, 4294967295
mov ecx, dword ptr [ebp-32]
mov edi, dword ptr [ecx+8]
mov ebx, dword ptr [edi+40]
mov ecx, dword ptr [edi+44]
add ebx, 4294967295
adc ecx, 4294967295
not ebx
not ecx
and esi, ebx
and eax, ecx
mov ebx, esi
mov dword ptr [_CTX+108], ebx
mov ebx, dword ptr [_CTX+108]
mov ecx, 8
mov eax, ebx
cdq
idiv ecx
mov eax, edx
mov ebx, eax
neg ebx
add ebx, dword ptr [_CTX+108]
add ebx, 8
mov dword ptr [_CTX+108], ebx
push 0
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [_LISTREG]
mov esi, dword ptr [ebx]
push dword ptr [_REGSTRQ+esi*4]
push -1
lea esi, [ebp-68]
push esi
call _fb_StrAssign@20
push 1
push 1
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov esi, dword ptr [_CTX+108]
neg esi
push esi
call _fb_IntToStr@4
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3832]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3832]
push eax
lea eax, [ebp-68]
push eax
mov eax, dword ptr [ebp-32]
mov esi, dword ptr [eax+8]
mov eax, dword ptr [esi+40]
push eax
call _MEMCOPY@20
lea eax, [ebp-3832]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3892], 0
mov dword ptr [ebp-3888], 0
mov dword ptr [ebp-3884], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push -1
mov eax, dword ptr [_CTX+108]
neg eax
push eax
call _fb_IntToStr@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov esi, dword ptr [eax]
push dword ptr [_REGSTRQ+esi*4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
mov dword ptr [ebp-3836], 0
lea esi, [ebp-3844]
push esi
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
mov dword ptr [ebp-3848], 0
lea eax, [ebp-3856]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3868], 0
mov dword ptr [ebp-3864], 0
mov dword ptr [ebp-3860], 0
lea eax, [ebp-3868]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3880], 0
mov dword ptr [ebp-3876], 0
mov dword ptr [ebp-3872], 0
lea eax, [ebp-3880]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3892]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3892]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3892]
push eax
call _fb_StrDelete@4
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
sete al
shr eax, 1
sbb eax, eax
mov esi, dword ptr [_CTX+212]
test esi, esi
sete dl
mov esi, edx
shr esi, 1
sbb esi, esi
and eax, esi
je .Lt_14FE
push 3
mov dword ptr [ebp-3940], 0
mov dword ptr [ebp-3936], 0
mov dword ptr [ebp-3932], 0
push 0
push -1
push 0
mov esi, dword ptr [ebp-12]
sal esi, 2
add esi, dword ptr [_LISTREG]
mov eax, dword ptr [esi]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3904], 0
mov dword ptr [ebp-3900], 0
mov dword ptr [ebp-3896], 0
lea eax, [ebp-3904]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3916], 0
mov dword ptr [ebp-3912], 0
mov dword ptr [ebp-3908], 0
lea eax, [ebp-3916]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3928], 0
mov dword ptr [ebp-3924], 0
mov dword ptr [ebp-3920], 0
lea eax, [ebp-3928]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3940]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3940]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3940]
push eax
call _fb_StrDelete@4
.Lt_14FE:
.Lt_14FD:
jmp .Lt_14B0
.Lt_14F1:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 0
jne .Lt_1504
cmp dword ptr [ebp-20], 15
jne .Lt_1506
mov eax, dword ptr [ebp-32]
fld qword ptr [eax+24]
fcomp qword ptr [_Lt_1AEC]
fnstsw ax
test ah, 0b01000000
jz .Lt_1508
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push 13
push offset _Lt_1509
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
jmp .Lt_1507
.Lt_1508:
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 10
push offset _Lt_0A9D
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3820]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3820]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3820]
push eax
call _fb_StrDelete@4
.Lt_1507:
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
push 11
push offset _Lt_14E5
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0787
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3796]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3796]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3796]
push eax
call _fb_StrDelete@4
jmp .Lt_1505
.Lt_1506:
cmp dword ptr [ebp-20], 16
jne .Lt_1510
mov eax, dword ptr [ebp-32]
fld qword ptr [eax+24]
fcomp qword ptr [_Lt_1AEC]
fnstsw ax
test ah, 0b01000000
jz .Lt_1512
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push 13
push offset _Lt_1513
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
jmp .Lt_1511
.Lt_1512:
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3820]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3820]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3820]
push eax
call _fb_StrDelete@4
.Lt_1511:
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
push 11
push offset _Lt_14EC
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3796]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3796]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3796]
push eax
call _fb_StrDelete@4
jmp .Lt_1505
.Lt_1510:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 4294967295
mov esi, -1
jl .Lt_1C54
jg .Lt_1C55
cmp dword ptr [eax+24], 2147483648
jb .Lt_1C54
.Lt_1C55:
xor esi, esi
.Lt_1C54:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 0
mov ebx, -1
jg .Lt_1C56
jl .Lt_1C57
cmp dword ptr [eax+24], 4294967295
ja .Lt_1C56
.Lt_1C57:
xor ebx, ebx
.Lt_1C56:
or esi, ebx
je .Lt_151B
push 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
push 0
push -1
push -1
lea ebx, [ebp-44]
push ebx
push 10
push offset _Lt_0407
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea ebx, [ebp-3772]
push ebx
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3784]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3784]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3784]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
push 11
push offset _Lt_14EC
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3820]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3820]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3820]
push eax
call _fb_StrDelete@4
jmp .Lt_151A
.Lt_151B:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 0
jl .Lt_1521
jg .Lt_1C58
cmp dword ptr [eax+24], 2147483648
jb .Lt_1521
.Lt_1C58:
push 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 10
push offset _Lt_0A9D
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3784]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3784]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3784]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
push 11
push offset _Lt_14EC
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3820]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3820]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3820]
push eax
call _fb_StrDelete@4
jmp .Lt_151A
.Lt_1521:
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
.Lt_151A:
.Lt_1505:
jmp .Lt_1503
.Lt_1504:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 4
jne .Lt_152C
cmp dword ptr [ebp-20], 20
jne .Lt_152E
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+8]
mov esi, dword ptr [_CTX+108]
mov eax, esi
sar eax, 31
add esi, dword ptr [ebx+40]
adc eax, dword ptr [ebx+44]
mov ebx, dword ptr [ebp-32]
mov ecx, dword ptr [ebx+8]
add esi, dword ptr [ecx+40]
adc eax, dword ptr [ecx+44]
add esi, 4294967295
adc eax, 4294967295
mov ecx, dword ptr [ebp-32]
mov ebx, dword ptr [ecx+8]
mov edi, dword ptr [ebx+40]
mov ecx, dword ptr [ebx+44]
add edi, 4294967295
adc ecx, 4294967295
not edi
not ecx
and esi, edi
and eax, ecx
mov edi, esi
mov dword ptr [_CTX+108], edi
mov edi, dword ptr [_CTX+108]
mov ecx, 8
mov eax, edi
cdq
idiv ecx
mov eax, edx
mov edi, eax
neg edi
add edi, dword ptr [_CTX+108]
add edi, 8
mov dword ptr [_CTX+108], edi
push 1
push 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov edi, dword ptr [_CTX+108]
neg edi
push edi
call _fb_IntToStr@4
push eax
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3784]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3784]
push eax
lea eax, [ebp-44]
push eax
mov eax, dword ptr [ebp-32]
mov edi, dword ptr [eax+8]
mov eax, dword ptr [edi+40]
push eax
call _MEMCOPY@20
lea eax, [ebp-3784]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push -1
mov eax, dword ptr [_CTX+108]
neg eax
push eax
call _fb_IntToStr@4
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3820]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3820]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3820]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
mov dword ptr [ebp-3848], 0
push 0
push -1
push 11
push offset _Lt_14EC
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
lea eax, [ebp-3832]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
mov dword ptr [ebp-3836], 0
lea eax, [ebp-3844]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3856]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3856]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3856]
push eax
call _fb_StrDelete@4
jmp .Lt_152D
.Lt_152E:
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
.Lt_152D:
jmp .Lt_152B
.Lt_152C:
mov eax, dword ptr [ebp-32]
mov edi, dword ptr [eax]
cmp edi, 5
sete dl
mov edi, edx
shr edi, 1
sbb edi, edi
mov eax, dword ptr [ebp-20]
cmp eax, 20
sete al
shr eax, 1
sbb eax, eax
or edi, eax
je .Lt_153C
mov eax, dword ptr [ebp-32]
mov edi, dword ptr [eax+4]
and edi, 31
cmp edi, 22
jne .Lt_153D
mov edi, dword ptr [_CTX+212]
cmp edi, 2
sete dl
mov edi, edx
shr edi, 1
sbb edi, edi
mov dword ptr [ebp-3764], edi
jmp .Lt_1C35
.Lt_153D:
mov dword ptr [ebp-3764], 0
.Lt_1C35:
cmp dword ptr [ebp-3764], 0
je .Lt_153F
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3768], eax
jmp .Lt_1C36
.Lt_153F:
mov dword ptr [ebp-3768], 0
.Lt_1C36:
cmp dword ptr [ebp-3768], 0
je .Lt_1542
push 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push -1
push 1
push offset _Lt_0119
call _fb_StrAllocTempDescZEx@8
push eax
lea eax, [ebp-44]
push eax
push 1
call _fb_StrInstr@12
dec eax
push eax
lea eax, [ebp-44]
push eax
call _fb_LEFT@8
push eax
push 20
push offset _Lt_0EE5
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3804]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3804]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3804]
push eax
call _fb_StrDelete@4
jmp .Lt_1541
.Lt_1542:
push 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 10
push offset _Lt_068F
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3792]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3792]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3792]
push eax
call _fb_StrDelete@4
.Lt_1541:
jmp .Lt_153B
.Lt_153C:
push 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3784]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3784]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3784]
push eax
call _fb_StrDelete@4
.Lt_153B:
cmp dword ptr [ebp-20], 20
jne .Lt_154B
mov eax, dword ptr [ebp-32]
mov edi, dword ptr [eax+8]
mov esi, dword ptr [_CTX+108]
mov eax, esi
sar eax, 31
add esi, dword ptr [edi+40]
adc eax, dword ptr [edi+44]
mov edi, dword ptr [ebp-32]
mov ecx, dword ptr [edi+8]
add esi, dword ptr [ecx+40]
adc eax, dword ptr [ecx+44]
add esi, 4294967295
adc eax, 4294967295
mov ecx, dword ptr [ebp-32]
mov edi, dword ptr [ecx+8]
mov ebx, dword ptr [edi+40]
mov ecx, dword ptr [edi+44]
add ebx, 4294967295
adc ecx, 4294967295
not ebx
not ecx
and esi, ebx
and eax, ecx
mov ebx, esi
mov dword ptr [_CTX+108], ebx
mov ebx, dword ptr [_CTX+108]
mov ecx, 8
mov eax, ebx
cdq
idiv ecx
mov eax, edx
mov ebx, eax
neg ebx
add ebx, dword ptr [_CTX+108]
add ebx, 8
mov dword ptr [_CTX+108], ebx
push 1
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov ebx, dword ptr [_CTX+108]
neg ebx
push ebx
call _fb_IntToStr@4
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3796]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3796]
push eax
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
push 0
push 4
push offset _Lt_00A0
push -1
lea eax, [ebp-3772]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3772]
push eax
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+8]
mov eax, dword ptr [ebx+40]
push eax
call _MEMCOPY@20
lea eax, [ebp-3796]
push eax
call _fb_StrDelete@4
lea eax, [ebp-3772]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push -1
mov eax, dword ptr [_CTX+108]
neg eax
push eax
call _fb_IntToStr@4
push eax
push 10
push offset _Lt_068F
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3832]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3832]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3832]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3868], 0
mov dword ptr [ebp-3864], 0
mov dword ptr [ebp-3860], 0
push 0
push -1
push 11
push offset _Lt_14EC
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
mov dword ptr [ebp-3836], 0
lea eax, [ebp-3844]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
mov dword ptr [ebp-3848], 0
lea eax, [ebp-3856]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3868]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3868]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3868]
push eax
call _fb_StrDelete@4
jmp .Lt_154A
.Lt_154B:
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
push 11
push offset _Lt_14EC
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3796]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3796]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3796]
push eax
call _fb_StrDelete@4
.Lt_154A:
.Lt_152B:
.Lt_1503:
.Lt_14B0:
.Lt_1487:
jmp .Lt_1485
.Lt_1486:
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-56]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_1559
lea eax, [ebp-56]
push eax
call _EMITOP3_OP4@4
.Lt_1559:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 0
jne .Lt_155B
cmp dword ptr [ebp-20], 15
jne .Lt_155D
mov eax, dword ptr [ebp-32]
fld qword ptr [eax+24]
fcomp qword ptr [_Lt_1AEC]
fnstsw ax
test ah, 0b01000000
jz .Lt_155F
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push 13
push offset _Lt_1509
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
jmp .Lt_155E
.Lt_155F:
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 10
push offset _Lt_0A9D
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3820]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3820]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3820]
push eax
call _fb_StrDelete@4
.Lt_155E:
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
push 6
push offset _Lt_0D78
push -1
push -1
mov eax, dword ptr [ebp-16]
dec eax
push eax
call _fb_IntToStr@4
push eax
push 9
push offset _Lt_0715
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3796]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3796]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3796]
push eax
call _fb_StrDelete@4
jmp .Lt_155C
.Lt_155D:
cmp dword ptr [ebp-20], 16
jne .Lt_1566
mov eax, dword ptr [ebp-32]
fld qword ptr [eax+24]
fcomp qword ptr [_Lt_1AEC]
fnstsw ax
test ah, 0b01000000
jz .Lt_1568
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push 13
push offset _Lt_1509
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
jmp .Lt_1567
.Lt_1568:
push 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3820]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3820]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3820]
push eax
call _fb_StrDelete@4
.Lt_1567:
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
mov eax, dword ptr [ebp-16]
dec eax
push eax
call _fb_IntToStr@4
push eax
push 9
push offset _Lt_071A
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3796]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3796]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3796]
push eax
call _fb_StrDelete@4
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [_CTX+212]
test ebx, ebx
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_1570
push 3
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
push 0
push -1
push 11
push offset _Lt_14EC
push -1
push -1
mov ebx, dword ptr [ebp-8]
sal ebx, 3
add ebx, -8
push ebx
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3832]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3832]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3832]
push eax
call _fb_StrDelete@4
.Lt_1570:
.Lt_156F:
jmp .Lt_155C
.Lt_1566:
push dword ptr [ebp-4]
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
push dword ptr [eax]
call _REG_TRANSFER@8
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 0
jne .Lt_1575
cmp dword ptr [eax+24], 0
jne .Lt_1575
.Lt_1C5F:
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [_LISTREG]
mov eax, dword ptr [ebx]
push dword ptr [_REGSTRD+eax*4]
push 5
push offset _Lt_092D
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
jmp .Lt_1574
.Lt_1575:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 0
mov ebx, -1
jg .Lt_1C60
jl .Lt_1C61
cmp dword ptr [eax+24], 0
ja .Lt_1C60
.Lt_1C61:
xor ebx, ebx
.Lt_1C60:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+28], 0
mov esi, -1
jl .Lt_1C62
jg .Lt_1C63
cmp dword ptr [eax+24], 2147483647
jbe .Lt_1C62
.Lt_1C63:
xor esi, esi
.Lt_1C62:
and ebx, esi
je .Lt_157A
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
push -1
lea esi, [ebp-44]
push esi
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov esi, dword ptr [ebp-12]
sal esi, 2
add esi, dword ptr [_LISTREG]
mov ebx, dword ptr [esi]
push dword ptr [_REGSTRD+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea ebx, [ebp-3772]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
jmp .Lt_1574
.Lt_157A:
cmp dword ptr [ebp-20], 8
je .Lt_1581
.Lt_1582:
cmp dword ptr [ebp-20], 9
je .Lt_1581
.Lt_1583:
cmp dword ptr [ebp-20], 13
je .Lt_1581
.Lt_1584:
cmp dword ptr [ebp-20], 14
je .Lt_1581
.Lt_1585:
cmp dword ptr [ebp-20], 10
jne .Lt_1580
.Lt_1581:
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea ebx, [ebp-3772]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
jmp .Lt_157F
.Lt_1580:
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea ebx, [ebp-3772]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
.Lt_158A:
.Lt_157F:
.Lt_1574:
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [_CTX+212]
test ebx, ebx
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_1590
push 3
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [_LISTREG]
mov eax, dword ptr [ebx]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
.Lt_1590:
.Lt_158F:
.Lt_155C:
jmp .Lt_155A
.Lt_155B:
cmp dword ptr [ebp-20], 20
jne .Lt_1595
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+8]
mov eax, dword ptr [ebx+40]
mov dword ptr [ebp-80], eax
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 4
jne .Lt_1597
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-44]
push eax
push 2
push offset _Lt_0119
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
.Lt_1597:
.Lt_1596:
cmp dword ptr [_CTX+212], 2
jne .Lt_159B
mov eax, dword ptr [ebp-76]
mov dword ptr [ebp-3764], eax
jmp .Lt_159D
.Lt_159F:
push dword ptr [ebp-4]
push offset _LISTREG
push dword ptr [ebp-12]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call _REG_FILLR@20
jmp .Lt_159C
.Lt_15A0:
push dword ptr [ebp-4]
push offset _LISTREG
mov eax, dword ptr [ebp-12]
dec eax
push eax
lea eax, [ebp-44]
push eax
push 8
call _REG_FILLR@20
push dword ptr [ebp-4]
push offset _LISTREG
push dword ptr [ebp-12]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call _REG_FILLR@20
jmp .Lt_159C
.Lt_15A1:
push dword ptr [ebp-4]
push offset _LISTREG
push dword ptr [ebp-12]
lea eax, [ebp-44]
push eax
push 8
call _REG_FILLR@20
push dword ptr [ebp-16]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call _REG_FILLX@12
jmp .Lt_159C
.Lt_15A2:
push dword ptr [ebp-16]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call _REG_FILLX@12
jmp .Lt_159C
.Lt_15A3:
push dword ptr [ebp-16]
lea eax, [ebp-44]
push eax
push 8
call _REG_FILLX@12
push dword ptr [ebp-4]
push offset _LISTREG
push dword ptr [ebp-12]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call _REG_FILLR@20
jmp .Lt_159C
.Lt_15A4:
mov eax, dword ptr [ebp-16]
dec eax
push eax
lea eax, [ebp-44]
push eax
push 8
call _REG_FILLX@12
push dword ptr [ebp-16]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call _REG_FILLX@12
jmp .Lt_159C
.Lt_159D:
cmp dword ptr [ebp-3764], 5
ja .Lt_159C
mov eax, dword ptr [ebp-3764]
jmp dword ptr [_.LT_15A5+eax*4]
_.LT_15A5:
.int .Lt_159F
.int .Lt_15A2
.int .Lt_15A0
.int .Lt_15A1
.int .Lt_15A3
.int .Lt_15A4
.Lt_159C:
jmp .Lt_159A
.Lt_159B:
cmp dword ptr [ebp-76], 0
jne .Lt_15A7
push dword ptr [ebp-4]
push offset _LISTREG
push dword ptr [ebp-12]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call _REG_FILLR@20
jmp .Lt_15A6
.Lt_15A7:
cmp dword ptr [ebp-76], 1
jne .Lt_15A8
push dword ptr [ebp-16]
lea eax, [ebp-44]
push eax
push dword ptr [ebp-80]
call _REG_FILLX@12
jmp .Lt_15A6
.Lt_15A8:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 4
jne .Lt_15AA
mov eax, dword ptr [ebp-80]
mov dword ptr [ebp-3764], eax
jmp .Lt_15AC
.Lt_15AE:
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 14
push offset _Lt_14BA
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
jmp .Lt_15AB
.Lt_15B3:
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 14
push offset _Lt_0781
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
jmp .Lt_15AB
.Lt_15B8:
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0787
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
jmp .Lt_15AB
.Lt_15BD:
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
jmp .Lt_15AB
.Lt_15AC:
mov eax, dword ptr [ebp-3764]
add eax, 4294967295
cmp eax, 7
ja .Lt_15AB
mov eax, dword ptr [ebp-3764]
jmp dword ptr [_.LT_15C2+eax*4-4]
_.LT_15C2:
.int .Lt_15AE
.int .Lt_15B3
.int .Lt_15AB
.int .Lt_15B8
.int .Lt_15AB
.int .Lt_15AB
.int .Lt_15AB
.int .Lt_15BD
.Lt_15AB:
jmp .Lt_15A9
.Lt_15AA:
mov eax, dword ptr [ebp-80]
mov dword ptr [ebp-3764], eax
jmp .Lt_15C4
.Lt_15C6:
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 9
push offset _Lt_11EB
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3788]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3788]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3788]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
push 10
push offset _Lt_14D6
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 14
push offset _Lt_14BA
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3824]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3824]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3824]
push eax
call _fb_StrDelete@4
jmp .Lt_15C3
.Lt_15CC:
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 9
push offset _Lt_14DB
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3788]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3788]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3788]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
push 10
push offset _Lt_14DE
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 14
push offset _Lt_0781
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3824]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3824]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3824]
push eax
call _fb_StrDelete@4
jmp .Lt_15C3
.Lt_15D2:
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 10
push offset _Lt_0A9D
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3788]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3788]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3788]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
push 11
push offset _Lt_14E5
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0787
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3824]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3824]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3824]
push eax
call _fb_StrDelete@4
jmp .Lt_15C3
.Lt_15D8:
push 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3788]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3788]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3788]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push -1
push 11
push offset _Lt_14EC
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
lea eax, [ebp-3812]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3824]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3824]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3824]
push eax
call _fb_StrDelete@4
jmp .Lt_15C3
.Lt_15C4:
mov eax, dword ptr [ebp-3764]
add eax, 4294967295
cmp eax, 7
ja .Lt_15C3
mov eax, dword ptr [ebp-3764]
jmp dword ptr [_.LT_15DE+eax*4-4]
_.LT_15DE:
.int .Lt_15C6
.int .Lt_15CC
.int .Lt_15C3
.int .Lt_15D2
.int .Lt_15C3
.int .Lt_15C3
.int .Lt_15C3
.int .Lt_15D8
.Lt_15C3:
.Lt_15A9:
.Lt_15A6:
.Lt_159A:
jmp .Lt_155A
.Lt_1595:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 5
jne .Lt_15E0
push dword ptr [ebp-4]
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
push dword ptr [eax]
call _REG_TRANSFER@8
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+4]
and ebx, 31
cmp ebx, 22
jne .Lt_15E1
mov ebx, dword ptr [_CTX+212]
cmp ebx, 2
sete bl
shr ebx, 1
sbb ebx, ebx
mov dword ptr [ebp-3764], ebx
jmp .Lt_1C37
.Lt_15E1:
mov dword ptr [ebp-3764], 0
.Lt_1C37:
cmp dword ptr [ebp-3764], 0
je .Lt_15E3
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3768], eax
jmp .Lt_1C38
.Lt_15E3:
mov dword ptr [ebp-3768], 0
.Lt_1C38:
cmp dword ptr [ebp-3768], 0
je .Lt_15E6
push 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push -1
push 1
push offset _Lt_0119
call _fb_StrAllocTempDescZEx@8
push eax
lea eax, [ebp-44]
push eax
push 1
call _fb_StrInstr@12
dec eax
push eax
lea eax, [ebp-44]
push eax
call _fb_LEFT@8
push eax
push -1
push 13
push offset _Lt_03BD
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea ebx, [ebp-3780]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
lea eax, [ebp-3816]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3828]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3828]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3828]
push eax
call _fb_StrDelete@4
jmp .Lt_15E5
.Lt_15E6:
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea ebx, [ebp-3780]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3816]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3816]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3816]
push eax
call _fb_StrDelete@4
.Lt_15E5:
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [_CTX+212]
test ebx, ebx
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_15F1
push 3
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [_LISTREG]
mov eax, dword ptr [ebx]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3816]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3816]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3816]
push eax
call _fb_StrDelete@4
.Lt_15F1:
.Lt_15F0:
jmp .Lt_15DF
.Lt_15E0:
mov eax, dword ptr [ebp-20]
and eax, 480
je .Lt_15F6
mov dword ptr [ebp-3764], 24
jmp .Lt_1C39
.Lt_15F6:
mov eax, dword ptr [ebp-20]
and eax, 31
mov dword ptr [ebp-3764], eax
.Lt_1C39:
mov eax, dword ptr [ebp-3764]
imul eax, 28
cmp dword ptr [_SYMB_DTYPETB+eax], 1
jne .Lt_15F9
cmp dword ptr [ebp-20], 16
jne .Lt_15FB
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 4
jne .Lt_15FD
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
mov eax, dword ptr [ebp-16]
dec eax
push eax
call _fb_IntToStr@4
push eax
push 9
push offset _Lt_071A
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
jmp .Lt_15FC
.Lt_15FD:
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
mov eax, dword ptr [ebp-16]
dec eax
push eax
call _fb_IntToStr@4
push eax
push 10
push offset _Lt_1602
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
.Lt_15FC:
jmp .Lt_15FA
.Lt_15FB:
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax], 4
jne .Lt_1608
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
mov eax, dword ptr [ebp-16]
dec eax
push eax
call _fb_IntToStr@4
push eax
push 9
push offset _Lt_0715
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
jmp .Lt_1607
.Lt_1608:
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
mov eax, dword ptr [ebp-16]
dec eax
push eax
call _fb_IntToStr@4
push eax
push 10
push offset _Lt_160D
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
.Lt_1607:
.Lt_15FA:
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [_CTX+212]
test ebx, ebx
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_1613
push 3
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push -1
push -1
mov ebx, dword ptr [ebp-16]
dec ebx
push ebx
call _fb_IntToStr@4
push eax
push -1
push 11
push offset _Lt_1615
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 17
push offset _Lt_1614
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3860], 0
mov dword ptr [ebp-3856], 0
mov dword ptr [ebp-3852], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp-16]
dec eax
push eax
call _fb_IntToStr@4
push eax
push -1
push 6
push offset _Lt_161A
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push 6
push offset _Lt_073A
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
lea ebx, [ebp-3824]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
lea eax, [ebp-3836]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3848], 0
mov dword ptr [ebp-3844], 0
mov dword ptr [ebp-3840], 0
lea eax, [ebp-3848]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3860]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3860]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3860]
push eax
call _fb_StrDelete@4
.Lt_1613:
.Lt_1612:
jmp .Lt_15F8
.Lt_15F9:
push dword ptr [ebp-4]
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
push dword ptr [eax]
call _REG_TRANSFER@8
cmp dword ptr [ebp-20], 19
jne .Lt_1620
cmp dword ptr [_CTX+212], 2
jne .Lt_1622
push 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3780]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3780]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3780]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
push 0
push 72
push offset _Lt_1625
push -1
lea eax, [ebp-3792]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3792]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3792]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3804]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3804]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3804]
push eax
call _fb_StrDelete@4
jmp .Lt_1621
.Lt_1622:
mov dword ptr [ebp-20], 8
.Lt_1621:
.Lt_1620:
.Lt_161F:
cmp dword ptr [_CTX+212], 2
jne .Lt_1628
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3768], eax
jmp .Lt_1C3A
.Lt_1628:
mov dword ptr [ebp-3768], 0
.Lt_1C3A:
cmp dword ptr [ebp-3768], 0
je .Lt_162B
mov eax, dword ptr [ebp-32]
cmp dword ptr [eax+32], 0
je .Lt_162C
mov eax, dword ptr [ebp-32]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 8
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3772], eax
jmp .Lt_1C3B
.Lt_162C:
mov dword ptr [ebp-3772], 0
.Lt_1C3B:
cmp dword ptr [ebp-3772], 0
je .Lt_162F
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
push 15
push offset _Lt_0BD0
push -1
push 0
mov eax, dword ptr [ebp-32]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
push 0
push 6
push offset _Lt_0694
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
.Lt_162F:
.Lt_162E:
.Lt_162B:
.Lt_162A:
cmp dword ptr [ebp-20], 8
je .Lt_1635
.Lt_1636:
cmp dword ptr [ebp-20], 9
je .Lt_1635
.Lt_1637:
cmp dword ptr [ebp-20], 13
je .Lt_1635
.Lt_1638:
cmp dword ptr [ebp-20], 14
je .Lt_1635
.Lt_1639:
cmp dword ptr [ebp-20], 10
jne .Lt_1634
.Lt_1635:
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRQ+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea ebx, [ebp-3780]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3816]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3816]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3816]
push eax
call _fb_StrDelete@4
jmp .Lt_1633
.Lt_1634:
cmp dword ptr [ebp-20], 11
je .Lt_163F
.Lt_1640:
cmp dword ptr [ebp-20], 12
jne .Lt_163E
.Lt_163F:
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRD+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea ebx, [ebp-3780]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3816]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3816]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3816]
push eax
call _fb_StrDelete@4
jmp .Lt_1633
.Lt_163E:
cmp dword ptr [ebp-20], 5
je .Lt_1646
.Lt_1647:
cmp dword ptr [ebp-20], 6
jne .Lt_1645
.Lt_1646:
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRW+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea ebx, [ebp-3780]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3816]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3816]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3816]
push eax
call _fb_StrDelete@4
jmp .Lt_1633
.Lt_1645:
cmp dword ptr [ebp-20], 2
je .Lt_164D
.Lt_164E:
cmp dword ptr [ebp-20], 3
je .Lt_164D
.Lt_164F:
cmp dword ptr [ebp-20], 1
je .Lt_164D
.Lt_1650:
cmp dword ptr [ebp-20], 4
jne .Lt_164C
.Lt_164D:
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-12]
sal eax, 2
add eax, dword ptr [_LISTREG]
mov ebx, dword ptr [eax]
push dword ptr [_REGSTRB+ebx*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea ebx, [ebp-3780]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3816]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3816]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3816]
push eax
call _fb_StrDelete@4
jmp .Lt_1633
.Lt_164C:
push 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3780]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3780]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3780]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
push 0
push -1
push -1
push dword ptr [ebp-20]
call _fb_IntToStr@4
push eax
push 55
push offset _Lt_1659
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3804]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3804]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3804]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3816]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3816]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3816]
push eax
call _fb_StrDelete@4
.Lt_1655:
.Lt_1633:
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
sete al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [_CTX+212]
test ebx, ebx
sete bl
shr ebx, 1
sbb ebx, ebx
and eax, ebx
je .Lt_165E
push 3
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
push 0
push -1
push 0
mov ebx, dword ptr [ebp-12]
sal ebx, 2
add ebx, dword ptr [_LISTREG]
mov eax, dword ptr [ebx]
push dword ptr [_REGSTRQ+eax*4]
push -1
push 8
push offset _Lt_14BB
push -1
push -1
mov eax, dword ptr [ebp-8]
sal eax, 3
add eax, -8
push eax
call _fb_IntToStr@4
push eax
push 15
push offset _Lt_0344
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
lea eax, [ebp-3792]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
lea eax, [ebp-3804]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3816]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3816]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3816]
push eax
call _fb_StrDelete@4
.Lt_165E:
.Lt_165D:
.Lt_15F8:
.Lt_15DF:
.Lt_155A:
.Lt_1485:
push dword ptr [ebp-24]
lea eax, [_IRHL+60]
push eax
call _LISTDELNODE@8
mov eax, dword ptr [ebp-28]
mov dword ptr [ebp-24], eax
jmp .Lt_13E2
.Lt_13E3:
mov eax, dword ptr [_CTX+80]
cmp dword ptr [ebp-8], eax
jle .Lt_1664
mov eax, dword ptr [ebp-8]
mov dword ptr [_CTX+80], eax
.Lt_1664:
push 1
push offset _Lt_0000
push -1
push dword ptr [ebp+16]
call _fb_StrCompare@16
test eax, eax
je .Lt_1666
push 0
push dword ptr [ebp+16]
call _HWRITEASM64@8
.Lt_1666:
cmp byte ptr [ebp+32], 0
je .Lt_1668
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push 6
push offset _Lt_13D2
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
mov dword ptr [ebp-3760], 0
lea eax, [ebp-3768]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3780]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3780]
push eax
call _REG_FREEABLE@4
lea eax, [ebp-3780]
push eax
call _fb_StrDelete@4
.Lt_1668:
cmp dword ptr [ebp-3740], 0
je .Lt_166C
mov eax, dword ptr [ebp-3740]
mov ecx, 16
cdq
idiv ecx
mov eax, edx
test eax, eax
je .Lt_166E
mov eax, dword ptr [ebp-3740]
sar eax, 31
and eax, 15
add eax, dword ptr [ebp-3740]
sar eax, 4
sal eax, 4
add eax, 16
mov dword ptr [ebp-3740], eax
push 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
mov dword ptr [ebp-3760], 0
push 0
push 11
push offset _Lt_166F
push -1
lea eax, [ebp-3768]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3768]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3768]
push eax
call _fb_StrDelete@4
.Lt_166E:
.Lt_166D:
mov eax, dword ptr [ebp-3736]
mov dword ptr [ebp-3760], eax
jmp .Lt_1671
.Lt_1674:
push 4
push offset _Lt_01DE
push -1
push 3
mov eax, dword ptr [ebp-3760]
imul eax, 12
lea ebx, [ebp+eax-3696]
push ebx
call _fb_RIGHT@8
push eax
call _fb_StrCompare@16
test eax, eax
jne .Lt_1676
push 3
mov eax, dword ptr [ebp-3760]
imul eax, 12
lea ebx, [ebp+eax-3696]
push ebx
call _HWRITEASM64@8
jmp .Lt_1675
.Lt_1676:
push 0
mov ebx, dword ptr [ebp-3760]
imul ebx, 12
lea eax, [ebp+ebx-3696]
push eax
call _HWRITEASM64@8
.Lt_1675:
.Lt_1672:
dec dword ptr [ebp-3760]
.Lt_1671:
cmp dword ptr [ebp-3760], 1
jge .Lt_1674
.Lt_1673:
.Lt_166C:
.Lt_166B:
cmp byte ptr [ebp+32], 0
je .Lt_1678
push 1
call _REG_ALLOWED@4
.Lt_1678:
call _REG_SAVE@0
movzx eax, byte ptr [ebp+28]
neg eax
cmp eax, -1
jne .Lt_167A
cmp dword ptr [_CTX+212], 2
jne .Lt_167C
push 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
push 0
push -1
push -1
cmp dword ptr [ebp-16], 8
jg .Lt_167D
mov eax, dword ptr [ebp-16]
mov dword ptr [ebp-3760], eax
jmp .Lt_1C3C
.Lt_167D:
mov dword ptr [ebp-3760], 8
.Lt_1C3C:
push dword ptr [ebp-3760]
call _fb_IntToStr@4
push eax
push 10
push offset _Lt_0A9D
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3784]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3784]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3784]
push eax
call _fb_StrDelete@4
.Lt_167C:
.Lt_167B:
.Lt_167A:
.Lt_1679:
cmp dword ptr [_CTX+212], 2
jne .Lt_1681
push 0
call _FBGETOPTION@4
cmp eax, 2
sete al
shr eax, 1
sbb eax, eax
mov dword ptr [ebp-3756], eax
jmp .Lt_1C3D
.Lt_1681:
mov dword ptr [ebp-3756], 0
.Lt_1C3D:
cmp dword ptr [ebp-3756], 0
je .Lt_1684
push 1
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
push 0
push -1
push 5
push offset _Lt_13D3
push -1
push -1
push dword ptr [ebp+12]
push 6
push offset _Lt_13D2
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
mov dword ptr [ebp-3760], 0
lea eax, [ebp-3768]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
lea eax, [ebp-3780]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3792]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3792]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3792]
push eax
call _fb_StrDelete@4
jmp .Lt_1683
.Lt_1684:
push 1
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push 6
push offset _Lt_13D2
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
mov dword ptr [ebp-3760], 0
lea eax, [ebp-3768]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3780]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3780]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3780]
push eax
call _fb_StrDelete@4
.Lt_1683:
cmp dword ptr [ebp-3740], 0
je .Lt_168B
push 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
push 0
push -1
push -1
push dword ptr [ebp-3740]
call _fb_IntToStr@4
push eax
push 10
push offset _Lt_168C
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
mov dword ptr [ebp-3760], 0
lea eax, [ebp-3768]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3780]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3780]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3780]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-3740], 0
mov dword ptr [ebp-3736], 0
.Lt_168B:
.Lt_168A:
mov eax, dword ptr [_CTX+100]
cmp dword ptr [_CTX+108], eax
jle .Lt_1690
mov eax, dword ptr [_CTX+108]
mov dword ptr [_CTX+100], eax
.Lt_1690:
mov dword ptr [_CTX+104], 0
mov byte ptr [_CTX+137], 0
cmp dword ptr [ebp+20], 0
je .Lt_1692
push dword ptr [ebp+20]
call _HISSTRUCTIN2REGS@4
test eax, eax
je .Lt_1694
mov eax, dword ptr [ebp+20]
mov dword ptr [eax], 1
mov eax, dword ptr [_SYMB_DTYPETB+368]
sal eax, 1
add dword ptr [_CTX+96], eax
mov eax, dword ptr [_CTX+96]
neg eax
mov esi, eax
mov ebx, esi
sar ebx, 31
mov eax, dword ptr [ebp+20]
mov dword ptr [eax+40], esi
mov dword ptr [eax+44], ebx
mov esi, dword ptr [ebp+20]
mov ebx, dword ptr [esi+8]
mov esi, dword ptr [ebx+132]
mov dword ptr [ebp-3760], esi
jmp .Lt_1696
.Lt_1698:
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
push 11
push offset _Lt_1699
push -1
push -1
mov esi, dword ptr [ebp+20]
push dword ptr [esi+44]
push dword ptr [esi+40]
call _fb_LongintToStr@8
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3796]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3796]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3796]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
push 0
push -1
push 11
push offset _Lt_169D
push -1
push -1
mov eax, dword ptr [ebp+20]
mov ebx, dword ptr [eax+40]
mov esi, dword ptr [eax+44]
add ebx, 8
adc esi, 0
push esi
push ebx
call _fb_LongintToStr@8
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3832]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3832]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3832]
push eax
call _fb_StrDelete@4
jmp .Lt_1695
.Lt_16A1:
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
push 11
push offset _Lt_1699
push -1
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3796]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3796]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3796]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
push 0
push -1
push 12
push offset _Lt_16A5
push -1
push -1
mov eax, dword ptr [ebp+20]
mov esi, dword ptr [eax+40]
mov ebx, dword ptr [eax+44]
add esi, 8
adc ebx, 0
push ebx
push esi
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3832]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3832]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3832]
push eax
call _fb_StrDelete@4
jmp .Lt_1695
.Lt_16A9:
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
push 12
push offset _Lt_16A5
push -1
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3796]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3796]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3796]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
push 0
push -1
push 11
push offset _Lt_1699
push -1
push -1
mov eax, dword ptr [ebp+20]
mov ebx, dword ptr [eax+40]
mov esi, dword ptr [eax+44]
add ebx, 8
adc esi, 0
push esi
push ebx
call _fb_LongintToStr@8
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3832]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3832]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3832]
push eax
call _fb_StrDelete@4
jmp .Lt_1695
.Lt_16B0:
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
push 12
push offset _Lt_16A5
push -1
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3796]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3796]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3796]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
mov dword ptr [ebp-3824], 0
push 0
push -1
push 12
push offset _Lt_16B4
push -1
push -1
mov eax, dword ptr [ebp+20]
mov esi, dword ptr [eax+40]
mov ebx, dword ptr [eax+44]
add esi, 8
adc ebx, 0
push ebx
push esi
call _fb_LongintToStr@8
push eax
push 6
push offset _Lt_073A
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
lea eax, [ebp-3808]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
mov dword ptr [ebp-3812], 0
lea eax, [ebp-3820]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3832]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3832]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3832]
push eax
call _fb_StrDelete@4
jmp .Lt_1695
.Lt_1696:
mov eax, dword ptr [ebp-3760]
add eax, 4294967294
cmp eax, 4
ja .Lt_1695
mov eax, dword ptr [ebp-3760]
jmp dword ptr [_.LT_16B8+eax*4-8]
_.LT_16B8:
.int .Lt_1698
.int .Lt_16A1
.int .Lt_1695
.int .Lt_16A9
.int .Lt_16B0
.Lt_1695:
jmp .Lt_1693
.Lt_1694:
mov eax, dword ptr [ebp+20]
mov esi, dword ptr [eax+4]
and esi, 511
mov dword ptr [ebp-20], esi
mov esi, dword ptr [ebp-20]
and esi, 480
je .Lt_16B9
mov dword ptr [ebp-3760], 24
jmp .Lt_1C3E
.Lt_16B9:
mov esi, dword ptr [ebp-20]
and esi, 31
mov dword ptr [ebp-3760], esi
.Lt_1C3E:
cmp dword ptr [ebp-3760], 24
jne .Lt_16BC
mov dword ptr [ebp-20], 8
.Lt_16BC:
cmp dword ptr [ebp-20], 16
jne .Lt_16BE
push 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
push 0
push 15
push offset _Lt_16BF
push -1
lea esi, [ebp-3772]
push esi
call _fb_StrAssign@20
lea esi, [ebp-3772]
push esi
call _HWRITEASM64@8
lea esi, [ebp-3772]
push esi
call _fb_StrDelete@4
jmp .Lt_16BD
.Lt_16BE:
cmp dword ptr [ebp-20], 15
jne .Lt_16C1
push 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
push 0
push 15
push offset _Lt_16C2
push -1
lea esi, [ebp-3772]
push esi
call _fb_StrAssign@20
lea esi, [ebp-3772]
push esi
call _HWRITEASM64@8
lea esi, [ebp-3772]
push esi
call _fb_StrDelete@4
.Lt_16C1:
.Lt_16BD:
push 0
push 1
push offset _Lt_0000
push -1
lea esi, [ebp-56]
push esi
call _fb_StrAssign@20
push -1
mov esi, dword ptr [ebp+20]
push dword ptr [esi+12]
call _REG_FINDFREE@8
mov esi, dword ptr [ebp+20]
mov eax, dword ptr [esi]
mov dword ptr [ebp-3764], eax
cmp dword ptr [ebp-3764], 2
jne .Lt_16C6
.Lt_16C7:
lea eax, [ebp-56]
push eax
lea eax, [ebp-44]
push eax
push dword ptr [ebp+20]
call _PREPARE_IDX@12
jmp .Lt_16C4
.Lt_16C6:
cmp dword ptr [ebp-3764], 4
jne .Lt_16C8
.Lt_16C9:
cmp dword ptr [ebp-20], 8
je .Lt_16CC
.Lt_16CD:
cmp dword ptr [ebp-20], 9
je .Lt_16CC
.Lt_16CE:
cmp dword ptr [ebp-20], 13
je .Lt_16CC
.Lt_16CF:
cmp dword ptr [ebp-20], 14
je .Lt_16CC
.Lt_16D0:
cmp dword ptr [ebp-20], 16
je .Lt_16CC
.Lt_16D1:
cmp dword ptr [ebp-20], 10
jne .Lt_16CB
.Lt_16CC:
push 0
push 0
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_16CA
.Lt_16CB:
cmp dword ptr [ebp-20], 11
je .Lt_16D3
.Lt_16D4:
cmp dword ptr [ebp-20], 12
je .Lt_16D3
.Lt_16D5:
cmp dword ptr [ebp-20], 15
jne .Lt_16D2
.Lt_16D3:
push 0
push 0
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRD+eax*4]
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_16CA
.Lt_16D2:
cmp dword ptr [ebp-20], 5
je .Lt_16D7
.Lt_16D8:
cmp dword ptr [ebp-20], 6
jne .Lt_16D6
.Lt_16D7:
push 0
push 0
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRW+eax*4]
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_16CA
.Lt_16D6:
cmp dword ptr [ebp-20], 2
je .Lt_16DA
.Lt_16DB:
cmp dword ptr [ebp-20], 3
je .Lt_16DA
.Lt_16DC:
cmp dword ptr [ebp-20], 1
je .Lt_16DA
.Lt_16DD:
cmp dword ptr [ebp-20], 4
jne .Lt_16D9
.Lt_16DA:
push 0
push 0
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRB+eax*4]
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_16CA
.Lt_16D9:
push 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3776]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3776]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3776]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
push 0
push -1
push -1
push dword ptr [ebp-20]
call _fb_IntToStr@4
push eax
push 55
push offset _Lt_16E2
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3800]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3800]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3800]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
push 0
push 0
push dword ptr [_REGSTRQ+68]
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
.Lt_16DE:
.Lt_16CA:
jmp .Lt_16C4
.Lt_16C8:
cmp dword ptr [ebp-3764], 1
jne .Lt_16E6
.Lt_16E7:
mov eax, dword ptr [ebp+20]
mov esi, dword ptr [eax+32]
mov eax, dword ptr [esi+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov esi, dword ptr [ebp+20]
mov ebx, dword ptr [esi+32]
mov esi, dword ptr [ebx+4]
and esi, 1
test esi, esi
setne dl
mov esi, edx
shr esi, 1
sbb esi, esi
or eax, esi
je .Lt_16E9
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov esi, dword ptr [ebp+20]
push dword ptr [esi+44]
push dword ptr [esi+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+20]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_16E8
.Lt_16E9:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
.Lt_16E8:
jmp .Lt_16C4
.Lt_16E6:
cmp dword ptr [ebp-3764], 3
jne .Lt_16EE
.Lt_16EF:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+20]
mov esi, dword ptr [eax+52]
push dword ptr [esi+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
jmp .Lt_16C4
.Lt_16EE:
cmp dword ptr [ebp-3764], 5
jne .Lt_16F3
.Lt_16F4:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+20]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
lea eax, [ebp-3776]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
lea eax, [ebp-3800]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3824], 0
mov dword ptr [ebp-3820], 0
mov dword ptr [ebp-3816], 0
push 0
push 44
push offset _Lt_16FA
push -1
lea eax, [ebp-3824]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3824]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3824]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3836], 0
mov dword ptr [ebp-3832], 0
mov dword ptr [ebp-3828], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3836]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3836]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3836]
push eax
call _fb_StrDelete@4
jmp .Lt_16C4
.Lt_16F3:
push 0
mov dword ptr [ebp-3776], 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3776]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3776]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3776]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3800], 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax]
call _fb_IntToStr@4
push eax
push 46
push offset _Lt_1700
mov dword ptr [ebp-3788], 0
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
lea eax, [ebp-3788]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3800]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3800]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3800]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3812], 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3812]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3812]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3812]
push eax
call _fb_StrDelete@4
.Lt_16FD:
.Lt_16C4:
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-56]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_1705
lea eax, [ebp-56]
push eax
call _EMITOP3_OP4@4
.Lt_1705:
cmp dword ptr [ebp-20], 8
je .Lt_1708
.Lt_1709:
cmp dword ptr [ebp-20], 9
je .Lt_1708
.Lt_170A:
cmp dword ptr [ebp-20], 13
je .Lt_1708
.Lt_170B:
cmp dword ptr [ebp-20], 14
je .Lt_1708
.Lt_170C:
cmp dword ptr [ebp-20], 16
je .Lt_1708
.Lt_170D:
cmp dword ptr [ebp-20], 10
jne .Lt_1707
.Lt_1708:
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
push 0
push dword ptr [_REGSTRQ]
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-44]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
jmp .Lt_1706
.Lt_1707:
cmp dword ptr [ebp-20], 11
je .Lt_1713
.Lt_1714:
cmp dword ptr [ebp-20], 12
je .Lt_1713
.Lt_1715:
cmp dword ptr [ebp-20], 15
jne .Lt_1712
.Lt_1713:
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
push 0
push dword ptr [_REGSTRD]
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-44]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
jmp .Lt_1706
.Lt_1712:
cmp dword ptr [ebp-20], 5
je .Lt_171B
.Lt_171C:
cmp dword ptr [ebp-20], 6
jne .Lt_171A
.Lt_171B:
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
push 0
push dword ptr [_REGSTRW]
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-44]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
jmp .Lt_1706
.Lt_171A:
cmp dword ptr [ebp-20], 2
je .Lt_1722
.Lt_1723:
cmp dword ptr [ebp-20], 3
je .Lt_1722
.Lt_1724:
cmp dword ptr [ebp-20], 1
je .Lt_1722
.Lt_1725:
cmp dword ptr [ebp-20], 4
jne .Lt_1721
.Lt_1722:
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push -1
push 0
push dword ptr [_REGSTRB]
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-44]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
lea eax, [ebp-3772]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
lea eax, [ebp-3796]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
jmp .Lt_1706
.Lt_1721:
push 0
mov dword ptr [ebp-3772], 0
mov dword ptr [ebp-3768], 0
mov dword ptr [ebp-3764], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3772]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3772]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3772]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3796], 0
mov dword ptr [ebp-3792], 0
mov dword ptr [ebp-3788], 0
push 0
push -1
push -1
push dword ptr [ebp-20]
call _fb_IntToStr@4
push eax
push 55
push offset _Lt_172E
mov dword ptr [ebp-3784], 0
mov dword ptr [ebp-3780], 0
mov dword ptr [ebp-3776], 0
lea eax, [ebp-3784]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-3796]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3796]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3796]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-3808], 0
mov dword ptr [ebp-3804], 0
mov dword ptr [ebp-3800], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-3808]
push eax
call _fb_StrAssign@20
lea eax, [ebp-3808]
push eax
call _HWRITEASM64@8
lea eax, [ebp-3808]
push eax
call _fb_StrDelete@4
.Lt_172A:
.Lt_1706:
.Lt_1693:
.Lt_1692:
.Lt_1691:
lea eax, [ebp-3732]
push eax
call _fb_ArrayDestructStr@4
lea eax, [ebp-68]
push eax
call _fb_StrDelete@4
lea eax, [ebp-56]
push eax
call _fb_StrDelete@4
lea eax, [ebp-44]
push eax
call _fb_StrDelete@4
.Lt_13DE:
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 28
.balign 16
__EMITCALL@16:
push ebp
mov ebp, esp
sub esp, 32
push ebx
.Lt_1732:
mov byte ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+80]
mov dword ptr [ebp-8], ebx
cmp dword ptr [ebp-8], 0
je .Lt_1735
mov ebx, dword ptr [ebp-8]
cmp dword ptr [ebx+56], 4
jne .Lt_1737
mov byte ptr [ebp-4], 1
.Lt_1737:
.Lt_1736:
.Lt_1735:
.Lt_1734:
push 0
movzx eax, byte ptr [ebp-4]
push eax
push dword ptr [ebp+20]
push dword ptr [ebp+16]
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
push 0
push 1
push offset _Lt_0000
push -1
lea ebx, [ebp-32]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-32]
push ebx
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
push 0
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
lea eax, [ebp-20]
push eax
call _fb_StrAssign@20
lea eax, [ebp-20]
push eax
push dword ptr [ebp+8]
call _HDOCALL@28
lea eax, [ebp-32]
push eax
call _fb_StrDelete@4
lea eax, [ebp-20]
push eax
call _fb_StrDelete@4
.Lt_1733:
pop ebx
mov esp, ebp
pop ebp
ret 16
.balign 16
__EMITCALLPTR@20:
push ebp
mov ebp, esp
sub esp, 72
push ebx
.Lt_173A:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov byte ptr [ebp-28], 0
mov dword ptr [ebp-32], 0
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-36], ebx
cmp dword ptr [ebp-36], 4
jne .Lt_173E
.Lt_173F:
push 0
push 0
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_173C
.Lt_173E:
cmp dword ptr [ebp-36], 2
jne .Lt_1740
.Lt_1741:
lea eax, [ebp-24]
push eax
lea eax, [ebp-12]
push eax
push dword ptr [ebp+12]
call _PREPARE_IDX@12
jmp .Lt_173C
.Lt_1740:
cmp dword ptr [ebp-36], 3
jne .Lt_1742
.Lt_1743:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_173C
.Lt_1742:
cmp dword ptr [ebp-36], 5
jne .Lt_1747
.Lt_1748:
push 0
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_173C
.Lt_1747:
cmp dword ptr [ebp-36], 0
jne .Lt_1749
.Lt_174A:
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
lea eax, [ebp-48]
push eax
call _HWRITEASM64@8
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 44
push offset _Lt_174D
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
lea eax, [ebp-60]
push eax
call _HWRITEASM64@8
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
jmp .Lt_173C
.Lt_1749:
cmp dword ptr [ebp-36], 1
jne .Lt_1750
.Lt_1751:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1753
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
lea eax, [ebp-60]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
lea eax, [ebp-72]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_1752
.Lt_1753:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
lea eax, [ebp-48]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_1752:
jmp .Lt_173C
.Lt_1750:
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
lea eax, [ebp-48]
push eax
call _HWRITEASM64@8
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 51
push offset _Lt_09C8
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
lea eax, [ebp-60]
push eax
call _HWRITEASM64@8
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
lea eax, [ebp-72]
push eax
call _HWRITEASM64@8
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
.Lt_1758:
.Lt_173C:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+80]
mov dword ptr [ebp-32], ebx
cmp dword ptr [ebp-32], 0
je .Lt_175D
mov ebx, dword ptr [ebp-32]
cmp dword ptr [ebx+56], 4
jne .Lt_175F
mov byte ptr [ebp-28], 1
.Lt_175F:
.Lt_175E:
.Lt_175D:
.Lt_175C:
push 1
movzx eax, byte ptr [ebp-28]
push eax
push dword ptr [ebp+24]
push dword ptr [ebp+16]
lea ebx, [ebp-24]
push ebx
lea ebx, [ebp-12]
push ebx
push dword ptr [ebp+8]
call _HDOCALL@28
lea ebx, [ebp-24]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-12]
push ebx
call _fb_StrDelete@4
.Lt_173B:
pop ebx
mov esp, ebp
pop ebp
ret 20
.balign 16
__EMITJUMPPTR@4:
push ebp
mov ebp, esp
sub esp, 40
push ebx
.Lt_1760:
mov dword ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [_CTX+120]
cmp dword ptr [eax+12], ebx
jne .Lt_1763
mov ebx, dword ptr [_CTX+116]
mov dword ptr [ebp-4], ebx
mov dword ptr [_CTX+124], 0
mov dword ptr [_CTX+120], -2
jmp .Lt_1762
.Lt_1763:
mov ebx, dword ptr [ebp+8]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-4], eax
.Lt_1762:
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [_REGSTRQ+eax*4]
push 6
push offset _Lt_1764
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-40]
push eax
call _fb_StrAssign@20
lea eax, [ebp-40]
push eax
call _HWRITEASM64@8
lea eax, [ebp-40]
push eax
call _fb_StrDelete@4
.Lt_1761:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITBRANCH@8:
push ebp
mov ebp, esp
sub esp, 36
.Lt_1768:
push 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
push 0
push -1
push 0
push dword ptr [ebp+12]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 2
push offset _Lt_0102
push 0
push dword ptr [ebp+8]
call _HGETBOPCODE@4
push eax
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-36]
push eax
call _fb_StrAssign@20
lea eax, [ebp-36]
push eax
call _HWRITEASM64@8
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
cmp dword ptr [_CTX+216], 0
je .Lt_176E
mov eax, dword ptr [_CTX+216]
mov dword ptr [_REGHANDLE+eax*4], -2
mov dword ptr [_CTX+216], 0
.Lt_176E:
.Lt_176D:
cmp dword ptr [_CTX+200], 0
je .Lt_1770
mov eax, dword ptr [ebp+12]
mov dword ptr [_CTX+204], eax
.Lt_1770:
.Lt_176F:
cmp dword ptr [ebp+8], 98
je .Lt_1772
push dword ptr [ebp+12]
call _REG_MARK@4
.Lt_1772:
.Lt_1771:
.Lt_1769:
mov esp, ebp
pop ebp
ret 8
.balign 16
__EMITRETURN@4:
push ebp
mov ebp, esp
sub esp, 24
.Lt_1773:
push 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 30
push offset _Lt_1775
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _HWRITEASM64@8
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push 4
push offset _Lt_05D2
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
lea eax, [ebp-24]
push eax
call _HWRITEASM64@8
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
.Lt_1774:
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITJMPTB@40:
push ebp
mov ebp, esp
sub esp, 292
push ebx
push esi
push edi
.Lt_1778:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+8]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrInit@20
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-52], 0
cmp dword ptr [ebp+24], 0
jne .Lt_177C
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
push 0
push dword ptr [ebp+28]
call _SYMBGETMANGLEDNAME@4
push eax
push 5
push offset _Lt_0E30
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
jmp .Lt_177B
.Lt_177C:
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
cmp dword ptr [ebp+36], 0
mov eax, -1
ja .Lt_1C75
jb .Lt_1C76
cmp dword ptr [ebp+32], 2147483647
ja .Lt_1C75
.Lt_1C76:
xor eax, eax
.Lt_1C75:
cmp dword ptr [ebp+36], 4294967295
mov ebx, -1
jb .Lt_1C77
ja .Lt_1C78
cmp dword ptr [ebp+32], 2147483648
jb .Lt_1C77
.Lt_1C78:
xor ebx, ebx
.Lt_1C77:
and eax, ebx
je .Lt_1782
push 0
push 0
push -1
push 999998
call _REG_FINDFREE@8
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
push 0
push -1
push -1
push dword ptr [ebp+36]
push dword ptr [ebp+32]
call _fb_ULongintToStr@8
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-48]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-268]
push eax
call _fb_StrAssign@20
lea eax, [ebp-268]
push eax
call _HWRITEASM64@8
lea eax, [ebp-268]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
push 0
push -1
push -1
lea eax, [ebp-48]
push eax
push 10
push offset _Lt_1787
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
lea eax, [ebp-280]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-292]
push eax
call _fb_StrAssign@20
lea eax, [ebp-292]
push eax
call _HWRITEASM64@8
lea eax, [ebp-292]
push eax
call _fb_StrDelete@4
jmp .Lt_1781
.Lt_1782:
push 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
push 0
push -1
push -1
push dword ptr [ebp+36]
push dword ptr [ebp+32]
call _fb_ULongintToStr@8
push eax
push 10
push offset _Lt_1787
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
lea eax, [ebp-232]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-244]
push eax
call _fb_StrAssign@20
lea eax, [ebp-244]
push eax
call _HWRITEASM64@8
lea eax, [ebp-244]
push eax
call _fb_StrDelete@4
.Lt_1781:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push -1
push dword ptr [ebp+44]
push dword ptr [ebp+40]
call _fb_ULongintToStr@8
push eax
push 10
push offset _Lt_178C
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
push 0
push dword ptr [ebp+28]
call _SYMBGETMANGLEDNAME@4
push eax
push 4
push offset _Lt_091D
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-124]
push eax
call _fb_StrAssign@20
lea eax, [ebp-124]
push eax
call _HWRITEASM64@8
lea eax, [ebp-124]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
push 8
push offset _Lt_1792
push -1
push -1
lea eax, [ebp-12]
push eax
push 16
push offset _Lt_1791
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
push 0
push 6
push offset _Lt_04F8
push -1
lea eax, [ebp-172]
push eax
call _fb_StrAssign@20
lea eax, [ebp-172]
push eax
call _ASM_SECTION@4
lea eax, [ebp-172]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push 9
push offset _Lt_04FA
push -1
lea eax, [ebp-184]
push eax
call _fb_StrAssign@20
lea eax, [ebp-184]
push eax
call _HWRITEASM64@8
lea eax, [ebp-184]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-208]
push eax
call _fb_StrAssign@20
lea eax, [ebp-208]
push eax
call _HWRITEASM64@8
lea eax, [ebp-208]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-224], 0
mov eax, dword ptr [ebp+40]
mov dword ptr [ebp-228], eax
jmp .Lt_179B
.Lt_179E:
mov ebx, dword ptr [ebp-224]
mov eax, ebx
sar eax, 31
mov ecx, dword ptr [ebp-52]
sal ecx, 3
mov esi, dword ptr [ebp+16]
add esi, ecx
mov edi, dword ptr [esi]
mov ecx, dword ptr [esi+4]
cmp eax, ecx
jne .Lt_17A0
cmp ebx, edi
jne .Lt_17A0
.Lt_1C79:
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
push 0
mov edi, dword ptr [ebp-52]
sal edi, 2
mov ecx, dword ptr [ebp+20]
add ecx, edi
push dword ptr [ecx]
call _SYMBGETMANGLEDNAME@4
push eax
push 7
push offset _Lt_0215
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-252]
push eax
call _fb_StrAssign@20
lea eax, [ebp-252]
push eax
call _HWRITEASM64@8
lea eax, [ebp-252]
push eax
call _fb_StrDelete@4
inc dword ptr [ebp-52]
jmp .Lt_179F
.Lt_17A0:
push 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
push 0
push -1
push 0
push dword ptr [ebp+28]
call _SYMBGETMANGLEDNAME@4
push eax
push 7
push offset _Lt_0215
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
lea eax, [ebp-240]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-252]
push eax
call _fb_StrAssign@20
lea eax, [ebp-252]
push eax
call _HWRITEASM64@8
lea eax, [ebp-252]
push eax
call _fb_StrDelete@4
.Lt_179F:
.Lt_179C:
inc dword ptr [ebp-224]
.Lt_179B:
mov eax, dword ptr [ebp-228]
cmp dword ptr [ebp-224], eax
jle .Lt_179E
.Lt_179D:
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push 6
push offset _Lt_057C
push -1
lea eax, [ebp-220]
push eax
call _fb_StrAssign@20
lea eax, [ebp-220]
push eax
call _ASM_SECTION@4
lea eax, [ebp-220]
push eax
call _fb_StrDelete@4
.Lt_177B:
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_1779:
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 40
.balign 16
__EMITMEM@20:
push ebp
mov ebp, esp
sub esp, 304
push ebx
.Lt_17A6:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
push 0
push 5
push offset _Lt_038A
push -1
lea eax, [ebp-72]
push eax
call _fb_StrInit@20
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-88], 0
cmp dword ptr [ebp+8], 107
jne .Lt_17A9
.Lt_17AA:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_17AC
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-88], eax
push 0
push 0
mov eax, dword ptr [ebp-88]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
mov dword ptr [ebp-84], 1
jmp .Lt_17AB
.Lt_17AC:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 1
jne .Lt_17AD
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_17AF
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_17AE
.Lt_17AF:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_17AE:
mov dword ptr [ebp-84], 0
jmp .Lt_17AB
.Lt_17AD:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 5
jne .Lt_17B4
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
mov dword ptr [ebp-84], 1
push 0
push 5
push offset _Lt_012F
push -1
lea eax, [ebp-72]
push eax
call _fb_StrAssign@20
jmp .Lt_17AB
.Lt_17B4:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 49
push offset _Lt_17BA
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-124]
push eax
call _fb_StrAssign@20
lea eax, [ebp-124]
push eax
call _HWRITEASM64@8
lea eax, [ebp-124]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_17A7
.Lt_17AB:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 4
jne .Lt_17BE
push 0
push 0
mov eax, dword ptr [ebp+16]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push -1
lea eax, [ebp-24]
push eax
push 6
push offset _Lt_0D15
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-136]
push eax
call _fb_StrAssign@20
lea eax, [ebp-136]
push eax
call _HWRITEASM64@8
lea eax, [ebp-136]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-60]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
push -1
lea eax, [ebp-60]
push eax
push 4
push offset _Lt_17C3
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-184]
push eax
call _fb_StrAssign@20
lea eax, [ebp-184]
push eax
call _HWRITEASM64@8
lea eax, [ebp-184]
push eax
call _fb_StrDelete@4
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-48]
push eax
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
lea eax, [ebp-196]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-208]
push eax
call _fb_StrAssign@20
lea eax, [ebp-208]
push eax
call _HWRITEASM64@8
lea eax, [ebp-208]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
push 0
push 22
push offset _Lt_17CA
push -1
lea eax, [ebp-220]
push eax
call _fb_StrAssign@20
lea eax, [ebp-220]
push eax
call _HWRITEASM64@8
lea eax, [ebp-220]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push 8
push offset _Lt_17CC
push -1
lea eax, [ebp-232]
push eax
call _fb_StrAssign@20
lea eax, [ebp-232]
push eax
call _HWRITEASM64@8
lea eax, [ebp-232]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 5
push offset _Lt_0485
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
lea eax, [ebp-244]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-256]
push eax
call _fb_StrAssign@20
lea eax, [ebp-256]
push eax
call _HWRITEASM64@8
lea eax, [ebp-256]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
push 0
push -1
push -1
lea eax, [ebp-48]
push eax
push 5
push offset _Lt_0418
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
lea eax, [ebp-268]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-280]
push eax
call _fb_StrAssign@20
lea eax, [ebp-280]
push eax
call _HWRITEASM64@8
lea eax, [ebp-280]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
mov dword ptr [ebp-296], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-60]
push eax
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
mov dword ptr [ebp-284], 0
lea eax, [ebp-292]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-304]
push eax
call _fb_StrAssign@20
lea eax, [ebp-304]
push eax
call _HWRITEASM64@8
lea eax, [ebp-304]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_17A7
.Lt_17BE:
.Lt_17BD:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 0
je .Lt_17D5
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 54
push offset _Lt_17D8
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-124]
push eax
call _fb_StrAssign@20
lea eax, [ebp-124]
push eax
call _HWRITEASM64@8
lea eax, [ebp-124]
push eax
call _fb_StrDelete@4
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_17A7
.Lt_17D5:
.Lt_17D4:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax+28], 0
jne .Lt_17DC
cmp dword ptr [eax+24], 0
jne .Lt_17DC
.Lt_1C7C:
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_17A7
.Lt_17DC:
mov eax, dword ptr [ebp+16]
mov ecx, dword ptr [eax+24]
mov ebx, dword ptr [eax+28]
mov dword ptr [ebp-96], ecx
mov dword ptr [ebp-92], ebx
cmp dword ptr [ebp-92], 0
jg .Lt_17E0
jl .Lt_1C7D
cmp dword ptr [ebp-96], 8
ja .Lt_17E0
.Lt_1C7D:
.Lt_17E1:
cmp dword ptr [ebp-92], 0
jne .Lt_1C7E
cmp dword ptr [ebp-96], 3
je .Lt_17E0
.Lt_1C7E:
.Lt_17E2:
cmp dword ptr [ebp-92], 0
jne .Lt_1C7F
cmp dword ptr [ebp-96], 5
je .Lt_17E0
.Lt_1C7F:
.Lt_17E3:
cmp dword ptr [ebp-92], 0
jne .Lt_1C80
cmp dword ptr [ebp-96], 6
je .Lt_17E0
.Lt_1C80:
.Lt_17E4:
cmp dword ptr [ebp-92], 0
jne .Lt_17DF
cmp dword ptr [ebp-96], 7
jne .Lt_17DF
.Lt_1C81:
.Lt_17E0:
push dword ptr [ebp-84]
lea ecx, [ebp-12]
push ecx
mov ecx, dword ptr [ebp+16]
mov ebx, dword ptr [ecx+24]
push ebx
call _MEMCLEAR@12
jmp .Lt_17DD
.Lt_17DF:
cmp dword ptr [ebp-92], 0
jne .Lt_17E5
cmp dword ptr [ebp-96], 1
jne .Lt_17E5
.Lt_1C82:
.Lt_17E6:
mov ebx, dword ptr [ebp+12]
cmp dword ptr [ebx], 4
jne .Lt_17E8
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
push 5
push offset _Lt_040D
push -1
push -1
lea ebx, [ebp-12]
push ebx
push 15
push offset _Lt_17E9
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea ebx, [ebp-108]
push ebx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-132]
push eax
call _fb_StrAssign@20
lea eax, [ebp-132]
push eax
call _HWRITEASM64@8
lea eax, [ebp-132]
push eax
call _fb_StrDelete@4
jmp .Lt_17E7
.Lt_17E8:
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 6
push offset _Lt_17ED
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-132]
push eax
call _fb_StrAssign@20
lea eax, [ebp-132]
push eax
call _HWRITEASM64@8
lea eax, [ebp-132]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 22
push offset _Lt_17CA
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
.Lt_17E7:
jmp .Lt_17DD
.Lt_17E5:
cmp dword ptr [ebp-92], 0
jne .Lt_17F2
cmp dword ptr [ebp-96], 2
jne .Lt_17F2
.Lt_1C83:
.Lt_17F3:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_17F5
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
push 5
push offset _Lt_040D
push -1
push -1
lea eax, [ebp-12]
push eax
push 15
push offset _Lt_17F6
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-132]
push eax
call _fb_StrAssign@20
lea eax, [ebp-132]
push eax
call _HWRITEASM64@8
lea eax, [ebp-132]
push eax
call _fb_StrDelete@4
jmp .Lt_17F4
.Lt_17F5:
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 6
push offset _Lt_17ED
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-132]
push eax
call _fb_StrAssign@20
lea eax, [ebp-132]
push eax
call _HWRITEASM64@8
lea eax, [ebp-132]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 22
push offset _Lt_17FD
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
.Lt_17F4:
jmp .Lt_17DD
.Lt_17F2:
cmp dword ptr [ebp-92], 0
jne .Lt_17FF
cmp dword ptr [ebp-96], 4
jne .Lt_17FF
.Lt_1C84:
.Lt_1800:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_1802
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
push 5
push offset _Lt_040D
push -1
push -1
lea eax, [ebp-12]
push eax
push 16
push offset _Lt_1803
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-132]
push eax
call _fb_StrAssign@20
lea eax, [ebp-132]
push eax
call _HWRITEASM64@8
lea eax, [ebp-132]
push eax
call _fb_StrDelete@4
jmp .Lt_1801
.Lt_1802:
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 6
push offset _Lt_17ED
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-132]
push eax
call _fb_StrAssign@20
lea eax, [ebp-132]
push eax
call _HWRITEASM64@8
lea eax, [ebp-132]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 23
push offset _Lt_180A
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
.Lt_1801:
jmp .Lt_17DD
.Lt_17FF:
cmp dword ptr [ebp-92], 0
jne .Lt_180C
cmp dword ptr [ebp-96], 8
jne .Lt_180C
.Lt_1C85:
.Lt_180D:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_180F
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
push 5
push offset _Lt_040D
push -1
push -1
lea eax, [ebp-12]
push eax
push 16
push offset _Lt_040C
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-132]
push eax
call _fb_StrAssign@20
lea eax, [ebp-132]
push eax
call _HWRITEASM64@8
lea eax, [ebp-132]
push eax
call _fb_StrDelete@4
jmp .Lt_180E
.Lt_180F:
push 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 6
push offset _Lt_17ED
push -1
lea eax, [ebp-72]
push eax
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
lea eax, [ebp-108]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
lea eax, [ebp-120]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-132]
push eax
call _fb_StrAssign@20
lea eax, [ebp-132]
push eax
call _HWRITEASM64@8
lea eax, [ebp-132]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
push 0
push 23
push offset _Lt_1816
push -1
lea eax, [ebp-144]
push eax
call _fb_StrAssign@20
lea eax, [ebp-144]
push eax
call _HWRITEASM64@8
lea eax, [ebp-144]
push eax
call _fb_StrDelete@4
.Lt_180E:
.Lt_180C:
.Lt_17DD:
jmp .Lt_17A8
.Lt_17A9:
cmp dword ptr [ebp+8], 105
jne .Lt_1818
.Lt_1819:
cmp dword ptr [ebp+24], 0
jne .Lt_181B
cmp dword ptr [ebp+20], 0
jne .Lt_181B
.Lt_1C86:
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
jmp .Lt_17A7
.Lt_181B:
.Lt_181A:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-92], ebx
cmp dword ptr [ebp-92], 2
jne .Lt_181E
.Lt_181F:
lea ebx, [ebp-36]
push ebx
lea ebx, [ebp-12]
push ebx
push dword ptr [ebp+12]
call _PREPARE_IDX@12
jmp .Lt_181C
.Lt_181E:
cmp dword ptr [ebp-92], 4
jne .Lt_1820
.Lt_1821:
push 0
push 0
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_181C
.Lt_1820:
cmp dword ptr [ebp-92], 1
jne .Lt_1822
.Lt_1823:
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1825
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ebx, dword ptr [ebp+12]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_1824
.Lt_1825:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_1824:
jmp .Lt_181C
.Lt_1822:
cmp dword ptr [ebp-92], 3
jne .Lt_182A
.Lt_182B:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_181C
.Lt_182A:
cmp dword ptr [ebp-92], 5
jne .Lt_182F
.Lt_1830:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+12]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
mov dword ptr [ebp-80], 1
jmp .Lt_181C
.Lt_182F:
cmp dword ptr [ebp-92], 0
jne .Lt_1834
.Lt_1835:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+12]
push dword ptr [eax+28]
push dword ptr [eax+24]
call _fb_LongintToStr@8
push eax
push 2
push offset _Lt_0119
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_181C
.Lt_1834:
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-104]
push eax
call _fb_StrAssign@20
lea eax, [ebp-104]
push eax
call _HWRITEASM64@8
lea eax, [ebp-104]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push 45
push offset _Lt_183B
push -1
lea eax, [ebp-116]
push eax
call _fb_StrAssign@20
lea eax, [ebp-116]
push eax
call _HWRITEASM64@8
lea eax, [ebp-116]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-128]
push eax
call _fb_StrAssign@20
lea eax, [ebp-128]
push eax
call _HWRITEASM64@8
lea eax, [ebp-128]
push eax
call _fb_StrDelete@4
.Lt_1838:
.Lt_181C:
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-92], ebx
cmp dword ptr [ebp-92], 4
jne .Lt_1840
.Lt_1841:
mov ebx, dword ptr [ebp+16]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-88], eax
push 0
push 0
mov eax, dword ptr [ebp-88]
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_183E
.Lt_1840:
cmp dword ptr [ebp-92], 1
jne .Lt_1842
.Lt_1843:
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+32]
mov eax, dword ptr [ebx+4]
and eax, 2
test eax, eax
setne al
shr eax, 1
sbb eax, eax
mov ebx, dword ptr [ebp+16]
mov ecx, dword ptr [ebx+32]
mov ebx, dword ptr [ecx+4]
and ebx, 1
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
or eax, ebx
je .Lt_1845
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov ebx, dword ptr [ebp+16]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+16]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_1844
.Lt_1845:
push 0
push -1
push 6
push offset _Lt_03BE
push -1
mov eax, dword ptr [ebp+16]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
.Lt_1844:
jmp .Lt_183E
.Lt_1842:
cmp dword ptr [ebp-92], 5
jne .Lt_184A
.Lt_184B:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
mov eax, dword ptr [ebp+16]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
push -1
push 6
push offset _Lt_0834
push 0
mov eax, dword ptr [ebp+16]
push dword ptr [eax+32]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
mov dword ptr [ebp-84], 1
jmp .Lt_183E
.Lt_184A:
cmp dword ptr [ebp-92], 3
jne .Lt_184F
.Lt_1850:
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+52]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 2
push offset _Lt_0119
push -1
mov eax, dword ptr [ebp+16]
push dword ptr [eax+44]
push dword ptr [eax+40]
call _fb_LongintToStr@8
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_183E
.Lt_184F:
push 0
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-104]
push eax
call _fb_StrAssign@20
lea eax, [ebp-104]
push eax
call _HWRITEASM64@8
lea eax, [ebp-104]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push 64
push offset _Lt_1857
push -1
lea eax, [ebp-116]
push eax
call _fb_StrAssign@20
lea eax, [ebp-116]
push eax
call _HWRITEASM64@8
lea eax, [ebp-116]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-128]
push eax
call _fb_StrAssign@20
lea eax, [ebp-128]
push eax
call _HWRITEASM64@8
lea eax, [ebp-128]
push eax
call _fb_StrDelete@4
.Lt_1854:
.Lt_183E:
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-36]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_185B
lea eax, [ebp-36]
push eax
call _EMITOP3_OP4@4
.Lt_185B:
cmp dword ptr [ebp+24], 0
jg .Lt_185E
jl .Lt_1C8B
cmp dword ptr [ebp+20], 8
ja .Lt_185E
.Lt_1C8B:
.Lt_185F:
cmp dword ptr [ebp+24], 0
jne .Lt_1C8C
cmp dword ptr [ebp+20], 3
je .Lt_185E
.Lt_1C8C:
.Lt_1860:
cmp dword ptr [ebp+24], 0
jne .Lt_1C8D
cmp dword ptr [ebp+20], 5
je .Lt_185E
.Lt_1C8D:
.Lt_1861:
cmp dword ptr [ebp+24], 0
jne .Lt_1C8E
cmp dword ptr [ebp+20], 6
je .Lt_185E
.Lt_1C8E:
.Lt_1862:
cmp dword ptr [ebp+24], 0
jne .Lt_185D
cmp dword ptr [ebp+20], 7
jne .Lt_185D
.Lt_1C8F:
.Lt_185E:
push dword ptr [ebp-80]
push dword ptr [ebp-84]
lea eax, [ebp-12]
push eax
lea eax, [ebp-24]
push eax
mov eax, dword ptr [ebp+20]
push eax
call _MEMCOPY@20
jmp .Lt_185C
.Lt_185D:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 1
jne .Lt_1865
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 10
push offset _Lt_0407
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
push dword ptr [ebp-76]
push 2
push offset _Lt_0119
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
jmp .Lt_1864
.Lt_1865:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 4
je .Lt_186A
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
push -1
lea eax, [ebp-24]
push eax
push 10
push offset _Lt_068F
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-88], 0
.Lt_186A:
.Lt_1864:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 1
jne .Lt_186E
call _REG_TEMPO@0
mov dword ptr [ebp-76], eax
push 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
push dword ptr [ebp-76]
push 5
push offset _Lt_038A
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
lea eax, [ebp-124]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-136]
push eax
call _fb_StrAssign@20
lea eax, [ebp-136]
push eax
call _HWRITEASM64@8
lea eax, [ebp-136]
push eax
call _fb_StrDelete@4
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
push dword ptr [ebp-76]
push 2
push offset _Lt_0119
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
lea eax, [ebp-160]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_186E:
.Lt_186D:
cmp dword ptr [ebp+24], 0
jne .Lt_1876
cmp dword ptr [ebp+20], 1
jne .Lt_1876
.Lt_1C90:
.Lt_1877:
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp-88]
push dword ptr [_REGSTRQ+eax*4]
push 10
push offset _Lt_1878
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-124]
push eax
call _fb_StrAssign@20
lea eax, [ebp-124]
push eax
call _HWRITEASM64@8
lea eax, [ebp-124]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_187D
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
push 6
push offset _Lt_04BE
push -1
push -1
lea eax, [ebp-12]
push eax
push 15
push offset _Lt_17E9
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
jmp .Lt_187C
.Lt_187D:
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
push 5
push offset _Lt_0BF2
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
.Lt_187C:
jmp .Lt_1875
.Lt_1876:
cmp dword ptr [ebp+24], 0
jne .Lt_1884
cmp dword ptr [ebp+20], 2
jne .Lt_1884
.Lt_1C91:
.Lt_1885:
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp-88]
push dword ptr [_REGSTRQ+eax*4]
push 10
push offset _Lt_1886
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-124]
push eax
call _fb_StrAssign@20
lea eax, [ebp-124]
push eax
call _HWRITEASM64@8
lea eax, [ebp-124]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_188B
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
push 6
push offset _Lt_04B4
push -1
push -1
lea eax, [ebp-12]
push eax
push 15
push offset _Lt_17F6
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
jmp .Lt_188A
.Lt_188B:
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
push 5
push offset _Lt_0FF5
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
.Lt_188A:
jmp .Lt_1875
.Lt_1884:
cmp dword ptr [ebp+24], 0
jne .Lt_1892
cmp dword ptr [ebp+20], 4
jne .Lt_1892
.Lt_1C92:
.Lt_1893:
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp-88]
push dword ptr [_REGSTRQ+eax*4]
push 11
push offset _Lt_1894
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-124]
push eax
call _fb_StrAssign@20
lea eax, [ebp-124]
push eax
call _HWRITEASM64@8
lea eax, [ebp-124]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_1899
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
push 7
push offset _Lt_04AA
push -1
push -1
lea eax, [ebp-12]
push eax
push 16
push offset _Lt_1803
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
jmp .Lt_1898
.Lt_1899:
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
push 6
push offset _Lt_0D78
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
.Lt_1898:
jmp .Lt_1875
.Lt_1892:
cmp dword ptr [ebp+24], 0
jne .Lt_18A0
cmp dword ptr [ebp+20], 8
jne .Lt_18A0
.Lt_1C93:
.Lt_18A1:
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov eax, dword ptr [ebp-88]
push dword ptr [_REGSTRQ+eax*4]
push 11
push offset _Lt_0476
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-124]
push eax
call _fb_StrAssign@20
lea eax, [ebp-124]
push eax
call _HWRITEASM64@8
lea eax, [ebp-124]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_18A6
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
push 7
push offset _Lt_047B
push -1
push -1
lea eax, [ebp-12]
push eax
push 16
push offset _Lt_040C
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
jmp .Lt_18A5
.Lt_18A6:
push 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
mov dword ptr [ebp-152], 0
push 0
push -1
push 6
push offset _Lt_06B9
push -1
push -1
lea eax, [ebp-12]
push eax
push 5
push offset _Lt_038A
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
mov dword ptr [ebp-128], 0
lea eax, [ebp-136]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
mov dword ptr [ebp-140], 0
lea eax, [ebp-148]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-160]
push eax
call _fb_StrAssign@20
lea eax, [ebp-160]
push eax
call _HWRITEASM64@8
lea eax, [ebp-160]
push eax
call _fb_StrDelete@4
.Lt_18A5:
.Lt_18A0:
.Lt_1875:
.Lt_1863:
.Lt_185C:
.Lt_1818:
.Lt_17A8:
lea eax, [ebp-72]
push eax
call _fb_StrDelete@4
lea eax, [ebp-60]
push eax
call _fb_StrDelete@4
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
lea eax, [ebp-36]
push eax
call _fb_StrDelete@4
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_17A7:
pop ebx
mov esp, ebp
pop ebp
ret 20
.balign 16
__EMITCOMMENT@4:
push ebp
mov ebp, esp
.Lt_18AD:
.Lt_18AE:
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITASMLINE@4:
push ebp
mov ebp, esp
sub esp, 56
push ebx
.Lt_18AF:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
mov dword ptr [ebp-16], eax
.Lt_18B1:
cmp dword ptr [ebp-16], 0
je .Lt_18B2
mov eax, dword ptr [ebp-16]
mov ebx, dword ptr [eax]
mov dword ptr [ebp-20], ebx
cmp dword ptr [ebp-20], 0
jne .Lt_18B5
.Lt_18B6:
push 0
push -1
push 0
mov ebx, dword ptr [ebp-16]
push dword ptr [ebx+4]
push -1
lea ebx, [ebp-12]
push ebx
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea ebx, [ebp-32]
push ebx
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
jmp .Lt_18B3
.Lt_18B5:
cmp dword ptr [ebp-20], 1
jne .Lt_18B8
.Lt_18B9:
mov eax, dword ptr [ebp-16]
mov ebx, dword ptr [eax+4]
mov ecx, dword ptr [ebx+48]
mov eax, dword ptr [ebx+52]
mov dword ptr [ebp-28], ecx
mov dword ptr [ebp-24], eax
cmp dword ptr [ebp-24], 0
jne .Lt_1C94
cmp dword ptr [ebp-28], 0
je .Lt_18BB
.Lt_1C94:
push 0
push -1
push -1
lea ecx, [ebp-12]
push ecx
call _fb_StrLen@8
dec eax
push eax
lea eax, [ebp-12]
push eax
call _fb_LEFT@8
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
push 0
push -1
push dword ptr [ebp-24]
push dword ptr [ebp-28]
call _fb_LongintToStr@8
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrConcatAssign@20
push 0
push 5
push offset _Lt_18BC
push -1
lea eax, [ebp-12]
push eax
call _fb_StrConcatAssign@20
jmp .Lt_18BA
.Lt_18BB:
push 0
push -1
push 0
mov eax, dword ptr [ebp-16]
push dword ptr [eax+4]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
lea eax, [ebp-40]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
.Lt_18BA:
jmp .Lt_18B3
.Lt_18B8:
push 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-32]
push eax
call _fb_StrAssign@20
lea eax, [ebp-32]
push eax
call _HWRITEASM64@8
lea eax, [ebp-32]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
push 0
push 42
push offset _Lt_18C1
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
lea eax, [ebp-44]
push eax
call _HWRITEASM64@8
lea eax, [ebp-44]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-56]
push eax
call _fb_StrAssign@20
lea eax, [ebp-56]
push eax
call _HWRITEASM64@8
lea eax, [ebp-56]
push eax
call _fb_StrDelete@4
.Lt_18BE:
.Lt_18B3:
mov eax, dword ptr [ebp-16]
mov ecx, dword ptr [eax+8]
mov dword ptr [ebp-16], ecx
jmp .Lt_18B1
.Lt_18B2:
push 0
lea ecx, [ebp-12]
push ecx
call _HWRITEASM64@8
lea ecx, [ebp-12]
push ecx
call _fb_StrDelete@4
.Lt_18B0:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITVARINIBEGIN@4:
push ebp
mov ebp, esp
sub esp, 88
push ebx
.Lt_18C4:
mov dword ptr [ebp-4], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
cmp ebx, 20
jne .Lt_18C7
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+32]
mov ebx, dword ptr [eax+104]
mov dword ptr [ebp-4], ebx
jmp .Lt_18C6
.Lt_18C7:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+4]
and eax, 262144
test eax, eax
je .Lt_18C9
mov eax, dword ptr [_SYMB_DTYPETB+368]
mov dword ptr [ebp-4], eax
jmp .Lt_18C8
.Lt_18C9:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
and ebx, 480
je .Lt_18CA
mov dword ptr [ebp-68], 24
jmp .Lt_1C95
.Lt_18CA:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+28]
and eax, 511
and eax, 31
mov dword ptr [ebp-68], eax
.Lt_1C95:
mov eax, dword ptr [ebp-68]
imul eax, 28
mov ebx, dword ptr [_SYMB_DTYPETB+eax+4]
mov dword ptr [ebp-4], ebx
.Lt_18C8:
.Lt_18C6:
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
push 0
push 6
push offset _Lt_04F8
push -1
lea ebx, [ebp-16]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-16]
push ebx
call _ASM_SECTION@4
lea ebx, [ebp-16]
push ebx
call _fb_StrDelete@4
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+4]
and eax, 32
test eax, eax
je .Lt_18CE
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push 8
push offset _Lt_04FE
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
.Lt_18CE:
.Lt_18CD:
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
push -1
push dword ptr [ebp-4]
call _fb_IntToStr@4
push eax
push 8
push offset _Lt_18D1
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-40]
push eax
call _fb_StrAssign@20
lea eax, [ebp-40]
push eax
call _HWRITEASM64@8
lea eax, [ebp-40]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push -1
push 2
push offset _Lt_00EF
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _HWRITEASM64@8
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 16
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+8]
mov ecx, dword ptr [eax+4]
and ecx, 4
test ecx, ecx
setne cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_18D7
jmp .Lt_18D6
.Lt_18D7:
cmp dword ptr [_ENV+148], -1
jne .Lt_18D9
push 1
push dword ptr [ebp+8]
call _EDBGEMITGLOBALVAR_ASM64@8
.Lt_18D9:
.Lt_18D6:
.Lt_18C5:
pop ebx
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITVARINII@12:
push ebp
mov ebp, esp
sub esp, 88
push ebx
.Lt_18DA:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-16], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
mov dword ptr [ebp-20], ebx
mov ebx, dword ptr [ebp-20]
and ebx, 480
test ebx, ebx
je .Lt_18DD
mov dword ptr [ebp-20], 8
.Lt_18DD:
mov ebx, dword ptr [ebp-20]
cmp ebx, 1
sete bl
shr ebx, 1
sbb ebx, ebx
cmp dword ptr [ebp+16], 0
mov eax, -1
jne .Lt_1C9A
cmp dword ptr [ebp+12], 0
jne .Lt_1C9A
.Lt_1C9B:
xor eax, eax
.Lt_1C9A:
and ebx, eax
je .Lt_18DF
mov dword ptr [ebp+12], 1
mov dword ptr [ebp+16], 0
.Lt_18DF:
.Lt_18DE:
mov eax, dword ptr [ebp-20]
and eax, 480
je .Lt_18E0
mov dword ptr [ebp-84], 24
jmp .Lt_1C98
.Lt_18E0:
mov eax, dword ptr [ebp-20]
and eax, 31
mov dword ptr [ebp-84], eax
.Lt_1C98:
mov eax, dword ptr [ebp-84]
imul eax, 28
mov ebx, dword ptr [_SYMB_DTYPETB+eax+4]
mov dword ptr [ebp-88], ebx
jmp .Lt_18E3
.Lt_18E5:
push 0
push 6
push offset _Lt_18E6
push -1
lea ebx, [ebp-12]
push ebx
call _fb_StrAssign@20
mov dword ptr [ebp-16], 2
jmp .Lt_18E2
.Lt_18E7:
push 0
push 6
push offset _Lt_18E8
push -1
lea ebx, [ebp-12]
push ebx
call _fb_StrAssign@20
mov dword ptr [ebp-16], 4
jmp .Lt_18E2
.Lt_18E9:
push 0
push 6
push offset _Lt_18EA
push -1
lea ebx, [ebp-12]
push ebx
call _fb_StrAssign@20
mov dword ptr [ebp-16], 8
jmp .Lt_18E2
.Lt_18EB:
push 0
push 6
push offset _Lt_18EC
push -1
lea ebx, [ebp-12]
push ebx
call _fb_StrAssign@20
mov dword ptr [ebp-16], 16
jmp .Lt_18E2
.Lt_18ED:
push 0
push 6
push offset _Lt_18EC
push -1
lea ebx, [ebp-12]
push ebx
call _fb_StrAssign@20
mov dword ptr [ebp-16], 8
jmp .Lt_18E2
.Lt_18E3:
mov ebx, dword ptr [ebp-88]
add ebx, 4294967295
cmp ebx, 7
ja .Lt_18ED
mov ebx, dword ptr [ebp-88]
jmp dword ptr [_.LT_18EE+ebx*4-4]
_.LT_18EE:
.int .Lt_18E5
.int .Lt_18E7
.int .Lt_18ED
.int .Lt_18E9
.int .Lt_18ED
.int .Lt_18ED
.int .Lt_18ED
.int .Lt_18EB
.Lt_18E2:
push 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
push 0
push -1
push -1
push dword ptr [ebp+16]
push dword ptr [ebp+12]
call _fb_LongintToStr@8
push eax
push -1
push 4
push offset _Lt_025A
push -1
push -1
push dword ptr [ebp-16]
push dword ptr [ebp+16]
push dword ptr [ebp+12]
call _fb_HEX_l@8
push eax
call _fb_RIGHT@8
push eax
push -1
push 4
push offset _Lt_18EF
push -1
lea eax, [ebp-12]
push eax
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-80]
push eax
call _fb_StrAssign@20
lea eax, [ebp-80]
push eax
call _HWRITEASM64@8
lea eax, [ebp-80]
push eax
call _fb_StrDelete@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_18DB:
pop ebx
mov esp, ebp
pop ebp
ret 12
.balign 16
__EMITVARINIF@12:
push ebp
mov ebp, esp
sub esp, 12
push ebx
.Lt_18F5:
push 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push -1
push 1
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
push ebx
push dword ptr [ebp+16]
push dword ptr [ebp+12]
call _HFLOATTOHEX_ASM64@16
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _HWRITEASM64@8
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_18F6:
pop ebx
mov esp, ebp
pop ebp
ret 12
.balign 16
__EMITPROCBEGIN@8:
push ebp
mov ebp, esp
sub esp, 100
push ebx
.Lt_18F8:
call _IRHLEMITPROCBEGIN@0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [_CTX+44]
push eax
call _fb_StrAssign@20
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [_CTX+68]
push eax
call _fb_StrAssign@20
mov dword ptr [_CTX+200], 0
mov dword ptr [_CTX+204], 0
mov dword ptr [_CTX+120], -2
mov dword ptr [_CTX+124], 0
mov dword ptr [_CTX+220], 0
mov byte ptr [_CTX+208], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [_CTX+56]
push eax
call _fb_StrAssign@20
mov dword ptr [_CTX+4], 3
mov byte ptr [_CTX+137], 0
mov dword ptr [_CTXDBG+4], -1
inc dword ptr [_CTX]
mov dword ptr [_CTX+84], 0
mov dword ptr [_CTX+88], 0
cmp dword ptr [_CTX+212], 2
jne .Lt_18FB
mov dword ptr [_CTX+92], 16
mov dword ptr [_CTX+96], 40
jmp .Lt_18FA
.Lt_18FB:
mov dword ptr [_CTX+92], 8
mov dword ptr [_CTX+96], 56
.Lt_18FA:
mov dword ptr [_CTX+80], 0
mov dword ptr [_CTX+112], 0
mov dword ptr [_CTX+100], 0
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+4]
and ebx, 256
test ebx, ebx
je .Lt_18FD
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 9
push offset _Lt_18FE
push -1
lea ebx, [ebp-52]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-52]
push ebx
call _ASM_SECTION@4
lea ebx, [ebp-52]
push ebx
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push 2
push offset _Lt_0506
push -1
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push 18
push offset _Lt_1900
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 6
push offset _Lt_057C
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _ASM_SECTION@4
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
.Lt_18FD:
.Lt_18FC:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+80]
mov dword ptr [ebp-4], ebx
cmp dword ptr [ebp-4], 0
je .Lt_1906
mov ebx, dword ptr [ebp-4]
cmp dword ptr [ebx+56], 4
jne .Lt_1908
mov byte ptr [_CTX+208], 1
cmp dword ptr [_CTX+212], 2
jne .Lt_190A
add dword ptr [_CTX+96], 112
.Lt_190A:
.Lt_1909:
.Lt_1908:
.Lt_1907:
.Lt_1906:
.Lt_1905:
push 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
push 0
push 6
push offset _Lt_057C
push -1
lea ebx, [ebp-16]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-16]
push ebx
call _HWRITEASM64@8
lea ebx, [ebp-16]
push ebx
call _fb_StrDelete@4
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebx+4]
and eax, 64
test eax, eax
jne .Lt_190D
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push -1
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
push 8
push offset _Lt_04FE
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _HWRITEASM64@8
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
.Lt_190D:
.Lt_190C:
dec dword ptr [_CTX]
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
push 2
push offset _Lt_00EF
push 0
push dword ptr [ebp+8]
call _SYMBGETMANGLEDNAME@4
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-40]
push eax
call _fb_StrAssign@20
lea eax, [ebp-40]
push eax
call _HWRITEASM64@8
lea eax, [ebp-40]
push eax
call _fb_StrDelete@4
inc dword ptr [_CTX]
cmp dword ptr [_ENV+148], -1
jne .Lt_1913
push dword ptr [ebp+8]
call _EDBGEMITPROCHEADER_ASM64@4
.Lt_1913:
mov dword ptr [_CTX+4], 4
.Lt_18F9:
pop ebx
mov esp, ebp
pop ebp
ret 8
.balign 16
__EMITPROCEND@12:
push ebp
mov ebp, esp
sub esp, 124
push ebx
.Lt_1914:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov eax, dword ptr [_CTX+96]
cmp dword ptr [_CTX+100], eax
jle .Lt_1917
mov eax, dword ptr [_CTX+100]
mov dword ptr [_CTX+96], eax
.Lt_1917:
cmp dword ptr [_CTX+212], 0
jne .Lt_1919
cmp dword ptr [_CTX+80], 0
je .Lt_191B
cmp dword ptr [_CTX+80], 4
jle .Lt_191C
mov eax, dword ptr [_CTX+80]
sal eax, 3
mov dword ptr [ebp-44], eax
jmp .Lt_1C9C
.Lt_191C:
mov dword ptr [ebp-44], 32
.Lt_1C9C:
mov eax, dword ptr [ebp-44]
add dword ptr [_CTX+96], eax
.Lt_191B:
jmp .Lt_1918
.Lt_1919:
mov eax, dword ptr [_CTX+80]
sal eax, 3
add dword ptr [_CTX+96], eax
.Lt_1918:
mov eax, dword ptr [_CTX+96]
add eax, 15
and eax, -16
mov dword ptr [_CTX+96], eax
mov dword ptr [_CTX+4], 3
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+8]
and ebx, 128
test ebx, ebx
jne .Lt_191F
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 9
push offset _Lt_1920
push -1
lea ebx, [ebp-52]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-52]
push ebx
call _HWRITEASM64@8
lea ebx, [ebp-52]
push ebx
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 13
push offset _Lt_1922
push -1
lea ebx, [ebp-64]
push ebx
call _fb_StrAssign@20
lea ebx, [ebp-64]
push ebx
call _HWRITEASM64@8
lea ebx, [ebp-64]
push ebx
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push -1
push dword ptr [_CTX+96]
call _fb_IntToStr@4
push eax
push 10
push offset _Lt_1924
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
call _HWRITEASM64@8
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
mov eax, dword ptr [_CTX+112]
and eax, 2
je .Lt_1928
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 27
push offset _Lt_1929
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
push 30
push offset _Lt_192C
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
.Lt_1928:
cmp dword ptr [_CTX+212], 0
jne .Lt_192E
mov eax, dword ptr [_CTX+112]
and eax, 32
je .Lt_1930
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset _Lt_1931
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
push 31
push offset _Lt_1934
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
.Lt_1930:
mov eax, dword ptr [_CTX+112]
and eax, 16
je .Lt_1936
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset _Lt_1937
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
push 31
push offset _Lt_193A
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
.Lt_1936:
mov eax, dword ptr [_CTX+112]
and eax, 4096
je .Lt_193C
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset _Lt_193D
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
push 31
push offset _Lt_1940
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
.Lt_193C:
mov eax, dword ptr [_CTX+112]
and eax, 8192
je .Lt_1942
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset _Lt_1943
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
push 31
push offset _Lt_1946
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
.Lt_1942:
mov eax, dword ptr [_CTX+112]
and eax, 16384
je .Lt_1948
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset _Lt_1949
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
push 31
push offset _Lt_194C
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
.Lt_1948:
mov eax, dword ptr [_CTX+112]
and eax, 32768
je .Lt_194E
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset _Lt_194F
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
push 31
push offset _Lt_1952
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
.Lt_194E:
jmp .Lt_192D
.Lt_192E:
mov eax, dword ptr [_CTX+112]
and eax, 4096
je .Lt_1954
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset _Lt_1955
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
push 31
push offset _Lt_1958
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
.Lt_1954:
mov eax, dword ptr [_CTX+112]
and eax, 8192
je .Lt_195A
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset _Lt_195B
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
push 31
push offset _Lt_195E
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
.Lt_195A:
mov eax, dword ptr [_CTX+112]
and eax, 16384
je .Lt_1960
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset _Lt_1961
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
push 31
push offset _Lt_1964
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
.Lt_1960:
mov eax, dword ptr [_CTX+112]
and eax, 32768
je .Lt_1966
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push 28
push offset _Lt_1967
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
push 0
push 31
push offset _Lt_196A
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
push 32
mov eax, dword ptr [_CTX]
imul eax, 3
push eax
call _fb_StrFill1@8
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrConcatAssign@20
.Lt_1966:
.Lt_192D:
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-16]
push eax
call _fb_StrCompare@16
test eax, eax
je .Lt_196C
push 0
push -1
lea eax, [ebp-16]
push eax
call _fb_RTRIM@4
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
.Lt_196C:
.Lt_191F:
.Lt_191E:
cmp dword ptr [_CTX+212], 2
jne .Lt_196E
cmp byte ptr [_CTX+208], 0
je .Lt_1970
cmp dword ptr [_CTX+84], 1
jge .Lt_1972
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 29
push offset _Lt_1973
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_1972:
cmp dword ptr [_CTX+84], 2
jge .Lt_1976
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 29
push offset _Lt_1977
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_1976:
cmp dword ptr [_CTX+84], 3
jge .Lt_197A
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 29
push offset _Lt_197B
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_197A:
cmp dword ptr [_CTX+84], 4
jge .Lt_197E
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 29
push offset _Lt_197F
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_197E:
cmp dword ptr [_CTX+84], 5
jge .Lt_1982
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 28
push offset _Lt_1983
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_1982:
cmp dword ptr [_CTX+84], 6
jge .Lt_1986
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 28
push offset _Lt_1987
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_1986:
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-28]
push eax
call _fb_StrAssign@20
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 14
push offset _Lt_1989
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
push 0
push -1
push -1
lea eax, [ebp-28]
push eax
push 4
push offset _Lt_17C3
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-76]
push eax
call _fb_StrAssign@20
lea eax, [ebp-76]
push eax
call _HWRITEASM64@8
lea eax, [ebp-76]
push eax
call _fb_StrDelete@4
cmp dword ptr [_CTX+88], 1
jge .Lt_198E
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 31
push offset _Lt_198F
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_198E:
cmp dword ptr [_CTX+88], 2
jge .Lt_1992
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset _Lt_1993
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_1992:
cmp dword ptr [_CTX+88], 3
jge .Lt_1996
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset _Lt_1997
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_1996:
cmp dword ptr [_CTX+88], 4
jge .Lt_199A
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset _Lt_199B
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_199A:
cmp dword ptr [_CTX+88], 5
jge .Lt_199E
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset _Lt_199F
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_199E:
cmp dword ptr [_CTX+88], 6
jge .Lt_19A2
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset _Lt_19A3
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_19A2:
cmp dword ptr [_CTX+88], 7
jge .Lt_19A6
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset _Lt_19A7
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_19A6:
cmp dword ptr [_CTX+88], 8
jge .Lt_19AA
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push 30
push offset _Lt_19AB
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_19AA:
push 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-28]
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
call _HWRITEASM64@8
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
.Lt_1970:
.Lt_196F:
.Lt_196E:
.Lt_196D:
mov dword ptr [_CTX+4], 5
cmp dword ptr [_ENV+148], -1
jne .Lt_19B0
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-28]
push eax
call _fb_StrAssign@20
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
push 0
push -1
push 0
push dword ptr [_CTXDBG+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 2
push offset _Lt_01F5
push -1
lea eax, [ebp-28]
push eax
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
lea eax, [ebp-64]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-88]
push eax
call _fb_StrAssign@20
lea eax, [ebp-88]
push eax
push 0
push 224
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-88]
push eax
call _fb_StrDelete@4
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-28]
push eax
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
lea eax, [ebp-100]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-112]
push eax
call _fb_StrAssign@20
lea eax, [ebp-112]
push eax
call _HWRITEASM64@8
lea eax, [ebp-112]
push eax
call _fb_StrDelete@4
.Lt_19B0:
.Lt_19AF:
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+8]
and ebx, 128
test ebx, ebx
jne .Lt_19B8
push 1
push offset _Lt_0000
push -1
lea ebx, [ebp-16]
push ebx
call _fb_StrCompare@16
test eax, eax
je .Lt_19BA
push 0
lea eax, [ebp-16]
push eax
call _HWRITEASM64@8
.Lt_19BA:
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 12
push offset _Lt_19BB
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 8
push offset _Lt_19BD
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _HWRITEASM64@8
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
.Lt_19B8:
.Lt_19B7:
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push 4
push offset _Lt_05D2
push -1
lea eax, [ebp-40]
push eax
call _fb_StrAssign@20
lea eax, [ebp-40]
push eax
call _HWRITEASM64@8
lea eax, [ebp-40]
push eax
call _fb_StrDelete@4
cmp dword ptr [_ENV+148], -1
jne .Lt_19C1
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-52]
push eax
call _fb_StrInit@20
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
mov dword ptr [ebp-92], 0
push 0
push -1
push 0
push dword ptr [_CTXDBG+32]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
push 2
push offset _Lt_01F5
push -1
lea eax, [ebp-52]
push eax
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
mov dword ptr [ebp-68], 0
lea eax, [ebp-76]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
mov dword ptr [ebp-80], 0
lea eax, [ebp-88]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-100]
push eax
call _fb_StrAssign@20
lea eax, [ebp-100]
push eax
push 0
push 36
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push 1
push offset _Lt_0000
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _DBG_ADDSTAB@16
lea eax, [ebp-100]
push eax
call _fb_StrDelete@4
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
mov dword ptr [ebp-116], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-52]
push eax
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
mov dword ptr [ebp-104], 0
lea eax, [ebp-112]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-124]
push eax
call _fb_StrAssign@20
lea eax, [ebp-124]
push eax
call _HWRITEASM64@8
lea eax, [ebp-124]
push eax
call _fb_StrDelete@4
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
.Lt_19C1:
.Lt_19C0:
dec dword ptr [_CTX]
lea eax, [_CTX+140]
push eax
call _FLISTRESET@4
mov dword ptr [_CTX+196], 0
call _IRHLEMITPROCEND@0
push 0
push -1
lea eax, [_CTX+44]
push eax
push -1
lea eax, [_CTX+20]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
lea eax, [_CTX+56]
push eax
push -1
lea eax, [_CTX+20]
push eax
call _fb_StrConcatAssign@20
push 0
push -1
lea eax, [_CTX+68]
push eax
push -1
lea eax, [_CTX+20]
push eax
call _fb_StrConcatAssign@20
mov dword ptr [_CTX+4], 0
lea eax, [ebp-28]
push eax
call _fb_StrDelete@4
lea eax, [ebp-16]
push eax
call _fb_StrDelete@4
.Lt_1915:
pop ebx
mov esp, ebp
pop ebp
ret 12
.balign 16
__EMITVARINIOFS@16:
push ebp
mov ebp, esp
sub esp, 68
push ebx
.Lt_19C8:
push 0
push 0
push dword ptr [ebp+12]
call _SYMBGETMANGLEDNAME@4
push eax
push -1
lea eax, [ebp-12]
push eax
call _fb_StrInit@20
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [eax+28]
and ebx, 511
mov dword ptr [ebp-16], ebx
mov ebx, dword ptr [ebp+12]
mov eax, dword ptr [ebx+28]
and eax, 511
and eax, 31
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+28]
and ecx, 511
and ecx, 480
add ecx, 32
or eax, ecx
mov ecx, dword ptr [ebp+12]
mov ebx, dword ptr [ecx+28]
and ebx, 511
and ebx, 261632
sal ebx, 1
or eax, ebx
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+28]
and ecx, 511
and ecx, 32505856
or eax, ecx
mov dword ptr [ebp-20], eax
cmp dword ptr [ebp+20], 0
jne .Lt_1C9D
cmp dword ptr [ebp+16], 0
je .Lt_19CB
.Lt_1C9D:
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push -1
push -1
push dword ptr [ebp+20]
push dword ptr [ebp+16]
call _fb_LongintToStr@8
push eax
push -1
push 2
push offset _Lt_085C
push -1
push -1
lea eax, [ebp-12]
push eax
push 7
push offset _Lt_0215
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
lea eax, [ebp-68]
push eax
call _HWRITEASM64@8
lea eax, [ebp-68]
push eax
call _fb_StrDelete@4
jmp .Lt_19CA
.Lt_19CB:
push 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
push 0
push -1
push -1
lea eax, [ebp-12]
push eax
push 7
push offset _Lt_0215
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
lea eax, [ebp-44]
push eax
call _HWRITEASM64@8
lea eax, [ebp-44]
push eax
call _fb_StrDelete@4
.Lt_19CA:
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
.Lt_19C9:
pop ebx
mov esp, ebp
pop ebp
ret 16
.balign 16
__EMITVARINIPAD@8:
push ebp
mov ebp, esp
sub esp, 24
.Lt_19D2:
push 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
push 0
push -1
push -1
push dword ptr [ebp+12]
push dword ptr [ebp+8]
call _fb_LongintToStr@8
push eax
push 7
push offset _Lt_19D4
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
lea eax, [ebp-12]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-24]
push eax
call _fb_StrAssign@20
lea eax, [ebp-24]
push eax
call _HWRITEASM64@8
lea eax, [ebp-24]
push eax
call _fb_StrDelete@4
.Lt_19D3:
mov esp, ebp
pop ebp
ret 8
.balign 16
__EMITFBCTINFSTRING@4:
push ebp
mov ebp, esp
sub esp, 48
.Lt_19D7:
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-4], 0
push 0
push 9
push offset _Lt_19D9
push -1
lea eax, [ebp-12]
push eax
call _fb_StrAssign@20
lea eax, [ebp-12]
push eax
call _ASM_SECTION@4
lea eax, [ebp-12]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
push 0
push -1
push 4
push offset _Lt_0248
push -1
push 0
push dword ptr [ebp+8]
push 9
push offset _Lt_0245
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-16], 0
lea eax, [ebp-24]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
lea eax, [ebp-36]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-48]
push eax
call _fb_StrAssign@20
lea eax, [ebp-48]
push eax
call _HWRITEASM64@8
lea eax, [ebp-48]
push eax
call _fb_StrDelete@4
.Lt_19D8:
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITVARINISTR@20:
push ebp
mov ebp, esp
sub esp, 64
push ebx
.Lt_19DE:
mov dword ptr [ebp-4], 0
cmp dword ptr [ebp+12], 0
jne .Lt_19E1
cmp dword ptr [ebp+8], 0
jne .Lt_19E1
.Lt_1C9E:
push 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push 12
push offset _Lt_19E2
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
lea eax, [ebp-52]
push eax
call _HWRITEASM64@8
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
jmp .Lt_19DF
.Lt_19E1:
.Lt_19E0:
mov ebx, dword ptr [ebp+20]
mov eax, dword ptr [ebp+24]
cmp dword ptr [ebp+12], eax
jg .Lt_19E5
jl .Lt_1C9F
cmp dword ptr [ebp+8], ebx
jae .Lt_19E5
.Lt_1C9F:
push 0
push 1
push 0
push 9
call _ERRREPORTWARN@16
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
push 0
push -1
mov ebx, dword ptr [ebp+8]
push ebx
push dword ptr [ebp+16]
call _fb_StrAllocTempDescZ@4
push eax
call _fb_LEFT@8
push eax
push -1
lea eax, [ebp-52]
push eax
call _fb_StrAssign@20
push dword ptr [ebp-52]
call _HESCAPE@4
mov dword ptr [ebp-4], eax
lea eax, [ebp-52]
push eax
call _fb_StrDelete@4
jmp .Lt_19E4
.Lt_19E5:
push dword ptr [ebp+16]
call _HESCAPE@4
mov dword ptr [ebp-4], eax
.Lt_19E4:
push 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-32], 0
push 0
push -1
push 4
push offset _Lt_0248
push -1
push 0
push dword ptr [ebp-4]
push 9
push offset _Lt_0245
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
lea eax, [ebp-16]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-20], 0
lea eax, [ebp-28]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-40]
push eax
call _fb_StrAssign@20
lea eax, [ebp-40]
push eax
call _HWRITEASM64@8
lea eax, [ebp-40]
push eax
call _fb_StrDelete@4
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebp+12]
cmp dword ptr [ebp+24], eax
jg .Lt_19EB
jl .Lt_1CA0
cmp dword ptr [ebp+20], ebx
jae .Lt_19EB
.Lt_1CA0:
push 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
mov dword ptr [ebp-56], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp+12]
sub eax, dword ptr [ebp+20]
sbb ebx, dword ptr [ebp+24]
push ebx
push eax
call _fb_LongintToStr@8
push eax
push 7
push offset _Lt_19D4
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
mov dword ptr [ebp-44], 0
lea eax, [ebp-52]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-64]
push eax
call _fb_StrAssign@20
lea eax, [ebp-64]
push eax
call _HWRITEASM64@8
lea eax, [ebp-64]
push eax
call _fb_StrDelete@4
.Lt_19EB:
.Lt_19EA:
.Lt_19DF:
pop ebx
mov esp, ebp
pop ebp
ret 20
.balign 16
__EMITVARINIWSTR@20:
push ebp
mov ebp, esp
sub esp, 80
push ebx
push esi
.Lt_19EE:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-8], 0
mov eax, dword ptr [_SYMB_DTYPETB+200]
mov dword ptr [ebp-20], eax
cmp dword ptr [ebp+12], 0
jne .Lt_19F1
cmp dword ptr [ebp+8], 0
jne .Lt_19F1
.Lt_1CA1:
cmp dword ptr [ebp-20], 2
jne .Lt_19F3
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push 8
push offset _Lt_19F5
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
lea eax, [ebp-68]
push eax
call _HWRITEASM64@8
lea eax, [ebp-68]
push eax
call _fb_StrDelete@4
jmp .Lt_19F2
.Lt_19F3:
push 0
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
push 0
push 8
push offset _Lt_19F7
push -1
lea eax, [ebp-68]
push eax
call _fb_StrAssign@20
lea eax, [ebp-68]
push eax
call _HWRITEASM64@8
lea eax, [ebp-68]
push eax
call _fb_StrDelete@4
.Lt_19F2:
lea eax, [ebp-16]
push eax
call _fb_StrDelete@4
jmp .Lt_19EF
.Lt_19F1:
.Lt_19F0:
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebp+12]
cmp dword ptr [ebp+24], eax
jl .Lt_19FA
jg .Lt_1CA2
cmp dword ptr [ebp+20], ebx
jbe .Lt_19FA
.Lt_1CA2:
push 0
push 1
push 0
push 9
call _ERRREPORTWARN@16
mov ebx, dword ptr [ebp+8]
push ebx
push dword ptr [ebp+16]
call _fb_WstrLeft@8
mov dword ptr [ebp-60], eax
push dword ptr [ebp-60]
call _HESCAPEW@4
mov dword ptr [ebp-4], eax
push dword ptr [ebp-60]
call _fb_WstrDelete@4
jmp .Lt_19F9
.Lt_19FA:
push dword ptr [ebp+16]
call _HESCAPEW@4
mov dword ptr [ebp-4], eax
.Lt_19F9:
push 0
push -1
push 2
push offset _Lt_026C
push -1
push -1
mov eax, dword ptr [_SYMB_DTYPETB+200]
sal eax, 1
push eax
push 8
push offset _Lt_0505
call _fb_StrAllocTempDescZEx@8
push eax
call _fb_LEFT@8
push eax
push -1
push 0
push dword ptr [ebp-4]
push 9
push offset _Lt_19FD
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
lea eax, [ebp-32]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
lea eax, [ebp-44]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
lea eax, [ebp-56]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-16]
push eax
call _fb_StrAssign@20
push 0
lea eax, [ebp-16]
push eax
call _HWRITEASM64@8
mov ebx, dword ptr [ebp+8]
mov eax, dword ptr [ebp+12]
cmp dword ptr [ebp+24], eax
jg .Lt_1A02
jl .Lt_1CA3
cmp dword ptr [ebp+20], ebx
jae .Lt_1A02
.Lt_1CA3:
push 0
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
push 0
push -1
push -1
mov eax, dword ptr [ebp+8]
mov ebx, dword ptr [ebp+12]
sub eax, dword ptr [ebp+20]
sbb ebx, dword ptr [ebp+24]
mov esi, dword ptr [ebp-20]
mov ecx, esi
sar ecx, 31
push ecx
push esi
push ebx
push eax
mov eax, [esp+0]
mul dword ptr [esp+8]
xchg eax, [esp+0]
imul eax, [esp+12]
add eax, edx
mov edx, [esp+4]
imul edx, [esp+8]
add edx, eax
mov [esp+4], edx
pop eax
pop ebx
add esp, 8
push ebx
push eax
call _fb_LongintToStr@8
push eax
push 7
push offset _Lt_19D4
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-80]
push eax
call _fb_StrAssign@20
lea eax, [ebp-80]
push eax
call _HWRITEASM64@8
lea eax, [ebp-80]
push eax
call _fb_StrDelete@4
.Lt_1A02:
.Lt_1A01:
lea eax, [ebp-16]
push eax
call _fb_StrDelete@4
.Lt_19EF:
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 20
.balign 16
__EMITMACRO@16:
push ebp
mov ebp, esp
sub esp, 404
push ebx
.Lt_1A05:
mov dword ptr [ebp-4], 0
mov dword ptr [ebp-8], 0
mov dword ptr [ebp-12], 0
mov dword ptr [ebp-16], 0
mov dword ptr [ebp-20], 0
mov dword ptr [ebp-32], 0
mov dword ptr [ebp-28], 0
mov dword ptr [ebp-24], 0
mov dword ptr [ebp-44], 0
mov dword ptr [ebp-40], 0
mov dword ptr [ebp-36], 0
mov dword ptr [ebp-56], 0
mov dword ptr [ebp-52], 0
mov dword ptr [ebp-48], 0
cmp dword ptr [_CTX+212], 0
jne .Lt_1A08
mov eax, dword ptr [ebp+12]
mov dword ptr [eax+4], 8
.Lt_1A08:
.Lt_1A07:
cmp dword ptr [ebp+8], 109
jne .Lt_1A0A
.Lt_1A0B:
push 0
push 8
call _IRHLALLOCVREG@8
mov dword ptr [ebp-4], eax
push -1
mov eax, dword ptr [ebp-4]
push dword ptr [eax+12]
call _REG_FINDFREE@8
cmp dword ptr [_CTX+212], 2
jne .Lt_1A0D
push dword ptr [ebp-4]
push dword ptr [ebp+12]
push 22
call __EMITADDR@12
push 0
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-32]
push eax
call _fb_StrAssign@20
push 1
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
push 0
push -1
push -1
mov eax, dword ptr [_CTX+84]
sal eax, 3
push eax
call _fb_IntToStr@4
push eax
push -1
push 4
push offset _Lt_1A0E
push -1
push -1
lea eax, [ebp-32]
push eax
push 16
push offset _Lt_1803
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-104]
push eax
call _fb_StrAssign@20
lea eax, [ebp-104]
push eax
call _HWRITEASM64@8
lea eax, [ebp-104]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push -1
push -1
mov eax, dword ptr [_CTX+88]
sal eax, 3
add eax, 48
push eax
call _fb_IntToStr@4
push eax
push -1
push 4
push offset _Lt_1A0E
push -1
push -1
lea eax, [ebp-32]
push eax
push 17
push offset _Lt_1A13
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
lea eax, [ebp-116]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-152]
push eax
call _fb_StrAssign@20
lea eax, [ebp-152]
push eax
call _HWRITEASM64@8
lea eax, [ebp-152]
push eax
call _fb_StrDelete@4
cmp dword ptr [_CTX+84], 6
jg .Lt_1A18
mov dword ptr [ebp-156], 0
jmp .Lt_1CA4
.Lt_1A18:
mov eax, dword ptr [_CTX+84]
add eax, -6
mov dword ptr [ebp-156], eax
.Lt_1CA4:
cmp dword ptr [_CTX+88], 8
jg .Lt_1A1A
mov dword ptr [ebp-160], 0
jmp .Lt_1CA5
.Lt_1A1A:
mov eax, dword ptr [_CTX+88]
add eax, -8
mov dword ptr [ebp-160], eax
.Lt_1CA5:
mov eax, dword ptr [ebp-160]
add eax, dword ptr [ebp-156]
sal eax, 3
add eax, 16
mov dword ptr [ebp-16], eax
push 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
mov dword ptr [ebp-188], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push -1
push dword ptr [ebp-16]
call _fb_IntToStr@4
push eax
push 9
push offset _Lt_1A1C
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
mov dword ptr [ebp-164], 0
lea eax, [ebp-172]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
mov dword ptr [ebp-176], 0
lea eax, [ebp-184]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-196]
push eax
call _fb_StrAssign@20
lea eax, [ebp-196]
push eax
call _HWRITEASM64@8
lea eax, [ebp-196]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
mov dword ptr [ebp-224], 0
push 0
push -1
push 7
push offset _Lt_047B
push -1
push -1
lea eax, [ebp-32]
push eax
push 17
push offset _Lt_1A20
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
mov dword ptr [ebp-200], 0
lea eax, [ebp-208]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
mov dword ptr [ebp-212], 0
lea eax, [ebp-220]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-232]
push eax
call _fb_StrAssign@20
lea eax, [ebp-232]
push eax
call _HWRITEASM64@8
lea eax, [ebp-232]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
mov dword ptr [ebp-236], 0
push 0
push 19
push offset _Lt_1A24
push -1
lea eax, [ebp-244]
push eax
call _fb_StrAssign@20
lea eax, [ebp-244]
push eax
call _HWRITEASM64@8
lea eax, [ebp-244]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
mov dword ptr [ebp-272], 0
push 0
push -1
push 7
push offset _Lt_047B
push -1
push -1
lea eax, [ebp-32]
push eax
push 18
push offset _Lt_1A26
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
mov dword ptr [ebp-248], 0
lea eax, [ebp-256]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
mov dword ptr [ebp-260], 0
lea eax, [ebp-268]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-280]
push eax
call _fb_StrAssign@20
lea eax, [ebp-280]
push eax
call _HWRITEASM64@8
lea eax, [ebp-280]
push eax
call _fb_StrDelete@4
jmp .Lt_1A0C
.Lt_1A0D:
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
push 6
push offset _Lt_03BE
push -1
push -1
mov eax, dword ptr [_CTX+84]
sal eax, 3
add eax, 16
push eax
call _fb_IntToStr@4
push eax
push -1
push 3
push offset _Lt_0124
push -1
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_012F
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-116]
push eax
call _fb_StrAssign@20
lea eax, [ebp-116]
push eax
call _HWRITEASM64@8
lea eax, [ebp-116]
push eax
call _fb_StrDelete@4
push dword ptr [ebp-4]
push dword ptr [ebp+12]
call __EMITSTORE@8
.Lt_1A0C:
mov eax, dword ptr [ebp+16]
cmp dword ptr [eax], 3
jne .Lt_1A30
mov eax, dword ptr [ebp+16]
mov ebx, dword ptr [eax+52]
mov eax, dword ptr [ebx+12]
mov dword ptr [ebp-20], eax
mov dword ptr [ebp-60], 1
.Lt_1A34:
mov eax, dword ptr [ebp-60]
mov ebx, dword ptr [ebp-20]
cmp dword ptr [_REGHANDLE+eax*4], ebx
jne .Lt_1A36
mov ebx, dword ptr [ebp-60]
mov dword ptr [_REGHANDLE+ebx*4], -2
jmp .Lt_1A33
.Lt_1A36:
.Lt_1A35:
.Lt_1A32:
inc dword ptr [ebp-60]
.Lt_1A31:
cmp dword ptr [ebp-60], 15
jle .Lt_1A34
.Lt_1A33:
.Lt_1A30:
.Lt_1A2F:
jmp .Lt_1A09
.Lt_1A0A:
cmp dword ptr [ebp+8], 112
jne .Lt_1A37
.Lt_1A38:
cmp dword ptr [_CTX+212], 2
jne .Lt_1A3A
push 0
push 8
call _IRHLALLOCVREG@8
mov dword ptr [ebp-4], eax
push -1
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call _REG_FINDFREE@8
push dword ptr [ebp-4]
push dword ptr [ebp+12]
push 22
call __EMITADDR@12
push 0
push 0
mov eax, dword ptr [ebp-4]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
lea eax, [ebp-32]
push eax
call _fb_StrAssign@20
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-44]
push eax
call _fb_StrAssign@20
push 0
push 0
call _SYMBUNIQUELABEL@0
push eax
push -1
lea eax, [ebp-56]
push eax
call _fb_StrAssign@20
mov eax, dword ptr [ebp+20]
mov ebx, dword ptr [eax+4]
cmp ebx, 16
sete bl
shr ebx, 1
sbb ebx, ebx
mov eax, dword ptr [ebp+20]
mov ecx, dword ptr [eax+4]
cmp ecx, 15
sete cl
shr ecx, 1
sbb ecx, ecx
or ebx, ecx
je .Lt_1A3C
push 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
push 0
push -1
push 7
push offset _Lt_1A3E
push -1
push -1
lea ecx, [ebp-32]
push ecx
push 17
push offset _Lt_1A3D
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea ecx, [ebp-68]
push ecx
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-92]
push eax
call _fb_StrAssign@20
lea eax, [ebp-92]
push eax
call _HWRITEASM64@8
lea eax, [ebp-92]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 4
push offset _Lt_1A42
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-116]
push eax
call _fb_StrAssign@20
lea eax, [ebp-116]
push eax
call _HWRITEASM64@8
lea eax, [ebp-116]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-32]
push eax
push 22
push offset _Lt_1A45
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-152]
push eax
call _fb_StrAssign@20
lea eax, [ebp-152]
push eax
call _HWRITEASM64@8
lea eax, [ebp-152]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push -1
push 5
push offset _Lt_1A4A
push -1
push -1
lea eax, [ebp-32]
push eax
push 17
push offset _Lt_1A49
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
lea eax, [ebp-176]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-188]
push eax
call _fb_StrAssign@20
lea eax, [ebp-188]
push eax
call _HWRITEASM64@8
lea eax, [ebp-188]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-32]
push eax
push 23
push offset _Lt_1A4E
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
push -1
lea eax, [ebp-56]
push eax
push 5
push offset _Lt_0E30
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-248]
push eax
call _fb_StrAssign@20
lea eax, [ebp-248]
push eax
call _HWRITEASM64@8
lea eax, [ebp-248]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-44]
push eax
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-272]
push eax
call _fb_StrAssign@20
lea eax, [ebp-272]
push eax
call _HWRITEASM64@8
lea eax, [ebp-272]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-32]
push eax
push 22
push offset _Lt_1A56
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
lea eax, [ebp-284]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-308]
push eax
call _fb_StrAssign@20
lea eax, [ebp-308]
push eax
call _HWRITEASM64@8
lea eax, [ebp-308]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-344], 0
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
push 0
push -1
push 5
push offset _Lt_1A4A
push -1
push -1
lea eax, [ebp-32]
push eax
push 17
push offset _Lt_1A5A
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
lea eax, [ebp-332]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-344]
push eax
call _fb_StrAssign@20
lea eax, [ebp-344]
push eax
call _HWRITEASM64@8
lea eax, [ebp-344]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-368], 0
mov dword ptr [ebp-364], 0
mov dword ptr [ebp-360], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-56]
push eax
mov dword ptr [ebp-356], 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
lea eax, [ebp-356]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-368]
push eax
call _fb_StrAssign@20
lea eax, [ebp-368]
push eax
call _HWRITEASM64@8
lea eax, [ebp-368]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-404], 0
mov dword ptr [ebp-400], 0
mov dword ptr [ebp-396], 0
push 0
push -1
push 8
push offset _Lt_1A60
push -1
push 0
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-380], 0
mov dword ptr [ebp-376], 0
mov dword ptr [ebp-372], 0
lea eax, [ebp-380]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-392], 0
mov dword ptr [ebp-388], 0
mov dword ptr [ebp-384], 0
lea eax, [ebp-392]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-404]
push eax
call _fb_StrAssign@20
lea eax, [ebp-404]
push eax
call _HWRITEASM64@8
lea eax, [ebp-404]
push eax
call _fb_StrDelete@4
jmp .Lt_1A3B
.Lt_1A3C:
push 0
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
push 0
push -1
push 6
push offset _Lt_1A65
push -1
push -1
lea eax, [ebp-32]
push eax
push 16
push offset _Lt_1A64
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-92]
push eax
call _fb_StrAssign@20
lea eax, [ebp-92]
push eax
call _HWRITEASM64@8
lea eax, [ebp-92]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
push -1
lea eax, [ebp-44]
push eax
push 4
push offset _Lt_1A42
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-116]
push eax
call _fb_StrAssign@20
lea eax, [ebp-116]
push eax
call _HWRITEASM64@8
lea eax, [ebp-116]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-152], 0
mov dword ptr [ebp-148], 0
mov dword ptr [ebp-144], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-32]
push eax
push 21
push offset _Lt_1A6B
mov dword ptr [ebp-128], 0
mov dword ptr [ebp-124], 0
mov dword ptr [ebp-120], 0
lea eax, [ebp-128]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-140], 0
mov dword ptr [ebp-136], 0
mov dword ptr [ebp-132], 0
lea eax, [ebp-140]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-152]
push eax
call _fb_StrAssign@20
lea eax, [ebp-152]
push eax
call _HWRITEASM64@8
lea eax, [ebp-152]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-188], 0
mov dword ptr [ebp-184], 0
mov dword ptr [ebp-180], 0
push 0
push -1
push 5
push offset _Lt_1A4A
push -1
push -1
lea eax, [ebp-32]
push eax
push 16
push offset _Lt_1A6F
mov dword ptr [ebp-164], 0
mov dword ptr [ebp-160], 0
mov dword ptr [ebp-156], 0
lea eax, [ebp-164]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-176], 0
mov dword ptr [ebp-172], 0
mov dword ptr [ebp-168], 0
lea eax, [ebp-176]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-188]
push eax
call _fb_StrAssign@20
lea eax, [ebp-188]
push eax
call _HWRITEASM64@8
lea eax, [ebp-188]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-224], 0
mov dword ptr [ebp-220], 0
mov dword ptr [ebp-216], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-32]
push eax
push 23
push offset _Lt_1A4E
mov dword ptr [ebp-200], 0
mov dword ptr [ebp-196], 0
mov dword ptr [ebp-192], 0
lea eax, [ebp-200]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-212], 0
mov dword ptr [ebp-208], 0
mov dword ptr [ebp-204], 0
lea eax, [ebp-212]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-224]
push eax
call _fb_StrAssign@20
lea eax, [ebp-224]
push eax
call _HWRITEASM64@8
lea eax, [ebp-224]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-248], 0
mov dword ptr [ebp-244], 0
mov dword ptr [ebp-240], 0
push 0
push -1
push -1
lea eax, [ebp-56]
push eax
push 5
push offset _Lt_0E30
mov dword ptr [ebp-236], 0
mov dword ptr [ebp-232], 0
mov dword ptr [ebp-228], 0
lea eax, [ebp-236]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-248]
push eax
call _fb_StrAssign@20
lea eax, [ebp-248]
push eax
call _HWRITEASM64@8
lea eax, [ebp-248]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-272], 0
mov dword ptr [ebp-268], 0
mov dword ptr [ebp-264], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-44]
push eax
mov dword ptr [ebp-260], 0
mov dword ptr [ebp-256], 0
mov dword ptr [ebp-252], 0
lea eax, [ebp-260]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-272]
push eax
call _fb_StrAssign@20
lea eax, [ebp-272]
push eax
call _HWRITEASM64@8
lea eax, [ebp-272]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-308], 0
mov dword ptr [ebp-304], 0
mov dword ptr [ebp-300], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push -1
lea eax, [ebp-32]
push eax
push 22
push offset _Lt_1A56
mov dword ptr [ebp-284], 0
mov dword ptr [ebp-280], 0
mov dword ptr [ebp-276], 0
lea eax, [ebp-284]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-296], 0
mov dword ptr [ebp-292], 0
mov dword ptr [ebp-288], 0
lea eax, [ebp-296]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-308]
push eax
call _fb_StrAssign@20
lea eax, [ebp-308]
push eax
call _HWRITEASM64@8
lea eax, [ebp-308]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-344], 0
mov dword ptr [ebp-340], 0
mov dword ptr [ebp-336], 0
push 0
push -1
push 5
push offset _Lt_1A4A
push -1
push -1
lea eax, [ebp-32]
push eax
push 17
push offset _Lt_1A5A
mov dword ptr [ebp-320], 0
mov dword ptr [ebp-316], 0
mov dword ptr [ebp-312], 0
lea eax, [ebp-320]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-332], 0
mov dword ptr [ebp-328], 0
mov dword ptr [ebp-324], 0
lea eax, [ebp-332]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-344]
push eax
call _fb_StrAssign@20
lea eax, [ebp-344]
push eax
call _HWRITEASM64@8
lea eax, [ebp-344]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-368], 0
mov dword ptr [ebp-364], 0
mov dword ptr [ebp-360], 0
push 0
push -1
push 2
push offset _Lt_00EF
push -1
lea eax, [ebp-56]
push eax
mov dword ptr [ebp-356], 0
mov dword ptr [ebp-352], 0
mov dword ptr [ebp-348], 0
lea eax, [ebp-356]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-368]
push eax
call _fb_StrAssign@20
lea eax, [ebp-368]
push eax
call _HWRITEASM64@8
lea eax, [ebp-368]
push eax
call _fb_StrDelete@4
push 0
mov dword ptr [ebp-404], 0
mov dword ptr [ebp-400], 0
mov dword ptr [ebp-396], 0
push 0
push -1
push 8
push offset _Lt_1A60
push -1
push 0
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-380], 0
mov dword ptr [ebp-376], 0
mov dword ptr [ebp-372], 0
lea eax, [ebp-380]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-392], 0
mov dword ptr [ebp-388], 0
mov dword ptr [ebp-384], 0
lea eax, [ebp-392]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-404]
push eax
call _fb_StrAssign@20
lea eax, [ebp-404]
push eax
call _HWRITEASM64@8
lea eax, [ebp-404]
push eax
call _fb_StrDelete@4
.Lt_1A3B:
jmp .Lt_1A39
.Lt_1A3A:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 3
jne .Lt_1A86
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax+52]
push dword ptr [ecx+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-12], eax
jmp .Lt_1A85
.Lt_1A86:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_1A87
mov eax, dword ptr [ebp+12]
push dword ptr [eax+12]
call _REG_FINDREAL@4
mov dword ptr [ebp-12], eax
.Lt_1A87:
.Lt_1A85:
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [eax]
cmp ecx, 4
setne cl
shr ecx, 1
sbb ecx, ecx
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+4]
and ebx, 480
test ebx, ebx
setne bl
shr ebx, 1
sbb ebx, ebx
cmp ebx, -1
sete bl
shr ebx, 1
sbb ebx, ebx
or ecx, ebx
je .Lt_1A89
push dword ptr [ebp+20]
push dword ptr [ebp+12]
push 76
call __EMITADDR@12
mov ebx, dword ptr [ebp+12]
cmp dword ptr [ebx], 3
jne .Lt_1A8B
mov ebx, dword ptr [ebp+12]
mov ecx, dword ptr [ebx+52]
mov ebx, dword ptr [ebp-12]
mov eax, dword ptr [ecx+12]
mov dword ptr [_REGHANDLE+ebx*4], eax
jmp .Lt_1A8A
.Lt_1A8B:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 4
jne .Lt_1A8C
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [ebp-12]
mov ecx, dword ptr [eax+12]
mov dword ptr [_REGHANDLE+ebx*4], ecx
.Lt_1A8C:
.Lt_1A8A:
push 0
push 8
push 0
push 8
call _IRHLALLOCVRIMM@16
mov dword ptr [ebp-4], eax
push 0
push 0
push dword ptr [ebp-4]
push dword ptr [ebp+12]
push 28
call __EMITBOP@20
jmp .Lt_1A88
.Lt_1A89:
mov eax, dword ptr [ebp+12]
mov ecx, dword ptr [ebp+20]
mov ebx, dword ptr [eax+12]
mov dword ptr [ecx+12], ebx
.Lt_1A88:
push 0
mov dword ptr [ebp-116], 0
mov dword ptr [ebp-112], 0
mov dword ptr [ebp-108], 0
push 0
push -1
push 2
push offset _Lt_011A
push -1
push 0
mov ebx, dword ptr [ebp+20]
push dword ptr [ebx+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push -1
push 4
push offset _Lt_1A8D
push -1
push 0
mov eax, dword ptr [ebp+20]
push dword ptr [eax+12]
call _REG_FINDREAL@4
push dword ptr [_REGSTRQ+eax*4]
push 5
push offset _Lt_038A
mov dword ptr [ebp-68], 0
mov dword ptr [ebp-64], 0
mov dword ptr [ebp-60], 0
lea eax, [ebp-68]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-80], 0
mov dword ptr [ebp-76], 0
mov dword ptr [ebp-72], 0
lea eax, [ebp-80]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-92], 0
mov dword ptr [ebp-88], 0
mov dword ptr [ebp-84], 0
lea eax, [ebp-92]
push eax
call _fb_StrConcat@20
push eax
mov dword ptr [ebp-104], 0
mov dword ptr [ebp-100], 0
mov dword ptr [ebp-96], 0
lea eax, [ebp-104]
push eax
call _fb_StrConcat@20
push eax
push -1
lea eax, [ebp-116]
push eax
call _fb_StrAssign@20
lea eax, [ebp-116]
push eax
call _HWRITEASM64@8
lea eax, [ebp-116]
push eax
call _fb_StrDelete@4
.Lt_1A39:
jmp .Lt_1A09
.Lt_1A37:
cmp dword ptr [ebp+8], 110
jne .Lt_1A93
.Lt_1A94:
mov eax, dword ptr [ebp+12]
cmp dword ptr [eax], 3
jne .Lt_1A96
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+52]
mov eax, dword ptr [ebx+12]
mov dword ptr [ebp-20], eax
mov dword ptr [ebp-60], 1
.Lt_1A9A:
mov eax, dword ptr [ebp-60]
mov ebx, dword ptr [ebp-20]
cmp dword ptr [_REGHANDLE+eax*4], ebx
jne .Lt_1A9C
mov ebx, dword ptr [ebp-60]
mov dword ptr [_REGHANDLE+ebx*4], -2
jmp .Lt_1A99
.Lt_1A9C:
.Lt_1A9B:
.Lt_1A98:
inc dword ptr [ebp-60]
.Lt_1A97:
cmp dword ptr [ebp-60], 15
jle .Lt_1A9A
.Lt_1A99:
.Lt_1A96:
.Lt_1A95:
jmp .Lt_1A09
.Lt_1A93:
cmp dword ptr [ebp+8], 111
jne .Lt_1A9D
.Lt_1A9E:
cmp dword ptr [_CTX+212], 2
jne .Lt_1AA0
push 0
push 8
call _IRHLALLOCVREG@8
mov dword ptr [ebp-4], eax
push dword ptr [ebp-4]
push dword ptr [ebp+12]
push 22
call __EMITADDR@12
push 0
push 8
call _IRHLALLOCVREG@8
mov dword ptr [ebp-8], eax
push dword ptr [ebp-8]
push dword ptr [ebp+16]
push 22
call __EMITADDR@12
mov eax, dword ptr [ebp+12]
mov ebx, dword ptr [eax+32]
push dword ptr [ebx+44]
push dword ptr [ebx+40]
push dword ptr [ebp-8]
push dword ptr [ebp-4]
push 105
call __EMITMEM@20
jmp .Lt_1A9F
.Lt_1AA0:
push dword ptr [ebp+16]
push dword ptr [ebp+12]
call __EMITSTORE@8
.Lt_1A9F:
.Lt_1A9D:
.Lt_1A09:
lea ebx, [ebp-56]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-44]
push ebx
call _fb_StrDelete@4
lea ebx, [ebp-32]
push ebx
call _fb_StrDelete@4
.Lt_1A06:
pop ebx
mov esp, ebp
pop ebp
ret 16
.balign 16
__EMITDECL@4:
push ebp
mov ebp, esp
.Lt_1AA1:
.Lt_1AA2:
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITSCOPEBEGIN@4:
push ebp
mov ebp, esp
.Lt_1AA3:
.Lt_1AA4:
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITSCOPEEND@4:
push ebp
mov ebp, esp
.Lt_1AA5:
.Lt_1AA6:
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITVARINIEND@4:
push ebp
mov ebp, esp
.Lt_1AA7:
.Lt_1AA8:
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITVARINISCOPEBEGIN@8:
push ebp
mov ebp, esp
.Lt_1AA9:
.Lt_1AAA:
mov esp, ebp
pop ebp
ret 8
.balign 16
__SCOPEBEGIN@4:
push ebp
mov ebp, esp
.Lt_1AAB:
.Lt_1AAC:
mov esp, ebp
pop ebp
ret 4
.balign 16
__SCOPEEND@4:
push ebp
mov ebp, esp
.Lt_1AAD:
.Lt_1AAE:
mov esp, ebp
pop ebp
ret 4
.balign 16
__EMITVARINISCOPEEND@0:
.Lt_1AAF:
.Lt_1AB0:
ret
.balign 16
__EMITFBCTINFBEGIN@0:
.Lt_1AB1:
.Lt_1AB2:
ret
.balign 16
__EMITFBCTINFEND@0:
.Lt_1AB3:
.Lt_1AB4:
ret
.balign 16
__EMITSPILLREGS@0:
.Lt_1AB5:
.Lt_1AB6:
ret
.balign 16
__EMITLOAD@4:
push ebp
mov ebp, esp
.Lt_1AB7:
.Lt_1AB8:
mov esp, ebp
pop ebp
ret 4
.balign 16
__GLOBAL__I:
.Lt_1AC2:
push offset _CTXDBG
call __ZN6DBGCTXC1Ev
add esp, 4
push offset _CTX
call __ZN13ASM64_CONTEXTC1Ev
add esp, 4
.Lt_1AC3:
ret
.balign 16
__GLOBAL__D:
.Lt_1AC5:
push offset __ZN8TDBGSTABD1Ev
push offset __ZN8TDBGSTABC1Ev
push offset _DBGSTAB
call _fb_ArrayEraseObj@12
push offset __ZN7TDBGSTRD1Ev
push offset __ZN7TDBGSTRC1Ev
push offset _DBGSTR
call _fb_ArrayEraseObj@12
push offset _CTX
call __ZN13ASM64_CONTEXTD1Ev
add esp, 4
push offset _CTXDBG
call __ZN6DBGCTXD1Ev
add esp, 4
.Lt_1AC6:
ret

.section .data
.balign 4
_Lt_0000:	.ascii	"\0"
.balign 4
_Lt_0004:	.ascii	"1\0"
.balign 4
_Lt_0006:	.ascii	"0\0"
.balign 4
_Lt_000F:	.ascii	"FreeBASIC 1.08.0\0"
.balign 4
_Lt_001A:	.ascii	"\\\0"
.balign 4

.globl _IRGAS64_VTBL
_IRGAS64_VTBL:
.int __INIT@0
.int __END@0
.int __EMITBEGIN@0
.int __EMITEND@0
.int __GETOPTIONVALUE@4
.int __SUPPORTSOP@8
.int __PROCBEGIN@4
.int __PROCEND@4
.int __PROCALLOCARG@8
.int __PROCALLOCLOCAL@8
.long 0
.int __SCOPEBEGIN@4
.int __SCOPEEND@4
.int __PROCALLOCSTATICVARS@4
.int __EMITCONVERT@8
.int __EMITLABEL@4
.int __EMITLABEL@4
.int __EMITRETURN@4
.int __EMITPROCBEGIN@8
.int __EMITPROCEND@12
.int _IRHLEMITPUSHARG@20
.int __EMITASMLINE@4
.int __EMITCOMMENT@4
.int __EMITBOP@20
.int __EMITUOP@12
.int __EMITSTORE@8
.int __EMITSPILLREGS@0
.int __EMITLOAD@4
.int __EMITLOADRES@8
.long 0
.int __EMITADDR@12
.int __EMITCALL@16
.int __EMITCALLPTR@20
.long 0
.int __EMITJUMPPTR@4
.int __EMITBRANCH@8
.int __EMITJMPTB@40
.int __EMITMEM@20
.int __EMITMACRO@16
.int __EMITSCOPEBEGIN@4
.int __EMITSCOPEEND@4
.int __EMITDECL@4
.int __EMITDBG@16
.int __EMITVARINIBEGIN@4
.int __EMITVARINIEND@4
.int __EMITVARINII@12
.int __EMITVARINIF@12
.int __EMITVARINIOFS@16
.int __EMITVARINISTR@20
.int __EMITVARINIWSTR@20
.int __EMITVARINIPAD@8
.int __EMITVARINISCOPEBEGIN@8
.int __EMITVARINISCOPEEND@0
.int __EMITFBCTINFBEGIN@0
.int __EMITFBCTINFSTRING@4
.int __EMITFBCTINFEND@0
.int _IRHLALLOCVREG@8
.int _IRHLALLOCVRIMM@16
.int _IRHLALLOCVRIMMF@16
.int _IRHLALLOCVRVAR@20
.int _IRHLALLOCVRIDX@28
.int _IRHLALLOCVRPTR@20
.int _IRHLALLOCVROFS@20
.int __SETVREGDATATYPE@12
.long 0
.long 0
.long 0
.long 0

.section .bss
.balign 4
	.lcomm	_Lt_005B,36
.balign 4
	.lcomm	_Lt_005C,36
.balign 4
	.lcomm	_Lt_005D,48
.balign 4
	.lcomm	_CTXDBG,56
.balign 4
	.lcomm	_REGHANDLE,72
.balign 4
	.lcomm	_REGROOM,144
.balign 4
	.lcomm	_CTX,224

.section .data
.balign 4
_DBGSTR:
.long 0
.long 0
.int 0
.int 16
.int 0
.int 8
.skip 96,0
.balign 4
_DBGSTAB:
.long 0
.long 0
.int 0
.int 16
.int 0
.int 8
.skip 96,0
.balign 4
_REMAPTB:
.int 7
.int 16
.int 2
.int 3
.int 4
.int 5
.int 6
.int 6
.int 9
.int 10
.int 9
.int 1
.int 8
.int 9
.int 10
.int 11
.int 12
.int 13
.int 14
.int 17
.skip 24,0
.balign 4
_STABSTB:
.int _Lt_008D
.int _Lt_008E
.int _Lt_008F
.int _Lt_0090
.int _Lt_0091
.int _Lt_0092
.int _Lt_0093
.int _Lt_0094
.int _Lt_0095
.int _Lt_0096
.int _Lt_0097
.int _Lt_0098
.int _Lt_0099
.int _Lt_009A
.int _Lt_009B
.int _Lt_009C
.int _Lt_009D
.balign 4
_Lt_008D:	.ascii	"integer:t1=-1\0"
.balign 4
_Lt_008E:	.ascii	"void:t7=-11\0"
.balign 4
_Lt_008F:	.ascii	"byte:t2=-6\0"
.balign 4
_Lt_0090:	.ascii	"ubyte:t3=-5\0"
.balign 4
_Lt_0091:	.ascii	"char:t4=-2\0"
.balign 4
_Lt_0092:	.ascii	"short:t5=-3\0"
.balign 4
_Lt_0093:	.ascii	"ushort:t6=-7\0"
.balign 4
_Lt_0094:	.ascii	"uinteger:t8=-8\0"
.balign 4
_Lt_0095:	.ascii	"longint:t9=-31\0"
.balign 4
_Lt_0096:	.ascii	"ulongint:t10=-32\0"
.balign 4
_Lt_0097:	.ascii	"single:t11=-12\0"
.balign 4
_Lt_0098:	.ascii	"double:t12=-13\0"
.balign 4
_Lt_0099:	.ascii	"string:t13=s12data:*2,0,64;len:1,64,64;size:1,128,64;;\0"
.balign 4
_Lt_009A:	.ascii	"fixstr:t14=-2\0"
.balign 4
_Lt_009B:	.ascii	"pchar:t15=*4;\0"
.balign 4
_Lt_009C:	.ascii	"boolean:t16=@s8;-16\0"
.balign 4
_Lt_009D:	.ascii	"va_list:t17=-11\0"
.balign 4
_REGSTRQ:
.int _Lt_00A0
.int _Lt_00A1
.int _Lt_00A2
.int _Lt_00A3
.int _Lt_00A4
.int _Lt_00A5
.int _Lt_00A6
.int _Lt_00A7
.int _Lt_00A8
.int _Lt_00A9
.int _Lt_00AA
.int _Lt_00AB
.int _Lt_00AC
.int _Lt_00AD
.int _Lt_00AE
.int _Lt_00AF
.int _Lt_00B0
.int _Lt_00B1
.balign 4
_Lt_00A0:	.ascii	"rax\0"
.balign 4
_Lt_00A1:	.ascii	"rbx\0"
.balign 4
_Lt_00A2:	.ascii	"rcx\0"
.balign 4
_Lt_00A3:	.ascii	"rdx\0"
.balign 4
_Lt_00A4:	.ascii	"rsi\0"
.balign 4
_Lt_00A5:	.ascii	"rdi\0"
.balign 4
_Lt_00A6:	.ascii	"rbp\0"
.balign 4
_Lt_00A7:	.ascii	"rsp\0"
.balign 4
_Lt_00A8:	.ascii	"r8\0"
.balign 4
_Lt_00A9:	.ascii	"r9\0"
.balign 4
_Lt_00AA:	.ascii	"r10\0"
.balign 4
_Lt_00AB:	.ascii	"r11\0"
.balign 4
_Lt_00AC:	.ascii	"r12\0"
.balign 4
_Lt_00AD:	.ascii	"r13\0"
.balign 4
_Lt_00AE:	.ascii	"r14\0"
.balign 4
_Lt_00AF:	.ascii	"r15\0"
.balign 4
_Lt_00B0:	.ascii	"rip\0"
.balign 4
_Lt_00B1:	.ascii	"* X_Q\0"
.balign 4
_REGSTRD:
.int _Lt_00B3
.int _Lt_00B4
.int _Lt_00B5
.int _Lt_00B6
.int _Lt_00B7
.int _Lt_00B8
.int _Lt_00B9
.int _Lt_00BA
.int _Lt_00BB
.int _Lt_00BC
.int _Lt_00BD
.int _Lt_00BE
.int _Lt_00BF
.int _Lt_00C0
.int _Lt_00C1
.int _Lt_00C2
.int _Lt_0000
.int _Lt_00C3
.balign 4
_Lt_00B3:	.ascii	"eax\0"
.balign 4
_Lt_00B4:	.ascii	"ebx\0"
.balign 4
_Lt_00B5:	.ascii	"ecx\0"
.balign 4
_Lt_00B6:	.ascii	"edx\0"
.balign 4
_Lt_00B7:	.ascii	"esi\0"
.balign 4
_Lt_00B8:	.ascii	"edi\0"
.balign 4
_Lt_00B9:	.ascii	"ebp\0"
.balign 4
_Lt_00BA:	.ascii	"esp\0"
.balign 4
_Lt_00BB:	.ascii	"r8d\0"
.balign 4
_Lt_00BC:	.ascii	"r9d\0"
.balign 4
_Lt_00BD:	.ascii	"r10d\0"
.balign 4
_Lt_00BE:	.ascii	"r11d\0"
.balign 4
_Lt_00BF:	.ascii	"r12d\0"
.balign 4
_Lt_00C0:	.ascii	"r13d\0"
.balign 4
_Lt_00C1:	.ascii	"r14d\0"
.balign 4
_Lt_00C2:	.ascii	"r15d\0"
.balign 4
_Lt_00C3:	.ascii	"* X_D\0"
.balign 4
_REGSTRW:
.int _Lt_00C5
.int _Lt_00C6
.int _Lt_00C7
.int _Lt_00C8
.int _Lt_00C9
.int _Lt_00CA
.int _Lt_00CB
.int _Lt_00CC
.int _Lt_00CD
.int _Lt_00CE
.int _Lt_00CF
.int _Lt_00D0
.int _Lt_00D1
.int _Lt_00D2
.int _Lt_00D3
.int _Lt_00D4
.int _Lt_0000
.int _Lt_00D5
.balign 4
_Lt_00C5:	.ascii	"ax\0"
.balign 4
_Lt_00C6:	.ascii	"bx\0"
.balign 4
_Lt_00C7:	.ascii	"cx\0"
.balign 4
_Lt_00C8:	.ascii	"dx\0"
.balign 4
_Lt_00C9:	.ascii	"si\0"
.balign 4
_Lt_00CA:	.ascii	"di\0"
.balign 4
_Lt_00CB:	.ascii	"bp\0"
.balign 4
_Lt_00CC:	.ascii	"sp\0"
.balign 4
_Lt_00CD:	.ascii	"r8w\0"
.balign 4
_Lt_00CE:	.ascii	"r9w\0"
.balign 4
_Lt_00CF:	.ascii	"r10w\0"
.balign 4
_Lt_00D0:	.ascii	"r11w\0"
.balign 4
_Lt_00D1:	.ascii	"r12w\0"
.balign 4
_Lt_00D2:	.ascii	"r13w\0"
.balign 4
_Lt_00D3:	.ascii	"r14w\0"
.balign 4
_Lt_00D4:	.ascii	"r15w\0"
.balign 4
_Lt_00D5:	.ascii	"* X_W\0"
.balign 4
_REGSTRB:
.int _Lt_00D7
.int _Lt_00D8
.int _Lt_00D9
.int _Lt_00DA
.int _Lt_00DB
.int _Lt_00DC
.int _Lt_00DD
.int _Lt_00DE
.int _Lt_00DF
.int _Lt_00E0
.int _Lt_00E1
.int _Lt_00E2
.int _Lt_00E3
.int _Lt_00E4
.int _Lt_00E5
.int _Lt_00E6
.int _Lt_0000
.int _Lt_00E7
.balign 4
_Lt_00D7:	.ascii	"al\0"
.balign 4
_Lt_00D8:	.ascii	"bl\0"
.balign 4
_Lt_00D9:	.ascii	"cl\0"
.balign 4
_Lt_00DA:	.ascii	"dl\0"
.balign 4
_Lt_00DB:	.ascii	"sil\0"
.balign 4
_Lt_00DC:	.ascii	"dil\0"
.balign 4
_Lt_00DD:	.ascii	"bpl\0"
.balign 4
_Lt_00DE:	.ascii	"spl\0"
.balign 4
_Lt_00DF:	.ascii	"r8b\0"
.balign 4
_Lt_00E0:	.ascii	"r9b\0"
.balign 4
_Lt_00E1:	.ascii	"r10b\0"
.balign 4
_Lt_00E2:	.ascii	"r11b\0"
.balign 4
_Lt_00E3:	.ascii	"r12b\0"
.balign 4
_Lt_00E4:	.ascii	"r13b\0"
.balign 4
_Lt_00E5:	.ascii	"r14b\0"
.balign 4
_Lt_00E6:	.ascii	"r15b\0"
.balign 4
_Lt_00E7:	.ascii	"* X_B\0"
.balign 4
_REG_PRIO:
.byte 11
.byte 10
.byte 8
.byte 9
.byte 3
.byte 2
.byte 12
.byte 13
.byte 14
.byte 15
.byte 1
.byte 5
.byte 4
.balign 4
_LISTREG:
.long 0
.long 0
.int 0
.int 4
.int 1
.int 17
.skip 12,0
.balign 4
_Lt_00EF:	.ascii	":\0"
.balign 4
_Lt_00F3:	.ascii	"#O9\0"
.balign 4
_Lt_00F4:	.ascii	"mov\0"
.balign 4
_Lt_00F5:	.ascii	"lea\0"
.balign 4
_Lt_00F6:	.ascii	"jmp\0"
.balign 4
_Lt_00F9:	.ascii	"movsxd\0"
.balign 4
_Lt_00FC:	.ascii	"movsx\0"
.balign 4
_Lt_00FF:	.ascii	"movzx\0"
.balign 4
_Lt_0102:	.ascii	" \0"
.balign 4
_Lt_0103:	.ascii	",\0"
.balign 4
_Lt_0104:	.ascii	"#\0"
.balign 4
_Lt_010B:	.ascii	"rsi rdi rcx rdx rbx rax r8 r9 r10 r11 r12 r13 r14 r15\0"
.balign 4
_Lt_010E:	.ascii	"#O0\0"
.balign 4
_Lt_0112:	.ascii	"   add \0"
.balign 4
_Lt_0119:	.ascii	"[\0"
.balign 4
_Lt_011A:	.ascii	"]\0"
.balign 4
_Lt_0120:	.ascii	"e\0"
.balign 4
_Lt_0123:	.ascii	"#O4\0"
.balign 4
_Lt_0124:	.ascii	", \0"
.balign 4
_Lt_0125:	.ascii	"\r\n\0"
.balign 4
_Lt_0126:	.ascii	" #Optim 4\0"
.balign 4
_Lt_012E:	.ascii	"#O5\0"
.balign 4
_Lt_012F:	.ascii	"lea \0"
.balign 4
_Lt_0130:	.ascii	" #Optim 5\0"
.balign 4
_Lt_013C:	.ascii	"#O7\0"
.balign 4
_Lt_013D:	.ascii	" #Optim 7\0"
.balign 4
_Lt_0147:	.ascii	"#O1 \0"
.balign 4
_Lt_014E:	.ascii	"FOUND AN ERROR : prevpart empty ????????\0"
.balign 4
_Lt_0158:	.ascii	"movss\0"
.balign 4
_Lt_015B:	.ascii	"movd\0"
.balign 4
_Lt_015C:	.ascii	"movq\0"
.balign 4
_Lt_015D:	.ascii	"#O2\0"
.balign 4
_Lt_0161:	.ascii	" #Optim 2\0"
.balign 4
_Lt_0170:	.ascii	"#O3\0"
.balign 4
_Lt_0175:	.ascii	"movsd\0"
.balign 4
_Lt_017B:	.ascii	"FOUND AN ERROR : in check_optim 3-2 mov unknown=\0"
.balign 4
_Lt_017F:	.ascii	" #Optim 3\0"
.balign 4
_Lt_018A:	.ascii	"#O6\0"
.balign 4
_Lt_018B:	.ascii	" #Optim 6\0"
.balign 4
_Lt_0197:	.ascii	"inc\0"
.balign 4
_Lt_0198:	.ascii	"dec\0"
.balign 4
_Lt_019B:	.ascii	"not\0"
.balign 4
_Lt_019E:	.ascii	"neg\0"
.balign 4
_Lt_01A5:	.ascii	"mov lea cmp add sub imu idiv div shl shr sar and xor or call jmp push test cvt \0"
.balign 4
_Lt_01B9:	.ascii	"add\0"
.balign 4
_Lt_01BA:	.ascii	"sub\0"
.balign 4
_Lt_01BD:	.ascii	"imu\0"
.balign 4
_Lt_01C3:	.ascii	"cmp\0"
.balign 4
_Lt_01D9:	.ascii	".section \0"
.balign 4
_Lt_01DE:	.ascii	"#NO\0"
.balign 4
_Lt_01F5:	.ascii	"-\0"
.balign 4
_Lt_0211:	.ascii	"0x\0"
.balign 4
_Lt_0212:	.ascii	" # DBL=\0"
.balign 4
_Lt_0215:	.ascii	".quad \0"
.balign 4
_Lt_0217:	.ascii	" # SNG=\0"
.balign 4
_Lt_021A:	.ascii	".long \0"
.balign 4
_Lt_022B:	.ascii	"src/compiler/ir-gas64.bas\0"
.balign 4
_Lt_023A:	.ascii	".dbgstr,\"a\"\0"
.balign 4
_Lt_023C:	.ascii	".dbgstr,\"dr\"\0"
.balign 4
_Lt_023E:	.ascii	".byte 0\0"
.balign 4
_Lt_0245:	.ascii	".ascii \"\0"
.balign 4
_Lt_0246:	.ascii	"\\\0"
.balign 4
_Lt_0247:	.ascii	"\\\\\0"
.balign 4
_Lt_0248:	.ascii	"\\0\"\0"
.balign 4
_Lt_0250:	.ascii	".dbgdat,\"a\"\0"
.balign 4
_Lt_0252:	.ascii	".dbgdat,\"dr\"\0"
.balign 4
_Lt_0259:	.ascii	".quad 0x\0"
.balign 4
_Lt_025A:	.ascii	" # \0"
.balign 4
_Lt_026C:	.ascii	"\"\0"
.balign 4
_Lt_026D:	.ascii	".file \"\0"
.balign 4
_Lt_0271:	.ascii	"DUMMY\0"
.balign 4
_Lt_028E:	.ascii	":G\0"
.balign 4
_Lt_0290:	.ascii	":S\0"
.balign 4
_Lt_029C:	.ascii	":V\0"
.balign 4
_Lt_02A5:	.ascii	":F\0"
.balign 4
_Lt_02A6:	.ascii	":f\0"
.balign 4
_Lt_02B1:	.ascii	"p\0"
.balign 4
_Lt_02B2:	.ascii	"v\0"
.balign 4
_Lt_02B8:	.ascii	"=*\0"
.balign 4
_Lt_02BB:	.ascii	":Tt\0"
.balign 4
_Lt_02BC:	.ascii	"=s\0"
.balign 4
_Lt_02D0:	.ascii	";\0"
.balign 4
_Lt_02D4:	.ascii	":T\0"
.balign 4
_Lt_02D5:	.ascii	"=e\0"
.balign 4
_Lt_02EC:	.ascii	"=\0"
.balign 4
_Lt_02EF:	.ascii	"ar1;\0"
.balign 4
_Lt_02F0:	.ascii	"0;\0"
.balign 4
_Lt_0311:	.ascii	"=f\0"
.balign 4
_Lt_031F:	.ascii	"FOUND AN ERROR : Other emitdbg not handled=\0"
.balign 4
_Lt_0320:	.ascii	"for ref AST_OP_DBG_LINEEND=\0"
.balign 4
_Lt_0321:	.ascii	"114\0"
.balign 4
_Lt_033F:	.ascii	"FOUND AN ERROR : Spilling overflow when proc calling\0"
.balign 4
_Lt_0344:	.ascii	"mov QWORD PTR \0"
.balign 4
_Lt_0345:	.ascii	"[rbp], \0"
.balign 4
_Lt_038A:	.ascii	"mov \0"
.balign 4
_Lt_03BD:	.ascii	", QWORD PTR \0"
.balign 4
_Lt_03BE:	.ascii	"[rbp]\0"
.balign 4
_Lt_03D8:	.ascii	"FOUND AN ERROR : virtual register=\0"
.balign 4
_Lt_03D9:	.ascii	" no real register corresponding, using KREG_XXX\0"
.balign 4
_Lt_03F4:	.ascii	"rcx rdx rbx rdi rsi r8 r9 r10 r11 r12 r13 r14 r15\0"
.balign 4
_Lt_0407:	.ascii	"mov rax, \0"
.balign 4
_Lt_040C:	.ascii	"mov QWORD PTR [\0"
.balign 4
_Lt_040D:	.ascii	"], 0\0"
.balign 4
_Lt_0411:	.ascii	"add \0"
.balign 4
_Lt_0412:	.ascii	", 8\0"
.balign 4
_Lt_0416:	.ascii	"dec rax\0"
.balign 4
_Lt_0418:	.ascii	"jnz \0"
.balign 4
_Lt_042D:	.ascii	"mov dword ptr [\0"
.balign 4
_Lt_0433:	.ascii	"mov word ptr 4[\0"
.balign 4
_Lt_0439:	.ascii	"mov byte ptr 6[\0"
.balign 4
_Lt_043E:	.ascii	"mov byte ptr 4[\0"
.balign 4
_Lt_0443:	.ascii	"mov word ptr [\0"
.balign 4
_Lt_0449:	.ascii	"mov byte ptr 2[\0"
.balign 4
_Lt_044E:	.ascii	"mov byte ptr [\0"
.balign 4
_Lt_0476:	.ascii	"mov rax, [\0"
.balign 4
_Lt_047A:	.ascii	"mov [\0"
.balign 4
_Lt_047B:	.ascii	"], rax\0"
.balign 4
_Lt_0485:	.ascii	"dec \0"
.balign 4
_Lt_04A6:	.ascii	"mov eax, dword ptr [\0"
.balign 4
_Lt_04AA:	.ascii	"], eax\0"
.balign 4
_Lt_04B0:	.ascii	"mov ax, word ptr 4[\0"
.balign 4
_Lt_04B4:	.ascii	"], ax\0"
.balign 4
_Lt_04BA:	.ascii	"mov al, byte ptr 6[\0"
.balign 4
_Lt_04BE:	.ascii	"], al\0"
.balign 4
_Lt_04C3:	.ascii	"mov al, byte ptr 4[\0"
.balign 4
_Lt_04CB:	.ascii	"mov ax, word ptr [\0"
.balign 4
_Lt_04D4:	.ascii	"mov al, byte ptr 2[\0"
.balign 4
_Lt_04DC:	.ascii	"mov al, byte ptr [\0"
.balign 4
_Lt_04F8:	.ascii	".data\0"
.balign 4
_Lt_04FA:	.ascii	".align 8\0"
.balign 4
_Lt_04FE:	.ascii	".globl \0"
.balign 4
_Lt_0505:	.ascii	"\\0\\0\\0\\0\0"
.balign 4
_Lt_0506:	.ascii	"\"\0"
.balign 4
_Lt_052F:	.ascii	".bss\0"
.balign 4
_Lt_053B:	.ascii	".comm \0"
.balign 4
_Lt_0544:	.ascii	".local \0"
.balign 4
_Lt_054D:	.ascii	".lcomm \0"
.balign 4
_Lt_055A:	.ascii	"stmxcsr $mxcsr[rip]\0"
.balign 4
_Lt_055C:	.ascii	"push $mxcsr[rip]\0"
.balign 4
_Lt_055E:	.ascii	"and dword ptr $mxcsr[rip], 0xFFFF9FFF\0"
.balign 4
_Lt_0560:	.ascii	"ldmxcsr $mxcsr[rip]\0"
.balign 4
_Lt_0562:	.ascii	"cvts\0"
.balign 4
_Lt_0563:	.ascii	"2si rax, xmm0\0"
.balign 4
_Lt_0567:	.ascii	"pop $mxcsr[rip]\0"
.balign 4
_Lt_057A:	.ascii	".intel_syntax noprefix\0"
.balign 4
_Lt_057C:	.ascii	".text\0"
.balign 4
_Lt_058A:	.ascii	".init_array\0"
.balign 4
_Lt_058C:	.ascii	".ctors\0"
.balign 4
_Lt_0597:	.ascii	".fini_array\0"
.balign 4
_Lt_0599:	.ascii	".dtors\0"
.balign 4
_Lt_05A6:	.ascii	".local $mxcsr\0"
.balign 4
_Lt_05A8:	.ascii	".comm $mxcsr,8,8\0"
.balign 4
_Lt_05AA:	.ascii	".local $sse41\0"
.balign 4
_Lt_05AC:	.ascii	".comm $sse41,4,8\0"
.balign 4
_Lt_05AE:	.ascii	".lcomm $mxcsr,8,8\0"
.balign 4
_Lt_05B0:	.ascii	".lcomm $sse41,4,8\0"
.balign 4
_Lt_05B9:	.ascii	".quad $sse41_test\0"
.balign 4
_Lt_05BC:	.ascii	"$sse41_test:\0"
.balign 4
_Lt_05BE:	.ascii	"push rbx\0"
.balign 4
_Lt_05C0:	.ascii	"push rcx\0"
.balign 4
_Lt_05C2:	.ascii	"push rdx\0"
.balign 4
_Lt_05C4:	.ascii	"mov  eax, 1\0"
.balign 4
_Lt_05C6:	.ascii	"cpuid\0"
.balign 4
_Lt_05C8:	.ascii	"and ecx, 0b10000000000000000000\0"
.balign 4
_Lt_05CA:	.ascii	"mov $sse41[rip], ecx\0"
.balign 4
_Lt_05CC:	.ascii	"pop rdx\0"
.balign 4
_Lt_05CE:	.ascii	"pop rcx\0"
.balign 4
_Lt_05D0:	.ascii	"pop rbx\0"
.balign 4
_Lt_05D2:	.ascii	"ret\0"
.balign 4
_Lt_05E8:	.ascii	"_GETOPTIONVALUE\0"
.balign 4
_Lt_0648:	.ascii	"shr \0"
.balign 4
_Lt_0649:	.ascii	", 16\0"
.balign 4
_Lt_065B:	.ascii	", 32\0"
.balign 4
_Lt_068F:	.ascii	"lea rax, \0"
.balign 4
_Lt_0692:	.ascii	"add rax, 8\0"
.balign 4
_Lt_0694:	.ascii	"[rax]\0"
.balign 4
_Lt_069B:	.ascii	"movzx \0"
.balign 4
_Lt_069C:	.ascii	", BYTE PTR \0"
.balign 4
_Lt_06A2:	.ascii	", WORD PTR \0"
.balign 4
_Lt_06AC:	.ascii	", WORD PTR [\0"
.balign 4
_Lt_06B2:	.ascii	"movzx eax, BYTE PTR 2[\0"
.balign 4
_Lt_06B6:	.ascii	"shl rax, 16\0"
.balign 4
_Lt_06B8:	.ascii	"or \0"
.balign 4
_Lt_06B9:	.ascii	", rax\0"
.balign 4
_Lt_06BE:	.ascii	", DWORD PTR \0"
.balign 4
_Lt_06C8:	.ascii	", DWORD PTR [\0"
.balign 4
_Lt_06CE:	.ascii	"movzx eax, BYTE PTR 4[\0"
.balign 4
_Lt_06D2:	.ascii	"shl rax, 32\0"
.balign 4
_Lt_06E1:	.ascii	"movzx eax, WORD PTR 4[\0"
.balign 4
_Lt_06FA:	.ascii	"movzx eax, BYTE PTR 6[\0"
.balign 4
_Lt_06FE:	.ascii	"shl rax, 48\0"
.balign 4
_Lt_0715:	.ascii	"movd xmm\0"
.balign 4
_Lt_071A:	.ascii	"movq xmm\0"
.balign 4
_Lt_0734:	.ascii	"movd \0"
.balign 4
_Lt_0735:	.ascii	"[rbp], xmm\0"
.balign 4
_Lt_073A:	.ascii	"movq \0"
.balign 4
_Lt_077B:	.ascii	"mov BYTE PTR \0"
.balign 4
_Lt_0781:	.ascii	"mov WORD PTR \0"
.balign 4
_Lt_0787:	.ascii	"mov DWORD PTR \0"
.balign 4
_Lt_081D:	.ascii	"push rax #dummy push for gosub\0"
.balign 4
_Lt_0834:	.ascii	"[rip+\0"
.balign 4
_Lt_083B:	.ascii	"] #NO\0"
.balign 4
_Lt_085C:	.ascii	"+\0"
.balign 4
_Lt_0878:	.ascii	"FOUND AN ERROR : prepare_IDX case not handled 01\0"
.balign 4
_Lt_087D:	.ascii	"X X\0"
.balign 4
_Lt_0886:	.ascii	"mul\0"
.balign 4
_Lt_0888:	.ascii	"div\0"
.balign 4
_Lt_088A:	.ascii	"intdiv\0"
.balign 4
_Lt_088C:	.ascii	"mod\0"
.balign 4
_Lt_088E:	.ascii	"shl\0"
.balign 4
_Lt_0890:	.ascii	"ashr\0"
.balign 4
_Lt_0892:	.ascii	"and\0"
.balign 4
_Lt_0894:	.ascii	"or\0"
.balign 4
_Lt_0896:	.ascii	"xor\0"
.balign 4
_Lt_0898:	.ascii	"icmp eq\0"
.balign 4
_Lt_089A:	.ascii	"icmp ne\0"
.balign 4
_Lt_089C:	.ascii	"icmp sgt\0"
.balign 4
_Lt_089E:	.ascii	"icmp slt\0"
.balign 4
_Lt_08A0:	.ascii	"icmp sge\0"
.balign 4
_Lt_08A2:	.ascii	"icmp sle\0"
.balign 4
_Lt_08A4:	.ascii	"eqv\0"
.balign 4
_Lt_08A6:	.ascii	"imp\0"
.balign 4
_Lt_08A9:	.ascii	"je\0"
.balign 4
_Lt_08AB:	.ascii	"jgt\0"
.balign 4
_Lt_08AD:	.ascii	"jlt\0"
.balign 4
_Lt_08AF:	.ascii	"jne\0"
.balign 4
_Lt_08B1:	.ascii	"jge\0"
.balign 4
_Lt_08B3:	.ascii	"jle\0"
.balign 4
_Lt_08B5:	.ascii	"call\0"
.balign 4
_Lt_08B7:	.ascii	"bop unknown\0"
.balign 4
_Lt_08C3:	.ascii	"movsd \0"
.balign 4
_Lt_08C4:	.ascii	"ucomisd \0"
.balign 4
_Lt_08C5:	.ascii	"addsd \0"
.balign 4
_Lt_08C6:	.ascii	"subsd \0"
.balign 4
_Lt_08C7:	.ascii	"mulsd \0"
.balign 4
_Lt_08C8:	.ascii	"divsd \0"
.balign 4
_Lt_08C9:	.ascii	"movss \0"
.balign 4
_Lt_08CA:	.ascii	"ucomiss \0"
.balign 4
_Lt_08CB:	.ascii	"addss \0"
.balign 4
_Lt_08CC:	.ascii	"subss \0"
.balign 4
_Lt_08CD:	.ascii	"mulss \0"
.balign 4
_Lt_08CE:	.ascii	"divss \0"
.balign 4
_Lt_08D1:	.ascii	"xmm0, \0"
.balign 4
_Lt_08E2:	.ascii	"xmm1, \0"
.balign 4
_Lt_08FB:	.ascii	", -1\0"
.balign 4
_Lt_08FF:	.ascii	"xmm0, xmm1\0"
.balign 4
_Lt_0904:	.ascii	"jp \0"
.balign 4
_Lt_0911:	.ascii	"je \0"
.balign 4
_Lt_0914:	.ascii	"jne \0"
.balign 4
_Lt_0917:	.ascii	"jb \0"
.balign 4
_Lt_091A:	.ascii	"jbe \0"
.balign 4
_Lt_091D:	.ascii	"ja \0"
.balign 4
_Lt_0920:	.ascii	"jae \0"
.balign 4
_Lt_092D:	.ascii	"xor \0"
.balign 4
_Lt_094A:	.ascii	", xmm0\0"
.balign 4
_Lt_0952:	.ascii	"atan2\0"
.balign 4
_Lt_0957:	.ascii	"atan2f\0"
.balign 4
_Lt_095F:	.ascii	"FOUND AN ERROR : in bop float needs to be coded : \0"
.balign 4
_Lt_096F:	.ascii	"QWORD PTR \0"
.balign 4
_Lt_0974:	.ascii	"DWORD PTR \0"
.balign 4
_Lt_0978:	.ascii	"WORD PTR \0"
.balign 4
_Lt_097E:	.ascii	"BYTE PTR \0"
.balign 4
_Lt_0983:	.ascii	"FOUND AN ERROR : BOP datatype not handled 01 = \0"
.balign 4
_Lt_09A3:	.ascii	"FOUND AN ERROR : BOP datatype not handled 010 \0"
.balign 4
_Lt_09C8:	.ascii	"FOUND AN ERROR : in loadoperand typ not handled v1\0"
.balign 4
_Lt_09E7:	.ascii	"FOUND AN ERROR : BOP datatype not handled 012 \0"
.balign 4
_Lt_0A0C:	.ascii	"FOUND AN ERROR : in loadoperand typ not handled v2\0"
.balign 4
_Lt_0A4B:	.ascii	"FOUND AN ERROR : BOP datatype not handled 011 = \0"
.balign 4
_Lt_0A91:	.ascii	"FOUND AN ERROR : BOP datatype not handled 012 = \0"
.balign 4
_Lt_0A9D:	.ascii	"mov eax, \0"
.balign 4
_Lt_0AB8:	.ascii	"FOUND AN ERROR : BOP datatype not handled 0100 = \0"
.balign 4
_Lt_0AC2:	.ascii	"inc \0"
.balign 4
_Lt_0AC6:	.ascii	"-1\0"
.balign 4
_Lt_0AD0:	.ascii	"and \0"
.balign 4
_Lt_0AE3:	.ascii	", 1\0"
.balign 4
_Lt_0AE7:	.ascii	"not \0"
.balign 4
_Lt_0B95:	.ascii	"sub \0"
.balign 4
_Lt_0B9D:	.ascii	"imul \0"
.balign 4
_Lt_0BAF:	.ascii	"be\0"
.balign 4
_Lt_0BB1:	.ascii	"b\0"
.balign 4
_Lt_0BB3:	.ascii	"ne\0"
.balign 4
_Lt_0BB5:	.ascii	"nb\0"
.balign 4
_Lt_0BB7:	.ascii	"a\0"
.balign 4
_Lt_0BBE:	.ascii	"le\0"
.balign 4
_Lt_0BC0:	.ascii	"l\0"
.balign 4
_Lt_0BC3:	.ascii	"ge\0"
.balign 4
_Lt_0BC5:	.ascii	"g\0"
.balign 4
_Lt_0BD0:	.ascii	"@GOTPCREL[rip]\0"
.balign 4
_Lt_0BD4:	.ascii	"mov rax, [rax]\0"
.balign 4
_Lt_0BE6:	.ascii	"cmp \0"
.balign 4
_Lt_0BED:	.ascii	"set\0"
.balign 4
_Lt_0BEE:	.ascii	" al\0"
.balign 4
_Lt_0BF2:	.ascii	", al\0"
.balign 4
_Lt_0BF8:	.ascii	"neg \0"
.balign 4
_Lt_0BFB:	.ascii	"j\0"
.balign 4
_Lt_0C0D:	.ascii	"mov rcx, \0"
.balign 4
_Lt_0C12:	.ascii	"shl \0"
.balign 4
_Lt_0C19:	.ascii	"sar \0"
.balign 4
_Lt_0C3F:	.ascii	"mov edx, 0\0"
.balign 4
_Lt_0C41:	.ascii	"div \0"
.balign 4
_Lt_0C44:	.ascii	"cqo\0"
.balign 4
_Lt_0C46:	.ascii	"idiv \0"
.balign 4
_Lt_0C76:	.ascii	", rdx\0"
.balign 4
_Lt_0C80:	.ascii	"FOUND AN ERROR : op int needs to be coded : \0"
.balign 4
_Lt_0CA5:	.ascii	"FOUND AN ERROR : in emituop typ not handled vr\0"
.balign 4
_Lt_0CE2:	.ascii	"FOUND AN ERROR : in uop typ not handled v1\0"
.balign 4
_Lt_0D15:	.ascii	"test \0"
.balign 4
_Lt_0D1A:	.ascii	"sete \0"
.balign 4
_Lt_0D23:	.ascii	"movd xmm0, \0"
.balign 4
_Lt_0D26:	.ascii	"movss xmm0, \0"
.balign 4
_Lt_0D2C:	.ascii	"cosf\0"
.balign 4
_Lt_0D30:	.ascii	"sinf\0"
.balign 4
_Lt_0D34:	.ascii	"expf\0"
.balign 4
_Lt_0D38:	.ascii	"logf\0"
.balign 4
_Lt_0D3C:	.ascii	"acosf\0"
.balign 4
_Lt_0D40:	.ascii	"asinf\0"
.balign 4
_Lt_0D44:	.ascii	"tanf\0"
.balign 4
_Lt_0D48:	.ascii	"atanf\0"
.balign 4
_Lt_0D4C:	.ascii	"sqrtss\011xmm0, xmm0\0"
.balign 4
_Lt_0D50:	.ascii	"mov eax, 0x7FFFFFFF\0"
.balign 4
_Lt_0D52:	.ascii	"movd xmm1, eax\0"
.balign 4
_Lt_0D54:	.ascii	"andps xmm1, xmm0\0"
.balign 4
_Lt_0D56:	.ascii	"movd xmm0, xmm1\0"
.balign 4
_Lt_0D5A:	.ascii	"fb_SGNSingle\0"
.balign 4
_Lt_0D5E:	.ascii	"fb_FRACf\0"
.balign 4
_Lt_0D62:	.ascii	"fb_FIXSingle\0"
.balign 4
_Lt_0D66:	.ascii	"floorf\0"
.balign 4
_Lt_0D6B:	.ascii	"mov eax, 0x80000000\0"
.balign 4
_Lt_0D6E:	.ascii	"xorps xmm0, xmm1\0"
.balign 4
_Lt_0D73:	.ascii	"FOUND AN ERROR : in uop not handled for single\0"
.balign 4
_Lt_0D78:	.ascii	", eax\0"
.balign 4
_Lt_0D8C:	.ascii	"xor rax, rdx\0"
.balign 4
_Lt_0D8E:	.ascii	"sub rax, rdx\0"
.balign 4
_Lt_0DB2:	.ascii	"fb_SGNl\0"
.balign 4
_Lt_0DB4:	.ascii	"movsxd rax, eax\0"
.balign 4
_Lt_0DC0:	.ascii	"movq xmm0, \0"
.balign 4
_Lt_0DC3:	.ascii	"movsd xmm0, \0"
.balign 4
_Lt_0DC9:	.ascii	"cos\0"
.balign 4
_Lt_0DCD:	.ascii	"sin\0"
.balign 4
_Lt_0DD1:	.ascii	"exp\0"
.balign 4
_Lt_0DD5:	.ascii	"log\0"
.balign 4
_Lt_0DD9:	.ascii	"acos\0"
.balign 4
_Lt_0DDD:	.ascii	"asin\0"
.balign 4
_Lt_0DE1:	.ascii	"tan\0"
.balign 4
_Lt_0DE5:	.ascii	"atan\0"
.balign 4
_Lt_0DE9:	.ascii	"mov rax, 0x7FFFFFFFFFFFFFFF\0"
.balign 4
_Lt_0DEB:	.ascii	"movq xmm1, rax\0"
.balign 4
_Lt_0DED:	.ascii	"andpd xmm1, xmm0\0"
.balign 4
_Lt_0DEF:	.ascii	"movq xmm0, xmm1\0"
.balign 4
_Lt_0DF3:	.ascii	"sqrtsd\011xmm0, xmm0\0"
.balign 4
_Lt_0DF7:	.ascii	"fb_SGNDouble\0"
.balign 4
_Lt_0DFB:	.ascii	"fb_FRACd\0"
.balign 4
_Lt_0DFF:	.ascii	"fb_FIXDouble\0"
.balign 4
_Lt_0E03:	.ascii	"floor\0"
.balign 4
_Lt_0E08:	.ascii	"mov rax, 0x8000000000000000\0"
.balign 4
_Lt_0E0B:	.ascii	"xorpd xmm0, xmm1\0"
.balign 4
_Lt_0E10:	.ascii	"FOUND AN ERROR : in uop not handled for double\0"
.balign 4
_Lt_0E15:	.ascii	"movsxd \0"
.balign 4
_Lt_0E1E:	.ascii	"test DWORD PTR $sse41[rip], 0b10000000000000000000\0"
.balign 4
_Lt_0E24:	.ascii	"roundsd xmm0,xmm0,4\0"
.balign 4
_Lt_0E28:	.ascii	"cvttsd2si rax, xmm0\0"
.balign 4
_Lt_0E2A:	.ascii	"roundss xmm0,xmm0,4\0"
.balign 4
_Lt_0E2E:	.ascii	"cvttss2si rax, xmm0\0"
.balign 4
_Lt_0E30:	.ascii	"jmp \0"
.balign 4
_Lt_0E39:	.ascii	"d\0"
.balign 4
_Lt_0E3A:	.ascii	"call nearbyint\0"
.balign 4
_Lt_0E3E:	.ascii	"s\0"
.balign 4
_Lt_0E3F:	.ascii	"call nearbyintf\0"
.balign 4
_Lt_0E49:	.ascii	"FOUND AN ERROR : v1 in converting not a reg\0"
.balign 4
_Lt_0E84:	.ascii	"FOUND AN ERROR : converting datatype not handled 01 = \0"
.balign 4
_Lt_0EA1:	.ascii	"FOUND AN ERROR : converting datatype WCHAR not handled\0"
.balign 4
_Lt_0EA8:	.ascii	"FOUND AN ERROR : converting datatype not handled 02 = \0"
.balign 4
_Lt_0EC9:	.ascii	"FOUND AN ERROR : Converting datatype not handled 03 = \0"
.balign 4
_Lt_0EE5:	.ascii	"mov rax, QWORD PTR \0"
.balign 4
_Lt_0EF9:	.ascii	"FOUND AN ERROR : store 02 ??\0"
.balign 4
_Lt_0F0C:	.ascii	"xmm0\0"
.balign 4
_Lt_0F0D:	.ascii	"cvtss2sd xmm0, \0"
.balign 4
_Lt_0F15:	.ascii	"movq xmm1, \0"
.balign 4
_Lt_0F18:	.ascii	"xmm1\0"
.balign 4
_Lt_0F19:	.ascii	"cvtsd2ss xmm0, \0"
.balign 4
_Lt_0F1F:	.ascii	"pxor xmm0,xmm0\0"
.balign 4
_Lt_0F28:	.ascii	"test\011rax, rax\0"
.balign 4
_Lt_0F2A:	.ascii	"js \0"
.balign 4
_Lt_0F2D:	.ascii	"cvtsi2sd xmm0, rax\0"
.balign 4
_Lt_0F38:	.ascii	"and eax, 1\0"
.balign 4
_Lt_0F3D:	.ascii	"cvtsi2sd xmm0, \0"
.balign 4
_Lt_0F40:	.ascii	"addsd xmm0, xmm0\0"
.balign 4
_Lt_0F49:	.ascii	"test rax, rax\0"
.balign 4
_Lt_0F4D:	.ascii	"cvtsi2ss\011xmm0, rax\0"
.balign 4
_Lt_0F5C:	.ascii	"cvtsi2ss xmm0, \0"
.balign 4
_Lt_0F5F:	.ascii	"addss xmm0, xmm0\0"
.balign 4
_Lt_0F90:	.ascii	"movsx eax, \0"
.balign 4
_Lt_0F95:	.ascii	", 0\0"
.balign 4
_Lt_0F9A:	.ascii	"setne al\0"
.balign 4
_Lt_0F9C:	.ascii	"neg al\0"
.balign 4
_Lt_0F9E:	.ascii	"movsx eax, al\0"
.balign 4
_Lt_0FA0:	.ascii	"movzx eax, \0"
.balign 4
_Lt_0FA6:	.ascii	"cvtsi2sd xmm0, eax\0"
.balign 4
_Lt_0FAB:	.ascii	"cvtsi2ss xmm0, eax\0"
.balign 4
_Lt_0FB3:	.ascii	"FOUND AN ERROR : Converting datatype not handled 04\0"
.balign 4
_Lt_0FC0:	.ascii	"mov rax, 4890909195324358656\0"
.balign 4
_Lt_0FC2:	.ascii	"movq xmm2, rax\0"
.balign 4
_Lt_0FC6:	.ascii	"movq xmm0, rax\0"
.balign 4
_Lt_0FC8:	.ascii	"ucomisd xmm0, xmm2\0"
.balign 4
_Lt_0FCA:	.ascii	"jnb \0"
.balign 4
_Lt_0FD2:	.ascii	"movsd\011xmm1, xmm2\0"
.balign 4
_Lt_0FD4:	.ascii	"subsd\011xmm0, xmm1\0"
.balign 4
_Lt_0FD7:	.ascii	"movabs \0"
.balign 4
_Lt_0FD8:	.ascii	", -9223372036854775808\0"
.balign 4
_Lt_0FDC:	.ascii	"xor rax,\0"
.balign 4
_Lt_0FF5:	.ascii	", ax\0"
.balign 4
_Lt_0FFB:	.ascii	"cmp rax, 0\0"
.balign 4
_Lt_1003:	.ascii	"FOUND AN ERROR : Converting float to int 01\0"
.balign 4
_Lt_1008:	.ascii	"mov rax, 1593835520\0"
.balign 4
_Lt_100D:	.ascii	"movd xmm0, eax\0"
.balign 4
_Lt_100F:	.ascii	"ucomiss xmm0, xmm2\0"
.balign 4
_Lt_1018:	.ascii	"movss\011xmm1, xmm2\0"
.balign 4
_Lt_101A:	.ascii	"subss\011xmm0, xmm1\0"
.balign 4
_Lt_1044:	.ascii	"FOUND AN ERROR : Converting float to int 02\0"
.balign 4
_Lt_1051:	.ascii	", QWORD PTR [\0"
.balign 4
_Lt_105A:	.ascii	"FOUND AN ERROR : Converting struct to datatype not handled 01\0"
.balign 4
_Lt_105F:	.ascii	"FOUND AN ERROR : Converting to struct not handled 02\0"
.balign 4
_Lt_1066:	.ascii	"0x0000000000000000\0"
.balign 4
_Lt_1067:	.ascii	"0x00000000\0"
.balign 4
_Lt_1087:	.ascii	"movsx \0"
.balign 4
_Lt_10C9:	.ascii	"FOUND AN ERROR : in conv something missing 01\0"
.balign 4
_Lt_10E5:	.ascii	"FOUND AN ERROR : in conv something missing 02\0"
.balign 4
_Lt_10F4:	.ascii	"movq rdx, xmm1\0"
.balign 4
_Lt_110C:	.ascii	"mov [rax], dl\0"
.balign 4
_Lt_110F:	.ascii	"mov [rax], dx\0"
.balign 4
_Lt_1113:	.ascii	"shr rdx, 2\0"
.balign 4
_Lt_1115:	.ascii	"mov [rax+2], dl\0"
.balign 4
_Lt_1118:	.ascii	"mov [rax], edx\0"
.balign 4
_Lt_111C:	.ascii	"shr rdx, 4\0"
.balign 4
_Lt_111E:	.ascii	"mov [rax+4], dl\0"
.balign 4
_Lt_1123:	.ascii	"mov [rax+4], dx\0"
.balign 4
_Lt_112A:	.ascii	"mov [rax+6], dl\0"
.balign 4
_Lt_112D:	.ascii	"mov [rax], rdx\0"
.balign 4
_Lt_1146:	.ascii	"FOUND AN ERROR : In emitstore used to be sure that case IMM to REG may happen.... report to dev\0"
.balign 4
_Lt_1165:	.ascii	"FOUND AN ERROR : Storing datatype not handled 01 = \0"
.balign 4
_Lt_1188:	.ascii	"FOUND AN ERROR : store 01\0"
.balign 4
_Lt_11AD:	.ascii	"FOUND AN ERROR : Storing datatype not handled 02 = \0"
.balign 4
_Lt_11EB:	.ascii	"mov al, \0"
.balign 4
_Lt_11F3:	.ascii	"FOUND AN ERROR : emitstore datatype WCHAR not handled\0"
.balign 4
_Lt_11FA:	.ascii	"FOUND AN ERROR : emitstore datatype not handled 03= \0"
.balign 4
_Lt_1259:	.ascii	"movNOTUSED? \0"
.balign 4
_Lt_12A3:	.ascii	"FOUND AN ERROR : in store perhaps OFS not handled\0"
.balign 4
_Lt_12E6:	.ascii	"FOUND AN ERROR : in loadres OFS not handled\0"
.balign 4
_Lt_12EE:	.ascii	"FOUND AN ERROR : in loadres typ not handled\0"
.balign 4
_Lt_12F9:	.ascii	"FOUND AN ERROR : IR_VREGTYPE not handled in emitloadres (linux)\0"
.balign 4
_Lt_1303:	.ascii	"mov rdx, \0"
.balign 4
_Lt_131B:	.ascii	"movss xmm1, \0"
.balign 4
_Lt_131E:	.ascii	"movsd xmm1, \0"
.balign 4
_Lt_1356:	.ascii	"FOUND AN ERROR : in loadres datatype not handled = \0"
.balign 4
_Lt_1360:	.ascii	"FOUND AN ERROR : vr in addrof/deref not a reg\0"
.balign 4
_Lt_1384:	.ascii	"FOUND AN ERROR : in emitaddr OFS not handled\0"
.balign 4
_Lt_138A:	.ascii	"FOUND AN ERROR : typ in addrof not handled\0"
.balign 4
_Lt_13BD:	.ascii	"FOUND AN ERROR : typ in deref not handled\0"
.balign 4
_Lt_13D2:	.ascii	"call \0"
.balign 4
_Lt_13D3:	.ascii	"@PLT\0"
.balign 4
_Lt_1405:	.ascii	" #NO\0"
.balign 4
_Lt_1437:	.ascii	"FOUND AN ERROR : hdocall error with idx\0"
.balign 4
_Lt_1459:	.ascii	"FOUND AN ERROR : in hdocall datatype not handled 01 = \0"
.balign 4
_Lt_147E:	.ascii	"FOUND AN ERROR : in hdocall typ not handled \0"
.balign 4
_Lt_1491:	.ascii	"push \0"
.balign 4
_Lt_1492:	.ascii	"push rax\0"
.balign 4
_Lt_149C:	.ascii	"push [rax]\0"
.balign 4
_Lt_149F:	.ascii	"sub rax, 8\0"
.balign 4
_Lt_14A0:	.ascii	"add rax, \0"
.balign 4
_Lt_14BA:	.ascii	"mov byte PTR \0"
.balign 4
_Lt_14BB:	.ascii	"[rsp], \0"
.balign 4
_Lt_14D6:	.ascii	"[rsp], al\0"
.balign 4
_Lt_14DB:	.ascii	"mov ax, \0"
.balign 4
_Lt_14DE:	.ascii	"[rsp], ax\0"
.balign 4
_Lt_14E5:	.ascii	"[rsp], eax\0"
.balign 4
_Lt_14EC:	.ascii	"[rsp], rax\0"
.balign 4
_Lt_1509:	.ascii	"xor eax, eax\0"
.balign 4
_Lt_1513:	.ascii	"xor rax, rax\0"
.balign 4
_Lt_1602:	.ascii	"movsd xmm\0"
.balign 4
_Lt_160D:	.ascii	"movss xmm\0"
.balign 4
_Lt_1614:	.ascii	"movsd QWORD PTR \0"
.balign 4
_Lt_1615:	.ascii	"[rsp], xmm\0"
.balign 4
_Lt_161A:	.ascii	", xmm\0"
.balign 4
_Lt_1625:	.ascii	"FOUND AN ERROR : in hdocall Va_list and target linux could be a problem\0"
.balign 4
_Lt_1659:	.ascii	"FOUND AN ERROR : in hdocall datatype not handled 03 = \0"
.balign 4
_Lt_166F:	.ascii	"sub rsp, 8\0"
.balign 4
_Lt_168C:	.ascii	"add rsp, \0"
.balign 4
_Lt_1699:	.ascii	"[rbp], rax\0"
.balign 4
_Lt_169D:	.ascii	"[rbp], rdx\0"
.balign 4
_Lt_16A5:	.ascii	"[rbp], xmm0\0"
.balign 4
_Lt_16B4:	.ascii	"[rbp], xmm1\0"
.balign 4
_Lt_16BF:	.ascii	"movq rax, xmm0\0"
.balign 4
_Lt_16C2:	.ascii	"movd eax, xmm0\0"
.balign 4
_Lt_16E2:	.ascii	"FOUND AN ERROR : in hdocall datatype not handled 04 = \0"
.balign 4
_Lt_16FA:	.ascii	"FOUND AN ERROR : in hdocall OFS not handled\0"
.balign 4
_Lt_1700:	.ascii	"FOUND AN ERROR : in hdocall typ not handled =\0"
.balign 4
_Lt_172E:	.ascii	"FOUND AN ERROR : in hdocall datatype not handled 05 = \0"
.balign 4
_Lt_174D:	.ascii	"FOUND AN ERROR : Never IMM as first operand\0"
.balign 4
_Lt_1764:	.ascii	"jmp [\0"
.balign 4
_Lt_1775:	.ascii	"pop rax # dummy pop for gosub\0"
.balign 4
_Lt_1787:	.ascii	"sub rax, \0"
.balign 4
_Lt_178C:	.ascii	"cmp rax, \0"
.balign 4
_Lt_1791:	.ascii	"jmp QWORD PTR [\0"
.balign 4
_Lt_1792:	.ascii	"+rax*8]\0"
.balign 4
_Lt_17BA:	.ascii	"FOUND AN ERROR : Memclear v1 not a reg nor a var\0"
.balign 4
_Lt_17C3:	.ascii	"jz \0"
.balign 4
_Lt_17CA:	.ascii	"mov BYTE PTR [rax], 0\0"
.balign 4
_Lt_17CC:	.ascii	"inc rax\0"
.balign 4
_Lt_17D8:	.ascii	"FOUND AN ERROR : Memclear without an immediat as size\0"
.balign 4
_Lt_17E9:	.ascii	"mov BYTE PTR [\0"
.balign 4
_Lt_17ED:	.ascii	"rax, \0"
.balign 4
_Lt_17F6:	.ascii	"mov WORD PTR [\0"
.balign 4
_Lt_17FD:	.ascii	"mov WORD PTR [rax], 0\0"
.balign 4
_Lt_1803:	.ascii	"mov DWORD PTR [\0"
.balign 4
_Lt_180A:	.ascii	"mov DWORD PTR [rax], 0\0"
.balign 4
_Lt_1816:	.ascii	"mov QWORD PTR [rax], 0\0"
.balign 4
_Lt_183B:	.ascii	"FOUND AN ERROR : memcopy 01 type not handled\0"
.balign 4
_Lt_1857:	.ascii	"FOUND AN ERROR : Memcopy v2 not a reg nor a var nor ofs nor ptr\0"
.balign 4
_Lt_1878:	.ascii	"mov al, [\0"
.balign 4
_Lt_1886:	.ascii	"mov ax, [\0"
.balign 4
_Lt_1894:	.ascii	"mov eax, [\0"
.balign 4
_Lt_18BC:	.ascii	"[rbp\0"
.balign 4
_Lt_18C1:	.ascii	"FOUND AN ERROR : in emitasm token unknown\0"
.balign 4
_Lt_18D1:	.ascii	".align \0"
.balign 4
_Lt_18E6:	.ascii	".byte\0"
.balign 4
_Lt_18E8:	.ascii	".word\0"
.balign 4
_Lt_18EA:	.ascii	".long\0"
.balign 4
_Lt_18EC:	.ascii	".quad\0"
.balign 4
_Lt_18EF:	.ascii	" 0x\0"
.balign 4
_Lt_18FE:	.ascii	".drectve\0"
.balign 4
_Lt_1900:	.ascii	".ascii \" -export:\0"
.balign 4
_Lt_1920:	.ascii	"push rbp\0"
.balign 4
_Lt_1922:	.ascii	"mov  rbp,rsp\0"
.balign 4
_Lt_1924:	.ascii	"sub rsp, \0"
.balign 4
_Lt_1929:	.ascii	"mov QWORD PTR -8[rbp], rbx\0"
.balign 4
_Lt_192C:	.ascii	"mov  rbx, QWORD PTR -8[rbp]\r\n\0"
.balign 4
_Lt_1931:	.ascii	"mov QWORD PTR -16[rbp], rdi\0"
.balign 4
_Lt_1934:	.ascii	"mov  rdi, QWORD PTR -16[rbp]\r\n\0"
.balign 4
_Lt_1937:	.ascii	"mov QWORD PTR -24[rbp], rsi\0"
.balign 4
_Lt_193A:	.ascii	"mov  rsi, QWORD PTR -24[rbp]\r\n\0"
.balign 4
_Lt_193D:	.ascii	"mov QWORD PTR -32[rbp], r12\0"
.balign 4
_Lt_1940:	.ascii	"mov  r12, QWORD PTR -32[rbp]\r\n\0"
.balign 4
_Lt_1943:	.ascii	"mov QWORD PTR -40[rbp], r13\0"
.balign 4
_Lt_1946:	.ascii	"mov  r13, QWORD PTR -40[rbp]\r\n\0"
.balign 4
_Lt_1949:	.ascii	"mov QWORD PTR -48[rbp], r14\0"
.balign 4
_Lt_194C:	.ascii	"mov  r14, QWORD PTR -48[rbp]\r\n\0"
.balign 4
_Lt_194F:	.ascii	"mov QWORD PTR -56[rbp], r15\0"
.balign 4
_Lt_1952:	.ascii	"mov  r15, QWORD PTR -56[rbp]\r\n\0"
.balign 4
_Lt_1955:	.ascii	"mov QWORD PTR -16[rbp], r12\0"
.balign 4
_Lt_1958:	.ascii	"mov  r12, QWORD PTR -16[rbp]\r\n\0"
.balign 4
_Lt_195B:	.ascii	"mov QWORD PTR -24[rbp], r13\0"
.balign 4
_Lt_195E:	.ascii	"mov  r13, QWORD PTR -24[rbp]\r\n\0"
.balign 4
_Lt_1961:	.ascii	"mov QWORD PTR -32[rbp], r14\0"
.balign 4
_Lt_1964:	.ascii	"mov  r14, QWORD PTR -32[rbp]\r\n\0"
.balign 4
_Lt_1967:	.ascii	"mov QWORD PTR -40[rbp], r15\0"
.balign 4
_Lt_196A:	.ascii	"mov  r15, QWORD PTR -40[rbp]\r\n\0"
.balign 4
_Lt_1973:	.ascii	"mov QWORD PTR -152[rbp], rdi\0"
.balign 4
_Lt_1977:	.ascii	"mov QWORD PTR -144[rbp], rsi\0"
.balign 4
_Lt_197B:	.ascii	"mov QWORD PTR -136[rbp], rdx\0"
.balign 4
_Lt_197F:	.ascii	"mov QWORD PTR -128[rbp], rcx\0"
.balign 4
_Lt_1983:	.ascii	"mov QWORD PTR -120[rbp], r8\0"
.balign 4
_Lt_1987:	.ascii	"mov QWORD PTR -112[rbp], r9\0"
.balign 4
_Lt_1989:	.ascii	"test eax, eax\0"
.balign 4
_Lt_198F:	.ascii	"movq QWORD PTR -104[rbp], xmm0\0"
.balign 4
_Lt_1993:	.ascii	"movq QWORD PTR -96[rbp], xmm1\0"
.balign 4
_Lt_1997:	.ascii	"movq QWORD PTR -88[rbp], xmm2\0"
.balign 4
_Lt_199B:	.ascii	"movq QWORD PTR -80[rbp], xmm3\0"
.balign 4
_Lt_199F:	.ascii	"movq QWORD PTR -72[rbp], xmm4\0"
.balign 4
_Lt_19A3:	.ascii	"movq QWORD PTR -64[rbp], xmm5\0"
.balign 4
_Lt_19A7:	.ascii	"movq QWORD PTR -56[rbp], xmm6\0"
.balign 4
_Lt_19AB:	.ascii	"movq QWORD PTR -48[rbp], xmm7\0"
.balign 4
_Lt_19BB:	.ascii	"mov rsp,rbp\0"
.balign 4
_Lt_19BD:	.ascii	"pop rbp\0"
.balign 4
_Lt_19D4:	.ascii	".zero \0"
.balign 4
_Lt_19D9:	.ascii	".fbctinf\0"
.balign 4
_Lt_19E2:	.ascii	".byte 0 # 0\0"
.balign 4
_Lt_19F5:	.ascii	".word 0\0"
.balign 4
_Lt_19F7:	.ascii	".long 0\0"
.balign 4
_Lt_19FD:	.ascii	".ascii \"\0"
.balign 4
_Lt_1A0E:	.ascii	"], \0"
.balign 4
_Lt_1A13:	.ascii	"mov DWORD PTR 4[\0"
.balign 4
_Lt_1A1C:	.ascii	"lea rax,\0"
.balign 4
_Lt_1A20:	.ascii	"mov QWORD PTR 8[\0"
.balign 4
_Lt_1A24:	.ascii	"lea rax, -152[rbp]\0"
.balign 4
_Lt_1A26:	.ascii	"mov QWORD PTR 16[\0"
.balign 4
_Lt_1A3D:	.ascii	"cmp DWORD PTR 4[\0"
.balign 4
_Lt_1A3E:	.ascii	"], 104\0"
.balign 4
_Lt_1A42:	.ascii	"jg \0"
.balign 4
_Lt_1A45:	.ascii	"mov eax, DWORD PTR 4[\0"
.balign 4
_Lt_1A49:	.ascii	"add DWORD PTR 4[\0"
.balign 4
_Lt_1A4A:	.ascii	"], 8\0"
.balign 4
_Lt_1A4E:	.ascii	"add rax, QWORD PTR 16[\0"
.balign 4
_Lt_1A56:	.ascii	"mov rax, QWORD PTR 8[\0"
.balign 4
_Lt_1A5A:	.ascii	"add QWORD PTR 8[\0"
.balign 4
_Lt_1A60:	.ascii	", [rax]\0"
.balign 4
_Lt_1A64:	.ascii	"cmp DWORD PTR [\0"
.balign 4
_Lt_1A65:	.ascii	"], 40\0"
.balign 4
_Lt_1A6B:	.ascii	"mov eax, DWORD PTR [\0"
.balign 4
_Lt_1A6F:	.ascii	"add DWORD PTR [\0"
.balign 4
_Lt_1A8D:	.ascii	", [\0"
.balign 4
_Lt_1ABD:	.ascii	"FOUND AN ERROR : emitlabelINF used ???? = \0"
.balign 8
_Lt_1AEB:	.quad	0x3FE62E42FEFA39EF
.balign 8
_Lt_1AEC:	.quad	0x0000000000000000
.balign 8
_Lt_1AED:	.quad	0x4000000000000000
.balign 8
_Lt_1AEE:	.quad	0x3FF0000000000000
.balign 8
_Lt_1AF5:	.quad	0x3FF4CCCCCCCCCCCD
.balign 8
_Lt_1AF6:	.quad	0x3FF8000000000000

.section .ctors
.int _fb_ctor__irzgas64
.int __GLOBAL__I

.section .dtors
.int __GLOBAL__D
